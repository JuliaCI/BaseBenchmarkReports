cset: moving following pidspec: 5897
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.172080297 seconds)
loading group "string"... done (took 0.458696711 seconds)
loading group "linalg"... done (took 10.336854591 seconds)
loading group "parallel"... done (took 0.224203003 seconds)
loading group "find"... done (took 1.893965133 seconds)
loading group "tuple"... done (took 1.998250021 seconds)
loading group "dates"... done (took 1.341348841 seconds)
loading group "micro"... done (took 0.456705093 seconds)
loading group "io"... done (took 0.441552676 seconds)
loading group "scalar"... done (took 46.052969287 seconds)
loading group "sparse"... done (took 12.69276199 seconds)
loading group "broadcast"... done (took 1.103190973 seconds)
loading group "union"... done (took 8.952374813 seconds)
loading group "simd"... done (took 2.163175726 seconds)
loading group "random"... done (took 8.349037371 seconds)
loading group "problem"... done (took 1.946734363 seconds)
loading group "array"... done (took 24.345663592 seconds)
loading group "misc"... done (took 0.890016674 seconds)
loading group "sort"... done (took 3.328120344 seconds)
loading group "collection"... done (took 14.567844997 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.60568066 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.110898607 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.180274991 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.177922164 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243586218 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139044306 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140093185 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100531164 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.756929741 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181067048 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123861114 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.363952892 seconds)
done (took 6.053028602 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.232087617 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.081674181 seconds)
    (2/2) benchmarking "String"...
    done (took 0.147361821 seconds)
  done (took 1.130929288 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.0922931 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081236191 seconds)
  done (took 1.078755254 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.081170865 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.340303726 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082105774 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.475038425 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.147217883 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084122027 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.083396626 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082128515 seconds)
  done (took 2.19817423 seconds)
done (took 5.626096153 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.382977239 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.83121794 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.466041813 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142030199 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.28300757 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.238212736 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.203944454 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.216845826 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088668981 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086740762 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173913006 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.404549181 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.297420685 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.745423904 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09925234 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.103705193 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.136751356 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.774702283 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084260841 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133282137 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.373206481 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119821482 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.107398792 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.149863398 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.19335669 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108764521 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159842643 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.084531662 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.680718525 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.125271956 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.209666024 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087584751 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157808056 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.128718721 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.183370238 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.116766582 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680898996 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.193306312 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.144515076 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.089122091 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.692072233 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.103708351 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.171326978 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.097991442 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089805458 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.169038836 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120602625 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.085948499 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.110354918 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087323174 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166334616 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.471537662 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.112112322 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.18847021 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.099441093 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698595098 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.104172739 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.253345956 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131269683 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.111589343 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.087186344 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08404321 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.148560052 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.090179534 seconds)
  done (took 19.397964743 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144696789 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140968947 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.086295398 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133052984 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100534855 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084938836 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083645606 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088199592 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090999944 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.14496034 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090984977 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154405987 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086617414 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083012955 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.148588375 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203958781 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.091289299 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099519338 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087078875 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10595177 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113525707 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090339579 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084634496 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.086882092 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.142778917 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.215086242 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116526892 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.117975958 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087007229 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098351651 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134529918 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135278713 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.085678671 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084866044 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122640166 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127493224 seconds)
  done (took 5.018496693 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19055272 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.1085469 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16864754 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.179517254 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.156096874 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113475171 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.136464816 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.157742582 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235320063 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.693286618 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.164568496 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.172425357 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133835339 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100080871 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100643097 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089353183 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.08939129 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.565022796 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142543725 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113155415 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.171108994 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085442909 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090256569 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.392996839 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086107469 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083903576 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083503409 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086778999 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086380218 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165755996 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083768999 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.591517024 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086415031 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082602352 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147781543 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.218338299 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08781184 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122634187 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083926168 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083544402 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.087721504 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085575103 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083796323 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092596016 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132479859 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131872756 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084797363 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085017908 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.188124071 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083814381 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086684283 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.092546822 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.825528223 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.173065943 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.155986402 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083707738 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.163496894 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103750643 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084071711 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.085493043 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.164100306 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.093885204 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083500371 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084400057 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086467123 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082396378 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083868606 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084040033 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.407066085 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.090040571 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.103390148 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085062784 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085161501 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.354734338 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089271453 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091419793 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103488808 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08367358 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083721368 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082865717 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.088612299 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084454701 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103821097 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104838208 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085881593 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15004228 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.085947697 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103948301 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112429974 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086529835 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082933399 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132185502 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085510263 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085067069 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.161897022 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084967702 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108568041 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104894097 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135889863 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085366307 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.188791593 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.087441742 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105632916 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086836317 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12971786 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085267391 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08638543 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089338169 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.084414929 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084043267 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147297172 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085660946 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.089698795 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084335359 seconds)
  done (took 21.63726537 seconds)
done (took 46.961692495 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.347262001 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085018337 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084536289 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08610365 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08533544 seconds)
  done (took 1.67500099 seconds)
done (took 2.636862007 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.186265315 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10213702 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098148031 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.102345761 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.107078021 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.10138936 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082937091 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098927175 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.122230904 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099355422 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100878426 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.08383973 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099337092 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.10188838 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.101792867 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082983984 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099991028 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099956058 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096131101 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.106228013 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083530567 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100826196 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083802675 seconds)
  done (took 3.330233868 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095649222 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102275853 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096815318 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095024665 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083084644 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094475602 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094814019 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105451787 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094601789 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089086211 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082816519 seconds)
  done (took 2.004988522 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096124204 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10193899 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084945801 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096155917 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082887877 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095563476 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096166033 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101980749 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095390152 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090174841 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082779498 seconds)
  done (took 1.994687322 seconds)
done (took 8.297664953 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.455445028 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.694556312 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.155399212 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211370483 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.248426746 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.183218914 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.290327999 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.169499354 seconds)
  done (took 4.493216663 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.188405506 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085703656 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089252921 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087565994 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086499802 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085935904 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09015521 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085912656 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08735161 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088309363 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087176596 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.107372823 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090775524 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086719309 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086718949 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088500406 seconds)
  done (took 2.535201066 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.131336536 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11198181 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089343184 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.089485329 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090527826 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091123146 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093000019 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088907774 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087365449 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088397888 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092489671 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107933674 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089599041 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087640718 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091096778 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109724646 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08736439 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090036086 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108078682 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090775112 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.08916175 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.087485053 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089212503 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.088365954 seconds)
  done (took 3.327495826 seconds)
done (took 11.327493369 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.101581331 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085612676 seconds)
  done (took 1.154124872 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163666844 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.159295338 seconds)
  done (took 1.297813528 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089981022 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083750428 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088370607 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.086383293 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0842001 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084338343 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088262248 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084232141 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085730249 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084398283 seconds)
  done (took 1.839318393 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087080428 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.086599337 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087091185 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.15191606 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086954211 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084073709 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084868421 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084258643 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084917962 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082681753 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084642514 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.1115067 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084668574 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092848107 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085098046 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086014748 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086295061 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085025354 seconds)
  done (took 2.61563117 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084085898 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084730915 seconds)
  done (took 1.148941919 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083350513 seconds)
    (2/7) benchmarking "second"...
    done (took 0.083496862 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086169361 seconds)
    (4/7) benchmarking "year"...
    done (took 0.083699028 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083260267 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083878033 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083303832 seconds)
  done (took 1.5644715 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.449111698 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.204745356 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.295168777 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104086833 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085791014 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295133553 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.085177785 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085288102 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090358645 seconds)
  done (took 2.710895877 seconds)
done (took 13.309848334 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096354966 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.167247453 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.496421747 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.106187395 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08599968 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.151692413 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.205447803 seconds)
done (took 2.298356441 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.252714015 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.143522286 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.111499256 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.087369718 seconds)
  done (took 1.574358746 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087466609 seconds)
    (2/2) benchmarking "read"...
    done (took 0.093995965 seconds)
  done (took 1.171295543 seconds)
done (took 3.733796096 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085108571 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085316943 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.085138419 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08466343 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.084800108 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.085089621 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083924533 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.109013031 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084020557 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.08476209 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086643299 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.083289142 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084090352 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103926525 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08493504 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084391432 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084772209 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084238823 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083748387 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084167513 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08488331 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086652736 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.085044731 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.084501875 seconds)
  done (took 3.104962581 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084901662 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084534343 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.0847044 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08413324 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084342263 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084311159 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08432315 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084699055 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086727626 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08370213 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083903755 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084374612 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08427291 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083938607 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102029752 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.085314801 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084371677 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084538735 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084222281 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087799444 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084462311 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084659024 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084861024 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084463063 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085090574 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083867498 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08371919 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084251212 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084428667 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102935201 seconds)
  done (took 3.573385743 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09206563 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083052074 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084887612 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087543892 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084710265 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084699116 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.082564873 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085394256 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.086919323 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085763834 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085027107 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087236902 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085751957 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084985385 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.103506423 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086372221 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087028127 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.085660291 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084877707 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.086142084 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086230776 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085393627 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086988543 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085811447 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084806326 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.082136286 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084624074 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.085314037 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.103618847 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.085995069 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.086559048 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086124356 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.085310256 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090164869 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085587489 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.086721372 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086156264 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082705129 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.086186591 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082838 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082393288 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.084761003 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085050752 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104898858 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.088529078 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085373769 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085621557 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086112549 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085592806 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.086222168 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085600541 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.086419136 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.086262098 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.086424017 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.087240561 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085106016 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.085246213 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.101357107 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.086546595 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.085904887 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08636835 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082544205 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.086674406 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.086023689 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089449098 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086575664 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08816518 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085783682 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.085084999 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08560887 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.086511107 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089086755 seconds)
  done (took 7.251896333 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084547011 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086308761 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085750732 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085128205 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085086067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086886596 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085247765 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084639226 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085294855 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084846507 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08449838 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084836539 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085662794 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084869831 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102981286 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085897936 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087432542 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085738033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084964599 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085437045 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08511916 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086118529 seconds)
  done (took 2.905081366 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086008519 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089675879 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.086066356 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08760042 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089581891 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089927387 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085707742 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087135735 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085560871 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085954256 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085549018 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085473064 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087484481 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087566684 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104375696 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087654112 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08852235 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087450539 seconds)
  done (took 2.595353581 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.085498758 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.085388514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084777431 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086510666 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085724145 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085591822 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085594107 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.085149033 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085484114 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087122915 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085109382 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085522939 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085550418 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085370774 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103734239 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086842189 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.085542244 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08593997 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085936065 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085931152 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085644538 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088466954 seconds)
  done (took 2.916269086 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086531787 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.086147575 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086568832 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087158831 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086361712 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08732163 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086556112 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086241484 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090006468 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085115225 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08867271 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086415024 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089899699 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086943582 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105048537 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086806801 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086747534 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087532479 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086068714 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086964374 seconds)
  done (took 2.771301733 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.144542138 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090563945 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08889188 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087870572 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088218238 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087874137 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088087058 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088087266 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087646264 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087320936 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087664926 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087494956 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109614047 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087905793 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088726029 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087892581 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08782362 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088473469 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088197928 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087962808 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088049775 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087832217 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087832646 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090382711 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087808183 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08832571 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108591894 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089228611 seconds)
  done (took 3.583466842 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086554718 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086091259 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086113802 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.085584772 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085914334 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08538543 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08837172 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.085718931 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085967623 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086073446 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085675876 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085336501 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087193041 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085544701 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103552306 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.086059949 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085985903 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.0888065 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086502614 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0859473 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086986262 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085994304 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085891783 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085929016 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086158844 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086076897 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08620819 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086044894 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088646613 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105819749 seconds)
  done (took 3.641064764 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088884554 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089220771 seconds)
  done (took 1.193069237 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08726017 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086747647 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086966864 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08618858 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086740327 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086694539 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086788032 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089475677 seconds)
  done (took 1.712833591 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.147018656 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.164791848 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088797739 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.093679708 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.16515174 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.163080303 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122167676 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088988284 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.09160671 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098021018 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.149407054 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.088498309 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092451175 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090994867 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090822638 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113913929 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086557055 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093022347 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089155355 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087569428 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09000825 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094562238 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092678133 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.090963796 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089734636 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105384155 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093030335 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.0912414 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091120356 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113095142 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090847815 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090055824 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.090925178 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088225741 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.086643157 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.163941357 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096055068 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090928335 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101308415 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088348729 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11271861 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.087680719 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093047673 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.095919705 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094024508 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088273248 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088507757 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.087487273 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088411069 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090844895 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.086971803 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090805461 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087804022 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09315741 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.097039626 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117193523 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08995115 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091622762 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089775253 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.094007045 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091301696 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091605482 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092935101 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087679868 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09349155 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095152025 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091565728 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086763508 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088657623 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.108394265 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09699352 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116678002 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094460795 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088490615 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089100452 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.087171396 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094144007 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088627093 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090963644 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090344467 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088374327 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089014579 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112630557 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091227035 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.091338525 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090962801 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.088514861 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.090279618 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.089967402 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09705153 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089248294 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0878263 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089113989 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09211644 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089651658 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.089290247 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.108124117 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093251756 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090675806 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.0890976 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089067013 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092577822 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09420683 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090035194 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090040789 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093300108 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157860593 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090995322 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.116283762 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092686177 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08903321 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.093138131 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091930273 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.086585288 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09225361 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088941295 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089230583 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090333733 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0879656 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089785141 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093401843 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095050872 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.088900435 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.10868805 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092706836 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088783276 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09006643 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09073828 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.089098451 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.087904454 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.088220618 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095240874 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090977179 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093635264 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089712527 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093038208 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.087152097 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.108069677 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090434655 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094711091 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.092920547 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092708197 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095648801 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093366453 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089172102 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091802752 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090928212 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0902934 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091452633 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08832015 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088681181 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109444572 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.09253425 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08965138 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093792392 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08955315 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091783964 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.089396317 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088678904 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090168589 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088906806 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089160701 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088103101 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.089179365 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092575718 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111343937 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.088341102 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.087920953 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090904466 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090646788 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.088924047 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089100453 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092023163 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089718831 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08715612 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.089155073 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.095684481 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095822279 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093864129 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109195727 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091798135 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093038464 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.089348678 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093782823 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.089139611 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089015486 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089572968 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094596607 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092063665 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089841717 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090197508 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089536452 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094110953 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093323154 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.109725305 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08877594 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.089603585 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090415692 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096062105 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091103399 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.090643203 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088790842 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092510731 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090637803 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091805389 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088648143 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089848067 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090508611 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111435314 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093113115 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089637289 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093613204 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092556604 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.088587547 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089912127 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089341809 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093115127 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.087923859 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.090200059 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.091507633 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.093421497 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089268529 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.117156418 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089060911 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094928997 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095357966 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093521234 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090415921 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.089765158 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091647088 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091643916 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094858166 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091553505 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092840492 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093904375 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.090716145 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109913253 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094985914 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091233861 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089090876 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09202122 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.089814904 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094961532 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089865747 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08982198 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092850937 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090253233 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093963077 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.088259232 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092558892 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089280767 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.112076723 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.089837023 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094990323 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093815241 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089225597 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09227769 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09022576 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.090846871 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094604554 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09026307 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.09073231 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.091678397 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092465169 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.092057721 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.113950013 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090941767 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090230577 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.090649585 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.088668101 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092651856 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090586333 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092476752 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092306249 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.090341111 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091639443 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09286695 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089877713 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089429016 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.109072813 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.090713548 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093298886 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093014077 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091205915 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092329815 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088118145 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095785019 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.090098442 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095004666 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092251318 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.087886457 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091491662 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092895162 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090892871 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.109920485 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.091289679 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092159569 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.092313867 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092929702 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091124338 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090896856 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094257066 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092673892 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093642875 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092938293 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092625528 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091612332 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090438387 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.112135744 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.09108891 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093577917 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09069444 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09346326 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094003487 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09312824 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094909475 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090969917 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093387388 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.093484594 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092164071 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090425916 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090818293 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.110227318 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094479132 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.091607791 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.094411991 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.090882116 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090666655 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.090916585 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.089451933 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092788656 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094157498 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090152601 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09161168 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.090137255 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093594158 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091300692 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.109941489 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.090596893 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.088706146 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090774764 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096515859 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093709921 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09537785 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090388588 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.091322508 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08885946 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092635388 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.090987945 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.092066021 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.088500605 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113197583 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.093860358 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093108861 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090534867 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094621646 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090855551 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092801173 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.090918277 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090197498 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.091104914 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.089713176 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090047948 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090699271 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095579925 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111691493 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091754122 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093450144 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.09023617 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090262931 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09216482 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.092025435 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093166979 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095249373 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091487643 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094961527 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092066472 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08924272 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092203439 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.110480627 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.091419631 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091045738 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093135236 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093691217 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091592029 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093939822 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09422312 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094539026 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091923952 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.089072342 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.091340363 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090677322 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.090776824 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.092074915 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.112841729 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096444339 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.089952794 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09343206 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090809843 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090994133 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096811394 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091874442 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091125005 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093493494 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.0945468 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093348091 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094488416 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092030763 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117077149 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092526227 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093762757 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093829129 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091612742 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092506031 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.097973326 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09221575 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093347989 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091077664 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09168451 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.093685748 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090486091 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096442642 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.111939395 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.092108212 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.092241021 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.090060751 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090849682 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091473804 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092432966 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093549901 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09679624 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.089386371 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.089527985 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091676067 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092779999 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092824953 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095475078 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113683066 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094596416 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091439925 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.091383139 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097177438 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092564194 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094825872 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091687769 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094742253 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.092190067 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094319969 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090972126 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093353107 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092412828 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.116121932 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.097420715 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.092021783 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09292595 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094218983 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091715075 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092944833 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094565822 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094044778 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.089577924 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.091182817 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090672147 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095812774 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092090891 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112988237 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093427334 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.095328465 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093385787 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09307193 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091863885 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093391917 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.092117938 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094801394 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093898545 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092047689 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.090017844 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.09224332 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09235085 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114342988 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.092932983 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.090312399 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093131879 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094630182 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091385018 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094861577 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091670896 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.090534248 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.090847098 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091676859 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091742727 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095570787 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093043273 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.092574017 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.112268279 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.091261094 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095746423 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094472155 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093318925 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.090165762 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.090832227 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091114641 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091285922 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09250028 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091378848 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.09136641 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09519034 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094361163 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.111020776 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092765197 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0907021 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094666693 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093929255 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.092457512 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0955382 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096104486 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097467205 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.092318572 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093804417 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.093742803 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091857089 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095122156 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.092766702 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.113706814 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095875424 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095866906 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091890043 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.092084988 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09322727 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.094801475 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093923133 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092163635 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.092054836 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094322208 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.097059386 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092773143 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096992324 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115209364 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092925659 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091437709 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.091966629 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096419309 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.091699771 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091710386 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.09264014 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.09265988 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091399022 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094003964 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091927989 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093483466 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095016147 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.116931661 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.092679874 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.093030909 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.093365855 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.090580532 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092884171 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.095026386 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.091425915 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09160843 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.092532688 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095153129 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094925704 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.0942756 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.092119297 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.093335694 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.111451121 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.094691862 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096040107 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095665569 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091665264 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092724494 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.092256367 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095337757 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095652085 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.093070712 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094992143 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095263411 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09581954 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.091718203 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115431559 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094756126 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.096712321 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092559149 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093183805 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.096158834 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095601078 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093706032 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091932688 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09481828 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095766996 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092009372 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094426077 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090656862 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094533026 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.111944121 seconds)
  done (took 57.250296554 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10614186 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093966264 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091585074 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092204868 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090964547 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091189075 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091442879 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091248412 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09089097 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091317667 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091214157 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093983392 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091416817 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092100847 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112075986 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092480123 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091758766 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091016808 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091768553 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091842468 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091495186 seconds)
  done (took 3.046317805 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089997342 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.09470204 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092484476 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092078821 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092357441 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091807864 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.091509174 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090761993 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090998112 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090644266 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091604562 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091282346 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093755483 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.091408182 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111083172 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091495194 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091584772 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09250633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091456165 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090932933 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091184461 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092165649 seconds)
  done (took 3.122847763 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090625808 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.09508881 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093187654 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.092020834 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.093033169 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.092234951 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092673503 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.091394602 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.093827244 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.09423901 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.095023235 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094082977 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09548597 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.091828156 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.112800308 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091590917 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.095054559 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.093375146 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.093130327 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09135185 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092668996 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092155665 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091765204 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.096460882 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09325819 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.093005839 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.091571243 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.092721123 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.114657185 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.094116766 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.091775575 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094141347 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.093157014 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.096026583 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09710409 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.093557696 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.09316968 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.09226349 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.091195131 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092666041 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.092038759 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.093257402 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093313611 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.112576575 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.093055733 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.096050491 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.093427857 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.091529471 seconds)
  done (took 5.622964575 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089333227 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.117904412 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091505563 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.117649136 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.091030184 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092706768 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091840015 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117272163 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093471051 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.091512666 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.092016974 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.091954611 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.114748449 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09312847 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091931829 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092163283 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091934082 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093231014 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091694634 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094061291 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092700516 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092215094 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.091912206 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.091740431 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092135979 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.092444619 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092591195 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114906012 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.093294709 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092918723 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094951693 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092671688 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.092594004 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092909708 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092744837 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092438866 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.091363803 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.092308192 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092761515 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.092098949 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092622247 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094105695 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115694979 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.092558753 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092562644 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092913669 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091982254 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.092833125 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.092365003 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.093902304 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091933552 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.091804051 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094245176 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.093825415 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092439016 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.094307327 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.113074761 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.092435415 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092065971 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092111313 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.092187939 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091833264 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.092817503 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.092539098 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094804546 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.092417825 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092915367 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091887835 seconds)
  done (took 7.656038542 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090877128 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092829073 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.092667261 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09262775 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091964904 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092400803 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09183355 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.094711251 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09173261 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.091964524 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091928352 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09336247 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092731502 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092243884 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112501258 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093185193 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092788033 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093613991 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095898382 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092487396 seconds)
  done (took 2.971905966 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091298847 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09423652 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.094123318 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092780615 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.09264861 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093132145 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093326202 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092192161 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093116417 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095794287 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09288939 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092398992 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093545462 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093155666 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.1134933 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.093749124 seconds)
  done (took 2.611462569 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120741807 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094521579 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.176460653 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.094158458 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.095237827 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095728309 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.092485431 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.093295393 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.09247554 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.101121396 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.092754074 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115275064 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106485907 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.093712517 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.094460232 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.095517911 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.093133442 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.092853322 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.09291353 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.176196798 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09524669 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.092493865 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092917579 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118746845 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.093470662 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092952668 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.096396484 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.093189263 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.096582619 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.093191701 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.093269074 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092949652 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.092897189 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.09360139 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.094493156 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.093185972 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.093177457 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0949999 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.116958019 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.094120825 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.093547701 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.093249201 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.093823782 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.093309953 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.09347615 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.092807503 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.092547193 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092978678 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.095443917 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.092592432 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092943387 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.094299685 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.115865023 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.094696633 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093501455 seconds)
  done (took 6.561193775 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091397831 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094023126 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094794015 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094173186 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097012538 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.094576816 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093796669 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.097002582 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093292175 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093914002 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094139254 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097596013 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093576749 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09364001 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114465972 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096818298 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094096405 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.094960866 seconds)
  done (took 2.830188313 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091443754 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095384315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09301372 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.09372729 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.093477731 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092807893 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093659906 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.09264807 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095629197 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093035763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093016028 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092990014 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092875043 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.093930216 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11443976 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093763008 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093261116 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092815398 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093411062 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095946924 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093151747 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093156824 seconds)
  done (took 3.185765534 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10206476 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.164308348 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10501177 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.1717894 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.095631438 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095913925 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.102830429 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.096039832 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.133525407 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.097407477 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096559043 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096229765 seconds)
  done (took 2.469746206 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091881054 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095241315 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094581233 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094092042 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093894777 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09403922 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094231823 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097384943 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094116449 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094491661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094791896 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094052438 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093745528 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09431093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115342397 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094375373 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094616433 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095044607 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096887105 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093770627 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094592843 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095822196 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094524493 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094634886 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094557454 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094637757 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094416028 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095032937 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095057073 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119560167 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094618355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094949589 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094233141 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094942707 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095181777 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094208309 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095127706 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094678714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095325899 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094365989 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096378099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093751081 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094349549 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115825306 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094866312 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095108166 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094727471 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094628268 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095073315 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09476737 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094555403 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097475353 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094648964 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09470323 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094700505 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094969574 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094399881 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094698354 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115622955 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09590727 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094993116 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094290988 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094705596 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096551695 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094393564 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094129744 seconds)
  done (took 7.458871306 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091966661 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095167149 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094899079 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094589254 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095092507 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095011678 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095403264 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09528125 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097819148 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096631555 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095152071 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094955633 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094491307 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094994703 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116011093 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095827854 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095612728 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094493468 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094801357 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097125968 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094652686 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095045372 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094318869 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094191714 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094912398 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094798887 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094468643 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094618248 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09455168 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117185349 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098233488 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095010467 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095454174 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095292967 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095209847 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096134948 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09566676 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094500152 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09482502 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094573179 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095014449 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097255346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095379454 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116221066 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095386351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095074489 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095249839 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095050347 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096305931 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095776144 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095611155 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095851967 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098544743 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095140488 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095256078 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095778088 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095185602 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095425092 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117302205 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097582279 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09633151 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095222705 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095829494 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0979888 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096039631 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095743817 seconds)
  done (took 7.506752999 seconds)
done (took 148.532024063 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.165683444 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.192911282 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.245705329 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.15435853 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.142130625 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.125185319 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091970925 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.095913613 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.099378683 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.115965114 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096172166 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.096094133 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.148036927 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.195230708 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093197569 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.129977207 seconds)
  done (took 3.298639173 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.204508902 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.275233363 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11223096 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098536133 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101198078 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095433575 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.095827492 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.147209184 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099713307 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.097434472 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.095852482 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096087894 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.096348536 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096359506 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09794377 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095915936 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.096601509 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095558991 seconds)
  done (took 3.223280049 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110847154 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139308319 seconds)
  done (took 1.381708778 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117445953 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.132524388 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272589249 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.126310977 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.113183793 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.103722787 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126423523 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128930425 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.172394972 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.097783713 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.096301937 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098682253 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.114938971 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096423757 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.104811593 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098460409 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11819149 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.096165825 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095263619 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096341766 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140583334 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.097846939 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096643403 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096133689 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.163382893 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098150492 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.098187852 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099583918 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096697869 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095784551 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.096400511 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095900032 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097108106 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.119275109 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100103091 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098006797 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098248284 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097298664 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.099257427 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096741721 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099301741 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.096519251 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.099794275 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098250791 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.097116351 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098456777 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096825953 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.119352493 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097845713 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101425275 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097178756 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097673861 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.096943935 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098872808 seconds)
  done (took 7.007824065 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.502766461 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.132835647 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098513184 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.556738725 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099198863 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099471248 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.487431185 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119829786 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204566661 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.523975506 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1103546 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097028602 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.110024661 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.206315883 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15276862 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.22740321 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.422297301 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10201865 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122275027 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110804841 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097264381 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099869796 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098916402 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.697267066 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096455069 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098536279 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096129851 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.096262789 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.131627642 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100258432 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096850716 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.113501184 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223492248 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.103085256 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097604841 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097736957 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097198021 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.106886599 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.192796798 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.109407602 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174239563 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096970181 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120481253 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.097732971 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099049439 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096599464 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.098650874 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.112126093 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.110356793 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096776391 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100301485 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09738495 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.096237187 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098835712 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09842291 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.233290977 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.255230681 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098827933 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098390545 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099051143 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.181439009 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105957925 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.111587579 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113055961 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.107211447 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097814861 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.050867981 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109793167 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099096689 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0960146 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11950043 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096878167 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100007767 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156841994 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.676366482 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098010732 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097598741 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097889467 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.170949597 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098341811 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098167284 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.10607256 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09713962 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100988049 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119835547 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097448161 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.110869071 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.194257863 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097752243 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097292472 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097593889 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107727277 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097088834 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.193472834 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.103007725 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.099791566 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.187583859 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097553518 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.124347555 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108747591 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098254339 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.110910931 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09795852 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1020896 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09810911 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.102033311 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.105572023 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104237092 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097791953 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097896048 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.109988378 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102968208 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120498026 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.112384655 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.698429514 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.109226384 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099785755 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104088605 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097297731 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.110916796 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097710588 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.186092638 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097408969 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108135717 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098360425 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097657155 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119687397 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.099662437 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104405014 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098502415 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098741356 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101974372 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.217411844 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.10821146 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097918289 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.180035102 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179558255 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098053176 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.113447585 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099929382 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.111488152 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124421714 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098773288 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098224033 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.053098457 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101287799 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098918942 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097984402 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180763516 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097187872 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107009591 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099221877 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098519318 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.052235666 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103124465 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122360284 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104047533 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096658574 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0984669 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09791595 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098959576 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.10388912 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.111532959 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098658897 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097779081 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09908101 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.107533412 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097738588 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.09907725 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121656727 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100293637 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100610667 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101115338 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106244514 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1071486 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.099008574 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.100988282 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.872817185 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099944165 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100087593 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.112377169 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099098223 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.200718736 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123321612 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110467529 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.107656297 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099530724 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.231139239 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.108159121 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.182153351 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10383157 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112108789 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097784006 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098271786 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.101953002 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098394391 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097601851 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.100234555 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121061095 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09957059 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.16043116 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095495937 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205889563 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09861747 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.11245999 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10082946 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098874792 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.204540749 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099527817 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103045597 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099520336 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097737977 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.122810809 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.86850882 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099561443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101857235 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100485603 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.100680621 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.108224186 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097812999 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097311268 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098497926 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.100629899 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.185523317 seconds)
  done (took 41.898148685 seconds)
done (took 57.935106018 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.161397695 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.139528181 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187202499 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122070899 seconds)
  done (took 1.839398722 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181432884 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.115719137 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.181859257 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098032328 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.183426476 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.121732783 seconds)
  done (took 2.045689408 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.124676184 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.118105744 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115400652 seconds)
  done (took 1.516299282 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.156606932 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.154833361 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.425910595 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.34937007 seconds)
  done (took 2.347591822 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212690406 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.099470563 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.100804045 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.182635214 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.186914943 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.138096719 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102580327 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.109522202 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10600262 seconds)
  done (took 2.443670151 seconds)
done (took 11.351741471 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.193216702 seconds)
    (2/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.103321517 seconds)
    (3/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.103661009 seconds)
    (4/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124482184 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.46579314 seconds)
    (6/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.316273483 seconds)
    (7/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.23877092 seconds)
    (8/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.281811297 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.173435969 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116207873 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.227248475 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103260653 seconds)
    (13/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.302592561 seconds)
    (14/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.171601406 seconds)
    (15/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.19654932 seconds)
    (16/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.151146476 seconds)
    (17/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.225129494 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.207441842 seconds)
    (19/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116200801 seconds)
    (20/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.149330928 seconds)
    (21/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.209533471 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.18633146 seconds)
    (23/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.252127929 seconds)
    (24/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.162637426 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118448605 seconds)
    (26/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.220446088 seconds)
    (27/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.245681996 seconds)
    (28/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.15674271 seconds)
    (29/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.217634275 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.098820482 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.181900517 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.110108824 seconds)
    (33/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.237523064 seconds)
    (34/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094661907 seconds)
    (35/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.150969225 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.098023221 seconds)
    (37/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.100514368 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101666573 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.099719915 seconds)
    (40/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.189315083 seconds)
    (41/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.153947576 seconds)
    (42/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.123338554 seconds)
    (43/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.169188328 seconds)
    (44/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.221604716 seconds)
    (45/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.145105567 seconds)
    (46/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.122531617 seconds)
    (47/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.12044515 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.101384947 seconds)
    (49/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.12819147 seconds)
    (50/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.102231494 seconds)
    (51/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.208646143 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15761283 seconds)
    (53/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.185698884 seconds)
    (54/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.175594913 seconds)
    (55/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.098102343 seconds)
    (56/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.099370246 seconds)
    (57/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.176535819 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.166319619 seconds)
    (59/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.101603007 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.218651874 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117067346 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.186080605 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10605123 seconds)
    (64/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106573779 seconds)
    (65/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098915715 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.21091319 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.109189995 seconds)
    (68/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.101557812 seconds)
    (69/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113664312 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.100757227 seconds)
    (71/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.215641993 seconds)
    (72/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.100087386 seconds)
    (73/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.182451447 seconds)
    (74/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.176397151 seconds)
    (75/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.156565716 seconds)
    (76/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.103619924 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099588092 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.110009632 seconds)
    (79/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141840316 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.113447428 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100240861 seconds)
    (82/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.099562916 seconds)
    (83/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.126063003 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106882211 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.109534052 seconds)
    (86/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.103513892 seconds)
    (87/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.150626464 seconds)
    (88/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.173347271 seconds)
    (89/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.103996379 seconds)
    (90/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.169301393 seconds)
    (91/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.112565774 seconds)
    (92/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.251792728 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099774664 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10393826 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.100923526 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.117730185 seconds)
    (97/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098519844 seconds)
    (98/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.099919739 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120796638 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099517862 seconds)
    (101/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.103863583 seconds)
    (102/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.101366664 seconds)
    (103/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.236951722 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.102024616 seconds)
    (105/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100026113 seconds)
    (106/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.100448167 seconds)
    (107/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.16035174 seconds)
    (108/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.143546827 seconds)
    (109/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.155947678 seconds)
    (110/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.112042982 seconds)
    (111/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098702411 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099124587 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098137154 seconds)
    (114/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.137807883 seconds)
    (115/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.1602536 seconds)
    (116/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099512241 seconds)
    (117/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.103240728 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.102648594 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.102099559 seconds)
    (120/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.104121237 seconds)
    (121/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.102096615 seconds)
    (122/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.101033594 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.225898711 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099595494 seconds)
    (125/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.165652791 seconds)
    (126/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.100920083 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.1023354 seconds)
    (128/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098832553 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.123784062 seconds)
    (130/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.145859136 seconds)
    (131/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.115163977 seconds)
    (132/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.112665941 seconds)
    (133/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.102498306 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.10997437 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.108488015 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.099203392 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.125762551 seconds)
    (138/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.100742096 seconds)
    (139/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.102462255 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098722593 seconds)
    (141/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158273106 seconds)
    (142/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117258052 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.101904757 seconds)
    (144/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113030734 seconds)
    (145/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.119138672 seconds)
    (146/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.105397742 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.103082539 seconds)
    (148/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.118753535 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.124058021 seconds)
    (150/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.102748884 seconds)
    (151/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.141194237 seconds)
    (152/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.099717551 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098786753 seconds)
    (154/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100079141 seconds)
    (155/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101011857 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102175616 seconds)
    (157/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.100436704 seconds)
    (158/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.112400545 seconds)
    (159/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.11832806 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.102550012 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099040868 seconds)
    (162/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.136664472 seconds)
    (163/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.113635381 seconds)
    (164/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.103390461 seconds)
    (165/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.101476829 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.101798441 seconds)
    (167/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.112891627 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.110237291 seconds)
    (169/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.101642961 seconds)
    (170/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.101848251 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102500659 seconds)
    (172/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.101940242 seconds)
    (173/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.101580964 seconds)
    (174/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.100932757 seconds)
    (175/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.105127011 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.131211236 seconds)
    (177/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099374101 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.123224171 seconds)
    (179/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.10292635 seconds)
    (180/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.100959771 seconds)
    (181/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.118764965 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100346906 seconds)
    (183/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109607629 seconds)
    (184/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099691955 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.109755645 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099877341 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100070242 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102437679 seconds)
    (189/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.126710387 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.103544598 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100619916 seconds)
    (192/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099794455 seconds)
  done (took 27.032851874 seconds)
done (took 28.20106717 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177401423 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128455457 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109195331 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109136894 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.177752725 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126970911 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.116772424 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.133634338 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.110557561 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100073613 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100306368 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.113866089 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108847628 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.18300407 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111694883 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.101009718 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100766813 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.139930894 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.114922027 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.115423114 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.178982328 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105248044 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109344559 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100792531 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178078222 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105032085 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.136354405 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118126735 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.115724916 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.100053235 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118194173 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100501453 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114968462 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114868955 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10355539 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.100923053 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103766788 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.107681601 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.099900327 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.128906094 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.114506377 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10063533 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109316523 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101547882 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.100335961 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.100616444 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104039743 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113065932 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100930984 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120185205 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109195178 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.113817717 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.126811451 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102867829 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101594105 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102476175 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.110181055 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10459219 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.113241009 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104676886 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.101090372 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106509775 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09994082 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103773504 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.10005673 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100446306 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.123569497 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.101006123 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.100678806 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10634359 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103909237 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.099725804 seconds)
done (took 9.431772572 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.098178677 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117422806 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100695764 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.179124224 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.164416964 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.101528796 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101142758 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.100525879 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108001336 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.125367941 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.102246971 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.105764784 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.101714239 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.101273367 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100790498 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105710317 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.099518068 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100590966 seconds)
  done (took 3.205503845 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105124324 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120215843 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.11098105 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111475172 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.103484324 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.100505942 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102781134 seconds)
  done (took 1.966816614 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096079318 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18968947 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.176468144 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.175319919 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.209098809 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.179248331 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100983269 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112013724 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.103113374 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188360039 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219632004 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.098334369 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102895564 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.176794845 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.099899682 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.171009018 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101706468 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.128363927 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.174420742 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103366265 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114284834 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.108851375 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100671055 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.184802494 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100819081 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.102423395 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.129067148 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103297425 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.128329026 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186342957 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.106881367 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.101529643 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.181997115 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.102013109 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.209323125 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.103125235 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.183579455 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.104673277 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.105386074 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.100981597 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.103471558 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.195009878 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.101687519 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.104991107 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.102697957 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19257109 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.101430063 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18678397 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.101685988 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.101408524 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.13163835 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102176657 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105215676 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.101154078 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.192629796 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103524066 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.171937009 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.199626447 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184349792 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.173362851 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102891799 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210350974 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.180385077 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.106056271 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102369397 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.101552344 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.171927328 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.100171199 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.106205457 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.196740386 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100595025 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.178939003 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.176392957 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105151604 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.10181587 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.105591764 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.128063831 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.17840426 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101968433 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102382251 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174635102 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.0999497 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.10131595 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.101280535 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.10121119 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.131953502 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.104066121 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.101257766 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.175983962 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.174381653 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.10108161 seconds)
  done (took 13.462130831 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095977483 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104099682 seconds)
  done (took 1.443284146 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103329764 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.099683489 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109901564 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.101384 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109964508 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.190051358 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.215099771 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100553251 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106424161 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107821184 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.190004447 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.19215353 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.214081635 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101202241 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.190405151 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.103988707 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.190567092 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101875182 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.133530518 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101854628 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.10635285 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101673936 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102247355 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.16998623 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.101884979 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101696719 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104067032 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.107379257 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108083641 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.102528785 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129058032 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102127023 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.102181639 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101575351 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.191526393 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102602304 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101235667 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.10541231 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101579779 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.101808201 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.218492898 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100604088 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.101492754 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.101730068 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10173169 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.101659579 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.101833836 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102272419 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.1935735 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.101827506 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.129407565 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101572332 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.101786535 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.102445706 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103157006 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101900638 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.102988154 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.19062315 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.102537318 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.104954821 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.100912106 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.102419066 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129251741 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.10262798 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103001904 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.103036125 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.102344857 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.102228679 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10186772 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.101540136 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.104894553 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.101726908 seconds)
  done (took 9.870947875 seconds)
done (took 31.156456596 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.119175433 seconds)
  done (took 2.350134804 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.640924476 seconds)
  done (took 1.872752678 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.796627858 seconds)
  done (took 9.057656239 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.366046877 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.286819545 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.882380128 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135676864 seconds)
  done (took 2.906178462 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.131863043 seconds)
  done (took 2.387444442 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235522816 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197148813 seconds)
  done (took 1.675721197 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.754794988 seconds)
  done (took 2.018401817 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.314317226 seconds)
  done (took 2.561749282 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.193935517 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164313881 seconds)
  done (took 1.621104228 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.529151336 seconds)
  done (took 1.793172738 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.88593337 seconds)
  done (took 9.156639146 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231890099 seconds)
  done (took 1.493391024 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.261415397 seconds)
  done (took 1.529256905 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.09916902 seconds)
  done (took 3.367504318 seconds)
done (took 45.043132523 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10365931 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.114549622 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.112351254 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.109335791 seconds)
  done (took 1.697737315 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102139733 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.106057887 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109066593 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.107537907 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109082681 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.107675581 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.105950709 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.107031168 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.109657019 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.107293453 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.106627466 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.107362783 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.107245701 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131486845 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100969886 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.107263022 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.108340787 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.106908772 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.106634145 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.109500106 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.102259435 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.106553588 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.106277541 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.109250577 seconds)
  done (took 3.861059426 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104162575 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107957311 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107778618 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.108145576 seconds)
  done (took 1.705660597 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105659057 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115176135 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116156094 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.110831328 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.11408519 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11452685 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.105436593 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.102414842 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.105732646 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.111398839 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115412761 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.108591994 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139273809 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.113960069 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.11332935 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.102154876 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.110728737 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113463204 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.111547216 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.110879393 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.108911762 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.110162474 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.10303382 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.106024261 seconds)
  done (took 3.944484481 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171002905 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.113226128 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.128197339 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.130382163 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.102399248 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.129287775 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.126135932 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.102400495 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.110219519 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.101816798 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.102308945 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.131498449 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.130054041 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.113119554 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.103010865 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.103499883 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.103791633 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.109866394 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.111797752 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.10338212 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 0.160147931 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.115031297 seconds)
  done (took 3.885671205 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107318526 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10183396 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10083068 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.101134742 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.112518479 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108591382 seconds)
  done (took 1.9162933 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.103224916 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103733664 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105953673 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.103811084 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10785048 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.106206952 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.103078246 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104545841 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10478915 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103458364 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.10348374 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10286778 seconds)
  done (took 2.533075059 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209966658 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118129478 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121849864 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.096682726 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104647863 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.101981467 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.115014629 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105232013 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.105436151 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103498131 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.10373791 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.1041883 seconds)
  done (took 2.677252623 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148043808 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106984065 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168286141 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.467604947 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113353384 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16360168 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.391604322 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145600422 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132684886 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117476225 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13926927 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120537651 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156048853 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142019284 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116158592 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.38960925 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160515385 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147682418 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119575187 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151204171 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135205432 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172047475 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148428258 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125208182 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14783857 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11570098 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.104586434 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110732288 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127816054 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131911639 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153475906 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118696361 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115417438 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144146525 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121252571 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128475726 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220073769 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107662568 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.235430634 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133013244 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151947346 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139752871 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134294081 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125055466 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114579192 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149442411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118670824 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.136443693 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.115576555 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121504007 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163957764 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13036382 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127956125 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118538316 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.438771966 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108682008 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.123203009 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154732718 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147633207 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146678031 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139740753 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.110141549 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18164043 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141269296 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135067702 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.120696478 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124605412 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104246862 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167912826 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17015571 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128820188 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164395418 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.140283615 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118590359 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136225644 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129861537 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15544506 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133623602 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133348667 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.108207433 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153825205 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111911113 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11580822 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176261035 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110735162 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17539068 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111769971 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.31788672 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145487603 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127113477 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125349898 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129957423 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165387455 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127016223 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.148242346 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116533293 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122525233 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156355934 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105159795 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124147144 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148563293 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.101750204 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152788541 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106638125 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133019118 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.140640034 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127908078 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137985931 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.119481073 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141580204 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14696257 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131248371 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133746162 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141140147 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112724503 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114993784 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143293808 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13794557 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.115945291 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158812458 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138058445 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148138615 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113767876 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113817668 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190773408 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112089692 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164414613 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108075582 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111773355 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136301941 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137964608 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123225762 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.132915353 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112224135 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153741456 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134901593 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.108100232 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116726827 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165495812 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104373586 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110321552 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14479369 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108830636 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.12239528 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129564141 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14055772 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121086181 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135877966 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136422097 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144594052 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115480641 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121573189 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115887191 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.141274062 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157446902 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.104080937 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13790608 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143405911 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111475907 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186444622 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126178291 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1852436 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130277173 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113025726 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187934804 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130492431 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.104716153 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110231111 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129136665 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126842166 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.136914136 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183109714 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119301291 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127424465 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124305628 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151720417 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135186002 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123335575 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115183871 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138272321 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133708005 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.10906448 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.104547443 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110637816 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120277567 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10979871 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142248992 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129824359 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128819079 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154805799 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135862439 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115952284 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165026155 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105543608 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127073113 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.134756203 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118208755 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133968594 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141141735 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140124843 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13981265 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117887968 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.1101478 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108843345 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.11042963 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129314513 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117031169 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113495883 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114265004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142777261 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130998934 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148856803 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1825551 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123546498 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147166519 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.110087014 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.150145541 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12419007 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137985069 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185154969 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107648037 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126264286 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139813292 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118216942 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148620997 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133455993 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161174853 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136707021 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.140101518 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11193189 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117892174 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166186261 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106541993 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121254228 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115344128 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112923346 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116512914 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.141911183 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105946875 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133651248 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121382439 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122696646 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145529528 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117867228 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112649157 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114824859 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139536986 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146684289 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.127004474 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130818436 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126229303 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144821923 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117878911 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126603319 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110621009 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.448639547 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128455678 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130964516 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111988098 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138558791 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142149784 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119978679 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121689159 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184171326 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109594924 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13468721 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162247714 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108315457 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112930389 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125346497 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122748313 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135724292 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104903465 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.127576589 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149410386 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125731212 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140513278 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131862803 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131479026 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129029012 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.128554104 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142048432 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141872185 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130650652 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130030443 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.133567088 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.118641789 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207122047 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106113924 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103566896 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.102346307 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182043593 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106231416 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130810634 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.182784668 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154297139 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135940047 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160837801 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139006761 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102556533 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128760529 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145476105 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150936546 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111359291 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.114137104 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162254058 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.167330236 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106870162 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163544774 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.415882874 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144453796 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120213436 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.127139687 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.432697789 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105322168 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110145063 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121417056 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12844275 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109768325 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184906891 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131448811 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115890546 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12283189 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113675364 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181210784 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142044512 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11610615 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12959853 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.113361816 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12581143 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12102247 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126147689 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146404204 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122455906 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120812314 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138657018 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.129935179 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.108599284 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133654845 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133422306 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136371323 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147135084 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116352419 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183995684 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106582311 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120450919 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112142486 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105444337 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160000921 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.178261661 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107091476 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125059379 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131890596 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115728516 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105318009 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115693097 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13289081 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115059652 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.111756418 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160273631 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.111512566 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134579817 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138325058 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112726896 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135472249 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115109981 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104858322 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113818515 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115943021 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139745469 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.147695024 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121426585 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098469541 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124902069 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113375597 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125456128 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142978154 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10951272 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.544387311 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.110828593 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139621446 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156298176 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140850748 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116194313 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131134282 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130798602 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146539408 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106944122 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111499824 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209788668 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114872222 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.125105503 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109790723 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115276302 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145804177 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.100675672 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147602078 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128053619 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118658236 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.112200556 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.130750663 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14037876 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.113057849 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120681875 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13916836 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154076209 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127057013 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178337621 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130847909 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132304889 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121294839 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109561204 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124206923 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126922747 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149751586 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110908506 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10911894 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.11411593 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13348697 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.110920994 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156011236 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128913914 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132482182 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132013167 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104810857 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132350587 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11242237 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133765701 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105125078 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143928099 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135212644 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113031589 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108903886 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137704832 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118765465 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.133451001 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105910043 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178501165 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136213356 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.108393464 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111011032 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.420624254 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128901218 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210065081 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133423852 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114449701 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147802527 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118705533 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.131185956 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138106053 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.105729048 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112588183 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.105928556 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.248193501 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.127413352 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136132051 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155978724 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119840295 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187069247 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135195954 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252883799 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120387611 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157424033 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124947732 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10786044 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115925093 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111651075 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118365471 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183651484 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137108129 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.131079816 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.114095521 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104393803 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.11224833 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114534811 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12291909 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142713266 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132554189 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117083914 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.125386224 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114885315 seconds)
  done (took 82.738112633 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156611475 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137829017 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15377462 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22238519 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168056186 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.284424872 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.24075069 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25223417 seconds)
  done (took 2.987683877 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.11033132 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.129051145 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.126155014 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129151701 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.102978349 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.305399295 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14860293 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.100972172 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.150540158 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.133999475 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.106245139 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.463244207 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.103974043 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.106814902 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.131214452 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.101360314 seconds)
  done (took 3.807558799 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.530632491 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.348927688 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.681887577 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.214322219 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.419415056 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.122629681 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.538526321 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.101467157 seconds)
  done (took 10.33207697 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.143610812 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133893988 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.222594225 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.230249401 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.136681086 seconds)
  done (took 2.242604499 seconds)
done (took 125.586778762 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.112222552 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.11353894 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.117322808 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.114728973 seconds)
  done (took 1.814700317 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.165638676 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.106451458 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109009624 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.113277525 seconds)
  done (took 1.873558481 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.436745116 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.102621982 seconds)
  done (took 1.956715451 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.138103675 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.128053382 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.128764936 seconds)
  done (took 1.784578299 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.119827223 seconds)
  done (took 1.505503721 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.112208966 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.11124322 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.178341742 seconds)
  done (took 1.784937986 seconds)
done (took 12.101459497 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.213752747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.953401574 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.448955441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.17317283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710096483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.457687613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.380859245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.10791469 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116138185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107218557 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109053407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688265445 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.359463335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.881073638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.388398161 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.879749675 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.710790388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101337453 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103417093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103446949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.352699099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103200764 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.106491966 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109296781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.685854421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404561302 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107401512 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.909870648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.102678477 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.106358063 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390885518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.106880449 seconds)
  done (took 20.845381631 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139048746 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131030239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.115990158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10873837 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.108606821 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110056111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.111348518 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.107584639 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122765137 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108188441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110046279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127486114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.109999823 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110981139 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.12299142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108493695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10755458 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108218635 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.108359568 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108145468 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110819474 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107165585 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.134345178 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.106073933 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112098029 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.119639756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111578543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109873766 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107926854 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103997723 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.109893578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109787255 seconds)
  done (took 5.023004297 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150935725 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147031564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.114880601 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139174923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132917808 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.109893712 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.162885468 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109103776 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.149867859 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101689692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102000269 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.103986601 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122290886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109399692 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.125756563 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107249461 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.105079227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102917153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100995103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127340174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105920321 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106413374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.103226812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.104190878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102160257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.117064751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110107834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.10439058 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.104947997 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131724838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10338633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10172422 seconds)
  done (took 5.117336664 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.107541068 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.116224241 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.138188386 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137470625 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.105133785 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.102733881 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105220128 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.105104284 seconds)
  done (took 2.314763505 seconds)
done (took 34.688613569 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.120455499 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.114485611 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115908387 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.113553514 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.17134921 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099073836 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110383238 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.101915875 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.109983399 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.113567059 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.131447224 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102092372 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.111920069 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104300812 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.172719171 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.111793283 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.17930157 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.202907597 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.104366531 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.114979429 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103674482 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.174653563 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104435264 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102661122 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.202144909 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.105532104 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106531156 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.105981109 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103585936 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.109291255 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.174624371 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105938471 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105028472 seconds)
  done (took 5.486607281 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.182533024 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.106258152 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.104790763 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.105564659 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.106062394 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.106193749 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.184429278 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.107605871 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.133795901 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.102515205 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.107104662 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.199207354 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.10755824 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.109054719 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.110185317 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.104184224 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.107327134 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.10947124 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.213533941 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.103643194 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109805129 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.109068833 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.104810035 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.107154389 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.207256937 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.103480454 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.107339641 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.137560455 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.102155438 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.1057976 seconds)
  done (took 5.116055496 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.1132662 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.128949576 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.127290728 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.131170543 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.1092388 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.108678353 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.123442331 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120323437 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.113698442 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146054009 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108331972 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115916725 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137106576 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104361513 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.120797938 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.117794011 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.119734713 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105519205 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.118532496 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.159137096 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117540746 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11798555 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.1188268 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.113261093 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.114810259 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.149094975 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12714666 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.109045485 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.109472907 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.118577004 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.109117091 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.110806585 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.133505652 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.123854367 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.109966542 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.113412943 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119328553 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.108968742 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.144243839 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.115248525 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.111584271 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.108941487 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130152433 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.108788581 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111597873 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.107579565 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.119363007 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.123786028 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.119954115 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.111045311 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.131666676 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138110978 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.104022992 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.112623336 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.109072083 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111157065 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.129723563 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120589257 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.112847362 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.109193422 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.109686369 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109629184 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.130592071 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.119094328 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10990154 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.150475123 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.107561269 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.107095929 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.111694595 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.109690311 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124448973 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.108573415 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116368582 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.111387408 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.131152429 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.10827903 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.111070054 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.112376914 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.136642481 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.108193044 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.113503723 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114484932 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.108755796 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.109325235 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.109443043 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.109780811 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.10942258 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.112111328 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.111060986 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.108893681 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.10990777 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.108418832 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.136680555 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104994638 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109271711 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.108178533 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11484169 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.110054161 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.110727634 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.112144297 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.119914381 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.132808407 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.110742605 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115857489 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.115540499 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.109260735 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.156745573 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106464835 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.109452597 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.122793337 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.113278613 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.11035862 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118751763 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.110769705 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.110049347 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.109882054 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.138883294 seconds)
  done (took 15.1384584 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.186545271 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.243805532 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.293061123 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.248965092 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.193082077 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.173124564 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.257511744 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.113000554 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.242671773 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.116762626 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.15963941 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.234879962 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.118496895 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.298889897 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.106487994 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.133682613 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.129810054 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.108615042 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.1184903 seconds)
  done (took 4.905922895 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107057443 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.128417967 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.110733863 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.109012968 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.1099381 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.111575307 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122658645 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.11787395 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.109411992 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.109232287 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.119046268 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119244933 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.113855957 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.159336965 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.109274535 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108756834 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.109744448 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.118349214 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.114232547 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.13113475 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.119387417 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.114306962 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.111218775 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.109554577 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.10902979 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.109481055 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.109210052 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.136273991 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102743214 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.114126263 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.112724988 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.108099718 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114709974 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.114894791 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.111731617 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.115456816 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.110330597 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114544343 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.224698741 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.106916701 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.111481123 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.108968547 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11335218 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.109878714 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.109179359 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.118768344 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.108723267 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.108681832 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.118588094 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.108732952 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.10962632 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112576018 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.139674381 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.103340387 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.108871798 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.107302868 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.106260874 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.117847067 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105329615 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.105120596 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.10806538 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.117096846 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.110481526 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.112519739 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.112086348 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.113898406 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.140557021 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113725405 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.109151512 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.109753606 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.10988738 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.116197521 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.108435275 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.110480433 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.111339632 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.114330742 seconds)
  done (took 10.199418627 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.105811651 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11740214 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.122486672 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.113084235 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119287728 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.109868662 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.120300476 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124054706 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122744536 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.112935015 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.122029538 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.112199907 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151054805 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.11298321 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.120194475 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.120429307 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.119812258 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.111916688 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.116788633 seconds)
  done (took 3.700118203 seconds)
done (took 45.94492474 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.44083022 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.62290146 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.420923541 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.420195128 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.446338559 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.428544333 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.418483722 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.421049673 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.007340597 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.421222458 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.419788324 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.418995611 seconds)
done (took 31.295015814 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.482870978 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.422179581 seconds)
    (2/2) benchmarking "String"...
    done (took 1.42475322 seconds)
  done (took 4.552834582 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.423165576 seconds)
    (2/2) benchmarking "String"...
    done (took 1.423648277 seconds)
  done (took 4.258300688 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.419775693 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.428320372 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.419596035 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.592776418 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.457599423 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.418469514 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.430890915 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.419390728 seconds)
  done (took 18.579964424 seconds)
done (took 33.707586031 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.443635341 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.600256535 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.691219531 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.419224613 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.420109566 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.419591441 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.41849727 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.438938446 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.420798502 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.421427895 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.78281024 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.708193055 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.430905389 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.816622401 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.418253624 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.428779945 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.416157465 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.640411326 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.419320948 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.46155957 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.419321583 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.424662176 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.432033911 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.437484494 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.521210525 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.425327687 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.482512247 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.418606929 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.598618142 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.419021734 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.461042017 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.418850491 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.422512377 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.423711387 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.425056613 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.432221343 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.61317562 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.520451237 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.420362371 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.423627552 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.610229987 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.427501977 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.418400859 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.422040312 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.420107908 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.441841007 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.692662336 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.516167002 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.422482797 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.418807033 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.463016668 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.819280097 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.428889553 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.426754779 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.422445256 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.63747236 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.425021132 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.464092689 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.436161018 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.427908182 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.422302227 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.416214727 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.439735108 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.423239605 seconds)
  done (took 158.213027308 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.416641854 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.419431579 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.418694808 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.426604923 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.416436641 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.42056252 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.416836844 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.41804903 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.41890854 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.423429517 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.420949741 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.423830843 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.419854698 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.368321535 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.418915215 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.4392718 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.419168699 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.418602909 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.419908649 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.419974136 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.421842868 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.418723319 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.42045306 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.418257086 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.43936233 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.484391852 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.422486998 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.424099944 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.419867429 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.418176217 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.447949242 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.422121839 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.92889777 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.271480024 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.430036414 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.435520544 seconds)
  done (took 88.002036017 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.41886659 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.418530793 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.418245402 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.417828481 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.446403905 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.418607783 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.89847861 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899780067 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.404121346 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.487577696 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.839148083 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.518206889 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.559868997 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.416512037 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.504352197 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.431929948 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.416926657 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.459059958 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.44537153 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.414957772 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.416183644 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898034401 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.428340661 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.511267689 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.57601014 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.414637652 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.440397371 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.414250467 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.847371558 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.417345581 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.445834584 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.798649712 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.444850702 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.419821344 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.659198986 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.425142046 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.525258024 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.418366905 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.442999691 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.415277839 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.684415755 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.415808113 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.415933676 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.419633432 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.954079515 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.416368791 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.895506857 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.414715652 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.275970369 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.41925263 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.413362428 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.41493357 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.748983706 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.869656414 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.41640253 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.415631233 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.420723649 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.417880759 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.418684528 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.4452889 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.939202233 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.569121656 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.416439425 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.417469266 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.444779819 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.418395048 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.416531895 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.417192226 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.548552578 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.475998517 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.203747125 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898145559 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.418245517 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.506725986 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.50393243 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.528006507 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.415194241 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.416210434 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.415637708 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.417182975 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.521148031 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.413453844 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.781180064 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.572638809 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.416073299 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.524879365 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.508152334 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.416789449 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650884718 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.416814063 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.413337296 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.036268418 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.507575305 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.41721456 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.41730952 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.418442288 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.781009059 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.894894888 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.579646083 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.418671137 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.070275188 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.428106691 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.775178527 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.881498369 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.950699739 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.417270586 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.52113443 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.57820417 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.416309071 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.415381455 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.488768887 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.417868069 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.475848597 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.412849642 seconds)
  done (took 389.44751757 seconds)
done (took 637.074717381 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.417683636 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.424074014 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.41967188 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.427308168 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.426659037 seconds)
  done (took 13.524280079 seconds)
done (took 14.934311493 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.64648733 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.644580266 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.479376726 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.448506509 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.544981556 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.599169516 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.452868916 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.64508565 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.644219177 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.591479087 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.443944266 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.462519978 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.545434908 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.541874625 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.642864168 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.488082328 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.643944575 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.645217152 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.545177106 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.490810591 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.460055399 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.645243842 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.442783717 seconds)
  done (took 37.11548167 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.767431512 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.778149957 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.468230227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.791034965 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.45736336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.775499782 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.660819891 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.664061736 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.634941172 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.481431862 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.435576037 seconds)
  done (took 19.336702745 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.750385217 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.74911929 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.47143993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.739316654 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.451576484 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.72621642 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.621441228 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.619200989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.612625662 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.449574138 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.43963021 seconds)
  done (took 19.057290674 seconds)
done (took 76.935196262 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.449997601 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.50382515 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.434513664 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.43535358 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.431107104 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.432466206 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.433924858 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.434256732 seconds)
  done (took 12.975182597 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.429735584 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.428682948 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.431802553 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.431346014 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.432424017 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.431011885 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.431392226 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.43379218 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.434196142 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.432471263 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.42942521 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.433232149 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.431350729 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.430094363 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.430264624 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.431208119 seconds)
  done (took 24.326080831 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.432746272 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.432364114 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.431504932 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.430087277 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.430781259 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.431617468 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.429241904 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.431935353 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.431555718 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.433381811 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.431085208 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.431547681 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.4310996 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.430423461 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.429610094 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.433096744 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.434177211 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.430364396 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.435559491 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.430332545 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.429340203 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.429018102 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.429105862 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.433219989 seconds)
  done (took 35.778695927 seconds)
done (took 74.503601036 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.431065623 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.43621953 seconds)
  done (took 6.288060892 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.83390806 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.880920539 seconds)
  done (took 5.136144755 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.433859579 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.429191569 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.432283202 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.429263582 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.431192986 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.43254898 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.431176987 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.428689709 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.42844908 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.430037196 seconds)
  done (took 15.731249392 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.433874139 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.431971857 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.429883993 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.4339744 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.428867056 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.431207771 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.433441121 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.429476738 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.432402066 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.429871484 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.429099115 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.43171792 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.430365853 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.432089818 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.430597113 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.431839161 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.432563279 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.434031469 seconds)
  done (took 27.192286697 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.446942777 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.455625052 seconds)
  done (took 4.326800444 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.565235955 seconds)
    (2/7) benchmarking "second"...
    done (took 1.473572049 seconds)
    (3/7) benchmarking "month"...
    done (took 1.54383494 seconds)
    (4/7) benchmarking "year"...
    done (took 1.527445932 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.476393211 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.459292462 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.472869373 seconds)
  done (took 11.943422965 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.430877641 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.680411331 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.8199736 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.182468415 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.434315149 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.435033371 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.240777858 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.437516638 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.435420001 seconds)
  done (took 16.518832667 seconds)
done (took 88.558457313 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.423588626 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.426267387 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.437716017 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.429805146 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.798000421 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.450649035 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.426120015 seconds)
done (took 17.814138142 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.432466296 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.425727326 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.427453524 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.429935097 seconds)
  done (took 11.135762168 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.400302658 seconds)
    (2/2) benchmarking "read"...
    done (took 1.751685067 seconds)
  done (took 5.573134054 seconds)
done (took 18.135464885 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.431596441 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.428973925 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.430597225 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.430326741 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.42849468 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.429730756 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.430124139 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.431142508 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.428404828 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.429743855 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.431012914 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.430649329 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.431308107 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.432332741 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.430194821 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.430517565 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.431927785 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.429606802 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.429896316 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.42899394 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.430864104 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.430791818 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.433217839 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.433999174 seconds)
  done (took 35.75665267 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.430542691 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.432375411 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.429975709 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.432826549 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.428920419 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.428594721 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.43421166 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.430371246 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.428432648 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.433112243 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.430316037 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.431220802 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.430029118 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.432767125 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.429141226 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.431620308 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.430711984 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.430283664 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.430049708 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.431755135 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.429172616 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.431086665 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.435284538 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.430968237 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.431712331 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.430643441 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.431247592 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.429101664 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.429290342 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.432620742 seconds)
  done (took 44.351074814 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.433246974 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.437728338 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.432655178 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.431550952 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.429416225 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.431507536 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.433873065 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.435452106 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.43080126 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.432066102 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.429004333 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.430744862 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.429187695 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.43368287 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.432283543 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.430722508 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.43152753 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.430669172 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.430522672 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.431960125 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.43240965 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.430890895 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.431400681 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.429989445 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.430791926 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.432390085 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.429538016 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.430636912 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.429867671 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.428539674 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.434114566 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.429513485 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.432825911 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.428007532 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.429413138 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.432520066 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.434419177 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.438832078 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.434052996 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.433052654 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.428450024 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.431027312 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.434121698 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.430790866 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.434238061 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.436560221 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.431798277 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.429939836 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.432776095 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.433001932 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.430681217 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.431161871 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.431384366 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.432976642 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.431421258 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.431306585 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.431510913 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.431314574 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.429446609 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.432676124 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.429160951 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.430141844 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.431633336 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.430876705 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.431420412 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.430123241 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.432318106 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.433076703 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.431491614 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.430919644 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.429420019 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.429123917 seconds)
  done (took 104.502771923 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.430393592 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.431022737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.433231136 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.432679837 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.431355285 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.431398859 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.431736994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.43108611 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.429283326 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.429453617 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.429052983 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.428931465 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.431325989 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.429808221 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.42901079 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.429178649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.429495186 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.430042095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.432512044 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.433498556 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.428422554 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.430947042 seconds)
  done (took 32.899994895 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.433067345 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.435429942 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.431680679 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.437267469 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.434959352 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.430731299 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.429893578 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.432483029 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.431859575 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.431792382 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.431589249 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.429623991 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.433873923 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.428756652 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.43172124 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.431218729 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.430705692 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.434276253 seconds)
  done (took 27.204319919 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.429978409 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.434710473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.431406527 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.431513133 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.429872657 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.432767938 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.435491838 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.429147022 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.432543782 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.434764905 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.432261836 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.431818182 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.432149112 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.432873472 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.432549806 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.43269654 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.430227422 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.433585642 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.430477624 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.430437349 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.43515208 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.430112279 seconds)
  done (took 32.930408219 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.434176237 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.434710851 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.42980967 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.431652759 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.433131888 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.43196856 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.430718949 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.433929959 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.433066766 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.431519566 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.430855688 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.432271819 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.433306864 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.431237896 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.433071733 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.430014675 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.431883722 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.429542569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.431435654 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.431725802 seconds)
  done (took 30.064121813 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.431866455 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.435042068 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.433328894 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.432914622 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.434520006 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.432765632 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.434918753 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.435700395 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.432808464 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.433845987 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.435176962 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.432058921 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.435704931 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.436342787 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.431090923 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.433298983 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.437513154 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.434662662 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.432306981 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.433795971 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.434255611 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.431308659 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.437186199 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.433824243 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.431439803 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.436998918 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.434981975 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.436692623 seconds)
  done (took 41.580613393 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.431107196 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.430978463 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.431155753 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.431949228 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.434587007 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.43510791 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.433236525 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.430836084 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.434887991 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.433833697 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.435035038 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.434842791 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.432448169 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.431386391 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.432420163 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.433901769 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.434203461 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.432725921 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.433727346 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.428943843 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.430510686 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.431901528 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.435013688 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.429006638 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.433021627 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.433867007 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.432370033 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.430679209 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.431819428 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.429764354 seconds)
  done (took 44.401745287 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.486646366 seconds)
    (2/2) benchmarking "in"...
    done (took 1.496724392 seconds)
  done (took 4.40526574 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.434272233 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.43409142 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.43474036 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.430416637 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.433573772 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.431681426 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.434276956 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.430169707 seconds)
  done (took 12.886758737 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.437782691 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.434977779 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.431962173 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.431634527 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.434240908 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.434148454 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.442851006 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.437509301 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.435032264 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.436453997 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.435873738 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.438132821 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.435504345 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.43666136 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.436975368 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.441788284 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.435019584 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.434433159 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.436124515 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.431136695 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.43264776 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.438357749 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.440067623 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.434573116 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.43448004 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.443502723 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.443991766 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.438342605 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.431435257 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.442965923 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.434780844 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.434299908 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.431740019 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.430702959 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.432206866 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.431860481 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.443988326 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.442633727 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.437537208 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.437612248 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.434627778 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.431904487 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.433296403 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.434298944 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.436625016 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.433561619 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.431889989 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.430833543 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.433248061 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.435121557 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.43718966 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.429610427 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.432597952 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.439425442 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.438631149 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.445852108 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.440551362 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.436521894 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.437134714 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.440044627 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.45458565 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.447567006 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.43762027 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.434788944 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.441134195 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.444738193 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.440426848 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.436589262 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.433099775 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.43170256 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.438880487 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.454765449 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.451404764 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.433986494 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.432120932 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.431958694 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.43344237 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.430988924 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.444251269 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.443083032 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.437095032 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.431062806 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.441242631 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.440995972 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.435328778 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.430908068 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.434116071 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.431523883 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.433759987 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.442637925 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.437661323 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.432509025 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.434995099 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.433675254 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.436808756 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.431934966 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.435595613 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.434763984 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.437140801 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.430777863 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.434470739 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.434432626 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.439340003 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.435275116 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.433111765 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.44138187 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.436635055 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.432812954 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.442731318 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.439370533 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.433690335 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.435924858 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.439161088 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.433498562 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.435389901 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.439445201 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.439602435 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.43847307 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.438280968 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.432068164 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.442594591 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.450519163 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.436625613 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.435402351 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.438244158 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.438887607 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.430414878 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.436925821 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.437388724 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.43530999 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.433086672 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.436918248 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.434725313 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.437851337 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.438298909 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.435736806 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.435617196 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.430832489 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.431547641 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.436118995 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.439318114 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.433965386 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.43850481 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.438225621 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.435175447 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.434752535 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.444560551 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.441133524 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.436790772 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.437507784 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.435775259 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.43468183 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.435180145 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.43395109 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.433527042 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.435468171 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.43649722 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.435667077 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.431132862 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.431224506 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.436279247 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.43582833 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.43849616 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.436244951 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.439957662 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.439620902 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.438516046 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.435208863 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.434543543 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.434866132 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.436297676 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.433659125 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.442537002 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.44258362 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.432093107 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.438174676 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.43960683 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.435163771 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.433169219 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.435775955 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.435860089 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.43991905 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.438795132 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.445467507 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.443214884 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.432875654 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.432527178 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.43575187 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.432395621 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.437249784 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.438555406 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.43648427 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.450506686 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.451613507 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.434843796 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.434337938 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.434807591 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.434634288 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.442233673 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.436139265 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.433945865 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.436758243 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.435191977 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.436284256 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.433901146 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.434117404 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.436440265 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.437132509 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.435997732 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.435615742 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.434183909 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.438739884 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.440466785 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.433706974 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.434766447 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.432358645 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.433592201 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.433728229 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.434342826 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.43435354 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.439135711 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.431106526 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.437908011 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.440074687 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.438447778 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.43885429 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.440116666 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.43660008 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.434930522 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.436558651 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.43674793 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.447308532 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.442461935 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.436284065 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.446879332 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.444579245 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.43260421 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.438887837 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.439920029 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.434416608 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.441417427 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.439905634 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.43355716 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.436187938 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.43262346 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.435342145 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.436372332 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.444980139 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.441600578 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.436282591 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.434121865 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.435086453 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.436494517 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.437445719 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.441170925 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.440513759 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.441793073 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.439419851 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.437187303 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.43774216 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.436182301 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.435389055 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.435157373 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.439682313 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.437984835 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.440323002 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.440089641 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.438589142 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.440181857 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.435649078 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.436605567 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.436034607 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.435633573 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.456524803 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.452038165 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.453954989 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.450834639 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.437477749 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.444306975 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.441222463 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.439262389 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.439597652 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.438737184 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.437731244 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.436550106 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.434110107 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.43667741 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.434503808 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.436144004 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.439276895 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.433843829 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.433231159 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.437628587 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.435999155 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.435181836 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.434286976 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.435792202 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.435915765 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.4379874 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.439019774 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.438966773 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.437528649 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.443510813 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.445384167 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.442014097 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.439883866 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.436569554 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.439955728 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.436717996 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.439533797 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.439265716 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.436902189 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.440684901 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.441317343 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.438615396 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.443220858 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.436989238 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.439055999 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.435088522 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.433451951 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.434734812 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.437753705 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.436152717 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.446194181 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.441082669 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.435931085 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.43807502 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.43482204 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.435779134 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.436217208 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.436755165 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.436060722 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.432019152 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.447420075 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.443492685 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.439535911 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.438399775 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.436133411 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.438206495 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.431710549 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.435154681 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.441933794 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.440423009 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.437810727 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.439599513 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.440931832 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.434302981 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.436383453 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.432997891 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.436848547 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.433873933 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.444092437 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.447264298 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.4388996 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.436222294 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.447188422 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.440567278 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.447180602 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.441991351 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.437853292 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.437481341 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.437404752 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.436477453 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.43750645 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.440236629 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.440286589 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.435591967 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.436947364 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.437546831 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.435436135 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.440108876 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.440400379 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.436586046 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.443580884 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.444770061 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.438814374 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.435424397 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.435053985 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.431620843 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.437804498 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.436515427 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.434216472 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.441930538 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.445022878 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.437409741 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.438782836 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.439848242 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.440665931 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.436232921 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.43478299 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.437108425 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.434392955 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.435482344 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.434825545 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.436736949 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.442631608 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.436904425 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.440537366 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.438054296 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.437828372 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.445445382 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.438044263 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.436618366 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.437460866 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.439052205 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.436786677 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.437848559 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.442657472 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.436162272 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.437941907 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.436806274 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.438876147 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.434446355 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.437741198 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.442325075 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.438389397 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.438382133 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.439286079 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.435217799 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.433976508 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.43395657 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.439184722 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.438180113 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.437469826 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.437832213 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.435545677 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.438673204 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.437476998 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.439475346 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.438478021 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.439599996 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.439268191 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.43512326 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.432537795 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.43352597 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.438224014 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.444916649 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.444954889 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.443517219 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.44183189 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.434633822 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.437155103 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.439209708 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.441874084 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.434542443 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.439397836 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.43437221 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.439368725 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.437562926 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.442547091 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.439761597 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.441745753 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.444841068 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.436018216 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.449550722 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.443692955 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.440111075 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.436615365 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.43843892 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.440776674 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.434790076 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.433956755 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.432650864 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.444717378 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.445090197 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.43833847 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.441106252 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.441332493 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.435616159 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.438867564 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.432971783 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.437733986 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.437777217 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.436664231 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.436237728 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.438516778 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.438037942 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.438764481 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.440097645 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.442575854 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.442239441 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.439369995 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.440492952 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.442174164 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.439363291 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.436007178 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.432674058 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.435320936 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.433317386 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.437431467 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.437317232 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.439397591 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.440861816 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.438371121 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.435457269 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.438619312 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.439974155 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.441078864 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.444681271 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.441428902 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.435133701 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.438469489 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.440945933 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.444560991 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.438050651 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.437654172 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.441379282 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.441903 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.438040027 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.436717366 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.434846387 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.439664796 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.448645431 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.444018364 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.438181195 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.438982602 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.443869443 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.441161549 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.435611484 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.435744343 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.441653387 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.441660365 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.440345475 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.436668539 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.445611867 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.442596152 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.439453116 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.434716171 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.442169224 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.441259379 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.444318416 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.440978418 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.434749456 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.439583964 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.452145564 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.439226768 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.443284465 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.456044275 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.447072309 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.441968847 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.438436156 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.437033507 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.43555443 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.43540905 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.439103378 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.436937491 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.436783777 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.432000952 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.441013747 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.441249917 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.444098088 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.443940037 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.439502302 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.437039752 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.440148625 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.435510627 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.434574201 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.436747502 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.435493733 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.438907463 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.436204876 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.436163137 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.453914521 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.454610239 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.436239151 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.438173034 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.435686436 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.441814925 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.443228053 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.443495761 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.440553877 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.43701051 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.438500792 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.439645568 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.437169351 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.439340362 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.439577531 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.43860316 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.438487253 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.43703835 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.451925013 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.447203116 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.442332137 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.443663795 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.437745021 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.439067303 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.441949256 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.438647016 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.437150588 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.441520821 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.439637001 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.438247415 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.435088963 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.43440506 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.44012544 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.436888169 seconds)
  done (took 858.579953554 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.439544166 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.439650736 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.436723916 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.437920929 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.437998696 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.43809808 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.438868077 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.438590757 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.437616646 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.440896582 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.437792761 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.432892404 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.437662498 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.443129399 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.43698887 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.440155516 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.437273887 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.435658012 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.437451153 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.436263794 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.440801374 seconds)
  done (took 31.633086187 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.434771227 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.437881512 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.438355333 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.437447109 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.438684077 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.438627466 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.436514886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.436668351 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.438123757 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.434291871 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.436378314 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.435321382 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.436981641 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.433955245 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.434493897 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.438348713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.436238137 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.433043441 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.435287783 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.437321723 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.433756333 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.437262743 seconds)
  done (took 33.028573018 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.435195721 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.437933713 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.437621437 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.435319196 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.435594771 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.437124236 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.434910935 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.438969604 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.435796151 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.435691537 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.439031381 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.43604878 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.444223533 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.441097806 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.440891492 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.441126652 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.438668049 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.436983857 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.439230938 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.435445495 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.443776298 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.444716105 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.43306659 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.438554484 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.435636574 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.433993199 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.434452576 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.435900783 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.437608889 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.439509042 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.438780025 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.439298452 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.443358231 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.441498402 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.437831761 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.436228282 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.438230654 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.438401106 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.433910965 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.444716555 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.444817389 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.438855109 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.455165701 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.450338646 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.435552849 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.439608416 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.439538606 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.435556638 seconds)
  done (took 70.497130133 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.437825188 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.435028897 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.43275885 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.436591596 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.436044342 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.436928749 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.430500003 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.433943356 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.436227291 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.43719483 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.434322669 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.437126161 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.435094106 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.436887421 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.438977034 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.437554871 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.436991951 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.434677017 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.436483213 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.435544153 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.434243378 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.436126632 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.438236651 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.436339286 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.435793405 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.437872322 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.439242727 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.435536903 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.436439634 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.437831847 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.435765482 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.43707567 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.437483711 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.437802208 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.434571083 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.437949929 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.437491545 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.436501497 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.43845694 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.435095942 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.439034894 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.436843068 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.436571401 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.438646093 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.441059043 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.43621814 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.437765794 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.434289227 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.437814163 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.434125602 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.434789032 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.434595278 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.438409949 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.43929329 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.435382812 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.436429728 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.434042831 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.435482556 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.433702532 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.437304097 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.436297544 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.437218939 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.436144126 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.440073096 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.434254287 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.436690798 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.437534783 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.436430281 seconds)
  done (took 99.11191167 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.436169808 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.4367191 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.436472378 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.436288372 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.439571055 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.436114281 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.435056904 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.435270956 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.438066304 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.433232378 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.437343069 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.433163058 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.439287786 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.4348175 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.435767759 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.435980331 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.435612384 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.436908364 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.43676321 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.43845342 seconds)
  done (took 30.154968946 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.436435383 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.435233569 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.435511982 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.439202618 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.436015949 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.437108523 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.437095396 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.436247469 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.434070266 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.438414991 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.43658681 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.438430567 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.4356206 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.4371516 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.438362813 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.436714602 seconds)
  done (took 24.421196311 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.437689094 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.441686626 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.437121465 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.437015798 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.432502577 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.437638752 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.43453189 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.436409424 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.43754536 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.436731267 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.435991106 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.437951233 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.433963426 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.439214111 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.435987421 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.437248402 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.435917338 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.437542838 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.435251079 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.439291624 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.436542363 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.437891449 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.437723559 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.436534925 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.438373281 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.43444581 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.434379336 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.436507994 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.436512456 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.432093248 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.434262991 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.436814206 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.436003318 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.437746093 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.439564701 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.436331304 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.436054465 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.434249941 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.437046452 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.438646231 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.433697905 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.435535836 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.436376775 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.4373237 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.436000286 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.43696384 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.437218257 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.437478167 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.434617921 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.438905006 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.436730104 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.436908462 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.432129667 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.43724805 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.435878055 seconds)
  done (took 80.438256052 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.436619744 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.438836636 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.43335497 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.438865233 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.434635763 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.438889885 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.436810229 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.439883952 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.435170885 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.437197943 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.436850366 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.438006544 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.437357656 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.438034308 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.439771034 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.434331956 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.434699595 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.437323663 seconds)
  done (took 27.295860634 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.436911044 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.437703152 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.436993755 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.435491828 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.432506884 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.438924746 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.437936848 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.433756742 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.436132109 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.436073435 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.43665293 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.436996169 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.434870502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.435842824 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.439447746 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.432478537 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.434929489 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.434121262 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.431792891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.437669554 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.438102249 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.436736032 seconds)
  done (took 33.018364925 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.435105022 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.435708151 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.438735812 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.444051983 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.441298493 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.438617205 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.43790222 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.439722777 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.452909699 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.455422711 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.45163755 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.441307154 seconds)
  done (took 18.740520272 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435992756 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437372384 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.437166789 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435441466 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437685974 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435841731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433935626 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436390666 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436542066 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441117368 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.4343184 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436512448 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436980836 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440225593 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436544677 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435441211 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438219785 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436294961 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438743589 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437591094 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436520832 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436227771 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436806127 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439590768 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434841779 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.4370314 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43715213 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439093409 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436680533 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433145801 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439384242 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436304386 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438544007 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439929058 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437815446 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436997632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434616396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43670296 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43441493 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437434344 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.438163486 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433227875 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437921006 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435175033 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43461101 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439029418 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438070876 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437194036 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435361377 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440783656 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439222641 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435100368 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437779427 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438676238 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438971547 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439655804 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433193975 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434760519 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440076755 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436022016 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436531936 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436659927 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439625906 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436016464 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436038774 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438486374 seconds)
  done (took 96.278764895 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439194651 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.437064395 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437075266 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440151102 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437301591 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437543583 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435932351 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435199605 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437711596 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438787637 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438031295 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440423665 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438353411 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440455601 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434577293 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434145653 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437638016 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437224947 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436665211 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435950391 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436413858 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433021735 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436943114 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434137442 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437812363 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440680868 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434573689 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439677492 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438296717 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436217804 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439712774 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438820063 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439841902 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.433521671 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439486441 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435722521 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438111217 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437867216 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435828609 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433239851 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439316081 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435343221 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43596544 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.440559879 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438517373 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437497112 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43779877 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43309391 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437522869 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435304834 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436154548 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441967807 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438870568 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437741445 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435110208 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43874067 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435814157 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441599661 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437490452 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439537135 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436181359 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437256016 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440294954 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434466928 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436984459 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434873567 seconds)
  done (took 96.294538667 seconds)
done (took 1911.899157347 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.600780634 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.825746664 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.484324634 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.473493705 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.491480571 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.463061449 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.964254968 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.626570273 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.915503958 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 2.140924013 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.779020621 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.559863319 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.454451468 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.547973597 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.837535413 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.445101465 seconds)
  done (took 36.04013569 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.466646123 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.444819918 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.544014919 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.442784789 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.463113444 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.602151992 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.490596395 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.450009467 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.434685085 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.467149212 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.437369783 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.461272332 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.444253344 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.422134282 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.782275395 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.604547493 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.676517673 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.441162121 seconds)
  done (took 32.510971849 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.808237848 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.740339884 seconds)
  done (took 5.978137766 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.458299623 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.439878309 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.443589499 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.438832049 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.430141843 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.434321786 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.438923166 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.441891003 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.438919156 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.543302138 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.443369142 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.451835083 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.440332622 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.443173848 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.439535414 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.479694269 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.582675912 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.440447419 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.435810682 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.442368606 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.436834437 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.537509542 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.477033929 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.437054198 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.544572039 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.437639432 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.443067176 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.446984907 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.571310959 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.439070592 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.434600803 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.442630288 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.444913168 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.242384106 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.940437991 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.433527664 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.450761014 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.449820891 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.436714422 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.608685196 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.438104413 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.446077109 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.433411244 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.898095318 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.551452946 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.551180276 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.431104549 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.442716519 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.44034651 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.509237325 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.438872472 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.441217789 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.47697408 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.271290999 seconds)
  done (took 90.975979487 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.51079812 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.434640448 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.628616419 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.434783184 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.434459576 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.431478611 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.430908485 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.671908869 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.518441848 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.432790592 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.705245129 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.936471682 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.436165585 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.510784043 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.491428954 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.494532579 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.434741426 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.429548909 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.434729979 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.4428099 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.939046551 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.430783878 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.43373442 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.631236704 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.470030276 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.953548585 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.432114927 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.431163779 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.441481051 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.436744804 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.917465201 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.436050715 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.495901308 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.434075307 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.68484626 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.782142519 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.75797703 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.437779499 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.434077792 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.44456333 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.433833599 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945745128 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.784319811 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.435087185 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.434157791 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.945300752 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.435063773 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.436478258 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.439661644 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.6998671 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.432543965 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.433312784 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.432804832 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.433131346 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.432144474 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.511958742 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.509511767 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.953654958 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.434267617 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.433448513 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.513822033 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.432120433 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.437463678 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.438506905 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.433846265 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.786050254 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.339079821 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.428982058 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.777935618 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903848426 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.433011745 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984231911 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.431719504 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.448638309 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.588062614 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.432959058 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.431708091 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.954677292 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.45082934 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.430447951 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.75122744 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.432151666 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.706091537 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.439762097 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.43209834 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.947203077 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.433307709 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.494438254 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.431188951 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.435180511 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.43026742 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.440502472 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.693425704 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.484615664 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.432977961 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.429231364 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.463209769 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.435688269 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.435954225 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.435853155 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.99052117 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.446787332 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.433966076 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.432338237 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.437073367 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.434662502 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.438014471 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.433224603 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.71450775 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.431698936 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.442603793 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.432080577 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.4329331 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.446018109 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.629458638 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.432780898 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.69379925 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.437560986 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.435159703 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.441391149 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.432814969 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.444497213 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.433984345 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.440326098 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.43328159 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.758567211 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.433934533 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.43480646 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.432281735 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.434052844 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.434827316 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.433579571 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.493718225 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.436489958 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.145268923 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.486970259 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.487871335 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.432826213 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.438432187 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.432529211 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.445066594 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.432751407 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797348983 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.68658599 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.358906111 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.434239558 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.434296541 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.211453093 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.506534566 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.635291825 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.434965335 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.432085331 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.739182174 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.337079405 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.430828154 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.432112867 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.437717139 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.706182448 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.434997822 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802938073 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.935077702 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.435794461 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.442056922 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.203886411 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.434769626 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.430805644 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.435584949 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.703164535 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.434136658 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.431915734 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.433354544 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.430702387 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.432827159 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.438205383 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.445042478 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.43287751 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.432656205 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.978597795 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.640452572 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.431704738 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.436506327 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.955806034 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.444866804 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.443526207 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.442734067 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.434602822 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.430750798 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.488064526 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.433598893 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.509805347 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.433227961 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.434475262 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.981298561 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.434689996 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.437183677 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.641077342 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063920318 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.4337561 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.433813048 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.434816489 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.492552336 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.984520975 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.499607945 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.695901049 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.442059349 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.46584693 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.431041492 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.477740345 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.98786812 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.435028464 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.430779816 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.132309456 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.43061231 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.204859408 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.433087302 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.431060133 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.044469342 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.43218476 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.438987958 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.435912159 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.434033644 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.736660823 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.435787309 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.467236265 seconds)
  done (took 525.550220485 seconds)
done (took 692.485902179 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.430933626 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.431066687 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.432990301 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.431574597 seconds)
  done (took 11.157999996 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.436768907 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.43538955 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.438160033 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.441343407 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.435862423 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.437875211 seconds)
  done (took 10.054735146 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.43177101 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.433314023 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.432873822 seconds)
  done (took 8.72926082 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.609395979 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.433554002 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.749876975 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.438732069 seconds)
  done (took 9.660937394 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.437206974 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.435882507 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.438517494 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.43876524 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.437959654 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.436668018 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.438320375 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.435995801 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.438252026 seconds)
  done (took 14.367133433 seconds)
done (took 55.398967127 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.657455731 seconds)
    (2/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.444476676 seconds)
    (3/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.450426426 seconds)
    (4/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.438770482 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.434400474 seconds)
    (6/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.418304227 seconds)
    (7/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.436662401 seconds)
    (8/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.434729219 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.673601423 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.759328765 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.434248765 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.449048493 seconds)
    (13/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.874388556 seconds)
    (14/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.430567871 seconds)
    (15/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.434231885 seconds)
    (16/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.717767079 seconds)
    (17/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.990187658 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.775425964 seconds)
    (19/192) benchmarking ("perf_sum", Float32, true)...
    done (took 2.304308085 seconds)
    (20/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.71667003 seconds)
    (21/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.936571454 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.440395007 seconds)
    (23/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.989001819 seconds)
    (24/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.435006999 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.655165936 seconds)
    (26/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.919750059 seconds)
    (27/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.444901244 seconds)
    (28/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.437101121 seconds)
    (29/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.90873123 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.766616112 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.174305114 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.521984254 seconds)
    (33/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.545679496 seconds)
    (34/192) benchmarking ("perf_sum", Float32, false)...
    done (took 2.311135884 seconds)
    (35/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.724281276 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.64391372 seconds)
    (37/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.838567031 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.134239081 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.12782953 seconds)
    (40/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.653342668 seconds)
    (41/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.435629349 seconds)
    (42/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.451391681 seconds)
    (43/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.871506351 seconds)
    (44/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.439509071 seconds)
    (45/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.548589682 seconds)
    (46/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.933922294 seconds)
    (47/192) benchmarking ("perf_sum", Float64, true)...
    done (took 2.230008177 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.356116235 seconds)
    (49/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.446850092 seconds)
    (50/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.433029162 seconds)
    (51/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.432317384 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.44450874 seconds)
    (53/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.433562093 seconds)
    (54/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.96773976 seconds)
    (55/192) benchmarking ("perf_sum", Float64, false)...
    done (took 2.231183555 seconds)
    (56/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.437129053 seconds)
    (57/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.844856678 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.831644792 seconds)
    (59/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.554860177 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.435998698 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.441379982 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.185239168 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.796591611 seconds)
    (64/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.664564457 seconds)
    (65/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.941540301 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.435576732 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.531659591 seconds)
    (68/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.437898514 seconds)
    (69/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.460694062 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.395928949 seconds)
    (71/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.431244833 seconds)
    (72/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.437561362 seconds)
    (73/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.443697434 seconds)
    (74/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.811838169 seconds)
    (75/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.43576313 seconds)
    (76/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.451105603 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.228099868 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.520651955 seconds)
    (79/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.571860393 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.215107162 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.67571943 seconds)
    (82/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.433383548 seconds)
    (83/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.45327105 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.810527099 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.524947949 seconds)
    (86/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.446693316 seconds)
    (87/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.771380755 seconds)
    (88/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.163761366 seconds)
    (89/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.442993889 seconds)
    (90/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.431806593 seconds)
    (91/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.183593362 seconds)
    (92/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.434527942 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.801528694 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.448354993 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.431713505 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.441047287 seconds)
    (97/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.447900164 seconds)
    (98/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.433504144 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 2.273332114 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.684530699 seconds)
    (101/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.447598859 seconds)
    (102/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.433798028 seconds)
    (103/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.438684359 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.401752303 seconds)
    (105/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.439690534 seconds)
    (106/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.433220051 seconds)
    (107/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.836210295 seconds)
    (108/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.396061433 seconds)
    (109/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.434742021 seconds)
    (110/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.830919111 seconds)
    (111/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.63930502 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.439792592 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.447178643 seconds)
    (114/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.26217367 seconds)
    (115/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.159330057 seconds)
    (116/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.584813023 seconds)
    (117/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.715244664 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.43469268 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.939294357 seconds)
    (120/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.443341027 seconds)
    (121/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.435333294 seconds)
    (122/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.444804568 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.034389342 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.775043994 seconds)
    (125/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.889367236 seconds)
    (126/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.551891613 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.17357809 seconds)
    (128/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.44355629 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.44507842 seconds)
    (130/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.724112197 seconds)
    (131/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.434488651 seconds)
    (132/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.433226772 seconds)
    (133/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.435925844 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.57764425 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.52580936 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.756737113 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.187489507 seconds)
    (138/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.710667637 seconds)
    (139/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.914097111 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 2.308731349 seconds)
    (141/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.428671209 seconds)
    (142/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.446795647 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.437023886 seconds)
    (144/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.432794342 seconds)
    (145/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.906933271 seconds)
    (146/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.432210938 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.023512378 seconds)
    (148/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.99197428 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.74032343 seconds)
    (150/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.43734193 seconds)
    (151/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.430761557 seconds)
    (152/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.448946827 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.175793325 seconds)
    (154/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.431965806 seconds)
    (155/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.438473235 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.440518442 seconds)
    (157/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.433386807 seconds)
    (158/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.19134896 seconds)
    (159/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.019735664 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.443713599 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.662644479 seconds)
    (162/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.830310181 seconds)
    (163/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.162128725 seconds)
    (164/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.435297131 seconds)
    (165/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.434873759 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.449918906 seconds)
    (167/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.160713776 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.538258459 seconds)
    (169/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.437143441 seconds)
    (170/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.398511712 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.449724438 seconds)
    (172/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.892989671 seconds)
    (173/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.360827011 seconds)
    (174/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.435305199 seconds)
    (175/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.434703543 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.691871339 seconds)
    (177/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.447775346 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.434873074 seconds)
    (179/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.438787221 seconds)
    (180/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.431295165 seconds)
    (181/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.43689894 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.441286388 seconds)
    (183/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.86098765 seconds)
    (184/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.806075474 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.629977297 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.675085652 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.431895661 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.434503041 seconds)
    (189/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.434490057 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.92481475 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.806863511 seconds)
    (192/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.445495801 seconds)
  done (took 399.605219032 seconds)
done (took 401.036716804 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.458912752 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.058739611 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.440799646 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.441625296 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.44168328 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.434503708 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.455252466 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.438036227 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.446860847 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.442404769 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.432550649 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.441852159 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.456560042 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.442290042 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.460831239 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.440701247 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.440892705 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.442061201 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.445146888 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.450493534 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.442730589 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.441334758 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.457097626 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.442725996 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.452821354 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.450488918 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.448931821 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.444269 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.440325917 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.444341187 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.431511665 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.448497124 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.451703745 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.443182087 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441014844 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.444636323 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441218228 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.063555249 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.453909148 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.444472963 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.440953957 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.450543135 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.44685604 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.446306793 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.444064486 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.460588135 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.453726979 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.456230554 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.436325731 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.434626886 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.462853069 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.443861613 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.438560994 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.43918881 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.434573998 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.473378104 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.440424002 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.458768712 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.435395811 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.44160089 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.457306372 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.462264731 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.444720445 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.448248425 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.438779277 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.456616056 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.439298275 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.450366952 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.438401702 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441621491 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442268021 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.440920171 seconds)
done (took 114.773189322 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.433638606 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.438156948 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.566014873 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.438690659 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.578855934 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.438557217 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.437336584 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.446055559 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.438558198 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.434894461 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.570500603 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.439405439 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.569546288 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.578521144 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.569975517 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.44142747 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.438038489 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.443121033 seconds)
  done (took 31.127138661 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.515430798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.511225055 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.550819086 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.440955875 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.490430126 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.548943353 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.442508965 seconds)
  done (took 11.927488417 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.445527245 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.43707958 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.5020457 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.505990354 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.439061202 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.627246276 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.448484837 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.438553904 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.500899941 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.439060055 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.437305907 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.444056735 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.436921202 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.50284377 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.452299567 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.560373881 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.442143524 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.439097711 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.613870059 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.438198343 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.444976269 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.495269682 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.45167196 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.437472764 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.444540376 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.441037155 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.438295962 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.438512388 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.513558262 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.437396038 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.43751296 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.439686385 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.437486726 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.437968578 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.43679775 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.442046733 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.440937441 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.439027863 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.434482572 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.439293367 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.43487931 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.465080213 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.438891878 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.43882706 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.43533612 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.436812885 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.494080047 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.438049418 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.439989181 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.438950103 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.497354919 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.444682183 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.437687268 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.435287733 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.436948748 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.436160509 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.610996647 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.50017502 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.439183093 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.501968882 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.437006679 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.434339121 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.438061207 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.434440939 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.507303711 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.436413497 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.500353984 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.437194473 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.631103102 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.461737074 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43717549 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.443556978 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.440203434 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.43328144 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.445477871 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.434586566 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.442756294 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.445567136 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.435326605 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.438794565 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.630093819 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.438623375 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.460052288 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.448121151 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.437774912 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.498641036 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.437776856 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.439288906 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.521740309 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.558742145 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.501522895 seconds)
  done (took 138.601966926 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.454873653 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.438939098 seconds)
  done (took 4.321373645 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.440991618 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.436464981 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.434821679 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.438914785 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.437564484 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.435823748 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.438377315 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.437315555 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.436109617 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.437457247 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.435558314 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.440892703 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.435650955 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.439553182 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.437468379 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.437837848 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.437697027 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.439013599 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.438976923 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.441248792 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.046211233 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.440190611 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.439904992 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.438533105 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.436807185 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.439124237 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.468746278 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.438960196 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.440689095 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.446948991 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.439152126 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.438031112 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.442632508 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.443809106 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.438246784 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.440297831 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.440057819 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.438568195 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.435434221 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.439397847 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.43912176 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.438901319 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.439721251 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.440607142 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.44360266 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.436950061 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.439003557 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.467323023 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.442510712 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.440594682 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.440444801 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.436931144 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.435138126 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.438189714 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.441178404 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.443917378 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.440047329 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.437567165 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.438186515 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.437682819 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.435712355 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.436385834 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.43817011 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.437158488 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.449131542 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.438482063 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.438764502 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.439768413 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.435513552 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.43481255 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.436301576 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.435950858 seconds)
  done (took 105.697335607 seconds)
done (took 293.105431087 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.340909786 seconds)
  done (took 4.771014741 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.843111159 seconds)
  done (took 4.274268986 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.8298486 seconds)
  done (took 11.271304545 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.436877705 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.434897323 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.438519677 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.438930567 seconds)
  done (took 11.176713818 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.15935742 seconds)
  done (took 4.588338521 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.437396489 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.430181086 seconds)
  done (took 6.297329286 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.739118506 seconds)
  done (took 4.172125026 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.694590094 seconds)
  done (took 4.134999309 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.448590096 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.431658146 seconds)
  done (took 6.322452802 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.443248087 seconds)
  done (took 3.873571031 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.423318321 seconds)
  done (took 9.853329504 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.452610898 seconds)
  done (took 3.884965837 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.489097814 seconds)
  done (took 3.918906977 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.345332176 seconds)
  done (took 4.771797856 seconds)
done (took 84.741589029 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.430255488 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.431344543 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.434757695 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.433513919 seconds)
  done (took 11.153559941 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.502043067 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.496166629 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.510242209 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.489151634 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.493484489 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.492445733 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.460623182 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.463416636 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.496585527 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.491476561 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.499317572 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.487058866 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.507244584 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.461086066 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.49144178 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.510761994 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.492046548 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.497110809 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.46157015 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.491364108 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.438309882 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.494880916 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.488659403 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.436618706 seconds)
  done (took 37.080884521 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.835193495 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.512094918 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.619265071 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.489090065 seconds)
  done (took 7.884288371 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.533269233 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.543367794 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.543305465 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.583399779 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.619687806 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.542722942 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.46255067 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.460750083 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.444181316 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.538498828 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.616650035 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.437207346 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.71802281 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.435510925 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.729718313 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.437607249 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.438137948 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.531019904 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.579735153 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.60256299 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.43957762 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.524798993 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.535791581 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.43883115 seconds)
  done (took 38.165360504 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.446286902 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.453053537 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.439960637 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.436375444 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.438617093 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.438319152 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.453473905 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.44251772 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.443835972 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.436136772 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.442049394 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.437639957 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.453946315 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.438748506 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.439441077 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.446006585 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.441724031 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.447044706 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.436383471 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.43865918 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 1.451756352 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.445242559 seconds)
  done (took 33.175704519 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.433066643 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.434546941 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.784037294 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.702806645 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.43447377 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.432512421 seconds)
  done (took 14.649747888 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.493314807 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.519479043 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.436896995 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.732073356 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.793597534 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.442206742 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.440130492 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.551769134 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.790926312 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.881284984 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.476098051 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.482109503 seconds)
  done (took 20.471799996 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.429385116 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.430310705 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.437024536 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.445782874 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.485305048 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.444367497 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.449612598 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.432654968 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.484199913 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.490579864 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.442865404 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.485730302 seconds)
  done (took 22.887518831 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216509029 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327004417 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438280086 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620978985 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432385556 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.449978801 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.630057094 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.863248883 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.442092247 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708329272 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433115744 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111550496 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434829047 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435334585 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434273186 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.431817038 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438726502 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194976131 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433860519 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432733064 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.436553628 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433499601 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.443036458 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624451302 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.447333689 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432154093 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.747779182 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432521328 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705263531 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667738303 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668890018 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433375281 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710350326 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80479231 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593755819 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61942665 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435434407 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.435456891 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.441907283 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.437458255 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43687958 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436138492 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.667990443 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434965943 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.43235545 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43635208 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866655916 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.441825655 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.432679892 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.43192167 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671612829 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103880434 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.442423836 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434220107 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665449446 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432093602 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.436503491 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636839138 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432620384 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433251781 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43723815 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.433612068 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.437370377 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437748239 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07470811 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.443139444 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.43931776 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.438989842 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45260475 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434800243 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457957697 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444817115 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.452812454 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43350999 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141338339 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438302399 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448091503 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151660914 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441305314 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.433491147 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433273761 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434529233 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434721527 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.434691195 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435164248 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.243266624 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441645979 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.432480906 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452987792 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.863711464 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.624531707 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.355443042 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.436069524 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.444179528 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.438624764 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437258247 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.433366823 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440732773 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456044311 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.862639303 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453985838 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.440421481 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436215033 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.64738671 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438170835 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.434401807 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868208085 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443421205 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.458660399 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437532995 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62002797 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.970723483 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670666471 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440755467 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462247968 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435217224 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308177985 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442553158 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.43762848 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.433719086 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698540546 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.437641823 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4332306 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568137471 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443762126 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431967149 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434678574 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434794228 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43354623 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.68820147 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43823708 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.671442725 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.432591201 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435318116 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.440192017 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443899317 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.439306706 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.442082407 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432904122 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70911527 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433165386 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444670642 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433151851 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.435014665 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.436315339 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.440054331 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434474368 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43389226 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.436710526 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67258356 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462467332 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580773221 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458665944 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.435922618 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.446779228 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.439693513 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.43937956 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43681603 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.437557321 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450915077 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.442118285 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434724446 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971450012 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41666293 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.43629585 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434292787 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.449397593 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565406604 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.445403747 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619086039 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.441145151 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454334623 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.443082103 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.439247123 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44119072 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671308211 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.435084511 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612424851 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.863795526 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.976842273 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913251519 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.436702118 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.434021299 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.432489055 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435652856 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435493973 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.433927092 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624842878 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678006909 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.452801224 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980090685 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44083775 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.436377884 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.440460682 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670094203 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.44395852 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435639431 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.432764289 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437098284 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438615414 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.668692797 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717983104 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.447737915 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.433126494 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.951444914 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.441918631 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.436693348 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.432744087 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467507933 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.436275225 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948250816 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443502834 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45339133 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679197025 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434687769 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.455509348 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.43172723 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433610219 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438051504 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.443996925 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440413978 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.623417884 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437562191 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436968111 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442511844 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160519502 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928079787 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448474702 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.439761974 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.433378696 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.868305328 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445849837 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432410094 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645239306 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865215092 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437625633 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865902604 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.444776978 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.086219301 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674191289 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447813795 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440569087 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.435785168 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673749772 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.649065097 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468353909 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440257861 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444850666 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.445488605 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951856603 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437174095 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610860503 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864126425 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435891214 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.435873983 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.570529533 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.438575048 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773933527 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433761859 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431710153 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437426057 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435551053 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949333061 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438092555 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436341948 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05933491 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.445794112 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.864565068 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432866725 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.620824039 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.670863972 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.739562174 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.435904459 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.432057556 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.435058543 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675307382 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449479394 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.443051795 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933756953 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.282732661 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.43796473 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434589684 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306861857 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442431428 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697652761 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.436313225 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.433860142 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443345912 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435149352 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432573752 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.43255105 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.463403435 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404585659 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05731806 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.432763539 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457232999 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435371505 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443973972 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433047068 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.450346509 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966134343 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445040374 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438859497 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462208251 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.438521186 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445793891 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.44021907 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435793248 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449379383 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658290921 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.445583226 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.44514987 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.435751834 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.639058302 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646768082 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43670591 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433521526 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663813487 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.435773523 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.440755845 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180088496 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.445385335 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435624572 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435292125 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440718965 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452678529 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558101846 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617982803 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.671695852 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673131123 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774415858 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436499788 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438495512 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.256702526 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220135182 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436652421 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.441156884 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.435287648 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972805774 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149529442 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.983139853 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678036365 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43485231 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458876459 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434316559 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750168969 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432937107 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712453693 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442991195 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.439677009 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458297897 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443712453 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440574022 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648188298 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713646732 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435404299 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436496942 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437017909 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.435925641 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670141629 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.651041658 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191690028 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15219696 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433095438 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431738204 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.867081047 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711997148 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434134072 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438605475 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434607672 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.441903495 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.432987743 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.445403078 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44189229 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718959966 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668975656 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809466139 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.66713957 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.317484303 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.313349156 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438013565 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4391378 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4482294 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624722393 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960221714 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.082701625 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446121551 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559986997 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627538476 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.434961529 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750287986 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.434715571 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433298393 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433374272 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444891115 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.434876246 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.666950575 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984209846 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45503588 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.440605582 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.431572165 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.452151184 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.620479747 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.446265938 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.24590147 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43626898 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671155628 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43261516 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435458756 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97708526 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674107233 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437000147 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.440398154 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64773565 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.454575727 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469497738 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.310975668 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.436220625 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30623774 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.643609412 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.344112637 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435660292 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.088732687 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978765483 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.44425652 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064026639 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434689824 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435201475 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711696749 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.442051057 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43878449 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719057936 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.441835866 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437416544 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622523415 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.973943193 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094268371 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.446466415 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434283908 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.436819874 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435229947 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618032566 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443795524 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449414208 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.85568058 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433563845 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448016013 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063383804 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.437959795 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440965854 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.43311971 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431950876 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.440836551 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.446048043 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.439730442 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439439945 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63194577 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942236806 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458109126 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.062200402 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.77301137 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.445383244 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437818638 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.442637789 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.441990588 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437969923 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435689112 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4356848 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441126409 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305412976 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.436916362 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.667958794 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440427018 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.644041956 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644682829 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436135794 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622533451 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434190124 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452847133 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.437736576 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436392809 seconds)
  done (took 1050.428315847 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.468790723 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.486377007 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.474427384 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.54646885 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.490579229 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.598818511 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.536727876 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.461314067 seconds)
  done (took 21.497616353 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.440841571 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.454693499 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.443409187 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.445500052 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.443167777 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.697440475 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.44165018 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.450032461 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.451560435 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.441216619 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.445184742 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.842451919 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.450149055 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.446490258 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.449151062 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.449593348 seconds)
  done (took 33.239130309 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.326815568 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.605305274 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.962109078 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.457779632 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.455607423 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.438304193 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.740110615 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.43660291 seconds)
  done (took 24.853579624 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.452763909 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.451105022 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.45371067 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.45341909 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.454724079 seconds)
  done (took 8.698791772 seconds)
done (took 1325.617909398 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.439086322 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.442269145 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.444387229 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.441248999 seconds)
  done (took 7.195874998 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.433578838 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.434882598 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.438009967 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.861108944 seconds)
  done (took 10.597638016 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.780171952 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.918040619 seconds)
  done (took 5.128150071 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.833857916 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.491294846 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.631199697 seconds)
  done (took 6.385421359 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.844799093 seconds)
  done (took 3.278774412 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.91973684 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.878423809 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.600271298 seconds)
  done (took 6.830983472 seconds)
done (took 40.846549565 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.438243426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.215310452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.728241698 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.447545893 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.599102839 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.727546039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.687720372 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.444068666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.446448365 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.444730688 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.444672122 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.598127822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.665876815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.208799932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.66751586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.216765608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.594129388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.43492342 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.440442189 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.433724364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.683838577 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.435152049 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.43315456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.442649248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.594722368 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.579873974 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.43464088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.215190727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.441660411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.442922127 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.58100075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.434849653 seconds)
  done (took 85.032112374 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.43877029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.437217578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.435883078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.435837189 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.435076413 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.436063364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.436052015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.435040061 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.441370336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.436158259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.434927388 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.441785418 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.435457085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.436724216 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.439994016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.434396075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.435579073 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.437443015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.435577227 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.434288561 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.438261624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.436858824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.436565445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.436558678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.435709809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.43701065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.438998857 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.447993411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.440719579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.436993836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.440875258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.435647543 seconds)
  done (took 79.430968673 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.433462316 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.43701253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.438748278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.43734208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.436130346 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.436970238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.451660102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.436835921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.439404621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.439232406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.434621886 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.438703851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.43667434 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.437346422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.436177231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.437119292 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.435487968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.44373379 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.434520435 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.434915681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.436932778 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.433687115 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.434918688 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.437134023 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.438320092 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.43935611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.439675993 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.436022369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.4361073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.445786725 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.434958429 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.442648145 seconds)
  done (took 79.446690363 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.662756231 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.43969262 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.444568327 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.434318461 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.44553349 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.44166868 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.43468988 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.669265527 seconds)
  done (took 15.405254517 seconds)
done (took 260.745274205 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.444255947 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.961472811 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.463753837 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.434666819 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.466142538 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.466899199 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.608017273 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.46574488 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.598323924 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.434991377 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.463112763 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.436088988 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.226562417 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.553265225 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.330440492 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.436548049 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.301798954 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.436692139 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.027099138 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.619838455 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.460956713 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.440940519 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.327988979 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.307383031 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.435611221 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.4462893 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.450032326 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.556389615 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.531653741 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.447827311 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.957809948 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.436912101 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.44375644 seconds)
  done (took 65.84755731 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.439233117 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.441994335 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.442024467 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.440151264 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.439490738 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.439902716 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.443744771 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.440021051 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.441821687 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.436832695 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.441311524 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.443370308 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.439057512 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.442888015 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.443666052 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.440393357 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.440498326 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.446329439 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.440527772 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.441756335 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.438080108 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.447455633 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.43766863 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.442955121 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.441075472 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.44228418 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.43971261 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.441421246 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.438193043 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.4404805 seconds)
  done (took 44.66918305 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.439539719 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.179285954 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.435079023 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.446973788 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.808606448 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.783583496 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.341988421 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.669279469 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.446484514 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.523079224 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.436651406 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.445185391 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.440217512 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.166817003 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.481200224 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 2.112647246 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.521985741 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.840001698 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.598957574 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.438056645 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.582781807 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.567687355 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.446856166 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.446520976 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.476803138 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.449690893 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.88629472 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.447815367 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.449698224 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.449416987 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.445075032 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.771507606 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.438637147 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.434943699 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.884786059 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.442379897 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.084804964 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.44152891 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.686887891 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.448374494 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.443664971 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.447117421 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.435667553 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.448350328 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.876892706 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.446595904 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.47365881 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.776676063 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.444840554 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.439882524 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.443577599 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.875218658 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.445827198 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.440638554 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.44574855 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.876346854 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.448463597 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.338857368 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.775135138 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.447405495 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.44720098 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.439360612 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.438980019 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.507998147 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.432538502 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.44098343 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.435361035 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.447776497 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.451395374 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.871065393 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.437767461 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.435257331 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.637229505 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.443220521 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.439737592 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.44207024 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.446782432 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.452454799 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.441617703 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.443007062 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.538833852 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.567244669 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.780365565 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.786610998 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.447627126 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.573525211 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.446525261 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.770515907 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.444400856 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.442212013 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.443728911 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.442552758 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.299042263 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.435768903 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.444350311 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.440040957 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.591284315 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.882491882 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.448986576 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.447738723 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.597643293 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.440726202 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.437379269 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.773230288 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.443100815 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.433988407 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.43897167 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.571671641 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.439805927 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.450738387 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.444470153 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.444662411 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.651535898 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.777647618 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.446634991 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.443080437 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.812291526 seconds)
  done (took 208.296715324 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.445579673 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.438495888 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.435176404 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.441468742 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.437554486 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.4383706 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.437161597 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.436193645 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.433062121 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.436997644 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.43988638 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.435240043 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.435711648 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.43752061 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.436977259 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.436853612 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.43679406 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.442315207 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.437503187 seconds)
  done (took 45.750747419 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.439595681 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.867056706 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.443685397 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.438911798 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.485173982 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.441848072 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.434175427 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.581134333 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.442293269 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.440270593 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.443690055 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.434529857 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.443129522 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.892203074 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.442966367 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.891730028 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.44073605 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.439981942 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.444500518 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.891038923 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.434364146 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.770026688 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.489934485 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.892066245 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.443604713 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.441248843 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.43820982 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.892739333 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.443244736 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.898806915 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.443524643 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.44128943 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.488415962 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.492956289 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.435639643 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.769656392 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.461219911 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.558100232 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.442927228 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.443109513 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.894969568 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.444814888 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.443637041 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.446284031 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.867651583 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.869739392 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.444506334 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.441447152 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.891206732 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.866502689 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.870553545 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.578170776 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.443763237 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.440142458 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.774446824 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.44426271 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.892850298 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.447058478 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.443647502 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.439724236 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.440476322 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.448320823 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.579246266 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.892501655 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.772154316 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.445831564 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.439089105 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.437838338 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.442282265 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.485666082 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.442056491 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.434364847 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.439775671 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.486167544 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.769046948 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.436181305 seconds)
  done (took 128.109243394 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.536832649 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.892056434 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.436365171 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.442478018 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.555179084 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.544296507 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.647100115 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.50375979 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.499664528 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.537668722 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.568097675 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.889275962 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.449021452 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.517705289 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 2.034517804 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.677970099 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.275604843 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.438098001 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.580826086 seconds)
  done (took 36.460536163 seconds)
done (took 530.563949706 seconds)
SAVING RESULT...
DONE!
