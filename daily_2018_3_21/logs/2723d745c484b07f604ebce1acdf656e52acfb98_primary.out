cset: moving following pidspec: 32160
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.590712279 seconds)
loading group "string"... done (took 0.531105678 seconds)
loading group "linalg"... done (took 9.657698102 seconds)
loading group "parallel"... done (took 0.171769655 seconds)
loading group "find"... done (took 4.527874922 seconds)
loading group "tuple"... done (took 2.097918066 seconds)
loading group "dates"... done (took 1.40781993 seconds)
loading group "micro"... done (took 0.200083366 seconds)
loading group "io"... done (took 0.525568283 seconds)
loading group "scalar"... done (took 58.805403907 seconds)
loading group "sparse"... done (took 14.344149145 seconds)
loading group "broadcast"... done (took 1.782004062 seconds)
loading group "union"... done (took 11.38798918 seconds)
loading group "simd"... done (took 3.93906118 seconds)
loading group "random"... done (took 14.287819571 seconds)
loading group "problem"... done (took 2.277616425 seconds)
loading group "array"... done (took 24.353685704 seconds)
loading group "misc"... done (took 1.149732061 seconds)
loading group "sort"... done (took 3.84052518 seconds)
loading group "collection"... done (took 22.408851464 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.694450202 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147312733 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199120033 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.205997043 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.279180377 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167979504 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158713051 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170632641 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.673063446 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.216866191 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139019545 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414552591 seconds)
done (took 6.299070462 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.312931064 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240831737 seconds)
    (2/2) benchmarking "String"...
    done (took 0.186003388 seconds)
  done (took 1.14879827 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077439813 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158967961 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109825328 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09422886 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098958246 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110718587 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095245083 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111882149 seconds)
  done (took 1.503753743 seconds)
done (took 3.764654843 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.521597022 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.87817209 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.507716615 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.179886885 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.31540245 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.305832321 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.26551164 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221709185 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091152425 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085949491 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176049873 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.418111689 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.387151731 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.955621588 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.070796763 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095759795 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.155484844 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.779623607 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079037132 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109931509 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.537405359 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213676559 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114762243 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.10664153 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185512301 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135650365 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142127363 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101494465 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.661003702 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133328705 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.21675379 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083878188 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.141078196 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.1656273 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214432857 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110496385 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667204107 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.2009459 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096797218 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102952481 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678951167 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.125402628 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.211597978 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107954662 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068630757 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.163353008 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100655538 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093167143 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093787664 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085254737 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166615729 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.503122647 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105533269 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.191054877 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09297541 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.701906245 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097479554 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276904244 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127039719 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096528675 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093812999 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087915468 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16119489 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093097733 seconds)
  done (took 20.208278266 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.167523896 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.185800609 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077086595 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157134031 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120375508 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096941643 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084454226 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078562745 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12692595 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180886792 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137750737 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.172547581 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093864572 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089060208 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.169514207 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229102667 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124934646 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103333007 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087958665 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108159653 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122230968 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094838977 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109031117 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090550949 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171178193 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204350227 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107910178 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121840195 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089342286 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094274562 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14286456 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143429212 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091147805 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088438932 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169836743 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122968923 seconds)
  done (took 5.294729732 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.242883697 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103664651 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.25246972 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198177335 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152017362 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182580613 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175063885 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.294883277 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.116256964 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.229831071 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164574967 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128639387 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096326276 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096892969 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081372585 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07824422 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.318204976 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150784321 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.197644477 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189847002 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113958001 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082294985 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362993361 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102670537 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085587487 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112742338 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064924381 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222390071 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093198987 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.06892518 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084379179 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.125100225 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116203121 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216148681 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122986656 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120487155 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112813915 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085963269 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219713167 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117122021 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077747755 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.114194745 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131563812 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113010944 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109651842 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126017288 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221476607 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08727034 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110330461 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.060156611 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195696287 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.144797853 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.105606502 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.27438046 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127872632 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099267899 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110118798 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.807756185 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130859625 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083923445 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079481447 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.116535318 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080235584 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.802867511 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125016054 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.418159984 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084547221 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158453338 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098063168 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119255296 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.177834706 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085531919 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084736511 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.12723517 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085764112 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078415706 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.104957283 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07932406 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08844495 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.133298607 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082988966 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099906734 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081517228 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146606915 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11125772 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108549644 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123790972 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090605027 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085397057 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128548461 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083136068 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105907197 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.167030342 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117138378 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113169749 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115624514 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143552207 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08829279 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.27413822 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100717888 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083637823 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125393678 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102374341 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127145396 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099448203 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080673492 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101089882 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079620067 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081001997 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160350829 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089372605 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079574401 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104571561 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093218524 seconds)
  done (took 29.073217931 seconds)
done (took 55.292691657 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.428102168 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082349175 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081920307 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103587234 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082714733 seconds)
  done (took 1.576407923 seconds)
done (took 2.353317195 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310801243 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197983272 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087294057 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191296097 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085697014 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196448429 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182124764 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101097779 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206810071 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085154338 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194869134 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083761985 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106209091 seconds)
  done (took 2.827391711 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103713831 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106545666 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101484464 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120374268 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085305066 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103312157 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120168379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107812672 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100939281 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114777402 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085378523 seconds)
  done (took 1.925554514 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100008858 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104250917 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093908844 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118173384 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085817595 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097422708 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117165127 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106682387 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099178886 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11190635 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086765824 seconds)
  done (took 1.898966947 seconds)
done (took 7.422811491 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.214621555 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.940427741 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191332977 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.243198976 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.35450108 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.293860431 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611944776 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.20059329 seconds)
  done (took 15.956978266 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.122249422 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.188116775 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096949328 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090574161 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.116461909 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095492005 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094874611 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109393975 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097167573 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090750976 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092017422 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.11289532 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095025381 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09216304 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.109277876 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095708148 seconds)
  done (took 2.536484812 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143433494 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123936799 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117775479 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099069055 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095182877 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.119100713 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101848262 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11715009 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095405524 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095610418 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101949111 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115597176 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098157271 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093070694 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115474856 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121594808 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095784806 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116853661 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116792364 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116492015 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100696381 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096898463 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115993714 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098324086 seconds)
  done (took 3.473763828 seconds)
done (took 22.745707917 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146350038 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10360021 seconds)
  done (took 1.03118451 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162870358 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184449089 seconds)
  done (took 1.133649455 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112131821 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089621284 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13833594 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103797371 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091347562 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109110622 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11847577 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10945114 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091296605 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091112738 seconds)
  done (took 1.846972131 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096191959 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096096513 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123501131 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.168153596 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118299036 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094646091 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095424171 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114467719 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097140069 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091449386 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114767498 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110035759 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094444087 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12869823 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094909137 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095995978 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117623949 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094699062 seconds)
  done (took 2.738075984 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092585745 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093583019 seconds)
  done (took 0.979180253 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09469723 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090118916 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094164803 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111188742 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092130481 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090824654 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108587038 seconds)
  done (took 1.475072008 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.534933194 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.238135382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.37530916 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074462847 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125400674 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.452363556 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106739 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072276147 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09305154 seconds)
  done (took 2.89998136 seconds)
done (took 12.893029509 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09149559 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.244507227 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.640566372 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114123847 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090986859 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161872667 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.314409773 seconds)
done (took 2.458054783 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351925113 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.16788432 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085895007 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091926873 seconds)
  done (took 1.489920155 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082922657 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100719553 seconds)
  done (took 0.984631285 seconds)
done (took 3.277586489 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090996856 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090047342 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.141673413 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090278828 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090140663 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089844304 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.109828746 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089741591 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090607974 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090055452 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.11059314 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090783424 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088309602 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107377879 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090091865 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089326884 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090265256 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.108084601 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090602726 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088614301 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106855242 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091240018 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089054813 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08838256 seconds)
  done (took 3.138519018 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110435201 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093224745 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111235901 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094970381 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094803043 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111515352 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094683342 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091475079 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111052269 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092987358 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093260355 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093550678 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.110214563 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094244557 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091937409 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112726775 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093611342 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091851142 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109063559 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09608488 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092743015 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109656141 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094795873 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092800575 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112732587 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094227753 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090413669 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111796811 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094253375 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094291684 seconds)
  done (took 3.785969543 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096486151 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086682747 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089172635 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116061106 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086579441 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089676238 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104837387 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090078907 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091589735 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089882579 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110049827 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090249766 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089113697 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10854818 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091012082 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092188282 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098126348 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.10861584 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090384802 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090891964 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110998244 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090165604 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089935503 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089981984 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108950055 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087751466 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090581505 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108500711 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093245991 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089068292 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092236481 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.111317771 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092654016 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098641923 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111028992 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090912791 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095615134 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105578247 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092399785 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086847327 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086477471 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109455895 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090571201 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096051298 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109279854 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091348983 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089610113 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091327581 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.10891558 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092410036 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086402329 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.108594408 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094426539 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09230389 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092914609 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.10656314 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091219312 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086947119 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.110087876 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091014849 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087849488 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086618587 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.1144083 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091074152 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105434026 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.115711739 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090884739 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092124016 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.110485033 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096890123 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093352316 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.119301072 seconds)
  done (took 7.784662339 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113556861 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099966639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110476872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093540429 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090973478 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090564114 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114497642 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090759781 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092658022 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115712451 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092241212 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09099256 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109671919 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093645037 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091388757 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092676212 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116499208 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092243299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090420089 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111880473 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093014788 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095404017 seconds)
  done (took 2.993100683 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238632748 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098394044 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14203336 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123110643 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108654713 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123164021 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097015874 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097872835 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11356302 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101191911 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10002176 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114495245 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108938728 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100213007 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119091611 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102297002 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113731137 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102689941 seconds)
  done (took 2.918827162 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105506374 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093440338 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155304702 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093535703 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092987646 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112279414 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099001266 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112119721 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113728754 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094410559 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100302669 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11151509 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095044711 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093392805 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110453023 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09430763 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09339393 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092210174 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118615972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098912397 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097600158 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119492564 seconds)
  done (took 3.113257925 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106325609 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093929156 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129822838 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097796744 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093692446 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093670367 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.118130706 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094806433 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098449679 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112269599 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094091237 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0924306 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126479898 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093516327 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099827881 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112827482 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094616935 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093174173 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112996993 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093821868 seconds)
  done (took 2.868745916 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195502205 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129635189 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110330898 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116492951 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129184322 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109051102 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137446534 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110628295 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109183034 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137779328 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112046967 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109517331 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136147023 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115022352 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128823342 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117335347 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116777646 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137383 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109582754 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127565751 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121163271 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109716168 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136455266 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109002004 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108536521 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127601469 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109809093 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133399673 seconds)
  done (took 4.269095249 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092751113 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091239157 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090947807 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110957631 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09220804 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091028688 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091236379 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112082347 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093595226 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092100297 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110902767 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093969257 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092979951 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090990074 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.1105992 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093055816 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091809475 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109869553 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092771156 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092011525 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092620266 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110686823 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092493903 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092107537 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092395295 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.111660278 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092699098 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091684102 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110977416 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092803655 seconds)
  done (took 3.734358899 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106147181 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103490074 seconds)
  done (took 1.031665075 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100336007 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107113368 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092076748 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112061248 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099365004 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092737765 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119626278 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099574082 seconds)
  done (took 1.646249346 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.166716863 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191864492 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097832558 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123605776 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171127196 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.183623949 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131173621 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118437183 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092674632 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086175395 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185039067 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084146814 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112859399 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090742887 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092788033 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120259819 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093271216 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101658223 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119851809 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095316637 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097816708 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116756838 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095798149 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102690769 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106984971 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096526186 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096847848 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124396123 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091346496 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094391461 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110931847 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094679201 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096313639 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097123578 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.11398618 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.170692845 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122289106 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090434064 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093039111 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11940374 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127567716 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092750097 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.115881977 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092990676 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095787189 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.118129436 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099401642 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094195296 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104964858 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090427153 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094427013 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10745754 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094667425 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094561982 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113235044 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10078993 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095230811 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090062224 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.109670386 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090394252 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091719769 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108896208 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095479799 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096611767 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114920607 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095499835 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092257193 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.113211093 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096131036 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094089787 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112473218 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108978001 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094599288 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.118177239 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099602227 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095476069 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110694085 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100155865 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092016404 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113269179 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.0995684 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123483823 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11390171 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091259514 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.09016312 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100054795 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.115844142 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096987637 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086485781 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121370063 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096793923 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094594242 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106589855 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094116004 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090042663 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114898874 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087764187 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094283311 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092436828 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.119395966 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099186789 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092911132 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114841384 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099910199 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100576345 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112350954 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.159577187 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110963343 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091095802 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096607276 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118231636 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088916507 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09473615 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093376819 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111270095 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089381784 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097753951 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113474295 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095625323 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098179915 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116067588 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096298109 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096028083 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.112410643 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091774981 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098015025 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121057226 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097321348 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096317023 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094194984 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.11569985 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094730333 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097468736 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111948753 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099907172 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090708502 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.113881687 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096603439 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09814448 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11356594 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.092062764 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094067262 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113435117 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094391021 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098427983 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09512558 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.111047177 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08687772 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094547556 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110373595 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095903257 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102393659 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.110488481 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097171802 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089815678 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122065689 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092091996 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099817209 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120281004 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100789895 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100776582 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086075771 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111484577 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096672421 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094074048 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110333306 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095963669 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094900056 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119887601 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088638061 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096410592 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106047726 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092772692 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099637655 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094877557 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.117935662 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090753462 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133196578 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125331295 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099619706 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092960107 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113064785 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098614116 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091372956 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.11854014 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099967425 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098818107 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109969445 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09455236 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099705047 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10925192 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097880991 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092670267 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094284031 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.106952144 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095637589 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086116125 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.117674804 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097229493 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098391807 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.119717542 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097514592 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093289223 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121173248 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091500852 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.0984545 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086341718 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.119803989 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.107073208 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099920496 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121464447 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096224041 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091426679 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.115207871 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103554056 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095837327 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114329953 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097653219 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088324907 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.107490642 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100601067 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097512217 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090716518 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.114834788 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099265332 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09641007 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.111511843 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098533637 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099311735 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119668048 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09199439 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093823228 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109757017 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09370764 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101260208 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106836504 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091893624 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09575106 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.117921345 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095393018 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09522175 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096266358 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.119633833 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097837705 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096852849 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111348915 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103034099 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092562472 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.114064984 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092774734 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097263786 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087904626 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.116802493 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095476321 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090597478 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110561647 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098176363 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100502476 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.121772492 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093473237 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098275147 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.130826623 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101590458 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093251188 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.120164613 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092345338 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088803369 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091525617 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.108450087 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096852481 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.09046591 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.119307926 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093631276 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093231445 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117762257 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098545301 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092032175 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.120275674 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106471986 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088572922 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108385608 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093489738 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094701799 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.110166128 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092261059 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096466919 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115858282 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09968352 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096718832 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091630938 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.115566411 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101977407 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08980478 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.122711669 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100868057 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100624396 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110994031 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099842924 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091585942 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118278692 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089388388 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093969105 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113608813 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096014567 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091485997 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092296725 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.11337107 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088185483 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091260511 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.121138478 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094392802 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098351766 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.11423461 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093782299 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09074659 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110426814 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10257428 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093718628 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.119986129 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097627251 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08864548 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088485116 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120413411 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09594381 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100435419 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111292235 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099423945 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100101685 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117947859 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096127599 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102865384 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101896784 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122220883 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099754103 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088609127 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113521516 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100250557 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094402505 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119069002 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097330758 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08899306 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117299732 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101582225 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096065219 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113176951 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.0894244 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095727689 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099906474 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118748052 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.10025243 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096744894 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115403271 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091113386 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098210548 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120035005 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097466598 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101207964 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115472921 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101267467 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091120861 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099069412 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.118139004 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0901582 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088253738 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113474034 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101278612 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088788247 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.119104768 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100989574 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091310865 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092135717 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120388868 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092142848 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096725735 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121411316 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094011391 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104430818 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.115616855 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093612314 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099195124 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119166126 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090571273 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093650861 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09314575 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124751982 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093159732 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099197572 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117006319 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10097728 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096721797 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120809462 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10121155 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099079967 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.109040615 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102639211 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097864371 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096017922 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.114679238 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093770555 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088827066 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115206549 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102522854 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092144303 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123670715 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101265126 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093852602 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113820694 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102186102 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09360987 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122133088 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093686955 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096776574 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087919536 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.119110106 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095298075 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100955484 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112838512 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090238978 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099268113 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120958845 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100234694 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097160666 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.122791181 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089474371 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089118629 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096946595 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.114071297 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104492253 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097084396 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.115381377 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093618429 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097149619 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.119663984 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102684416 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089997395 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111914999 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097391634 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096294678 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113456636 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090967142 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098662675 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093284567 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119145174 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094508329 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089505422 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115274192 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102189912 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093943485 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.112301042 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093012832 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102349709 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115252379 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094014427 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088801983 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122183893 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097873391 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101979018 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111687008 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096369108 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092577574 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096971451 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.123746683 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094383833 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095329321 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114802576 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100738291 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099991882 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.11108897 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093120169 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104309405 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122290962 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097301843 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097081326 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.115123759 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104240447 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102764799 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117776985 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091586197 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089884189 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093412449 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.11127962 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098834535 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100162748 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115002045 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093611013 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098620681 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119986583 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099189826 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097622725 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090183464 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124722487 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093835261 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097192996 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.111747639 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090331434 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097329071 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12130527 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095819283 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096050074 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116559262 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09918706 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091234417 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092807659 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120806401 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099820844 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099931493 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116958497 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095028411 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100994456 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125663475 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098451572 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094481033 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123288242 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103614799 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096287425 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115112689 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100214065 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101109254 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097431134 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.124874723 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094734701 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095441503 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.124552567 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102856699 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103619691 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117096688 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090180214 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099834489 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114715792 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091038307 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100909934 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122897703 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103474211 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09585152 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.113913787 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106654636 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100773086 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116321027 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094157779 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09360132 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100268753 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116413258 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099180853 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092512508 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124550017 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103406461 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101266224 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.125890493 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0911226 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1008667 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119375245 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104670339 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097263092 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090319994 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.111700864 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099023787 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103212493 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.12381066 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101380724 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09890645 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.1223815 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098517571 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096583161 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092526551 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124160746 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101147304 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097008067 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119210543 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095043594 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096730011 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.118693828 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102640118 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102274915 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117781512 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106937835 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102046399 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115045086 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094620849 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097070924 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097965651 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.119192869 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102338344 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093545379 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.112356108 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102594366 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102908762 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116458832 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105683323 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103295202 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114839587 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100569887 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104112327 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101121292 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.121126163 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098667035 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098668796 seconds)
  done (took 62.54945562 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146822617 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103952255 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120057913 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098747654 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115381978 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121813942 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098936744 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09898151 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120029737 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108341116 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097562874 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118511978 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115040977 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11825027 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137166088 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10861815 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118697412 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100785192 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098166982 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099440875 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13505816 seconds)
  done (took 3.25738091 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115485237 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112349803 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130584975 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112595017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104802289 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132942857 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110116756 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12960441 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112238335 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105524314 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135398625 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109971403 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127899374 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107749472 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105612991 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128644697 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112658949 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105509806 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132488151 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109662497 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106246435 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.133020719 seconds)
  done (took 3.454657882 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129120945 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.1004824 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096530248 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120866427 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102899968 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097913571 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123949608 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099782426 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107496918 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093664953 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112083577 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094622744 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097759529 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120023445 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094000252 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098578401 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127729269 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103811249 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102230392 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09841603 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112479392 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099892867 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099739311 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110528772 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105873368 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104152878 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119639306 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104283424 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089740135 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100696436 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.121191405 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09409264 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091179882 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110358353 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091644725 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102278335 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100874905 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.121961432 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099659523 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090405193 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.12105104 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104495645 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090069309 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098694084 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.121733365 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094927276 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101521147 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.120109867 seconds)
  done (took 5.9238053 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128968304 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.413863099 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104274195 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1381723 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136400505 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108444069 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100688422 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137129547 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100417835 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.126118306 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114923694 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111541542 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126628527 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105901871 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103289688 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12635169 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104302044 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101044205 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128804426 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101436719 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106469695 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126436816 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112399904 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132959698 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106563853 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102360584 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123135323 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107095052 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111439013 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128821129 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106090981 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105731743 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.13432771 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104173058 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101923336 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.126404241 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115293704 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123869871 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104085574 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102064749 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102312791 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128548419 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104234238 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134859576 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105343 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103924665 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123012005 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.1016143 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.1122815 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123228437 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108697735 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112344289 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126508918 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103313748 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106112925 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134564999 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103557644 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10140416 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.126343626 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110928041 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100187539 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.127418571 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114330417 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103224006 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129624414 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112274193 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.125501964 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105970929 seconds)
  done (took 9.107866024 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13370336 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106361126 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136977341 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11616172 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105905739 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128695255 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107175534 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105901165 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129214672 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112130409 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127866139 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.226684878 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.128043684 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112598959 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105536544 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129861417 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106547629 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106181111 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129793081 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107468222 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128329077 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116813191 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106341231 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135503121 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118460058 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103119546 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128707672 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106698002 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134937437 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1077323 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116794516 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129799214 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107561889 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113510309 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.142063427 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107838104 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100828939 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129808273 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107444695 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128200195 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105938467 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114050686 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127800754 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105790161 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107291178 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12741731 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116995837 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116245811 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134218247 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112356916 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128903165 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116723686 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10706851 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128413029 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115603627 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143646011 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11578413 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115434888 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129531882 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11621706 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113955894 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.14462912 seconds)
  done (took 8.367226015 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101556109 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100684525 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099670631 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122256056 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100220029 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099917926 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099225689 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122182529 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101335195 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100426166 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121112952 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10363113 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101339163 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100103328 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.12265192 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100011687 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100070499 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121361342 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102298692 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100162548 seconds)
  done (took 3.013057269 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110783673 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117838371 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123966626 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109528654 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10195335 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129080149 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104103763 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102605893 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101869853 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125837656 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110577986 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110641681 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124701887 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107628298 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131181565 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109553091 seconds)
  done (took 2.717089641 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120265643 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117594226 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212879065 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103837117 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125667006 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109335521 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102328427 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127735748 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101802941 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107943323 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128089098 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106387111 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102467283 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102916314 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125384996 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105882282 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100276121 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129973153 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103764707 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.216226171 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107295482 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103751342 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127448893 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106998149 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103726925 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130825243 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109397551 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102255855 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127507451 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10505229 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104111843 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130136256 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103568148 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106625974 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102795302 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126028671 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102173174 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103876054 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.128591013 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103423943 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105652691 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126417031 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104411673 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105305282 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122979891 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10578904 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100374287 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107783246 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.128158709 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10473857 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102680906 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130428505 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108016398 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109979751 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131686299 seconds)
  done (took 7.278457144 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114471789 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105330385 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135615679 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102760122 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104312377 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10416289 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126764504 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105894065 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103631167 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123986668 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10673823 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105334629 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126373118 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105184456 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104631974 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125375821 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102881959 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104373216 seconds)
  done (took 2.906246713 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108470062 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103646487 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106377848 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126238892 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104267812 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102116925 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12464179 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103315577 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102181861 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102199877 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126365437 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103394938 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101743647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125352802 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103999753 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102552093 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124412385 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102976587 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103244562 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101098821 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125891262 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102493873 seconds)
  done (took 3.309411819 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115630399 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.214196229 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108934962 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223498807 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100640826 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097980092 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.134999325 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100544055 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139110827 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100800811 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099309111 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.12152578 seconds)
  done (took 2.460946647 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131050873 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140120653 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127693671 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104459357 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113591264 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131403408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109990326 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107211145 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139979306 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119311479 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129225963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117153767 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114552438 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13778669 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112881203 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134318654 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108963035 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108322299 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125636957 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123749669 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107843866 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138441521 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10856392 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107500768 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130217094 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116342315 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138578858 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122174593 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108377522 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137965312 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113014213 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10712023 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138698763 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117689588 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126807028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11656939 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108823222 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146260751 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112801799 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137720739 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105565015 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1134304 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137750713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115473864 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115717267 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130539875 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113994956 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128955991 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109205143 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127776648 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135449955 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117401966 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134045215 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116927651 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114587602 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150687623 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118965424 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138020027 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112309119 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140988068 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117136766 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113153524 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137720461 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119330055 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134483808 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117953477 seconds)
  done (took 9.000550078 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143055297 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104635859 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132429098 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121434161 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115687662 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13187989 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108253933 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13034192 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109957269 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104922333 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174556849 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108832188 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115322905 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137796711 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11038832 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129786803 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110689439 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115220427 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128944773 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130012521 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108271158 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139705304 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115275896 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1386214 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119984055 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133876721 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109185717 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107472027 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131111455 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10993264 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113919241 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13228054 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117526259 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10499638 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139804613 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109574322 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107420473 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13792313 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109285376 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135733817 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118057456 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123343709 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132503041 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108569045 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142819894 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11071277 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109135777 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130246647 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111306909 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105636003 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142208341 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120737178 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141185549 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117915317 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108535339 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131583114 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110108491 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108252693 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132788463 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114386197 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116610014 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132180803 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131198095 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131864114 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10986191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115936894 seconds)
  done (took 8.957843131 seconds)
done (took 170.391474846 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177406473 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216831003 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.198010584 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157255027 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095396512 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153951463 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128372049 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199738865 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095141908 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094834963 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09415799 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121585198 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162137705 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093758839 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119529795 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098041885 seconds)
  done (took 3.113192091 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183461916 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.335763673 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110517398 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122873553 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102020838 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099488463 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123365224 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10153921 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100037112 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131846084 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100854422 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095614781 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128823461 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097071175 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099832392 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121949455 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108671368 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099879145 seconds)
  done (took 3.182527776 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123669398 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155988404 seconds)
  done (took 1.198864781 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134551532 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212817589 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285092891 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170597279 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121235316 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140943886 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15152068 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133476344 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190199475 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136576423 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113495506 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098097413 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.15059749 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105940769 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116583335 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122756024 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128136661 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113877795 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.138573956 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10157002 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146438315 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104982537 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105620814 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136016796 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180386993 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135302669 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104980348 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10311248 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124349865 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114584637 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106670337 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138918255 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113002454 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181956544 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103011465 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175384299 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106640799 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123350773 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114460616 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.10011411 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127422421 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105135776 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113245299 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.121822153 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105046085 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106166322 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.127291666 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103319605 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129606113 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109611968 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107062568 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130549972 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152711404 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131428491 seconds)
  done (took 7.983973373 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.873036728 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141410907 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099168324 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.021694685 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146887609 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113257761 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.864530112 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148804574 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251384256 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.892661899 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116598601 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106888239 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261087208 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256629833 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.288380736 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35841957 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.728769306 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112670112 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130167363 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164317239 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109296612 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145174879 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121995165 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515286265 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101215537 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100022147 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132425072 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10966056 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177119337 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101125754 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104541506 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195753671 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29162687 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210933145 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100427558 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123293363 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100610061 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184728898 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269930229 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220164061 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171566735 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119959735 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10075915 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10741693 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.143088844 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097901064 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179538512 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187745992 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16658382 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127615806 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109645579 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11056758 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130594769 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.173529556 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099957521 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358092928 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360712551 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122362593 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110210264 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112457335 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264884987 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125408779 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236589679 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126208668 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214732339 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123330942 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825783756 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160331444 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123181507 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105888212 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108147253 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130981353 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10794811 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189409037 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.473458183 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13388234 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105404059 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099624091 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234214043 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123461896 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102126529 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178320081 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101706549 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108733244 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135348294 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110283915 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189094963 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268075578 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111016158 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108611419 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130393934 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115590711 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101195818 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232777439 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226708952 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175477779 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227565896 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109418215 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179749087 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184745892 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10689141 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187093572 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108472869 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112397816 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132199468 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223826368 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155601939 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103615971 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10582163 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131476161 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135331135 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104809852 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134030174 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184764123 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.529795477 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183615377 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096901111 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128436449 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109547824 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181137374 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108129445 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263537598 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133604848 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162913149 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131459052 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09857748 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108028453 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178754847 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130580625 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110893924 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107951259 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133458865 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256020623 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218539378 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132797316 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251903932 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174223215 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130142326 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191107652 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110985153 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186735696 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112147648 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108504915 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124658841 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817997267 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115609357 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131566431 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108203437 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183005485 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12524601 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103459167 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099935861 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121228243 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809386781 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108072344 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098431915 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102828745 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129892314 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10860233 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13205082 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10911997 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177903042 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243350977 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10937403 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131422102 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101343836 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178270385 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102649431 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101020258 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124635969 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10284487 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110867921 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128852776 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105805656 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189772397 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153148159 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.249540152 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.63574597 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102980226 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101754973 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238878324 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124844988 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328152924 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110755271 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234708282 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18306808 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097848985 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.38203807 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162359151 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207886434 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104463377 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191069908 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09944037 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133776183 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154519339 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124474016 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1088051 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176616992 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113720453 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133343678 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.277205766 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102885081 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249779156 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100010005 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189672353 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102991699 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105508209 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.350500259 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101887632 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115664009 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178880128 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105620697 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126410752 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.630704747 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102703156 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112794547 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129656093 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231915549 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183589751 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112340131 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111045476 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133877292 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178356081 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206151977 seconds)
  done (took 47.65110734 seconds)
done (took 64.046160066 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270041229 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178506282 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.378902733 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150634951 seconds)
  done (took 1.991072404 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.269371007 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.170289073 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.25365398 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099849245 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.260882546 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097659401 seconds)
  done (took 2.098564108 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.178083879 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171547384 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147245639 seconds)
  done (took 1.444942108 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201082489 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.217130433 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332590342 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.234002082 seconds)
  done (took 2.019488702 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.29294715 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117178228 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126578523 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.236581468 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.252293908 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207713174 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123520716 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17580756 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130121679 seconds)
  done (took 2.654159145 seconds)
done (took 11.156131538 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.39686621 seconds)
    (2/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.147380778 seconds)
    (3/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079589677 seconds)
    (4/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.225110112 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.164188767 seconds)
    (6/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.416742103 seconds)
    (7/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.223105516 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.222920063 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122956841 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.141318314 seconds)
    (11/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.131894799 seconds)
    (12/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117707507 seconds)
    (13/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.26359094 seconds)
    (14/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.132414388 seconds)
    (15/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.346378563 seconds)
    (16/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.419190949 seconds)
    (17/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.192780753 seconds)
    (18/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118191904 seconds)
    (19/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.244922806 seconds)
    (20/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.291128564 seconds)
    (21/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136536608 seconds)
    (22/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11052857 seconds)
    (23/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107514168 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.145080709 seconds)
    (25/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.15996684 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120921371 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.154498558 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121831724 seconds)
    (29/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.261503684 seconds)
    (30/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191724173 seconds)
    (31/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.174280189 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104148562 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.239151921 seconds)
    (34/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.248099586 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.203470587 seconds)
    (36/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.222076021 seconds)
    (37/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110107795 seconds)
    (38/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.227795917 seconds)
    (39/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.232664438 seconds)
    (40/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.134202224 seconds)
    (41/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.138601404 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.151266825 seconds)
    (43/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.182686569 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121247831 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.303657846 seconds)
    (46/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083760427 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110706458 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.111729435 seconds)
    (49/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.286297036 seconds)
    (50/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.174173046 seconds)
    (51/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.176919713 seconds)
    (52/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.202343375 seconds)
    (53/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11283346 seconds)
    (54/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110461185 seconds)
    (55/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085362069 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.283091202 seconds)
    (57/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.14709093 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.179290698 seconds)
    (59/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16518892 seconds)
    (60/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.085742083 seconds)
    (61/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.217234024 seconds)
    (62/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087746182 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103984194 seconds)
    (64/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.172866186 seconds)
    (65/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.243257771 seconds)
    (66/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083545985 seconds)
    (67/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.174169848 seconds)
    (68/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.175839138 seconds)
    (69/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085769852 seconds)
    (70/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.280466099 seconds)
    (71/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.097807932 seconds)
    (72/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081825677 seconds)
    (73/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.216702188 seconds)
    (74/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.224000107 seconds)
    (75/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086595803 seconds)
    (76/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.144364067 seconds)
    (77/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.086498483 seconds)
    (78/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.150111347 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108713021 seconds)
    (80/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110800018 seconds)
    (81/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.079479099 seconds)
    (82/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159657338 seconds)
    (83/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.209640879 seconds)
    (84/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.106272467 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.203521795 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111354801 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.149278374 seconds)
    (88/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.137559509 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108016455 seconds)
    (90/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.107631839 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125570311 seconds)
    (92/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104890042 seconds)
    (93/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081071836 seconds)
    (94/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.107232625 seconds)
    (95/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.174932434 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10335068 seconds)
    (97/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.193253214 seconds)
    (98/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.088266833 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102228584 seconds)
    (100/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.135355261 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112898186 seconds)
    (102/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.08552491 seconds)
    (103/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.146172191 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.088968016 seconds)
    (105/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126759848 seconds)
    (106/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.103286863 seconds)
    (107/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079191907 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.153556959 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105477375 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.105068285 seconds)
    (111/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.088701974 seconds)
    (112/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.161330262 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105975019 seconds)
    (114/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087358355 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.126094549 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.19617083 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108460663 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.130434609 seconds)
    (119/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083739871 seconds)
    (120/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.141925164 seconds)
    (121/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080649896 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.227133504 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110400972 seconds)
    (124/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108236246 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130557955 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105160384 seconds)
    (127/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082683067 seconds)
    (128/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.171942272 seconds)
    (129/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.087765248 seconds)
    (130/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.087122988 seconds)
    (131/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.080285456 seconds)
    (132/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.085797686 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.111823934 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08231053 seconds)
    (135/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080611041 seconds)
    (136/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087255905 seconds)
    (137/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082043361 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.158015716 seconds)
    (139/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087883435 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124843605 seconds)
    (141/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.144162809 seconds)
    (142/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103626392 seconds)
    (143/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111138216 seconds)
    (144/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.081589062 seconds)
    (145/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.105282667 seconds)
    (146/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.084097114 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112627164 seconds)
    (148/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.135736618 seconds)
    (149/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.105278565 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11656691 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105615171 seconds)
    (152/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.126859341 seconds)
    (153/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08844615 seconds)
    (154/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.081101774 seconds)
    (155/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114697525 seconds)
    (156/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.138129332 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.133585088 seconds)
    (158/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082332376 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104206438 seconds)
    (160/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.105913111 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103578984 seconds)
    (162/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.087581634 seconds)
    (163/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11454176 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.138176032 seconds)
    (165/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081097645 seconds)
    (166/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082981476 seconds)
    (167/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085822105 seconds)
    (168/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.10710485 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.1273345 seconds)
    (170/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081587096 seconds)
    (171/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.08107093 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128143468 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106376327 seconds)
    (174/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083615991 seconds)
    (175/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080965657 seconds)
    (176/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083191094 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.111579045 seconds)
    (178/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087959015 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105891575 seconds)
    (180/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111140282 seconds)
    (181/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.107173672 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125926879 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105703866 seconds)
    (184/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08075941 seconds)
    (185/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.131103888 seconds)
    (186/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111180921 seconds)
    (187/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.087814774 seconds)
    (188/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.10879997 seconds)
    (189/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104635815 seconds)
    (190/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105640307 seconds)
    (191/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111333624 seconds)
    (192/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.107106514 seconds)
  done (took 27.656718115 seconds)
done (took 28.610069183 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.228543824 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133115011 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113775362 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112294156 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235402226 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119416585 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155163829 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114505881 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121810071 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13904635 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103644114 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124994778 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137491631 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.204996998 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.140939258 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104909219 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103825388 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.149119348 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129845763 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129353239 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.236334457 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106234943 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148927799 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105110573 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236099796 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10894431 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111608713 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.139883845 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1263714 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112506552 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139063665 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104334674 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127888866 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.152948329 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104467211 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112814697 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10246505 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.112295062 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113879564 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11342492 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150420769 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114923548 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112487016 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.128853565 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115653101 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112716542 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103069039 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.142075399 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102210817 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112996787 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130899982 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130576827 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110864566 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.127865557 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102853414 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103804271 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.147707192 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105424564 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126126159 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.128590994 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105681109 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103632533 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113166304 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129205066 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11274167 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103222493 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138655674 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115152292 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111979436 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129812342 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10550026 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111458101 seconds)
done (took 10.193444136 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112889038 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14808851 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.235716932 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.23680608 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133037765 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146729544 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11781059 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12713628 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.1434722 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123393167 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140424303 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160775133 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.2394849 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120123468 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120061819 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142364651 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115582896 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111873046 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.238299396 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.130955575 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156328681 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120252509 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156395218 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121282454 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107613563 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.157487186 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112137329 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115363304 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.131577274 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128388048 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.12750707 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132507499 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111381325 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127432201 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.151013241 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119003384 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11958903 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.142327609 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109766155 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107893544 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140283106 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123250675 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107305385 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.145086377 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117414519 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122105763 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140898891 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121213657 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109309211 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.141162329 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110424699 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132790215 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.145665863 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125212198 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119871994 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.145202883 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120045354 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120221586 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136848182 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121859028 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107866312 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133371038 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110535469 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130743516 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.138453873 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12151398 seconds)
  done (took 9.877468011 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.131892487 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136634242 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142631285 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119176913 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112368171 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126814778 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101627915 seconds)
  done (took 1.878487378 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108448254 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.245002941 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217150655 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245448765 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.24351924 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.255998157 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127165054 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102902602 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166905053 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114263596 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247924578 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.275838151 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114124499 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.11863742 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.248416811 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.129521856 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.22253396 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.13033762 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118535972 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.250604787 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120764996 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161874635 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117567763 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104470649 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.241042072 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.106071077 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.295315223 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14828232 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11417831 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118348133 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118274638 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.211211512 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.242470528 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119387817 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139154133 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218183133 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.243471858 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117400991 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.25793333 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.134811352 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.215972545 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.147145213 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118708469 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118613976 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.147825431 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.206762558 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.151202033 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120191418 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117381616 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.252919099 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140899316 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217642691 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141873338 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119009034 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114949978 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146453438 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126309703 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120146057 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.252524042 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120836695 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.24689843 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.247285119 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.246530068 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.247434998 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129806795 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.247701242 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205552589 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.146521045 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113976736 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120752034 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.249391879 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117321432 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.144764538 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.237421207 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12240985 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.25118846 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.222382518 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144674682 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116719215 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107084395 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.145140826 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105543072 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.241342658 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118480036 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116944028 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150904083 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117297759 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119006049 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.137105484 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127090365 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.143274073 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117063297 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123657189 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.144845401 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121250749 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.253947694 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114837663 seconds)
  done (took 17.183640249 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.113234863 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105786405 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111026845 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132462372 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106387637 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108135222 seconds)
  done (took 1.710679003 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.148229116 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119552831 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153174434 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120680836 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167175 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.252968531 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260539635 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113155908 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166248434 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130793733 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.256065498 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257231778 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.229003753 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.151438707 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259656278 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122952044 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.262441032 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117641517 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128221269 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145603617 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120439791 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122116164 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144737834 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.244494971 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121348204 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120224727 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.139747633 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128654051 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126825811 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.161278827 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124166124 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119934329 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.136939679 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114778394 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.260931255 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111431741 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114778055 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.150085593 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121158904 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146800371 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.231769119 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144114854 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127351735 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121505692 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.142285149 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111639278 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121125009 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139749718 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262009565 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123588341 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121306264 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.147498696 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120854719 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121465497 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139497446 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114404362 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122370941 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.260678934 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122755371 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.140875478 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119856378 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120207151 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142197093 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124943228 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.147388728 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123662064 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111112685 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146576644 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118070255 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119934546 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147499792 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121652004 seconds)
  done (took 11.907695936 seconds)
done (took 43.557125672 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.711250647 seconds)
  done (took 2.739599736 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.949430837 seconds)
  done (took 1.981125943 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.45486427 seconds)
  done (took 19.519918984 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.441135125 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.495171082 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.136696881 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152107362 seconds)
  done (took 3.253503196 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.83761782 seconds)
  done (took 1.888116069 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.302590235 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267456455 seconds)
  done (took 1.60885978 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.73721407 seconds)
  done (took 1.786123173 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.539743924 seconds)
  done (took 2.57652852 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.289744821 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242665534 seconds)
  done (took 1.584880358 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.653533671 seconds)
  done (took 1.703515073 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.349331937 seconds)
  done (took 21.403616675 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265152765 seconds)
  done (took 1.317334624 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289812581 seconds)
  done (took 1.346208831 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.669281652 seconds)
  done (took 4.727512991 seconds)
done (took 68.478704962 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.120421938 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119239021 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118912535 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143528457 seconds)
  done (took 1.546582042 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128878417 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120190223 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.148571759 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12081851 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126291504 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119332608 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.147424543 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122432167 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119308354 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148398482 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121463098 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119014985 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149918617 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.11983485 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116029673 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148986779 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123567549 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120327108 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147688629 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.12118961 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119897466 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146912491 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123830581 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122212117 seconds)
  done (took 4.158012301 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119971153 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109796791 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111628574 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135766713 seconds)
  done (took 1.534264039 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.13067444 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131139644 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155959519 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126948696 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132421746 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156773483 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118741735 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116858873 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145011874 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127987786 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135647648 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159878072 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132836985 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121672548 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157702104 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115172467 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120603848 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158556581 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127764106 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129054734 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.147663552 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125858614 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124476075 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.156324731 seconds)
  done (took 4.312241837 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.199384165 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.134148044 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.178621564 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166707104 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181639455 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117828034 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146803096 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.152731984 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127733567 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.121071434 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.151087504 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165901252 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.15266705 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123494826 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119968329 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152767683 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132491585 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126296316 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.195615345 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12464869 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153444231 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.133206208 seconds)
  done (took 4.317024427 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126924995 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111255858 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106751197 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.137058098 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123125952 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.112642866 seconds)
  done (took 1.778838185 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113964424 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105354932 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104579932 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.13150211 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10882677 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104481877 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.103963709 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.13263116 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105116321 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103887089 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131289796 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103961065 seconds)
  done (took 2.414960467 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208023441 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14804597 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258056499 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.491029523 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163625553 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190607873 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.308682388 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164992978 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206908717 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137648492 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216448295 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162676168 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18412757 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188150821 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170634319 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160916325 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194589054 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238586084 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143358029 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244925925 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15724132 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206440761 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219247216 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150648656 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169910895 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163816494 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120886028 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15709697 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170292123 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19458793 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205015339 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15114839 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170762516 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194912429 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266194081 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210564598 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275154845 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134819919 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201922818 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.218333136 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233645271 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168956785 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221068501 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154681926 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157186078 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186607866 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183134916 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183269301 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.162638529 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145451441 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216172988 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179741636 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201078804 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16423585 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299764754 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161488618 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143061444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24772465 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217972443 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20301607 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207607448 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124164861 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203666936 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219881902 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245398559 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143905269 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.194171575 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126070659 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19463936 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206766912 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214699634 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158689571 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.26918584 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133854969 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172550197 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19920761 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183608827 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208292916 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200308441 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119660729 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181845337 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134323395 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126869589 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.217514683 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121620637 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246833793 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132345268 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.345280046 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207604315 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154650335 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192188574 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189133942 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163393567 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177086523 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103502453 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143438485 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.190958744 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161226703 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155830589 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155673264 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139939247 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.154892126 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153444986 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.15191992 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169714691 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163233867 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163793527 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201558694 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131946586 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208547677 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149149198 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190945295 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169951936 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223997877 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131007213 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161662102 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249281415 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171810334 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.164136171 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177081948 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225580921 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.153197958 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164720842 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164084507 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221390354 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142787151 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229327635 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166366642 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136141796 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140876926 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20161073 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189064344 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16079498 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127364425 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193616791 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221246518 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127502798 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138487006 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209930657 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161375484 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125708488 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136674707 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165116592 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143604491 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.175831146 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140802445 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154133012 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195568959 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164704842 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186600465 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134763935 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20237788 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15980737 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170350728 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148754117 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.148713291 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.176457354 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227213721 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129507175 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209869524 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.19151085 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183723083 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201727711 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128787986 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212870327 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127826498 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.149506902 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16370692 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197868084 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164041114 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217610421 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208833258 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166643116 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192372666 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17778063 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171822892 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.212622667 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15739169 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172136504 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176792557 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199524759 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121035113 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.151827643 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12963447 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13685934 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159676114 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137451859 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212365017 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165944525 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206894849 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195592746 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138340531 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220078253 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125678259 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190229263 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175331577 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167128593 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189031241 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220168151 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204793024 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142047743 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192034557 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121556038 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126550864 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.162295649 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163025354 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165011167 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137476607 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14126652 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219837261 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20170834 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14969994 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221714757 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19358573 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200702349 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150404819 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.163192272 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198728185 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16912784 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.188589541 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159164052 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.16191839 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221328073 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17029394 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192790596 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197072565 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180337221 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225535969 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194427676 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131464872 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146964538 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190103347 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139015848 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194460458 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145614114 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160715166 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154073483 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167020073 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141953974 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217842924 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144477921 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208944547 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157540398 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201325725 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12454279 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171610766 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200657935 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147259713 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106333063 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201175188 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223388226 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149800202 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184441208 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174105368 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129772452 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.347756809 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217689719 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177449231 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166782758 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138470134 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202146994 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16109549 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194146623 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185230597 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171301437 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236586281 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173061842 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.171324631 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132057901 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148319776 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18088378 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141416073 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.181612864 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.16194111 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.173979483 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21744795 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137966072 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168814685 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205255195 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14457456 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.179339818 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139991204 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256304689 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197972198 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173323339 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.195110013 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165202986 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213844881 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124512773 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155452028 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134520264 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215153471 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131399208 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17763045 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19673705 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213253331 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204433521 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163389424 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170568132 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12784019 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166680882 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178943826 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215014742 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136006242 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.166931658 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191007701 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.158028335 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131265986 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159937698 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319732934 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178247319 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174184475 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106932332 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.314788632 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157794557 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134833011 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162224532 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20224818 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132687729 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.211674003 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175491334 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169609166 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162733312 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165355286 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179558521 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213265564 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197511158 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176742001 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.176852486 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161177951 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192263157 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203507311 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14747991 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14730186 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190141037 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221564708 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178095529 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132059796 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19957933 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198401536 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172187928 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206160078 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138854883 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21445115 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129534983 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194616465 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139795187 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123878949 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191302933 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195209554 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13114554 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206016341 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170607588 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159894049 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128980999 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146882909 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197001765 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140103301 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.15924813 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187964125 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.160511354 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1822206 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24421522 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128921627 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197598168 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147089403 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161373728 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139061241 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173184288 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131820933 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176816 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210684926 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131883784 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208239374 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16522318 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193747953 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188296981 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144917299 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.263963256 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.158018497 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190313833 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181045776 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228025379 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151004759 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205306151 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169485556 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181079694 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165496343 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179122205 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220195856 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196040427 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165138493 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1606452 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143294255 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137603997 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.164976381 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153048575 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199482893 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143033275 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.166756394 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166196935 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175519678 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148970302 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141825357 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229212406 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182372952 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188986666 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21757261 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138051482 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205415335 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208308611 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129463149 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.195858429 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173357905 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174927106 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152830775 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133730845 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.168558665 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243814029 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126821306 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159948 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203956454 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167689973 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202551003 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134555598 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207892199 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14141184 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206302045 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127102276 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.183672405 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169081782 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16540622 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129386867 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200227348 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162954359 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194129088 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141929749 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178702842 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222739678 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12489385 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16428702 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288189666 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18999575 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226648988 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13838798 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139255599 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178085217 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159227492 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.196445791 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170729807 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.160091644 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129290123 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.174844017 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160792761 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.16951413 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17014842 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212172764 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162629568 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216487681 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134245192 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283205945 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143232692 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201188075 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120207721 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129698155 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172406507 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135532637 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142304839 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211130285 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244123306 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190802089 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.148560307 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135828422 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.156613966 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13180834 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191761275 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.669262487 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202629413 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149725351 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105067804 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170741914 seconds)
  done (took 86.816633581 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173590301 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.168628931 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.188317589 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.242820104 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211446369 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.311068607 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.244974638 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26725425 seconds)
  done (took 2.953502334 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122280515 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159681991 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142095802 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145173687 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109995263 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.487741959 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160338774 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123410003 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161891291 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157174967 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137443149 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.579243377 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.122211599 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148240271 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123470808 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136585894 seconds)
  done (took 4.156581924 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.898921178 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.553256045 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.276038293 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.284560032 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.267007979 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.207878704 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.80353838 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.205147676 seconds)
  done (took 12.645734225 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.173494914 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.166630735 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.455047176 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.31174499 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185081778 seconds)
  done (took 2.44683155 seconds)
done (took 130.129954215 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.132378412 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12516388 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12656591 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157448162 seconds)
  done (took 1.687814376 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.200777755 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093081574 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095284881 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122866707 seconds)
  done (took 1.668516545 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467258806 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093235663 seconds)
  done (took 1.746866888 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.158674296 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138818132 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169077338 seconds)
  done (took 1.635404526 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137024737 seconds)
  done (took 1.291304721 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.13141489 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.1334093 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.273466926 seconds)
  done (took 1.69799194 seconds)
done (took 10.895438047 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121329114 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.934104758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435978745 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134986683 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713647365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430173859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.427288171 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179162026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177170906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140473571 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133981081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692350164 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.439430885 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.883584935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.395104359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.908571734 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698095924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113948305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149632091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113793563 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.405094457 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139006145 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11426386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113301386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720671415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423434286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111537741 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.921373923 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111929789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115648369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.429369768 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113303017 seconds)
  done (took 21.09146997 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116426194 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171526501 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148736908 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113956149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115151484 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142233238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124832591 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12408986 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206642674 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112257748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162686449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112774693 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117560648 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140258088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138422833 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111451984 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115619886 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14500603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121029089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113926976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164188115 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111208756 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114320075 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143149326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112757789 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133873279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141893977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125144449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111351289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146205514 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11785535 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112956345 seconds)
  done (took 5.356439578 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162714014 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179965119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151128806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15151366 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192370999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115917844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.228290432 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152259997 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209665116 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11406656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134368975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141072291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155012915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113413684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167487541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112488584 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115521638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144220231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122168562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114078086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163506163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112262157 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113999744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143296709 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113893705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135600369 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143143653 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126203439 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111539186 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146557015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118533572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113356425 seconds)
  done (took 5.68846333 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127978711 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12699921 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134566201 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164985756 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121930238 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126752259 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158362632 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122418595 seconds)
  done (took 2.254345288 seconds)
done (took 35.555738126 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138441219 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132672661 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133757286 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15883559 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.264524409 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120588765 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130051266 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11816977 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.160595953 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133586911 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111554327 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152494189 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132696978 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123075428 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.26031041 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128322109 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.264957969 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.261205653 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120651959 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126614713 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.154589768 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232725538 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157701318 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120790946 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.255014256 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115650346 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.253118856 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123700356 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122772895 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.145514514 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.231550755 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.158156349 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121692605 seconds)
  done (took 6.519952282 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.2419879 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155677308 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122499656 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122521006 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121869521 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152294611 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248784047 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153924909 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120537607 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12012463 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.152792805 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228340499 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.161199639 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117338957 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123184526 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111498992 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.280911625 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122773813 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.146826009 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095840549 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117125725 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.121404686 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.292571902 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.148400153 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123237612 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121098939 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123915761 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.159986609 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124008232 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123400835 seconds)
  done (took 5.737130217 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129931467 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135370659 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.140033376 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.222157243 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150851167 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165337071 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142209693 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135358707 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174649621 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116528314 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.13068051 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182945018 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131368351 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124332617 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145838139 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135588513 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137611649 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146660619 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124629893 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13276293 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165513347 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132670651 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138716151 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153904406 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11417945 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12230313 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154605523 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127426324 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122957046 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129153624 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.148375177 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.1193409 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116460087 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.18233172 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116865276 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158993605 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142995085 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128022748 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127522207 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.179102819 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118957498 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115879416 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.175045724 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170098421 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.145747783 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131600313 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127319831 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129572861 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.144807902 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134850826 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157231796 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.151282273 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.137369359 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112952765 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.143630975 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124707135 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114758596 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.148508687 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131876899 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117484944 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.170383887 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122697904 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125941966 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.146439722 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128120533 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114076377 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113909927 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.150383673 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141654246 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121862697 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182902126 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115419245 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125329949 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.159431537 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126596054 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126297739 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.143991363 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127521858 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126285152 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.150312602 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.1286614 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118117173 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117184373 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.164001063 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136831752 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127984485 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.15722239 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129182426 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118251817 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147635112 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133331061 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115710234 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.151109802 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.130295705 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114977303 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14938776 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130427421 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126112202 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112024102 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.173712841 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119804002 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114754306 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.171758616 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119018338 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119417874 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155928824 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.15718343 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116467903 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157564777 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128761213 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114905349 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.153128777 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119836987 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114668245 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163685571 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132014187 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123332769 seconds)
  done (took 17.290975652 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.359923778 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.347749594 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188641844 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.433417047 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128052452 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.276699088 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.345689179 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.347694576 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114507026 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180970375 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178781281 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.315068451 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11511806 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.17656272 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.348731657 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.405956785 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17893863 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150974395 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182727349 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129308205 seconds)
  done (took 6.099505519 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135367564 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149802945 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169683519 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143915014 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126230017 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164099832 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116712079 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136680188 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158030434 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125512776 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11754037 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161076617 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128271754 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132466009 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160569547 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149464975 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121743126 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151487928 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138717235 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119625402 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13503921 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141995673 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124689183 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168927782 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134162412 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126083404 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144556263 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12185149 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121356244 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154726275 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12213738 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133091994 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151984608 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108201403 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126889361 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129889177 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.1533255 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118338422 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120429646 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149409891 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131135347 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128020645 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12441928 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132122413 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134782962 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112028169 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129334238 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158056376 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108318939 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134143822 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.158733134 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131049466 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122643106 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168556548 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123292051 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131793453 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.157720813 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131040875 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11931784 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.144314817 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114668644 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119223579 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123861747 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.160115156 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127946895 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135427637 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.162363299 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116175171 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119202342 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.14931615 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120181537 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128912242 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.168480905 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124757168 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121829384 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158691484 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12490714 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096889509 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124199273 seconds)
  done (took 11.877202965 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144427669 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126507824 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132794193 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181658178 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131409014 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121451619 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.157877325 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13628169 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130323872 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165613495 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130319797 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128654927 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168451972 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127270478 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124745791 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163310543 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129233601 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152618245 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16571846 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143594944 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130495995 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152665071 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128224667 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12741793 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175686484 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126722486 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141934142 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.160733913 seconds)
  done (took 5.219954218 seconds)
done (took 53.918186054 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.349227664 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.539848808 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.310147286 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.305419404 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.327933906 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.35716434 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.308685436 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.305061039 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.910563591 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.27764015 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.305785243 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.305593137 seconds)
done (took 29.804897992 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.300360559 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.32473171 seconds)
    (2/2) benchmarking "String"...
    done (took 1.598242386 seconds)
  done (took 5.126749625 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.312226089 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.297154832 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.544707293 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.29373957 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.295333458 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.296667863 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.3017322 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.316492393 seconds)
  done (took 16.541428455 seconds)
done (took 27.476626786 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.308123147 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.567727609 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.556917552 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.274966646 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.298440793 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.295192888 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.30141168 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.344696814 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.30732403 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.288983617 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.739179997 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.584207409 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.310230281 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.703643034 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.276580913 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.311275355 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.315371913 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.61166439 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.297268745 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.27434131 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.288603843 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.295569967 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.3024524 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.315178747 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.307649024 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.311014322 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.282221247 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.295871385 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.559534182 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.31857392 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.292003897 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.317047703 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.287578688 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.317983067 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.30125075 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.304577527 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.571353585 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.3089948 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.282353967 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.319162344 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.579289038 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.305369125 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.298017863 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.298427241 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.291632204 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.297249301 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.289847742 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.418006362 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.330209026 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.308776712 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.371494386 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.706866859 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.300231276 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.319826632 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.311952444 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.602732854 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.329072068 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.393232779 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.339015988 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.324367626 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.298673096 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.30968735 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.328151238 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.318508496 seconds)
  done (took 150.414548009 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.30040864 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.300197927 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.304269287 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.308065404 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.303856615 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.299631914 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.299439089 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.300570465 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.30054514 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.330860088 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.305063816 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.300606407 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.304598546 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.251029256 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.311566537 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.317501022 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.303192519 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.303636982 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.312506897 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.301331177 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.308793835 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.304810221 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.317595572 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.302807348 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.348172928 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.385422152 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.340195997 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.335160033 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.3115107 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.301654306 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.306930714 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.305579749 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.975842534 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.175627847 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.313516879 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.342893404 seconds)
  done (took 83.93665957 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.301025465 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.30248938 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.303045529 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.336583028 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.302969395 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.934164758 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.933824731 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.369132791 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.302989674 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.348655324 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.837377639 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.570506413 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.303014614 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39708199 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.315530334 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.304743236 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.318628125 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.330387779 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.307389871 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.303430561 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910478275 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.315987641 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.859752152 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.487651216 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.321087814 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339541597 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.694746496 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.303434924 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338243969 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.644235567 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.355747423 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.305056573 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.703217037 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.440136104 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.418577678 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.302040661 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339472408 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.303125192 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.593192416 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.305809693 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.306592323 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.310377811 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.962918996 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.308254312 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.93839549 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.307886672 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.305225862 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.305401617 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.304649414 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.373918371 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.031541173 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.302578933 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.306565167 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.307644062 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.305229251 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.30594664 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.341571266 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.385138745 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.40606992 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.306523186 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.310945665 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339543036 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.306884782 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.857671675 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305420868 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.217324945 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.359296346 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.406519258 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.933228506 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310239089 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.306624305 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.403191673 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.428189822 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.306265967 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.304608469 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.30888989 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.306737262 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.420242451 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.308137139 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.028608833 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.305753289 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.489140095 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.326163595 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.862418104 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.409854174 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.307766837 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.7040209 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.310523828 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.307002696 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.052185755 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.405715586 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.306247575 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.309212709 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.3101294 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.029477894 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.94191827 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.614762305 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.310138946 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.15029021 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.313083611 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.307646589 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.205167966 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.909275264 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.958728872 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.307345798 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.424534771 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.492726868 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.327305487 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.318684877 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.860607799 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.315016317 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.364502454 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.310945192 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.711050292 seconds)
  done (took 388.38185991 seconds)
done (took 623.928901704 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.183540344 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.128427612 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.294027454 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.142844231 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.12371933 seconds)
  done (took 12.079493937 seconds)
done (took 13.287281139 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521167396 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522455195 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.380402538 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525355671 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.345819664 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540792864 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.503825645 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.33338194 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.426990725 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.406687965 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430901144 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.369845974 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.351017144 seconds)
  done (took 19.865611558 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.624778945 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.322192372 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.376553663 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.590821582 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.356743842 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.618714499 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.645447063 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.324202645 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.475473029 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.35650444 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.335240687 seconds)
  done (took 19.234833687 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.653443284 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.323657027 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.382072557 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.593382137 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.357716471 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.613281775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.648429822 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.323797205 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.476477221 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337900105 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.33136432 seconds)
  done (took 19.249677796 seconds)
done (took 59.559732796 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.353545849 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.418217692 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.350311061 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.331835968 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.330383303 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.331157758 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.333119475 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.332477778 seconds)
  done (took 11.985358563 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.333034413 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.328537147 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.329139124 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.3284475 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.327314516 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.329200583 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.326908407 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.327277905 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.329955699 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.329435052 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.331743527 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.332083058 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.330982431 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.331001141 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.328257432 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.32902825 seconds)
  done (took 22.481664882 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.33231615 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.330846878 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.329975893 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.33021007 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.332206805 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.331073923 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.331421019 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.329828955 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.330048323 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.33014214 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.331749805 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.331370905 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.33137436 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.328964539 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.329274598 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.333472277 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.329643902 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.332334241 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.334122162 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.330921537 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.330696602 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.331988232 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.331374389 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.331391047 seconds)
  done (took 33.156538331 seconds)
done (took 68.829085906 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.315435894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.315416734 seconds)
  done (took 5.840714701 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.388351128 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.389074123 seconds)
  done (took 3.98669963 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.332787005 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.330931483 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.330557142 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.332262399 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.331177264 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.33233507 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.333295986 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.333413818 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.333872797 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.332065791 seconds)
  done (took 14.531829862 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.332218075 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.3313621 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.33517161 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.332971012 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.332761823 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.334289607 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.332035999 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.333776654 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.332860538 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.333366972 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.332033227 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.333656679 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.332908374 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.332715984 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.33374457 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.332440547 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.332240803 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.332873951 seconds)
  done (took 25.202696738 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.345666311 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.352026879 seconds)
  done (took 3.907840458 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.461993311 seconds)
    (2/7) benchmarking "second"...
    done (took 1.373809281 seconds)
    (3/7) benchmarking "month"...
    done (took 1.438078305 seconds)
    (4/7) benchmarking "year"...
    done (took 1.429810433 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.375700163 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.354883718 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.376295482 seconds)
  done (took 11.02140399 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.317786072 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.611164062 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.804791766 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.479773386 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.311169401 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.330354458 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.305060636 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.33052458 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.333708136 seconds)
  done (took 15.036350311 seconds)
done (took 80.738749464 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.318440003 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.400544975 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.356191621 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.341102617 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.67682752 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.369864114 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.32310813 seconds)
done (took 16.999763449 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.296917931 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.300076084 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.324712005 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.333018378 seconds)
  done (took 10.467604759 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.320239429 seconds)
    (2/2) benchmarking "read"...
    done (took 1.645623879 seconds)
  done (took 5.179765166 seconds)
done (took 16.86274359 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33598649 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.336138033 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.334612491 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.336399492 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.336653776 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.335282061 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.335845618 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.336225679 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.336643825 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.337243564 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.335404815 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.336214846 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33561707 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334723331 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337259234 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.337487541 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337044429 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.339034267 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335867843 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337051917 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338086988 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.336957579 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.339072769 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.33675573 seconds)
  done (took 33.290928621 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.337330918 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.336676819 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.338188807 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.336164984 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.338198386 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.33853268 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.337554894 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.336295128 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.337947557 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.336553498 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337462841 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.3383456 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.336849167 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.337429132 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338600624 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.339769386 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.338278715 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336089306 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339305274 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.33825349 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.338230151 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338322117 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.338465051 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339230126 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.340500346 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.338763118 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.339349279 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.339589866 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33904488 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.339588701 seconds)
  done (took 41.359462069 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.345808342 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.346286759 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.341211201 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.339746929 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.33920863 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.340188099 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.339605896 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.34128626 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.34089891 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.339002292 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.340578017 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.339557457 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.339970798 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.340161771 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.339029213 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.339411068 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.341710616 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.340834589 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.339378726 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.340214811 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.340975859 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.339456456 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.34171095 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.341060977 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.341655495 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.340540035 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.340549878 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.340334464 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.341735371 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.341697677 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.34135954 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.340600463 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.342249658 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.342248682 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.339702447 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.342621428 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.345170101 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.348545149 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.339914815 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.341386538 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.339997581 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.341236176 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.341660736 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.340559488 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.342879188 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.340897318 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.343292818 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.342542505 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.341575873 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.341178181 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.342759461 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.342089605 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.342035927 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.341739359 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.341835682 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.341865923 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.343921024 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.340784112 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.342530993 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.341801375 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.342316075 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.34305536 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.342478862 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.342278739 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.343146221 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.344458844 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.344227151 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.343181163 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.34294663 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.343427865 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.343367899 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.34383834 seconds)
  done (took 97.821398175 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.344765168 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.344302468 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.344324093 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.343384386 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34354228 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.344284528 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.343616047 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342217217 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343287597 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.344219711 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345202521 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.345425453 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343237964 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.344615598 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343970168 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.344183646 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.345101857 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342597146 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.345937778 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.345226259 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346580352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.345455392 seconds)
  done (took 30.794970993 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345161373 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.347256958 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.344192489 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.345684118 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.347245193 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.345392606 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.346653757 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.34702268 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344843594 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.34613933 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343408857 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345061159 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.346630877 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346626292 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345496395 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.347814815 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34659456 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.347913098 seconds)
  done (took 25.450714165 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.346950778 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.347544454 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.346080638 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.345139487 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.34579683 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.346271054 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.346148072 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.346118955 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.348039694 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.347223192 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.347081565 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347027225 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.346736701 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346286186 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346556981 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.347443604 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.345834958 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347728965 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346615474 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348604232 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.347374392 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347230522 seconds)
  done (took 30.853222141 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348645513 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.346146495 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.346313134 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.346350286 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.347095309 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.34771205 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.347356913 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.348688384 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.349190586 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.34811482 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348349458 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.34748926 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.352918279 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.346406573 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.34759605 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347628686 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.348860935 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.349024112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349385671 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.349139339 seconds)
  done (took 28.185686082 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351101666 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348338907 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.350347737 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349022196 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349705201 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.350101998 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350320837 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.349985053 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351087076 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.348590445 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349769895 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.351744152 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350283044 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.349302043 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350749097 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349638381 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351004663 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350146536 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.349350837 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350888075 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.349795421 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351411508 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350266146 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.351164049 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.350705665 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351806484 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351160936 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.351114557 seconds)
  done (took 39.034473889 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351360038 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.352310847 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.351626975 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.35092466 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.350540949 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.351090511 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.350811315 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.350403448 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.352175818 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.350223998 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.351129685 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.352535556 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351927175 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.350825584 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.351347273 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.352014764 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351885486 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.351703346 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351799207 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351463683 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.353879693 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351570258 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.351633205 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.35151724 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353267362 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.351741091 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35287433 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35374934 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352338758 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.353271892 seconds)
  done (took 41.780725593 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.370105612 seconds)
    (2/2) benchmarking "in"...
    done (took 1.371254011 seconds)
  done (took 3.968801476 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.355835123 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.352573563 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.352939089 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.353150419 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.353465052 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.355059037 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.35390906 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353511455 seconds)
  done (took 12.058125294 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.347152821 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.354639065 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.353764078 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.354326235 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.355089373 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.344456607 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.352853464 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.358462507 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.346430715 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.348365275 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.351422616 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.352210798 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.34883426 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.348382529 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.347620946 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.350069093 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.35755812 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.355152645 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.35600696 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.357165205 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.355339417 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.350362831 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.353127124 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.358767331 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.348748406 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.358136772 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.355347919 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.359832663 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.350040866 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.354007395 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.350426567 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.357869437 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.356820984 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.35802984 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.356793281 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.358265659 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.358143844 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355280466 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.356246377 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362009723 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356572581 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.355935257 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.352263288 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.35465998 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.354574751 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.361202123 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.358723787 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.357896057 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.347767374 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.354662867 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.365742005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.349702744 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.358727335 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.353883768 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.355089273 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.362906059 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.36540783 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.353520939 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.357667642 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.362357993 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.370565651 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.367742408 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.358126976 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.362244934 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.362099754 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.375861521 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361497851 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.366504606 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.361036871 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.358935103 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.359072292 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.370351292 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.371570402 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.364524532 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359640504 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.359582247 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.355344765 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.363920749 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.362150101 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.363018864 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.365054398 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.360564996 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363353016 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.373299297 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.355645374 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.363071491 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.359651199 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.36171336 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.354526846 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363421515 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.368590979 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.359532982 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.352455986 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.355125449 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.35847734 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.365706438 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.350782065 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.356214545 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.362724644 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.360507321 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360886839 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356416336 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.363015553 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.368017903 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.361499967 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.361370148 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.369197595 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.354087639 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.366020897 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.368456996 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.362353935 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.354981512 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.36026133 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.364206658 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.355305956 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.362883495 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.36755693 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.35818031 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.368111407 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.363789434 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.363620584 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.382120093 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.369020476 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.362011635 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.357560189 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.372968764 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.364665954 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.360764792 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.368842853 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.363461312 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.361106567 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.360263985 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.368543108 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.357458339 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36771162 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.357757968 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.367650647 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.363924719 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.361629019 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.359403168 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.363429587 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.360288966 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.362918046 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.366892822 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.370009357 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.36096466 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.370868438 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.36464185 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.363230106 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.365702993 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.369302931 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.365408397 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.35839944 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.369476583 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.356995261 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.368543197 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.358717377 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.369516456 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.366073462 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.365315263 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.364969539 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.356645599 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.363034337 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.368472956 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.365902502 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.365892887 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.368392231 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.364896517 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.366092096 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.358716446 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.367661663 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.358267288 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.361711493 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.372911963 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.36771753 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.367136855 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.365086079 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373900763 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.367852699 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366893335 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.361586479 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.366771934 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.370093545 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.368464577 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.374736806 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.367627177 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.367649735 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.359695339 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.362881522 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36961994 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.362436551 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.374174073 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.373478321 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.3798498 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.363056336 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.370563863 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.358402894 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.370809537 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.367977349 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.37491567 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.367054075 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.367912409 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.360471443 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372393041 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.362446387 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.372542823 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.35929302 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.369421509 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.368579999 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.367981259 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.368304669 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.361794609 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.364567669 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.372317985 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.367639346 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369308966 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.363335128 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.371923289 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.361433596 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.364490927 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.372112106 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.369461972 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.370751277 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.375702877 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367161582 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.374772905 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.370224388 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.365416499 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.370081931 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.367394399 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.370172789 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.373256425 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.370979464 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.366047457 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.375517843 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.373675875 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.364797146 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.371970329 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.379870291 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.372284371 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.3643005 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.379047832 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.371716568 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.372496534 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.370008621 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.363956759 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.374752152 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.372549123 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.379477042 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.362731493 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.374756512 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.365021649 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.374986372 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.366661748 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.372086513 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.371004263 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.375670524 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.380447352 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.371292249 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.366997862 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.375310628 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.371938311 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.371402667 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366206587 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.379414695 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.374317297 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.373806067 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.368443006 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.369500123 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.3762058 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.363999405 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.372951194 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.36396128 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.383724176 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.394352544 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.375725528 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.376690607 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.376851778 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.37482693 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.377485125 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.369829608 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.368443792 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.370761893 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.36839457 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.368984219 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.376008997 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366980398 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.376294206 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.372283417 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.37743911 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.378305559 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.374311026 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.366291272 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.377787217 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.374463134 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.374721453 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.36594838 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.376909666 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.369362434 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377616947 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.375630029 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.370037192 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.381479022 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.377195014 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.372345908 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.371598381 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.371408605 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.369531868 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.370564543 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.382524069 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.37052674 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.38219146 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.370213974 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.377271413 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.372169368 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.380867745 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.384661599 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.371297304 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.382673015 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.374959175 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.366754132 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.369133795 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.378314564 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.380123596 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.386798216 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.368965717 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.381764843 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.375858783 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.375337048 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.37649633 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.376293605 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.377564289 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.376492692 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.380283323 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.381358206 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.374344835 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.379723305 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.386869395 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.376931007 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.378553519 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.368254237 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.37897609 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.386671783 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.371492627 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.374145318 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.371643571 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.377726706 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.375890247 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.37775022 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.377612099 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.377238122 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.382665121 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.38184378 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.38103194 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.378497397 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.382158682 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388521631 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.38230776 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.392190495 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.374192413 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.383068945 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.378017673 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.371711114 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.374105788 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.374609591 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.382722977 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.371011905 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.382955338 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.378438806 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.374795297 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.381504531 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.388122591 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.370372375 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.383608875 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.40335908 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.371302004 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.382844522 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.379257046 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.372272651 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.381733787 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.379145593 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.372192729 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.374800579 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.381439532 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.386393671 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.372939901 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.382185163 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.372646036 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382213343 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.381440794 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.379078626 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.380869103 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.379953522 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.37317316 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.383034738 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381117225 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.390728974 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.376250394 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.382018783 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.378681616 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.388868571 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.392678473 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.376206866 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.385932969 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.383412031 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.375973277 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.379063584 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.388887677 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.375603138 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384522413 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.375368495 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377910826 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.381291165 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.383815386 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.387188345 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.385912992 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.375050098 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.377398631 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.383467906 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.383640593 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.3817706 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.377206387 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.390530914 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.375448643 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.376549042 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.385300799 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.378215481 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.387841277 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377312185 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.38171403 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.381900839 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.38545314 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.384414602 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.38347601 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.37392439 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.377159946 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.390053217 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.389718772 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.384329486 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.382438851 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.386705027 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.377746997 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.380790185 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.38538623 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.380454079 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.379639427 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.389133374 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.380479065 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.380579125 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.38036431 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.386429394 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.388637442 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.388333872 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.379640444 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.392367344 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.3942777 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.393372831 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.379636402 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.38245043 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.382306215 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.387349883 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.384651678 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.378173038 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.393157881 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.391927644 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.390721333 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.385323635 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.388366049 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.379106064 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.389279371 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.38577835 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.381294155 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.393772345 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.381574706 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.39397472 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.384765474 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.385163317 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.378759793 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.379657588 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.382171607 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.385442429 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.388477118 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.386454315 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.392236816 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.384758276 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391935293 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386991209 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.385513607 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.386558033 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.377882613 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.390055513 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.379257148 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.389001104 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.390188077 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.38125025 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.389747446 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38706586 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.381173465 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.387735288 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.392999412 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.388349777 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.380047673 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.384664009 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.393789667 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.400902229 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.388231025 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.383568902 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.386157623 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.393025337 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.389733878 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.389024272 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.383703516 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.400991341 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.402232916 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.382358126 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.385061934 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.393351857 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.398468521 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.388378357 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.388259257 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.384068023 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.389214573 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.395648622 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.38840452 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.393884399 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.395446198 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.386698839 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.394149881 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.384567719 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.388522613 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.392376001 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.402207767 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.389710796 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.386519993 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.401946383 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.402074137 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.392261886 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.417450684 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.397735574 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.391076507 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.39653452 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.381672641 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.392807392 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.387600282 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.398394301 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.392842519 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.392016171 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.391286998 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.383168637 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.393532553 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.399225456 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.401737019 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.390938689 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.38249953 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.387598844 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.391693027 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.390746185 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.39319479 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.390705213 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.392633677 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.392316363 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.386316253 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.403339247 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.410897025 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.395754166 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.393278958 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.39185021 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.392363976 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.39741838 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.394260221 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.399274428 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.39226396 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.392067462 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.390746375 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.402506613 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.395064239 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.386875888 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.388972872 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.389930866 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.39639494 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.404268205 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.417164451 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.398605689 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.399443986 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.395516231 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.393363617 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386705991 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398451026 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394098706 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.388374801 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.392009961 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.397680412 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.395273233 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.394474393 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.387473315 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.40231714 seconds)
  done (took 820.644674736 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.395127405 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394566465 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.394200926 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.394962214 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394511018 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394564481 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.394263179 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.394371429 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.393911218 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.394677197 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.395729819 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396979885 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.395198063 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.394101403 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.396063409 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.395946134 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396129517 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.394174569 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.395469553 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.396499674 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.39536816 seconds)
  done (took 30.559544019 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.394133517 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.394583022 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.396223429 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.396522751 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.396337357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.395982604 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.396659988 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.396268453 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.396188585 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397749661 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.397615841 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395325035 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.395395833 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.39613368 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397650661 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.396434832 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.396244439 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.397789604 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.396560928 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.397671605 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.396812513 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.396515674 seconds)
  done (took 31.984908592 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.395432167 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.398602835 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.391258178 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.402247047 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.396570689 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.397470436 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.398011654 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.397145198 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.398843275 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.389892675 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.392017701 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.393449354 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.397502831 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.405941351 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.395901547 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.404119715 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.400213756 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.39908419 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.399525277 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.400727386 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.401894957 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.413010246 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.397424172 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.390501117 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.401231121 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.399416638 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.399799397 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.398412397 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.390840094 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.403141723 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.400001143 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.393240734 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.402364579 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.404133991 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.395525211 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.401674764 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.400536251 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.400325945 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.399334674 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.401829803 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.422379505 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.400262243 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.405430603 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.414361126 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.402340871 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.395994559 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.407070754 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.401720001 seconds)
  done (took 68.464530776 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.400906352 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.400399542 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.399532448 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.400589245 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.401174172 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.401971174 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.401076694 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.401301304 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.400917916 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.401467582 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.401914201 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.401984389 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.401253911 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.403747941 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.401939517 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.401233379 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.401178088 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.401583596 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.401628045 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.401887869 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.401865211 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.401104667 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.403717472 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.402614366 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.403429218 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.405585521 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.401051097 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.402831861 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.402849119 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.402083257 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.404087372 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.40368003 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.403636168 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.402976078 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.402811163 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.404791822 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.403299346 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.403225148 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.405019632 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.404191352 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.403205506 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.403851272 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.402823316 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.40446926 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.404473158 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.40327715 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.402758293 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.405332508 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.40384868 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.403899123 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.403709919 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.403882738 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.40406736 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.403767454 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.404526724 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.405708552 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.403560207 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.403388204 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.404519098 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.40348398 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.403134882 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.404504562 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.404185796 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.404581292 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.405088112 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.405366057 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.405108264 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.406267155 seconds)
  done (took 96.67916137 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.40484701 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.404865265 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.406438479 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.406166587 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.406880946 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.406281167 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.404872963 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.406285553 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.407760737 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.405243261 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.406412842 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.405386619 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.407316178 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.406876441 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.407225091 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.407918431 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.40651553 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.407558676 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.407602383 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.406230631 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.407208389 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.407905563 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.40723493 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.408173662 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.407850222 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.406958543 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.406623245 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.407178363 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.407793079 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.408048826 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.409486788 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.408832093 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.408667722 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.408494464 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.407156697 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.407672001 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.408981366 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.409056443 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.408622905 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.409266821 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.409433208 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.40891291 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.409451721 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.409815467 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.408584849 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.408578657 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.409159412 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.40949104 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.410020939 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.410160608 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.409110306 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.409069885 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.410460956 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.410106231 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.410131718 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.411231809 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.411444931 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.410071653 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.411297246 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.410569073 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.408969362 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.408880063 seconds)
  done (took 88.578144913 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.410006211 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.409077679 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.410574654 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.408358454 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.411859124 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.409554864 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.410136308 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.411453795 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.410888279 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.410213287 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.4101234 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.410677324 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.410592092 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.411681081 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.410957468 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.411884 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.411573294 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.410890486 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.411170538 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.410384723 seconds)
  done (took 29.486615484 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.411120762 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.411226878 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.411518841 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.411589252 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.411364645 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.411832956 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.41246134 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.411337034 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.412315496 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.412074236 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.412500349 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.411409917 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.411669682 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.412190658 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.413610132 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.411807378 seconds)
  done (took 23.866533095 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.411501176 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.413680169 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.412842421 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.412625163 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.413617451 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.413788618 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.411740219 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.413081715 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.412135841 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.414413174 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.412885764 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.413293451 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.413467582 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.413675967 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.414872275 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.41362681 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.41416556 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.412980195 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.414579039 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.413678295 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.413335608 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.413499174 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.413196298 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.413194274 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.41550337 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.414843746 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.413083185 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.41505288 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.41493782 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.414315908 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.41373463 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.414218077 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.414684645 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.413623206 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.414982044 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.414911495 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.41390352 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.413680806 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.414883646 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.415624885 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.415824905 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.414505736 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.416301371 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.414004564 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.414559523 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.415056771 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.414342849 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.415147798 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.415066195 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.41598343 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.415043998 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.416325972 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.415911997 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.415205139 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.414922603 seconds)
  done (took 79.058557534 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.415054102 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.416246487 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.416651975 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.416717427 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.416658821 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.415579076 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.416263464 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.419413144 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.417678749 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.415955765 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.415765978 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.417061539 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.417134236 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.417625197 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.417475848 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.417754506 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.417481744 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.416399179 seconds)
  done (took 26.783366468 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.41801388 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.419274211 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.417900889 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.416543437 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.418990283 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.41770722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.417966578 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.416524895 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.417488791 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.420002848 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416861722 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.419487066 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.418325322 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.417642678 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.419860398 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.417213231 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.419258106 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.417905973 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.418351877 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.418533933 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.420445154 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.419688129 seconds)
  done (took 32.485813719 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.410003414 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.409861837 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.408504833 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.426261896 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.427398898 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.409506515 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.408279385 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.407583428 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.432778809 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.460632915 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.454004639 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.4280396 seconds)
  done (took 18.367282055 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419432085 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418207468 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.421825996 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420594938 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421912723 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419107834 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419841399 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421401736 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419559656 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42081421 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419667486 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421535956 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41981946 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42215826 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420466966 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420408206 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422050887 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420063812 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420326775 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421230655 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422029574 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421240736 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421688098 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421474243 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421178225 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421080403 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421567737 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421925564 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421575665 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422570213 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421898833 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421507788 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422640729 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42304473 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421318001 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421973258 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421067402 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423669838 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423184187 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421657815 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.42431624 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422183288 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423148068 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423147624 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423833084 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422688127 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422749455 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422652181 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423283754 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424514845 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424668187 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423393638 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424352123 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425409315 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423624409 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423425963 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423060288 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424842039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424229945 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425908458 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42300128 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423688439 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424210672 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424123017 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425034356 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424860701 seconds)
  done (took 95.154245423 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423866475 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.422309459 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424707306 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424161342 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424865928 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424971942 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424791931 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424380743 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424259178 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425536421 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424643956 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425913898 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424974845 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424102264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424375152 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424854193 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424584562 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425235689 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424173581 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425905226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425039951 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427191682 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425582957 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42614312 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425244662 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423943097 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425386673 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424428521 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42562372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425110806 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425404248 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42504892 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425417293 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.425155199 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425195198 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42556365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42526911 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425153995 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42551867 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425808019 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427396992 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426234013 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427708427 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428103799 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426520485 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427322585 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426243691 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427565117 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428109129 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428628245 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426659309 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427992408 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44057372 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428469086 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427409657 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428295115 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427695179 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427868728 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427458266 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427041032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427075687 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42808676 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426209332 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429236454 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428634114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428561779 seconds)
  done (took 95.420834416 seconds)
done (took 1923.349757125 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.581756226 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.53695128 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.418190679 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.43198964 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.418475692 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.418670877 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.427453108 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.419792113 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.417901288 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.419647012 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.419304444 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.608902035 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.454500445 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.418812499 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.41916079 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.516892813 seconds)
  done (took 28.619037796 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.450449686 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.427519953 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.554735563 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.426538989 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.450612738 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.638294586 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.491698032 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.428476353 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.626790754 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.451450293 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.412674316 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.468308566 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.425143063 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.428450526 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.445671926 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.639888167 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.72119909 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.415012484 seconds)
  done (took 31.194390151 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.957202625 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.452369453 seconds)
  done (took 5.701496125 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.447266438 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.425448307 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.426367494 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.424021806 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.418364837 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.415999983 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.425937616 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.4171939 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.422495496 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.577644927 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.432193482 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.437958516 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.444798382 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.42573086 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.433710716 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.474840767 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.580426693 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.437251671 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.433852471 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.433273732 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.42440949 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.538069998 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.477294072 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.439605109 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.569062166 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.428119963 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.432132388 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.433339405 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.552369721 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.436232466 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.426956468 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.426903557 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.428330479 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.419008008 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.015348405 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.42118682 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.453262818 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.437202083 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.435079661 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.592627295 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.42861366 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.433992415 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.418667068 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.997388264 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.550084975 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.563243739 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.441414827 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.429715535 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.427362938 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.497595624 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.431220134 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.430591023 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.492036308 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.294433394 seconds)
  done (took 90.859410286 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.462653434 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.420592082 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.609757745 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.449571249 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.420014854 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.439882187 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.440780521 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.758643021 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.4240802 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.420822667 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.772189893 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.111281832 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.435187717 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.487793359 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.463862479 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.470317903 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.428331124 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.421564744 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.421344576 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.427804129 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.024484099 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.436010113 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.421074611 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.498278815 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.467836754 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.028609788 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.437971772 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.421554483 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.440286771 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.421873284 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.07191496 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.434933633 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.474282459 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.427009891 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.735945952 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.877719721 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.835693291 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.428980693 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.439494275 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.427497 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.449449171 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023955303 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.856639298 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.422463952 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.424141421 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.025411064 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.424111531 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.433319524 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.430679736 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.700879967 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.424877698 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.424298753 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.441495703 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.424898311 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.423012451 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.476409259 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.477738059 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030495457 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.426583043 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.424178037 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.463338946 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.42588253 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.431902146 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.427005444 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.424698339 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.861840296 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.648019154 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.432265772 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.859629956 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.058960313 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.425656252 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.152163312 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.430073127 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.430416838 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.456353712 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.441895631 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.425160254 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.022175852 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.459903207 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.425391785 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.838777655 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.42752015 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.756173573 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.446684236 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.427345967 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.044820526 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.436778055 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.474025149 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.426363174 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.436406057 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.425669152 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.430100634 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.74478581 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.465579205 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.428969072 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.426123778 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.44627676 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.427426305 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.427738142 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.427228682 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146063783 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.437066358 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.426648831 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.450268185 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.427277172 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.428798068 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.431612951 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.427418152 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.7142506 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.427726217 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.435893714 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.430704668 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.428037061 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.43942436 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.502600968 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.438152163 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.793229104 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.429951538 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.443058689 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.427453378 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.427735859 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.44963522 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428235231 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.455833843 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.432610634 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.783908227 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.449141989 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.429706094 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.429575147 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.428719811 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.428825139 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.428395149 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.482183942 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.429435612 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.271624238 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.439389068 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.442711195 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.429241689 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.440794989 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.429539324 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.438085053 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.431602916 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746875394 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.745555122 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.654311748 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.43417658 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.429853419 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.297764287 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.478405924 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.619691822 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.453649907 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.430203166 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.735675388 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.648670164 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.43179727 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.430185098 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.433906498 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.717957107 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.430657934 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.763302674 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.093309497 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.43179139 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.438209453 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.267791882 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.269803019 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.433101735 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.433045623 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.760460498 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.452285061 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.430363934 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.432471411 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.432423276 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.431889286 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.43298483 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.443082019 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.433061414 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.433205071 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.723015494 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.632838316 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.452263738 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.444344123 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032395664 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.455747218 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.433657542 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.436912417 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.435202325 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.43312476 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.4874172 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.434589592 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.468227036 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.437207675 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.434783231 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.101886252 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.433198425 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.434268234 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.63410681 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.228064928 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.434433541 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.432210112 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.43381736 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.492973093 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063400338 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.454341971 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.800693255 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.437001882 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.479167282 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.447216592 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.448443826 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065338056 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.440515628 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.434315998 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.238197039 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.434274188 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.873846926 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.434830197 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.453166535 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.154049671 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.434152246 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.436049699 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.433644762 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.436178436 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.746850113 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.437720586 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.476623401 seconds)
  done (took 522.826913783 seconds)
done (took 680.493178393 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.435732033 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.441083232 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.440395867 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.440761634 seconds)
  done (took 11.068129298 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.453793423 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.443607255 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.452544412 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.443744457 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.452723264 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.4430976 seconds)
  done (took 10.002349519 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.436579915 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.441866805 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.440703098 seconds)
  done (took 8.630766873 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.684329873 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.463900018 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.855974573 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.454087208 seconds)
  done (took 9.771508223 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.452996272 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.452536694 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.453855017 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.454917593 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.454721536 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.456171989 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.453708594 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.454369574 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.45375678 seconds)
  done (took 14.396299567 seconds)
done (took 55.181452215 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.413592673 seconds)
    (2/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.496686628 seconds)
    (3/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.414284361 seconds)
    (4/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.566560887 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.706464624 seconds)
    (6/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.516436172 seconds)
    (7/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.414666016 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.525772718 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.441017573 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.485807333 seconds)
    (11/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.526770908 seconds)
    (12/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.534528494 seconds)
    (13/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.922795197 seconds)
    (14/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.51058929 seconds)
    (15/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.415038094 seconds)
    (16/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.626642358 seconds)
    (17/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.522154938 seconds)
    (18/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.482113147 seconds)
    (19/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.723206116 seconds)
    (20/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.682757339 seconds)
    (21/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.486140786 seconds)
    (22/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.512762898 seconds)
    (23/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.56299226 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.606209075 seconds)
    (25/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.715270081 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.555574891 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.520432177 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.554020061 seconds)
    (29/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.754105148 seconds)
    (30/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.543117998 seconds)
    (31/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.417779739 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.559672232 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.565155106 seconds)
    (34/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.777958091 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.42070241 seconds)
    (36/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.422968067 seconds)
    (37/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.482094114 seconds)
    (38/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.843942146 seconds)
    (39/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.421989391 seconds)
    (40/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.788914317 seconds)
    (41/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.442279298 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.524539668 seconds)
    (43/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.559308273 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.619075361 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.767332548 seconds)
    (46/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.608221129 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.514727467 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.843442047 seconds)
    (49/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.472545099 seconds)
    (50/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.509914047 seconds)
    (51/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.417738206 seconds)
    (52/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.561589981 seconds)
    (53/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.478228881 seconds)
    (54/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.475797775 seconds)
    (55/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.631550662 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.845448208 seconds)
    (57/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.622664802 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.543445054 seconds)
    (59/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.805632851 seconds)
    (60/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.567883926 seconds)
    (61/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.607139566 seconds)
    (62/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.417652458 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.720656029 seconds)
    (64/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.716958882 seconds)
    (65/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.425690962 seconds)
    (66/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.610326839 seconds)
    (67/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.418294939 seconds)
    (68/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.419978004 seconds)
    (69/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.669261593 seconds)
    (70/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.660829802 seconds)
    (71/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.419865499 seconds)
    (72/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.470328149 seconds)
    (73/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.455763408 seconds)
    (74/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.420702571 seconds)
    (75/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.865741148 seconds)
    (76/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.568749358 seconds)
    (77/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.770656711 seconds)
    (78/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.562510971 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.539735218 seconds)
    (80/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.488299471 seconds)
    (81/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.527831053 seconds)
    (82/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.683044562 seconds)
    (83/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.519951661 seconds)
    (84/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.420700921 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.710274414 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.479966474 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.528291477 seconds)
    (88/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.791439402 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.575657901 seconds)
    (90/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.448608804 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.533827645 seconds)
    (92/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.443719469 seconds)
    (93/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.432534489 seconds)
    (94/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.709823632 seconds)
    (95/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.764549746 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.552996269 seconds)
    (97/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.4288471 seconds)
    (98/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.71384711 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.584396137 seconds)
    (100/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.490087164 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.478253051 seconds)
    (102/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.629206927 seconds)
    (103/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.687205541 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.426592176 seconds)
    (105/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.536685578 seconds)
    (106/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.584158191 seconds)
    (107/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.438515001 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.524972832 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.580940301 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.559209152 seconds)
    (111/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.422230357 seconds)
    (112/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.613524217 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.625549368 seconds)
    (114/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.42579655 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.577241688 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.789338846 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.575120262 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.611325097 seconds)
    (119/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.645608283 seconds)
    (120/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.469679078 seconds)
    (121/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.558311432 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.466394231 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.486955468 seconds)
    (124/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.654996611 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.580636135 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.451929203 seconds)
    (127/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.644097413 seconds)
    (128/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.686943133 seconds)
    (129/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.614332142 seconds)
    (130/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.687490181 seconds)
    (131/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.479012227 seconds)
    (132/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.686125691 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.428304883 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.434080457 seconds)
    (135/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.431055613 seconds)
    (136/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.447935625 seconds)
    (137/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.55966503 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.602493815 seconds)
    (139/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.595243212 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.538428397 seconds)
    (141/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.453367022 seconds)
    (142/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.520452775 seconds)
    (143/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.484893892 seconds)
    (144/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.518135908 seconds)
    (145/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.427071469 seconds)
    (146/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.569722475 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.514280382 seconds)
    (148/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.540050841 seconds)
    (149/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.478764243 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.486569468 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.719397491 seconds)
    (152/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.659938578 seconds)
    (153/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.020338134 seconds)
    (154/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.558456982 seconds)
    (155/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.629909416 seconds)
    (156/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.535381439 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.772311059 seconds)
    (158/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.618453828 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.560492389 seconds)
    (160/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.425800324 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.540182253 seconds)
    (162/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.854590117 seconds)
    (163/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.528343563 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.489047551 seconds)
    (165/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.588807179 seconds)
    (166/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.620084006 seconds)
    (167/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.568377083 seconds)
    (168/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.67017107 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.564392 seconds)
    (170/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.429963421 seconds)
    (171/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.537881752 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.616095235 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.62695374 seconds)
    (174/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.698532665 seconds)
    (175/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.431164926 seconds)
    (176/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.533836089 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.608281263 seconds)
    (178/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.023120431 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.484656352 seconds)
    (180/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.487499168 seconds)
    (181/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.541238454 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.655929881 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.466500737 seconds)
    (184/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.428808891 seconds)
    (185/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.462708993 seconds)
    (186/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.543102717 seconds)
    (187/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.426081093 seconds)
    (188/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.655758199 seconds)
    (189/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.572497115 seconds)
    (190/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.453825779 seconds)
    (191/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.498976189 seconds)
    (192/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.430964634 seconds)
  done (took 349.911426453 seconds)
done (took 351.224331606 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.482891469 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.554031463 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.46133731 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.462357659 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.462795715 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.451080666 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.504676911 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.463601005 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.476649939 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.477444381 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.452439671 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.473359857 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.477667072 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.474260746 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.495747198 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.462455565 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.461986925 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.474128769 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.478869843 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.481430408 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.463777207 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.462689425 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.491084296 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.462737099 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471305888 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.472209584 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.467767532 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.451758118 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.474463355 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.480456104 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.459372525 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.46954906 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.479607014 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.476664664 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.46479482 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.474186861 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.463633924 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.555933963 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.485960499 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.475494588 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.472374261 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.48214748 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.468048311 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.46901803 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.476914233 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.493004472 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.471601351 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.477745448 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.458340972 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.464429539 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.484540419 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.478258581 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.473125276 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.465448503 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.455459936 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.479921941 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.47789451 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.485002039 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.47522806 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.466143857 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.499374331 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.485559226 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.479930058 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.472595762 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.474270211 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.479641138 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.476713267 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.481932408 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.475461352 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.46749307 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.467533618 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.47662706 seconds)
done (took 115.572443033 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.590338625 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.461701013 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.620706791 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.472843243 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.633641205 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.589633117 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.471869648 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.473129849 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.4729479 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.260827874 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.474232406 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.473857677 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.462660962 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.475201221 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.583686813 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.474492518 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.47292708 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.159670576 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.476333388 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.605541495 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.465970539 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.473987465 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.47539773 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.272782828 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.46373022 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.460188762 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.608399355 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.475280241 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.173772876 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.458530579 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.462110562 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.173638345 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.607094913 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.494196497 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.484899326 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.484917139 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.63588552 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.479849265 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.592680645 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.593938435 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.622817752 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.514354672 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.459920452 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.464473471 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.478629704 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.477976545 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.4763675 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.50559279 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.462163794 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.477399927 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.166407925 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.486012943 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.486079056 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.478035102 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.476928611 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.498288905 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.477210475 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.479418659 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.609835647 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.479475744 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.594521695 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.275729792 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.265348933 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.479196508 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.464508115 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.478345179 seconds)
  done (took 117.507890356 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.53863509 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.545203421 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.591911967 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.469956262 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.520558097 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.591400533 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.4697141 seconds)
  done (took 12.059383572 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.473932828 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.477550742 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.518292361 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.51694688 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.477642683 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.64502853 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478666154 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.481107341 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.477786012 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.519876924 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.479450827 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.477573444 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.487090323 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.467444414 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.51725668 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.480759656 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.588825272 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.471305613 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.480610194 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.628685823 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.477472032 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.488754842 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.520805429 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.480989355 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.479189069 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.476565321 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.253049395 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.482327361 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.480736703 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.48056029 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.48009527 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.536384728 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.480108739 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.468628557 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.480145069 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.585468509 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.480976613 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.480082647 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.480057494 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.472220905 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.479746542 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.480711941 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.480675806 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.479944756 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.480689789 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.49612159 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.481575875 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.479937577 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.481657101 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.482709691 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.521146238 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.481135797 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.481209796 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.480005201 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.525084538 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.490603425 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.482220869 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.482620578 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.482155555 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.482498457 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.628936356 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.518794687 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.482033807 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.52073097 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481985527 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.482012607 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.483310613 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.482730253 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.566954719 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.480648109 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.520618055 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.484083608 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.654998532 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.496375634 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.483816589 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.476527285 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.477568942 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.483160231 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.468708317 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.48026163 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.482761529 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.475717148 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.480215687 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.484641189 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.483309184 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.632037726 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.581636318 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.48240633 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.490727485 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.481325205 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.484511143 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.524173161 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.484858787 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.483277276 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.526128807 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.59343635 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.5260984 seconds)
  done (took 151.629255374 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.487398267 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.486995846 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.479771803 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.501907355 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.476411094 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.475071476 seconds)
  done (took 10.246154171 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.479552567 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.48774749 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.483890704 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.485514718 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.485491705 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.485911278 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.484133146 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.479783735 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.489005459 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.486158593 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.486210458 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.484845086 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.487202634 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.48566762 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.48650418 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.485911721 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.487018124 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.487539995 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.484746912 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.487644358 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.475328984 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.487613639 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.48852198 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.479884302 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.4905431 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.487157219 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.50219217 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.486711568 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.484498224 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.485358368 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.489807827 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.4863974 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.479490398 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.482537439 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.489624014 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.480524089 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.49101451 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.488113054 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.487106621 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.487812724 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.48784451 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.488396973 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.488658151 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.488708209 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.478865949 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.484414242 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.491734018 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.50316254 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.488697216 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.48843368 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.488980026 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.486678053 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.487988579 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.489765617 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.480392856 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.483097956 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.493493228 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.489866793 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.489261508 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.480885011 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.493014393 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.490239928 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.483617021 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.492172256 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.490562939 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.48936433 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.481707124 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.493116221 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.49083104 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.490281241 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.490714144 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.488824404 seconds)
  done (took 109.415621344 seconds)
done (took 402.188631773 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.00969232 seconds)
  done (took 4.351623577 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.598263466 seconds)
  done (took 3.942179065 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.065952962 seconds)
  done (took 26.413434015 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.581989117 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.535466723 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.501115749 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.47839675 seconds)
  done (took 11.439248392 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.826821052 seconds)
  done (took 4.169875167 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.484662082 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.483310046 seconds)
  done (took 6.312495993 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.793038479 seconds)
  done (took 4.136124157 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.832359965 seconds)
  done (took 4.182809269 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.489107806 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.49043383 seconds)
  done (took 6.330318084 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.470802484 seconds)
  done (took 3.815022108 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.779999957 seconds)
  done (took 23.123428849 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.502473706 seconds)
  done (took 3.847116521 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.512403477 seconds)
  done (took 3.855699819 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.684881691 seconds)
  done (took 7.026836184 seconds)
done (took 114.290990449 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.475296897 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.479958812 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.480549727 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.48146517 seconds)
  done (took 11.259503396 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.55560463 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.555926872 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.562899101 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.549223283 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.549626017 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.557698226 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.517745241 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.517811829 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.547628056 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.544324359 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.560497137 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.549761202 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.560117895 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.517126728 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.541533641 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.56077854 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.547917762 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.565496753 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.519209652 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.550637662 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.492978698 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.55097213 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.544576374 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.494341909 seconds)
  done (took 38.360798524 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.002485391 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.556187159 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.637925053 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.535033097 seconds)
  done (took 8.076693182 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.597733726 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.598895163 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.618696885 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.661807742 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.699666439 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.611276786 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.521760559 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.514319234 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.501369885 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.599560923 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.681983469 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.59725376 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.815644125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.492649158 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.812784188 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.493270172 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.494122675 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.600347157 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.646686997 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.678678876 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.494826825 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.597900149 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.602962192 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.597508352 seconds)
  done (took 39.878919465 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.502227838 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.512321523 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.495577294 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.510817867 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.496044948 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.496671384 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.495956155 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.502190138 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.496004796 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.497484868 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.496699371 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.51072861 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.495462599 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.494034223 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.502009955 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.49912333 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.497899225 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.503745844 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.505330906 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.496239897 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.495927333 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.503930876 seconds)
  done (took 34.353518268 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.480982454 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.480729404 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.832483034 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.736411514 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.479485132 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.481527405 seconds)
  done (took 14.839981631 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.574909953 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.731472774 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.48850231 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.916539082 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.001298664 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.48796888 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.488100597 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.772900247 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.16921388 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.168699764 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.56274462 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.573082195 seconds)
  done (took 22.286789991 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573696562 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.490322887 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493257185 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533843446 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49276552 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492544995 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.538284398 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.260980348 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.499218583 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769880884 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492316645 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580383456 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.741532721 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512922987 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.496872391 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.459682491 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721154739 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058249524 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494192718 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492996257 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545532793 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494571068 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49724632 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.763628085 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495220588 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493232897 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.756818629 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.493139699 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831910769 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805356464 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808650392 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497769257 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770072648 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22085956 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600819277 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739740301 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508816619 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494118088 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.46180196 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.512879492 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511281794 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500060618 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807568227 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497951176 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495559099 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512230705 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281588333 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.50356531 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.496502047 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.493712384 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810296396 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580256576 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.500675119 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4960225 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487273124 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494391904 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.501125706 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631923602 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137969008 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510926173 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511644089 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.500217295 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492927968 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500054529 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228806291 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.505832732 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.502640027 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501643509 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496653667 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496748004 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520009663 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496353504 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.517369313 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496173446 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420167546 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505635787 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502757325 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112482964 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49704034 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.49997752 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.726067704 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497165634 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497057937 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.497955242 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498216485 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.345140895 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506855607 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.464068801 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544102028 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.271535199 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.745240616 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520830077 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528842245 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.721571203 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.463999661 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498561924 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.509931541 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504798475 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522990002 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.280163692 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498114468 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.506203038 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.748510352 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.713474558 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508480941 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.471934143 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038600044 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500070418 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.524812294 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.508563136 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.751438727 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.215795899 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821958063 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501780738 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534578136 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498713064 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412261746 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500760302 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.511332044 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504196827 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820160279 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.444566323 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503334256 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574700495 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510708261 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501923299 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500285865 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503519448 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.50051502 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.723044902 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514294771 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.819035088 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.503672554 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501568291 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.50228686 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500789328 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.50761502 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.724775176 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503190604 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782019515 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501707519 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502187213 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501886648 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.722025932 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.502007836 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.531560535 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842811338 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510933613 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512924029 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823697044 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535797686 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616846102 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534830317 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.508584474 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.757226474 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.508186831 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.509676013 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514362551 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.508661228 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505416452 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.512269561 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503232575 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221919326 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505563891 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.508664818 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.502440491 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.520249771 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578332301 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511834559 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.755807435 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.514540208 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497841949 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.532852476 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.513980939 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726114965 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818232061 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.522606689 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680996328 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.042884955 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220969201 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521848789 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.504480426 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.505671389 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.50339016 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507924081 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504082055 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503998821 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758585566 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832556055 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.501981145 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.248621991 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507892408 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513202195 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.514536639 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820640879 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.515086147 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507347509 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.505513868 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506651652 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516131028 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.826177882 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728191481 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.522588066 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.50713814 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.024918025 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513590022 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.508328313 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504868737 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535301647 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506453505 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45293701 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847414713 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519632893 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824135279 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.507585368 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.525487539 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.504752105 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51661125 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516284226 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.5382328 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51600633 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.761344583 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.513242874 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509010785 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14768466 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445236425 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164905756 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516587459 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.510890158 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.513709885 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296950869 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507928288 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508681419 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.792979697 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290251772 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509115288 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050304648 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.50875433 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.430447366 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826595179 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737995616 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515591875 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.522124935 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832133196 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.723938237 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535854924 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520102355 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512917586 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.477174396 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137750308 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510258629 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693676419 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294403604 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529002646 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.516220552 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.534399596 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.508888663 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002424418 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.513220715 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510457623 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.510533039 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.546546421 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457835075 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516789026 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510451851 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248633774 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.528709296 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.059596864 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510743701 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.767078242 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.834804691 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.802652596 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.527848254 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.522153226 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.759271069 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830031531 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513111808 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.529549611 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173710581 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.373187667 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.519256347 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512345993 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443657039 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51648754 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857695845 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.521031582 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.515237749 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518932767 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512998282 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513002084 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.511988637 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.521205919 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508047973 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08175383 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.508938398 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530166609 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519452123 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517753625 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.763506195 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.530456127 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.234977941 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745067886 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521324071 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546332292 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.517715013 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532135339 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.485788741 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.513400143 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.513909199 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587754253 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.736495083 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.512339109 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.485590147 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.546053748 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.725086911 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513219354 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.52675291 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785366724 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.519518567 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.520694795 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477851925 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547187874 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.525605407 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52001919 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.513135848 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555326168 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589197225 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771142892 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.838318021 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.836853091 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004613524 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530425616 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.520905534 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.530820092 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597682661 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514806558 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.522372378 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.515001802 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236545666 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451632122 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246855439 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83885555 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.517104825 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526113742 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514679811 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758626771 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516137036 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793639868 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516347185 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.509810394 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5592985 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529294587 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528341973 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733994129 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.794006965 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516974831 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516903876 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522808737 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.517419447 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841297283 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.730587946 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0907286 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138836224 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519501108 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.519946526 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316577711 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.794964919 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519223325 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.520170895 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519033797 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.522879994 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.519547749 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.53101463 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536158682 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.747759215 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837107812 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253879766 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.837833545 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.553436256 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.517962853 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518040161 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.77040346 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360901814 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.776983545 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251974989 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364204438 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774319625 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593713052 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778151451 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.524319972 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759356784 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.517825162 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519910853 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519127182 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519742255 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.518784822 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.837848949 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248851872 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775598279 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.526935616 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.518984805 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550043387 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.776008479 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.749622605 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418002094 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.745750557 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843536932 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.528992983 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519873996 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252161241 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843183931 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52328389 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.527356126 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788628808 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526071505 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557399663 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.392268102 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.520392387 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145218133 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.735164525 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542568341 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528799487 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373174065 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251732054 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.525274572 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098882467 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523795946 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523766411 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803545841 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.529769779 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.531354378 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.807965352 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.528806833 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.53110158 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78640104 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.25114347 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.436331131 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.530928784 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524626443 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.526284851 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524153498 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601994741 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524880035 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531459803 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.018206029 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.526925825 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523325368 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536885377 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.524967733 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537419005 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.527479895 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52433631 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.532189278 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.506902556 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.495164019 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.54341272 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6583895 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157772855 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526269196 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.140473246 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.865772449 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.774412126 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.538627433 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.497553562 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.530935801 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525272128 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525949427 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526052687 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.523666425 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174902523 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.539718475 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.849296484 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535132496 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.738220917 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73780335 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.532963121 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787869197 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544741946 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550417918 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.492525327 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525812674 seconds)
  done (took 1055.393639423 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.532645024 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.54304632 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.548060049 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.576998718 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.55033562 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.551521483 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.606815934 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.552339374 seconds)
  done (took 21.840404147 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.529664409 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.525544408 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.526894967 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.525929493 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.518427908 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.084298955 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.525228907 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.526557307 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.542349016 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.529562313 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.527518588 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.251639954 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.528748715 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.521894169 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.522013101 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.527989118 seconds)
  done (took 35.1041346 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.727252956 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.748363404 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.035270869 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.522724513 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.533760101 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.539415366 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.927501082 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.520486723 seconds)
  done (took 28.937084993 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.533605682 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.533384388 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.534809752 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.533651884 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.533660338 seconds)
  done (took 9.050887994 seconds)
done (took 1320.728821363 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.536759424 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.534695159 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.535719298 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.535658589 seconds)
  done (took 7.522429656 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.495729642 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.497329347 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.495817578 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.509278989 seconds)
  done (took 10.379369086 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.376751886 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.14204992 seconds)
  done (took 5.901923639 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.112074949 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.101972063 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.091028341 seconds)
  done (took 7.691205734 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.832205461 seconds)
  done (took 3.217421676 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.520479784 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.535278558 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.541396938 seconds)
  done (took 8.979015209 seconds)
done (took 45.075067699 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.520025254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.2912362 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.676640992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.520584298 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.684243315 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.676771233 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.794959041 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.533147456 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.530022216 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.528817262 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.521234927 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.684093611 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.783464564 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.290958397 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.782110818 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.288810149 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.684768769 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.536457967 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.526051565 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.537408718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.795596315 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.521599042 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.521014932 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.520907805 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.68489158 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.667577295 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.523976858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.290659365 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.523077663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.522257054 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.668597503 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.527565386 seconds)
  done (took 87.542924948 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.532503047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.521328377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.548148357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.542699262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.542628252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.524394612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.544205963 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.524265774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.530588745 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.535528816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.523893194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.523760134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.52464361 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.523639756 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.524306558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.524030063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.544087826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.540215266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.543084731 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.524824601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.524140334 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.524032927 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.543802384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.561451267 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.523062317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.544775911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.522838964 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.524307643 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.523783714 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.545116498 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.524650343 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.524557343 seconds)
  done (took 82.414796646 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.528832479 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.52469726 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.526104378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.547574585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.536879418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.526419825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.548315947 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.525697708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.527203979 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.527137599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.524278683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.541546422 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.529610433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.526091256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.527769047 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.524885963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.538064353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.535776809 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.524905604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.545365749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.527846706 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.533381474 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.540048907 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.532196152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.539914088 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.526083893 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.551923356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.539723529 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.527374868 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.531046671 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.52671699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.548212416 seconds)
  done (took 82.448934763 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.771942085 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.542748598 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.544571737 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.537874763 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.546523461 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.541804816 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.536059039 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.774292093 seconds)
  done (took 16.184417107 seconds)
done (took 269.975368238 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.550665621 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.110631026 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.565164626 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.537536758 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.555588655 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.56441682 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.771774937 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.564591284 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.761416417 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.55703464 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.553669456 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.539450875 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.500225696 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.68892594 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.424591815 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.551668309 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.53331211 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.538310173 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.189459783 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.795071611 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.567219097 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.530564485 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.434334588 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.550343517 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.506070703 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.614984189 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.615399404 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.708476267 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.669221242 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.61292471 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.108748883 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.543018199 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.548235935 seconds)
  done (took 70.252160397 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.536390497 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.546207798 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.54698643 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.54676671 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.5464398 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.547366442 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.536756477 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.54892436 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.547341204 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.547977013 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.548552751 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.548844351 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.548456688 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.544690902 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.547995841 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.518859427 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.538849975 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.54717388 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.537411168 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.518535541 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.546751162 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.547698912 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.548303941 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.546876711 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.548144782 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.548039166 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.548836716 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.550351928 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.55097717 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.550035553 seconds)
  done (took 47.72820608 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.548739113 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.182314606 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.40024578 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.546737593 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.541670482 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.545768584 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.898284217 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.549649181 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.545128176 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.544304039 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.085928549 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.554261358 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.579195478 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.410232325 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.545584103 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.551159521 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.551814441 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.541111812 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.196624422 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.551844235 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.896761432 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.550889558 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.897842401 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.557012541 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.544839719 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.541764666 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.546630066 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.416869403 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.566576634 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.086633554 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.531438513 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.892899988 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.347424848 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.469408071 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.548573099 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.551844599 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.552168963 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.098808072 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.549224421 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.543231449 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.8947202 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.544579883 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.414361458 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.264698783 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.565986236 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.553341779 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.463165424 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.095262796 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.845138232 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.555685043 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.451549516 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.5511258 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.555894137 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.545388067 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.848044081 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.55319938 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.544826311 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.530313272 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.550835725 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.896971857 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.560146617 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.544633566 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.19509238 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.549251586 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.20731496 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.547313752 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.554371035 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.545795363 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.42599616 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.550926259 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.283270282 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.567503732 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.554541014 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.095063243 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.19419803 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.504809893 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.547333845 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.206859211 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.399110425 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.91651091 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.553646314 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.408979823 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.922463295 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.555275571 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.558940639 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.557592672 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.556676593 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.620263557 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.891453884 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.203989931 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.28349472 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.532597218 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.89888951 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.558278095 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.547715621 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.536842853 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.558088254 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.555836715 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.421389824 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.288962923 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.567867995 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.556407382 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.273107588 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.570114372 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.902240376 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.558880178 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.467539581 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.552461649 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.621416832 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.557664764 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.556641405 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.553821852 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.899847021 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.555934891 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.558659768 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.272275908 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.124547554 seconds)
  done (took 217.293539313 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.553918097 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.542590923 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.554120281 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.541641243 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.542115171 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.551353969 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.540700648 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.542537178 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.548211282 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.542781795 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.544275042 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.552003337 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.549776091 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.542665107 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.543490722 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.543751704 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.542303407 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.546340171 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.542807642 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.544540203 seconds)
  done (took 48.310481727 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.558052421 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.235933388 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.18688604 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.564069055 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.560489832 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.552248196 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.620963342 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.564025971 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.559046716 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.92308907 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.769370785 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.563022291 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.559659313 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.560239208 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.19070917 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.536175376 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.920506958 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.240428132 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.566887703 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.233952668 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.535559769 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.56079155 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.54875052 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.233789796 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.935346679 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.904047356 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.628193525 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.239297355 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.564830996 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.560860717 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.23214186 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.567527421 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.552297496 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.220282482 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.566308947 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.574310566 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.562638797 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.623910994 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.629339904 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.927238053 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.246402469 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.916182217 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.578036462 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.730057716 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.563932081 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.53072964 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.252009822 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.56869808 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.532211053 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.563052907 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.568542023 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.204610561 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.560213996 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.206146248 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.567984001 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.563579697 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.238751999 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.217961577 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.219691851 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.767657426 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.552451751 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.907240613 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.564510219 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.250709876 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.562157333 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.56447834 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.564656827 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.769684273 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.240861543 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.908035838 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.921548035 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.920810084 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.567169932 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.63767765 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.569611703 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.922257862 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.63628145 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.991922478 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.923668852 seconds)
  done (took 142.608296047 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.874327111 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.685207321 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.998937878 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.198860171 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.121657262 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.718507751 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.689761919 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.837002032 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.560795879 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.665242815 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.32740034 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.666466723 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.393105465 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.635335511 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.684752985 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.702449813 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.020189176 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.551012935 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.301813524 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.300508118 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.579253891 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.669072947 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.100947112 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.7925873 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.56509991 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.194775693 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.581391634 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.135288298 seconds)
  done (took 58.958457931 seconds)
done (took 586.541284551 seconds)
SAVING RESULT...
DONE!
