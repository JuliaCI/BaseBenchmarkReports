cset: moving following pidspec: 9265
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.259012167 seconds)
loading group "string"... done (took 0.637594272 seconds)
loading group "linalg"... done (took 8.155311588 seconds)
loading group "parallel"... done (took 0.169453305 seconds)
loading group "find"... done (took 1.250889666 seconds)
loading group "tuple"... done (took 1.922270644 seconds)
loading group "dates"... done (took 1.28938338 seconds)
loading group "micro"... done (took 0.198482664 seconds)
loading group "io"... done (took 1.019332165 seconds)
loading group "scalar"... done (took 39.405994117 seconds)
loading group "sparse"... done (took 11.929554259 seconds)
loading group "broadcast"... done (took 0.975549439 seconds)
loading group "union"... done (took 13.828772087 seconds)
loading group "simd"... done (took 4.798307154 seconds)
loading group "random"... done (took 9.254012858 seconds)
loading group "problem"... done (took 1.608746187 seconds)
loading group "array"... done (took 21.397476957 seconds)
loading group "misc"... done (took 1.74269547 seconds)
loading group "sort"... done (took 3.356519666 seconds)
loading group "collection"... done (took 18.198270032 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537333278 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126664384 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137411826 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120597025 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150540948 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117921284 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125864094 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085023912 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.845214606 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152844448 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114850329 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435608116 seconds)
done (took 5.337982258 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175970673 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088428366 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079361982 seconds)
  done (took 1.227492105 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06597494 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127589554 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067833223 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068287058 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067797386 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067122583 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067512576 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067382317 seconds)
  done (took 1.593036336 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073395812 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06937805 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066850429 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068509133 seconds)
  done (took 1.338844889 seconds)
done (took 5.471881814 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.797951914 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210943602 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192264498 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.414615902 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136447862 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182922815 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656124381 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32066105 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.204723509 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095588164 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114011378 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.364232816 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125314151 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653606626 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081841097 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096631858 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140330949 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435541175 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072675133 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08584691 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092782037 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132207548 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089006395 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076961157 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152358586 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070779194 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144260672 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084217905 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069672478 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221905531 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175965516 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66561669 seconds)
  done (took 10.457184061 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103446817 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100632098 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069943703 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125882295 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099914237 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070485415 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076004189 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0714549 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090633051 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129743698 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091830262 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108993386 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066662617 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070040221 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083952315 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.1983326 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081077257 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082048506 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06877328 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079214363 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113304931 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079099721 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080502783 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080227509 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129932902 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169258917 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097366867 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098916851 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067291266 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082636502 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116772465 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127775265 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068138483 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067137298 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126328067 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095759037 seconds)
  done (took 4.567737623 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.102671657 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152681491 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090615919 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140325895 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065749622 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112182686 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069150418 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083160425 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239678027 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.386937719 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.630934354 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.14879825 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117024119 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105039897 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071298497 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069900845 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068494551 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.250200649 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098671356 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117257909 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083402482 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070730174 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069204615 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065165481 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072125062 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064485848 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069001033 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08831213 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07639401 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.336316842 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126247923 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069070575 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.83722162 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168199345 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068853391 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10632251 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162573467 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092641778 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096765046 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142566076 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068706604 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064866642 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.295850825 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065703671 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072834433 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067742904 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085227605 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109607789 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121976037 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066088837 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066670273 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166387254 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065186687 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082565824 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.249868231 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153266198 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06922682 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296995122 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094176708 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072478468 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066164651 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.189787159 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118196048 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069557499 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068257267 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069894471 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069344177 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369059613 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066900762 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.929038525 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070714093 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07727243 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073831957 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071858622 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079592527 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079583948 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093110391 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06775991 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06467702 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074362173 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067257139 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066840274 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067170188 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093859892 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065834839 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.389391553 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06805033 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064774692 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072654505 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06527321 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094160668 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099200525 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067352544 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066295116 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102645653 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070821411 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06675818 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06814155 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118965355 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070296146 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113308458 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.17034065 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.071500147 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097943061 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07047587 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102258625 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07967106 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071463278 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.465847754 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068075892 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075092077 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068259472 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070059564 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069062206 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081762615 seconds)
  done (took 21.778603798 seconds)
done (took 38.965446902 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243037185 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083429271 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084441936 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084285076 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084435764 seconds)
  done (took 1.728555404 seconds)
done (took 2.859775573 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126784801 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099791582 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065211605 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0985076 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066175921 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102827516 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103458188 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083501446 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100151745 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065187213 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098075694 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065234534 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064929606 seconds)
  done (took 2.288359933 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081924686 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08295926 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070803857 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083263334 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063284166 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082997741 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082008422 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090139534 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08602984 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074041947 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064611224 seconds)
  done (took 1.985147661 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082204208 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084146213 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069595312 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081607535 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062890935 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081691494 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081584996 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085669903 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083483238 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07532063 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064541386 seconds)
  done (took 1.970613626 seconds)
done (took 7.362822968 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076493995 seconds)
  done (took 1.186913796 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.539699347 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.634167798 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079001553 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100907934 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193747982 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109762582 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.238933566 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08354271 seconds)
  done (took 8.261878666 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096336919 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070031537 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083944406 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070757764 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070742746 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069222626 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069254086 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07041496 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07017893 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070736148 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069789089 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069634252 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07057414 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071180913 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069964115 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069935748 seconds)
  done (took 2.354258898 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097639817 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095849175 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074384033 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076231267 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072809817 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072924268 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075080125 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074737585 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072184223 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073424662 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07594804 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074548997 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073606825 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065076274 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074688376 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076984225 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071755802 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075123762 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075091514 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07627318 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07567561 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06467208 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074029551 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075052682 seconds)
  done (took 3.034011533 seconds)
done (took 15.958625344 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116155798 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079448038 seconds)
  done (took 1.309823783 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079124324 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07994474 seconds)
  done (took 1.284229191 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078522913 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062883426 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084948209 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074472416 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063542318 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063544604 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082814296 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063626207 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063549135 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064300442 seconds)
  done (took 1.827925705 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065700003 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073392555 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069808704 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079747548 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070978358 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065138251 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069278315 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065954441 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074425437 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063898528 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06896684 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084146182 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068979728 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085328809 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068890785 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069056622 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07084867 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067847971 seconds)
  done (took 2.408387059 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062860505 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064797395 seconds)
  done (took 1.258046893 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066548453 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064205288 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066619632 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066719733 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064349556 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062792463 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06430224 seconds)
  done (took 1.581301144 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40661392 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122298603 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331618119 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070805376 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080555668 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257777875 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066075115 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071471434 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071582093 seconds)
  done (took 2.648313308 seconds)
done (took 13.449039308 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080846428 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086458117 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098540534 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412234831 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093968145 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068107762 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114567464 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181681794 seconds)
done (took 2.277614258 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210443986 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.07767401 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.49440838 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209802167 seconds)
  done (took 2.912651483 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.464154011 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081069417 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077432885 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067733427 seconds)
  done (took 1.834635101 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067250358 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070933552 seconds)
  done (took 1.275865133 seconds)
done (took 7.373560378 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06551347 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090542713 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064827243 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065648266 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065079564 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065265993 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065201964 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065878371 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065414726 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064859909 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064986721 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064884464 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.06507836 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.065033677 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064760623 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065418762 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065174226 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065166404 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065197213 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06527487 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065434106 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065509276 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065580646 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065365559 seconds)
  done (took 2.763022616 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082309044 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067359576 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07004592 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069239909 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069958051 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069486889 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069249483 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067556064 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069594161 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067424689 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069283467 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069887798 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066681713 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069749912 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067156478 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069520449 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069314272 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067632995 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067100321 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070018169 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069134583 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067362683 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06943736 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069231394 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069493122 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069657924 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067265065 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06740944 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069372279 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069745868 seconds)
  done (took 3.223963176 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06584075 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061669391 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062498045 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070426677 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062495825 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061908134 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061665186 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062052261 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06288232 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06220457 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06276941 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061977794 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061735854 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062570875 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062231261 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065646622 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080111329 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062207448 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06177944 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062491921 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065408202 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06180304 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061774653 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061773044 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061531565 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061251988 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062556974 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064665807 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062614251 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061737598 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066474856 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.0661702 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061824405 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06685905 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066213785 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061231121 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065508849 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061527007 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062426976 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061528364 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061523532 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061580017 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062074362 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070640163 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061757276 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06300024 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061755268 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062680927 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062334205 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063488982 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061441615 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061583082 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.0634064 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062734008 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066900056 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06192605 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062303712 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061048709 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062671653 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061819255 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061346209 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061247291 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064663077 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06229129 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078552616 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069986007 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06181553 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062733488 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062216539 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064256446 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062725286 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076879992 seconds)
  done (took 5.737609688 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085213787 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087557332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066437459 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066179233 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061982605 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062094334 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070096195 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062437067 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066856326 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081577752 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062389554 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066779254 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066892412 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066268086 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062362863 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067188749 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070821187 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062505665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062087519 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066159644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062359658 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07050664 seconds)
  done (took 2.658813672 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150119141 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067772065 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105666628 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072806393 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07103309 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072758897 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068089425 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068389925 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068115448 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068754677 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068845197 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068249806 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070590812 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069021107 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068824339 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068600876 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068245887 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069193424 seconds)
  done (took 2.5193702 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079028963 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067763969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087395423 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067366411 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067629867 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067303449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071709362 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072472119 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066895735 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067911052 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072812281 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067451459 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067265804 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067521911 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067268384 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068069843 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067291292 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067712532 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072351583 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071594285 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071549292 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072588559 seconds)
  done (took 2.703821776 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078609705 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076239518 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082462489 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068530515 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062398323 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062381887 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068155473 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066725623 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06795785 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066814008 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067322876 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062089356 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069313488 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066968818 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069494895 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067119664 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066476471 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066931496 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066532186 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062799922 seconds)
  done (took 2.522773988 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084295751 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065244533 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065680621 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071817572 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065398174 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06526516 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072153948 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065269557 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065337444 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086246854 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065396822 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065740285 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072214751 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069285664 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065630975 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072065318 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071608123 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072202106 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065410606 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068016663 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086410633 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06551363 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071750858 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065802012 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065821997 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065637813 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065500837 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069618961 seconds)
  done (took 3.108911475 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065449318 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064645791 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065077374 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065320245 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065607912 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065658902 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065774636 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065226925 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065127381 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065657588 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064899989 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064789894 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064932095 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065035161 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064946952 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065047312 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065106916 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06554759 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065328746 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065582888 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065126688 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065041523 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065104069 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065443556 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065437028 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06515893 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065069508 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065709594 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06466163 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065214706 seconds)
  done (took 3.119957489 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075776034 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073685108 seconds)
  done (took 1.313601142 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063751787 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079581953 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061543057 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072999912 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071121945 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06541625 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071725119 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07138164 seconds)
  done (took 1.717212686 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086371943 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076453525 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065075344 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076131062 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075493679 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085139042 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126624995 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064324935 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074790762 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065483223 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082623102 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066703849 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074921556 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068921658 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074602879 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078177634 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061987913 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.06908353 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065858465 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062675772 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064500127 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077822349 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073863918 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062355457 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069470616 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091761754 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080703007 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063324217 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070857083 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076500734 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074026127 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061127497 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063860708 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064521914 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062442979 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074707237 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082573315 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071096958 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076617159 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065304058 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071717432 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062250861 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072498346 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074736401 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079482298 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064196862 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063909188 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061965113 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065083076 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070445163 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061892947 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069098267 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06170258 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077045472 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072306003 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079539175 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062939192 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070090967 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070839955 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071294035 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075412222 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07053945 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074068727 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064383521 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080207962 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073952634 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076017185 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062188939 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061315552 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062554353 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078348121 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092974164 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073881189 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064608448 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065070607 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062125715 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071522906 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064916465 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073553638 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075600322 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064073695 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068584081 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076531917 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069309303 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070621848 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070554329 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06284937 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067828687 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065448682 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083860312 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062903312 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06208264 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06556261 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079270533 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071221907 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063518336 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065362038 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078702866 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061043955 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064132558 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064508315 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069305847 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077208085 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068100323 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068039092 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07748738 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072859287 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068883441 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07024405 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060421649 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063784967 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065027608 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074102301 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059914932 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069785581 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066950497 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062858909 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074459142 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061208317 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062110112 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074938324 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074147805 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061339281 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060413749 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069312763 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062631583 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065071451 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075904454 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061232726 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061084016 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060519816 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070578091 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062130197 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070118591 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065952521 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069530602 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.185607947 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063334665 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069318744 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077166407 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068108733 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070587169 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075055969 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070348044 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063459458 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077025151 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071143722 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066236644 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073635843 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06832368 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062256249 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066018529 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070991938 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063262611 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071538653 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066433358 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070834941 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063907574 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063306883 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069897268 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065406175 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066427447 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068824302 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063197244 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079213042 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070582208 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062084514 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062553433 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071080968 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065586316 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06367858 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066652483 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071037387 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064957224 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062612803 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063955276 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070762456 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071762702 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068039413 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064811199 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073288394 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081187954 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063732863 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071041732 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064330157 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065253711 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064614781 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078464176 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075218045 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067946303 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070706702 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061577026 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073365261 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075880184 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066657367 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062196218 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066711151 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06775834 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075727149 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067632536 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064414894 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062657994 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069867992 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066422104 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07118473 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063878163 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066556227 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069373908 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062835124 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.0698626 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064631337 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078645355 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071554617 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062231949 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066722091 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062523599 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075073348 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061915433 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065583518 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066814179 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06474504 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063413635 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070206324 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061357075 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076343689 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076892888 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06924297 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066769868 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063951272 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076168894 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069441651 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072383631 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071000314 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074187063 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079482388 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066533216 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071107844 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079067504 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063848455 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062072655 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073085447 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062303676 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063155926 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063080064 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065487684 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071255968 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070735264 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07378882 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061548724 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070470734 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062333308 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066307748 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061837388 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072276996 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06973858 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067106147 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074631108 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063399872 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063008163 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070276245 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062464596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063476974 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06319877 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069233099 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062819058 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068605914 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06529556 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068336586 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064738638 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060679154 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06848016 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06290471 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068338083 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071854525 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062448325 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068560106 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070165899 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.190217214 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071499211 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068824686 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067317345 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072430256 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070698181 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06964016 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070880873 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062843965 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076684444 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063374997 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076668294 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068774839 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061476652 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070152562 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07082703 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069494596 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064744758 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064704481 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069932974 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063936171 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070614148 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076894248 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065646679 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080029471 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07575148 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069999521 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07114946 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069707814 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071126263 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066819038 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068555294 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064573107 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06942098 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063740583 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07250615 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071164124 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068889364 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070478721 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065107868 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070140501 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064913624 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061817741 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066700757 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066792054 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064039853 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077046316 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064571314 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067449319 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063676581 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065444704 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063628977 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061527577 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071547259 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072089933 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064648723 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0751827 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066703041 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070672242 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079760143 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061780487 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063112529 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062393375 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065974315 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076784764 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064662316 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078099798 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069414394 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067082528 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061657324 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064666613 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062723813 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062607633 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062563611 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072634157 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066311198 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063337914 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064066084 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071253335 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064802405 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076770325 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063870401 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068543645 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064408252 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062140361 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067141608 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066806225 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070969738 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065126342 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.0653139 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061888745 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064198355 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068162152 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070070034 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064350848 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069375553 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076634647 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063978042 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070948368 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066269706 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062174538 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070905912 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06368967 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063478053 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066715045 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071633984 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071498883 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064735749 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078683096 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063543349 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07012184 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064211886 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062508126 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066130623 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064160078 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064060425 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066391407 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064843206 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076544343 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061989315 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069713689 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069020781 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067183427 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073755983 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063832904 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069375323 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068284247 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06475633 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069320492 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075787914 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066127102 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070010604 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06374057 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068176672 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072208544 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065522823 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074204776 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068123009 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062963946 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068381284 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064302499 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062854512 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062215967 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062128916 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072521253 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.195144245 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067617809 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067476987 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062623711 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070014706 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067655372 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077509511 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071230947 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071374551 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062419166 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06196446 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06531757 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065744485 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06958474 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070295423 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074349868 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070581922 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067452372 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063602166 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078020064 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074031151 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072268848 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065722736 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071434313 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064566492 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0716682 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068743964 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069293901 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0660812 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071941449 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069741825 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06715782 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074302695 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071745658 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065137374 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070132386 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070052378 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069388925 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062221912 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064067171 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070727145 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07305276 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070531733 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064790993 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079801742 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064738099 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068729585 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066537735 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063508113 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072955309 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062275522 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070294004 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065281368 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064807808 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062427421 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067016561 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065695871 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071334588 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066663514 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062285126 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079765267 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078400249 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07039215 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063531519 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063326752 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062588994 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062189331 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066742833 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064819889 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070039018 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079826521 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066359606 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066472167 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062894838 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064228362 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071446501 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071777298 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062798291 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063733229 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068130985 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072663284 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07747448 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064452122 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065009423 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071529749 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070849104 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062297285 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066616109 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061251754 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071871027 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080448765 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064449549 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069576683 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089309574 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07645446 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064148027 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061854424 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063706156 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069988071 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069332311 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064455475 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064965943 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082461243 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070761282 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06600479 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062406607 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070427603 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066606984 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077856418 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064477554 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064393838 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072456904 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069974975 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071157229 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073921899 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077029604 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069587341 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069510364 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062496883 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068212437 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062323636 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065570658 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063823605 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063628049 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066926423 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069201649 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065502256 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08020399 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076526831 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065528009 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060916372 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065431221 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065746988 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061310864 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064182213 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061519396 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061655599 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061274368 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062062745 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069174802 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071441774 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066665148 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062942398 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.19765425 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06230563 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074076951 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071200476 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070950614 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06203832 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064452804 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064823674 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072598834 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066082124 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065430125 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070535087 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069876684 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070082329 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061916676 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075345968 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062859358 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070145312 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066671979 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063705913 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064450256 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071560076 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06844876 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065058168 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070748649 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070706833 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065511684 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062411514 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06197387 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073447237 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062133512 seconds)
  done (took 42.495351637 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100993827 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063256058 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062519632 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062348443 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072019039 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06337928 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061935775 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063519593 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063275495 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065465697 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062398465 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062186192 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069615656 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077005013 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07228486 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066541596 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062449329 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063097717 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062815624 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063432994 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069905995 seconds)
  done (took 2.675622006 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070111629 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077887712 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075261349 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079193125 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071856966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067315806 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074941738 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067538682 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075245482 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072410122 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075198746 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067263868 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073020924 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073451541 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072955321 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068611697 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075979092 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071325281 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067580306 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074942493 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067540471 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074893515 seconds)
  done (took 2.846901197 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064186615 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062932868 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070129503 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061400766 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062838325 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061769659 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065860077 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061417238 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065357082 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065965444 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065616398 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065761594 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069806889 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06164222 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066741057 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061511387 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107147789 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065501011 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063486787 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06422073 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061757972 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070671437 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061691586 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061855812 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065327132 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066105745 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063953193 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061632389 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063535652 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065853037 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063488769 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06152512 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069968887 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069369681 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065976401 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065714007 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063055522 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063362355 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06201807 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06217529 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069526313 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062010889 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063908729 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069987724 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064287005 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061635306 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069738697 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063083364 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061758134 seconds)
  done (took 4.464520812 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074978462 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110203177 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068555514 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090594125 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076542492 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069442136 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067908237 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09284039 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063409196 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064760119 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077707432 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078324408 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065647218 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067291493 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067970596 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065754927 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066562146 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064592687 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068821241 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065242426 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068901895 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070092991 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076642314 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077333314 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066919949 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064374856 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065053456 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067097527 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076755168 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069260416 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067109003 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067879704 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077162665 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070445655 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064999252 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065188034 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078083035 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065983964 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065909496 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063452678 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064715297 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066951912 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06961869 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078307487 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065784675 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07049131 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065803075 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06325616 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077415687 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065698491 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070070271 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078466387 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066967904 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065876147 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067114846 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076746827 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066155011 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064224904 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066190931 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076590949 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063362673 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066731813 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077875251 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064618546 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069497204 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078066955 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070492761 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066874359 seconds)
  done (took 6.19212308 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072860431 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094259548 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079187914 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079674882 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073617257 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073905724 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073901936 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07359908 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073717286 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077554742 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073546273 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115168703 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069033012 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075401385 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073685412 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073479332 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073801647 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073875086 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073505704 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073553221 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073376893 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079318856 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073548598 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079656375 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076804483 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069169314 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073738426 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07358424 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080384029 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073971577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076573073 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07354519 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073734836 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080306277 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076682493 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07330095 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063062023 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07321447 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073482061 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073423834 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069159352 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080159596 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073569624 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069559945 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073899247 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073756949 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080147753 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076597942 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075320757 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07731318 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073499024 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079803722 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073526562 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073712822 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0800268 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082502413 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079638176 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079965194 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073619844 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079855307 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079750059 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083050214 seconds)
  done (took 6.008213331 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078191123 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070816788 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081503014 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061868422 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062033568 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072655545 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062156558 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062348041 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070729164 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070850429 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072642341 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072411868 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077494217 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072840482 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072435417 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074876604 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072424503 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073071629 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071024473 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072903834 seconds)
  done (took 2.708293401 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075932028 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081485439 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068546187 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072415414 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067604688 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072424376 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067543738 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06792917 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068273533 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068065895 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073989207 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074322802 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06871803 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07271012 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074602509 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07237208 seconds)
  done (took 2.41722437 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083856016 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071042596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077838272 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063533365 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067443231 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062884919 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063404099 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062126488 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063095706 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07684065 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063978301 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075026622 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063549522 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06290539 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063811498 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069770664 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062965766 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064169352 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063875741 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076854493 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070858991 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06478078 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067917471 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064006313 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068887571 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071064195 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065495564 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067362412 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063394817 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06391552 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069930701 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070578901 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063362606 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064339674 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062830939 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06340988 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063414367 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06423225 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069746311 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063761743 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08009851 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06863623 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063481941 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064780627 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062758324 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064015758 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062653346 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069488918 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063909511 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069593517 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063461224 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065832302 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06396137 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070894861 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065972531 seconds)
  done (took 4.952698242 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078697447 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067375174 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061981886 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061642622 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067059712 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068212974 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067843869 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067739372 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068646732 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06248921 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068398237 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067031857 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068176793 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068155896 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068490416 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068159909 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06268694 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067716202 seconds)
  done (took 2.495560455 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072653452 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06718664 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071522285 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067047389 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06728018 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066445128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062211399 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062424793 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062479098 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066995473 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067211069 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066706005 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062653603 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066637192 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067443292 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067083546 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066938168 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062473931 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06724977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062408319 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066787105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062567779 seconds)
  done (took 2.728413222 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09517799 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084075613 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140362339 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079792233 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087197405 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072408338 seconds)
  done (took 1.836416925 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092318401 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098582798 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067452239 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067495291 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073364586 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07031073 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070612323 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071084494 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075276402 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075816798 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07102827 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075570305 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075733297 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077289339 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072918683 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0730952 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070660206 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070865031 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067768348 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083121043 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071022937 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075473172 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070990922 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071230981 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070832608 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077229302 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075498036 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076141398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070722788 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075633564 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073319408 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070810479 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075619315 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075374007 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067786764 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075238469 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070961672 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080954139 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072946084 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077602816 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067678685 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073322083 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075844701 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074976426 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075644057 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07115759 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075144337 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07105524 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070865486 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085741686 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073093995 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077054245 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073059522 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075854099 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075439285 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082097168 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07582812 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077333607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073436616 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075793419 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077443819 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073263044 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077061719 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075804295 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073151201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077356523 seconds)
  done (took 6.212102962 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104131032 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06856849 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071433564 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075976487 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07678514 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071030958 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07122955 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071362698 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07089224 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06831045 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106369273 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071568546 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077728611 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077569124 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071611209 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071234807 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070799841 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077398868 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068252499 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082571437 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071073461 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077403675 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077360808 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077568582 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075785762 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073726759 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071252677 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070722769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071082691 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071404298 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074996162 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070993412 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077486044 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068469623 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077435971 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071410291 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071098811 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075246512 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071137908 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073586879 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07830617 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081091241 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071219356 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070964995 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076152827 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070999174 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071541342 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068267556 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071470512 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068260045 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075702319 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076332923 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075760254 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077530308 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071179304 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071283243 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070960332 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070818545 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071423352 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073581384 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079440911 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071096874 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082745066 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070934306 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071534046 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077768742 seconds)
  done (took 6.211192676 seconds)
done (took 126.773892401 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208819921 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185584702 seconds)
  done (took 1.665043517 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073945842 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104860793 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083584009 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134227998 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071650179 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10531686 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104690587 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083849281 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071550931 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071336975 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071616363 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073957681 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136770453 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0717023 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072117556 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074456779 seconds)
  done (took 2.69435778 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105832872 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167019503 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108830318 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069358625 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105011303 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077334397 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069526589 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082648899 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076482593 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071594735 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077902197 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075721688 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071658887 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07540086 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076261534 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077394353 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.074256276 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077385453 seconds)
  done (took 2.829767907 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103841367 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094529215 seconds)
  done (took 1.489825095 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172168026 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133567547 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203172082 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346349505 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.151740005 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.430960289 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138471325 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.13886852 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113138331 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13523216 seconds)
  done (took 3.249807047 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10481634 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.200008581 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297673684 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12159205 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076292866 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111686673 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122636807 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082185287 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081407054 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081460665 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081111574 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078269579 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101521679 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077156916 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076303422 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078706655 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104047357 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075103399 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076260799 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076744992 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103850979 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070160348 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077100945 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075197238 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078995825 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079352809 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071837898 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069837041 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076118418 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076009118 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079359034 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.109096282 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079351204 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105996655 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07445984 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106730071 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079139704 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074732271 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076042547 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074961837 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077725091 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077965906 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078621185 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078423151 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071206963 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078639095 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071359977 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069535793 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080371758 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071018716 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080417017 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079201478 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105309642 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071763318 seconds)
  done (took 6.14926245 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108439985 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10763106 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071618845 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113374531 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104924299 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071461671 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106604262 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09968599 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10817663 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071287124 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069737074 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071616255 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079939591 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081471747 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116626061 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10894552 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073347697 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071209588 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108775055 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108272862 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070578943 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102532861 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098645227 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108068652 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069406056 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071687157 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06969436 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071629057 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076575663 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078287695 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0704282 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079584321 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083904578 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077708969 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069239361 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06948626 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069609903 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078798992 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079324213 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078869627 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077291651 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069091193 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069940398 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070623167 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070176971 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068729353 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077866822 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078807299 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077507825 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070260646 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071076938 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069462985 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070897611 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078399014 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076667169 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079155792 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078757858 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069513809 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069615838 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072188989 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079691748 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078330935 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078178953 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070291996 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078934377 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069617536 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079623316 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08267453 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070202615 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071060058 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069909525 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06967199 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070212997 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079094373 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076864093 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070401528 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069569475 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06993133 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079185269 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077388139 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069472837 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0765771 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06843123 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06979024 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070661527 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070366207 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076610802 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07825829 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070769981 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069577305 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069657334 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069174674 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0682786 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076291917 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078144166 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077871153 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077156756 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070572677 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078160968 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076969597 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070119083 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077653193 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068746188 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070302061 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069754453 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076818207 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075732011 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077060389 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069457656 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0684297 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074849908 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077684777 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068065045 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075185016 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076962966 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075581818 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067780333 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078265362 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068518775 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077274563 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068507848 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210707269 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070772583 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079478081 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070761355 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069818456 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069807759 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077986381 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07141275 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070455556 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070698051 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069881674 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078341262 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08197324 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071419969 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077177101 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078001668 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070929672 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077440852 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070318348 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07891578 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07115265 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070765112 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069235302 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080881894 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069768945 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069675589 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070673174 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078820861 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070227273 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079476863 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076998449 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069075436 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080816959 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07920254 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076822775 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079712619 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071341446 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070116768 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06976677 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069580587 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077377734 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07838439 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07108122 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070107515 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077157891 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079351762 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06913082 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077524461 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077499511 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078011106 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070034119 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070755591 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080308255 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08085283 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077933142 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07761271 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078407701 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070107878 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077452303 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077870709 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069959696 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0833451 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07018147 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081373645 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078169813 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076510321 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07851778 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079503778 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079420512 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079820252 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081711511 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069225649 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070318166 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077975521 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070115988 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070356072 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077422741 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070564021 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071109961 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081824187 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069952378 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079440882 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069419847 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078140659 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068566017 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071251117 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082641507 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069878438 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070791007 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078722264 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069716171 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077174068 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079256684 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077120326 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069243987 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070581082 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078309414 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078594092 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069486786 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071910258 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070948486 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076745724 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076716974 seconds)
  done (took 18.526824178 seconds)
done (took 37.909959932 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209200108 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155959265 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188217187 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116829258 seconds)
  done (took 2.062859229 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107709009 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099779947 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088085259 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066204312 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094073135 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066263597 seconds)
  done (took 1.846796177 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29790628 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203670828 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181939727 seconds)
  done (took 2.007798732 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210021214 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189942622 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.46200491 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284144164 seconds)
  done (took 2.56673255 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141302362 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082544453 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064695393 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082526848 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.124208094 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.150455595 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093324587 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118968544 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076072047 seconds)
  done (took 2.313996719 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149046919 seconds)
done (took 12.290167448 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.130464094 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.113807639 seconds)
    (3/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075131857 seconds)
    (4/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.211774802 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072752286 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100568954 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069140037 seconds)
    (8/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.202030066 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077052055 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.127502528 seconds)
    (11/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.167489624 seconds)
    (12/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.165509758 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077259859 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087841817 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100727469 seconds)
    (16/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.419660458 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075001688 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075436424 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07495464 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073628616 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.175939448 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075539578 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.104094169 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07522445 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.238214369 seconds)
    (26/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072783009 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.158712896 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07714728 seconds)
    (29/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.17865776 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073766756 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085225766 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089406952 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.204896489 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100639033 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13960542 seconds)
    (36/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.118417509 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138566602 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172012636 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075142616 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145220598 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065748719 seconds)
    (42/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.149672842 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073348454 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122668163 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116457248 seconds)
    (46/309) benchmarking ("sort", Bool, false)...
    done (took 0.15668951 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.206078034 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066260506 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176370457 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171071948 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.066891882 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06728244 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098117773 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073577946 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.164931475 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176483283 seconds)
    (57/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.134858538 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088227077 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065725607 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074550177 seconds)
    (61/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.088057803 seconds)
    (62/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.140602885 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.130257903 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077681559 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075103083 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.241066312 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066144904 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064841457 seconds)
    (69/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.0886919 seconds)
    (70/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.211204452 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129219218 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078157208 seconds)
    (73/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.171880009 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.198264305 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.177276056 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076264319 seconds)
    (77/309) benchmarking ("sort", Float32, false)...
    done (took 0.131287517 seconds)
    (78/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119036372 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081376903 seconds)
    (80/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073615315 seconds)
    (81/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.090571755 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.177575707 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065677488 seconds)
    (84/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086694048 seconds)
    (85/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.136908059 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076271688 seconds)
    (87/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.221655764 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.116204669 seconds)
    (89/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073575042 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064938751 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.318610664 seconds)
    (92/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080668315 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.196580337 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.129777887 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075327258 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182584687 seconds)
    (97/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080629469 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072862035 seconds)
    (99/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.0783061 seconds)
    (100/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091523005 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080628817 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068854719 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067069587 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072862025 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105621453 seconds)
    (106/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066160975 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066584095 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.167467826 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067783757 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073087386 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.125771533 seconds)
    (112/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.138667263 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066374235 seconds)
    (114/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171812446 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074721582 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075530378 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197800315 seconds)
    (118/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077266559 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070022605 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093159174 seconds)
    (121/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067366752 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.199738866 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.194734929 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.171194002 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174007025 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08886703 seconds)
    (127/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090908204 seconds)
    (128/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072549863 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076104363 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080216439 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079019275 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.14213839 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091049982 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074677888 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066658965 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.0876375 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083265084 seconds)
    (138/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074096119 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091960395 seconds)
    (140/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071024699 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066031318 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074355352 seconds)
    (143/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074278953 seconds)
    (144/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077097474 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065647326 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088466406 seconds)
    (147/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068581332 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074419543 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066968453 seconds)
    (150/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067125667 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121677578 seconds)
    (152/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066124199 seconds)
    (153/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.079680122 seconds)
    (154/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071504029 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065162653 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.230452907 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180387062 seconds)
    (158/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066525056 seconds)
    (159/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166201214 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066632311 seconds)
    (161/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074106028 seconds)
    (162/309) benchmarking ("sort", BigInt, false)...
    done (took 0.190582066 seconds)
    (163/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.137149558 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071704284 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067898648 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195039348 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074158943 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077351352 seconds)
    (169/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.213471182 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066221819 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080520171 seconds)
    (172/309) benchmarking ("sort", Float64, false)...
    done (took 0.13073213 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069810574 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066519765 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142052392 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087724369 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.06618993 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133440424 seconds)
    (179/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066337881 seconds)
    (180/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072267122 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089549691 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07263083 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066025915 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090502669 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074205603 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072545545 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117158019 seconds)
    (188/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066899135 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076168875 seconds)
    (190/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169212322 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068930198 seconds)
    (192/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.06550542 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065455423 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136014449 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065553977 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.209450706 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081538758 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073171963 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116962834 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065193644 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066862053 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.216449541 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088968696 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073839107 seconds)
    (205/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066924951 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065968994 seconds)
    (207/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065640172 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072066131 seconds)
    (209/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075100707 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.227770867 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093415642 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145677837 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067253821 seconds)
    (214/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068235993 seconds)
    (215/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067015774 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070199162 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124795078 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.08001977 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077827133 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074689684 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069106085 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136314052 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07312084 seconds)
    (224/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067368668 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066440195 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173922246 seconds)
    (227/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074854703 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065882026 seconds)
    (229/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066961281 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066585636 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066007315 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092637565 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066357256 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119604435 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074168026 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067347358 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075288005 seconds)
    (238/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076509255 seconds)
    (239/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067796585 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06655315 seconds)
    (241/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.218447898 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074827681 seconds)
    (243/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068375025 seconds)
    (244/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067150997 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066528414 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068148482 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094403438 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.0721725 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087879707 seconds)
    (250/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.06668402 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066955358 seconds)
    (252/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066725057 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065425773 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086774443 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123529085 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066025042 seconds)
    (257/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066474195 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092326213 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067320014 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067336125 seconds)
    (261/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071468849 seconds)
    (262/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07838943 seconds)
    (263/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09293563 seconds)
    (264/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065606904 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180046043 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070317199 seconds)
    (267/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092871044 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075748399 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067505897 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067383078 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109071095 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073659883 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128066441 seconds)
    (274/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069101532 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065496677 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078290001 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069536689 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067075174 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066420544 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067593515 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065768639 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065141564 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065987514 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066332739 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068753507 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066095631 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066733179 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112302216 seconds)
    (289/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07576259 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068046433 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179894314 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14289504 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066193607 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066384833 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074867308 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128544759 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065931549 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072854096 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066979724 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065812137 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065983918 seconds)
    (302/309) benchmarking ("sort", Int8, false)...
    done (took 0.144706492 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066058067 seconds)
    (304/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065340645 seconds)
    (305/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06706854 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066022425 seconds)
    (307/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066638944 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065592972 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072734615 seconds)
  done (took 32.878521162 seconds)
done (took 34.215881508 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088641782 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100404645 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075369319 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094931592 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082757162 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097882674 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075668185 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080863673 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083182495 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081595238 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080916851 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073679496 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076907697 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076208144 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074382094 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098430845 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080886219 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075402184 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075512967 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066549569 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075220424 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066858115 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066358925 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073150792 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078583063 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074320143 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076672401 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076071575 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066812559 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066991202 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07174997 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076081605 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066885872 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079253801 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075908157 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075586933 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077003414 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079884033 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066869166 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067439176 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076875952 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067121743 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075151842 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073458466 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071796432 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073849384 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075551006 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079486066 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097893678 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07131668 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077782662 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077966366 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078516977 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073278947 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072420603 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07512914 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072889634 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098162661 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075637354 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071348948 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076496063 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076138733 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073339545 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075683815 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074867766 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077495945 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079205043 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073575967 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076921558 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074273423 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067115559 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075818186 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071519169 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066853206 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078042004 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079631037 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066443365 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07135219 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074503794 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074956674 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066723523 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070989686 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066291553 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071445507 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071158429 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075541318 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072193113 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073902239 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066235372 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074993544 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074650516 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074520341 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066291019 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079509306 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067356933 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072997317 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066950765 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066569709 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066271985 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072184978 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066799452 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071451839 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075262739 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065928394 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07166208 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079778848 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067004359 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073804055 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066631172 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066346349 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077888968 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076957138 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066809802 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071107136 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066375849 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07201605 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066279993 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066179856 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066145333 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066142122 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070362515 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066466077 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070451975 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071409892 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078409755 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065589241 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070720872 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070364112 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065934343 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072383969 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066438084 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065614636 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065558792 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079372092 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070250414 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066266134 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071611349 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070748898 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074310687 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065097349 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074287667 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071966099 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069935144 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071626124 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064597449 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075890726 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069872994 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069350107 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064430654 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064739574 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06506759 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064814882 seconds)
done (took 12.622100337 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071370869 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118437399 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093578909 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09395657 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083157053 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067726363 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074671412 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092957305 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068800306 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098204608 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089103164 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088756417 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109647715 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066103832 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067411279 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068866843 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068505428 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078851527 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094556737 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08969347 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106541896 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067183508 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08668335 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087602924 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084165883 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090692668 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068072892 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068464465 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070387223 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08888519 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09426586 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072479761 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070689022 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.094420256 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.08856534 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083667352 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070039815 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.077398067 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068119426 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067867376 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06945479 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087903288 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075342595 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078414988 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068797498 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075547388 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068633873 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082989637 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.085424999 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075494908 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083058566 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.09132976 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070728319 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083517969 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066617234 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08325317 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076418177 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068707295 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068950676 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072995219 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067834628 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070296387 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078648253 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076875998 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072221385 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082140697 seconds)
  done (took 6.662138383 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085059611 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095136701 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083768418 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08520999 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06717833 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067525841 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068263141 seconds)
  done (took 1.984008858 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067917785 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087769003 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091209316 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091389607 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084112511 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094464551 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07547848 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067661936 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096540403 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066922452 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087340236 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097923423 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071141851 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079624974 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092812246 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067926074 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091955824 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068348858 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068414174 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09208197 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072563967 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09462484 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079408935 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068098018 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079982857 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067977894 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100340582 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075847002 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06917732 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069378913 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068733494 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094280906 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079762287 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081992232 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069022809 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083079639 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081504169 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071103778 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078586672 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077458924 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080800191 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068842605 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066792126 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069002557 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070314156 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079529512 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066575565 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069068837 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068690342 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086910608 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066523922 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079967455 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07130057 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073689869 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073035861 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072854978 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076074869 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069456691 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08701145 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068935751 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085545274 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083816946 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080945947 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084003691 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067730451 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079707979 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080721462 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.0685436 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069750153 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069212987 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084030259 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071631966 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069472517 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.0794976 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067485396 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092077603 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091692434 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06713948 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081686496 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068268105 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069166294 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079149494 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092071234 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07312017 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068792032 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071903358 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070104719 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070961418 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066549376 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071303445 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068515975 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073211489 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068414373 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071067101 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069972637 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083901807 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067147073 seconds)
  done (took 8.86641937 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070443346 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068719644 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070554879 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068923174 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06921124 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068713067 seconds)
  done (took 1.874202817 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092078045 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068482731 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081268116 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068859973 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104213405 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.084391074 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083833461 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078094568 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082561459 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080794419 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084336342 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087239687 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088681104 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07089423 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084373625 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070044885 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08396155 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072703009 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079551441 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071029649 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081920346 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070612013 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071131195 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088105374 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072581947 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.06950256 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077544281 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080161687 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080079239 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077980366 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070989647 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071919262 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076718967 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077710317 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084202602 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076698685 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069177925 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074715764 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071510239 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071949205 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086633532 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070846825 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070918814 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074660845 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078257259 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076359794 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074334789 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076994247 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083746896 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077376283 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075032574 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069627875 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071806096 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07514479 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076120113 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077716402 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074570663 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083385907 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071090017 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076449383 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068294547 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071835105 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077819377 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071940839 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075960014 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074441705 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076635219 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070481394 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070689163 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06868694 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0746634 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06959658 seconds)
  done (took 6.953771049 seconds)
done (took 27.791555728 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516052356 seconds)
  done (took 1.930684819 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.626359627 seconds)
  done (took 2.069279666 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.589901728 seconds)
  done (took 8.028773585 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403558531 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474753559 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.747976095 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134847772 seconds)
  done (took 3.23661881 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708449195 seconds)
  done (took 2.157230646 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237440521 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226614567 seconds)
  done (took 1.922457405 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34732448 seconds)
  done (took 1.785947313 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.05417318 seconds)
  done (took 2.494885421 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.239731541 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16092091 seconds)
  done (took 1.84775971 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44541335 seconds)
  done (took 1.887857766 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.204023905 seconds)
  done (took 5.648930861 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215524867 seconds)
  done (took 1.698157288 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234425253 seconds)
  done (took 1.682352058 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.756972573 seconds)
  done (took 3.203124714 seconds)
done (took 41.046781703 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083982918 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08571686 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085686726 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082043963 seconds)
  done (took 1.765420862 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07492012 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070587821 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074612319 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070868234 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074658037 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07097358 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072509329 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073697593 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07072112 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071235874 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071142452 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070955978 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074323747 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07266675 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069455202 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073843186 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07458228 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071134563 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074225236 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070805191 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069356797 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073734451 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074164419 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070111127 seconds)
  done (took 3.183960527 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079446396 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073657622 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075676799 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072096685 seconds)
  done (took 1.755736178 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076863057 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089159192 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08709736 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07784106 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088704552 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084455301 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067247398 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067295223 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069002539 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077013024 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066922334 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093309458 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086829936 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07722219 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07955604 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063934854 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065908393 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085650221 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078071484 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077707128 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068996658 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077423106 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066622703 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087440752 seconds)
  done (took 3.310995026 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086223999 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066752995 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.087218111 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091453967 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09302755 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066462505 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084636771 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093861875 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.14076052 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066501773 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072178913 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066725454 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104777904 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06651971 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086007933 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109034826 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113016909 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070288105 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098734245 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066480709 seconds)
  done (took 3.189146538 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084013048 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06951631 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070921317 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066056775 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076684817 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073125936 seconds)
  done (took 1.900802935 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068843018 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06837374 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067757824 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067956946 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072737208 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067989026 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066472115 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068115355 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068179498 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067997872 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067877971 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06706454 seconds)
  done (took 2.275338679 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.194899431 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070539735 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071031455 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066762826 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075290975 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067013859 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082576654 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069372922 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085712492 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067344138 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068054794 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069651874 seconds)
  done (took 2.445905323 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191797726 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07409996 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221431571 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144367167 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102087103 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109042228 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111052831 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107930752 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133301099 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097456453 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153845641 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160172366 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103516449 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126699874 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087217567 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120124864 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144438548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153025818 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099887859 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15363221 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135235311 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119729952 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140194705 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096861422 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101022578 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116059494 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071833939 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076833728 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158809981 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122786489 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135827342 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105023786 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089763875 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16554319 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161908454 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131785544 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142235143 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081413314 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.11769616 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127586526 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192680497 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08655371 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148829922 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101724227 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076937787 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119985839 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108764085 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.112720631 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.0994055 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086362644 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27225682 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173780567 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127648553 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083636768 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116877707 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105466309 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109671705 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113655844 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169692731 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149028365 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118135944 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069402821 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107308736 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141488286 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124472204 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104322428 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117645951 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089650337 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124218284 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147980124 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124738571 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13315482 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112836931 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085467975 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113497844 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130510932 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120573305 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159002601 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115148328 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071098552 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115461486 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095464283 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078184419 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142215535 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073975188 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163413492 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095805443 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120698929 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12524048 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104521179 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104909299 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149999083 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134892379 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100723717 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084049197 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099055969 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11461465 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136799356 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084145058 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103154956 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109168792 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077142861 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125438492 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072220492 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111814036 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092023995 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112379264 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115660848 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076149119 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258967268 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100480039 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098029427 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123091506 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147528334 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085104787 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078547326 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155619045 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113264647 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100085014 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134845858 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148909611 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117886011 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094991111 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13721969 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163690782 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087304835 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151132679 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099246201 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08122617 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102569261 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115281358 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109139765 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118479706 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079194638 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.112625264 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154180254 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07264242 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093263452 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123796649 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079214238 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078070315 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101350163 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100607862 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093714593 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098120208 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101022602 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130174719 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114422971 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100067124 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118079851 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093892376 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156155396 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085134596 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098607359 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100792061 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070789846 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126062998 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145295969 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076747766 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150895191 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115648685 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110186943 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11181655 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080555946 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128708513 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076492961 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070500496 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131834486 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106201637 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102646072 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288347647 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109862339 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118437989 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.113065019 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126450975 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122320595 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.121757435 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102835448 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086810824 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108704606 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123144329 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071473531 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088763437 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08025761 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0994433 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091122016 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081663597 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132148459 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116061994 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10607699 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108646115 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093239015 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140348836 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07646415 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118998124 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115499138 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09208422 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144513595 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143100871 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123003491 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097528916 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129398747 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071646643 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073188574 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086387695 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118380572 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081579295 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081466532 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109098608 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140444657 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119942842 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129103545 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118142327 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111927949 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147659643 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071031921 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116547013 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136366242 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113288504 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101247579 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08781293 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095758599 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134492266 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100319362 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169365934 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107203737 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115934714 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145416053 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096523118 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076764893 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099075802 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271692242 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099678047 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135704244 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095833899 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084867682 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103535571 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076999493 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095644751 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120687164 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112933041 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129019432 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.10735279 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122975305 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075962523 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108097192 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114875129 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116151295 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081713588 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111603309 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158171338 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093652174 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111049216 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142438495 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077070983 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134459467 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163204076 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135656369 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082000241 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101549986 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113684068 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120199602 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113183677 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131051302 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101289255 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129392556 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105560335 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082853294 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083521123 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092501652 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099921499 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108582059 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101228331 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107669434 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092884356 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125876904 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099177785 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105554413 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1116891 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097486487 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092857665 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093288089 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163492435 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110532685 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157995735 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095232587 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.134014839 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149792414 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072568032 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076389846 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077495919 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128014592 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228038642 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12271173 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108562701 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111664797 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115167211 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131584923 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093643777 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069838091 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103666007 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12686413 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117251186 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093227812 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100280329 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149901826 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114766212 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076773391 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108455366 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111313471 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100532171 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164410946 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079638644 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10549989 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07534152 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078060162 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120345267 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143654992 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084236068 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100689367 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113348834 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106925716 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120362658 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09456302 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107638221 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125473712 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139205961 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120925798 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087298575 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106474295 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12256645 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144791649 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100180248 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096946922 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164724983 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142315456 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151106716 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085374741 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108093354 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108245197 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104667815 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128562255 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081898327 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151578657 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079524292 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126034501 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096881126 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086351752 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121015665 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107687698 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084573685 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282534185 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11017674 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081169739 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07908198 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107747783 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110815883 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099221674 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074191925 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130238294 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072043212 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125193123 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157489557 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078624905 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099883187 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092322361 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081034927 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099409196 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098458341 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083438192 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096937053 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160683978 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085383693 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138477302 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12587058 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106734935 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130819076 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100542731 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64029467 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078125417 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142036216 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111068797 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166324116 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095508879 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111769159 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105098062 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115963882 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134798082 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098407623 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175948915 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123587878 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110395744 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076518838 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098169816 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099468172 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085906978 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102909229 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107943621 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109026934 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09153968 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.110231951 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116455598 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080158912 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093146873 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145521352 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11134223 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133170616 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129928833 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082185364 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110644258 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125747361 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076689911 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.261189798 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142879639 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101972051 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097511113 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080967871 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097841462 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16012441 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074568805 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150033134 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112495885 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104497112 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106943054 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105430127 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120492882 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100805253 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112618649 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089942873 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105183627 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10664129 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116827535 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076854583 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100279643 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107091019 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.093621821 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093604802 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097077149 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141436439 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070980224 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09509886 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109955073 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136423455 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160969667 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102406509 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081920899 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113745035 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113940528 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107368768 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113842886 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079477002 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079046511 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079614235 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098135797 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120275418 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106554545 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114183182 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105009968 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151212737 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082005403 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220688126 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093077981 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100450719 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086596876 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078031923 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093339847 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093288487 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100227485 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106700957 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160328747 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.089817905 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086380038 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08854056 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072332131 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080178099 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117773068 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10291365 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106758108 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098329353 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079024752 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09676091 seconds)
  done (took 56.32997709 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106282489 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078155166 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09845659 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146673267 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122290299 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199849689 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150412602 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189241788 seconds)
  done (took 2.691250892 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069225553 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094879147 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102079695 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083032346 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067483619 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068299312 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229077214 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081114823 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06666274 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091483357 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077462756 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068880298 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.457930592 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066957851 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.0679645 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077601458 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067423283 seconds)
  done (took 3.389591631 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.375893277 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.606218332 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.357577787 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075287965 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.910010837 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088803037 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.191615171 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136804883 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081748784 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.519033153 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36446126 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133569827 seconds)
  done (took 18.40577562 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083282008 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076975727 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091979084 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09139352 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079029492 seconds)
  done (took 2.065532525 seconds)
done (took 104.178809288 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082500317 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.459883711 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.0700117 seconds)
  done (took 2.122694275 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091778899 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089638064 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090278661 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087313275 seconds)
  done (took 1.931821933 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076034667 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07754542 seconds)
  done (took 1.717848488 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233197502 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175894254 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09822895 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083877698 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081206164 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081636423 seconds)
  done (took 1.814385173 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073725162 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073840388 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07357015 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078011701 seconds)
  done (took 1.8623788 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069645827 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067263193 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.072424218 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072383496 seconds)
  done (took 1.846032164 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08567041 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085566154 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080350405 seconds)
  done (took 1.816110872 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102206264 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094889862 seconds)
  done (took 1.761821441 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081989259 seconds)
  done (took 1.648266159 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091046463 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102036737 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133892752 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115814577 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140195624 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119708757 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085509511 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089873396 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079802131 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087136041 seconds)
  done (took 2.610071121 seconds)
done (took 21.280095179 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079769254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372363303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361241945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091803308 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669670188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358739618 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983902174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093991955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144329549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070650752 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087516501 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651000435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975262678 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328382177 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961331411 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33196652 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653644416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06975339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069377336 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070133728 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967846047 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069037559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069861268 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069826342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651472639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37537674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071325752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331969029 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07086503 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075159394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360644835 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071761865 seconds)
  done (took 16.158300352 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07259116 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123064503 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074150493 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08609478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07155069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071553628 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073058939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070712759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123935088 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070379537 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088279134 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069937378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074868765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07133741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091456962 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070367314 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073120815 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071148476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070790776 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072001046 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090298275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070959955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071427257 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071081618 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071370432 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084656997 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072642996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070765932 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071854729 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075266423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076413725 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072986007 seconds)
  done (took 4.076102855 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118484165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127660797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075114236 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108381182 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114012381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071887196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148404211 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094984005 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131259953 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071023535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088418259 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069966803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105115795 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071876603 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092247635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071206299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074468966 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071390027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071051749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071523877 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091045655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070640226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071547286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071440817 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071882355 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085966933 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073193354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071385256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071540296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075166909 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076896468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07260421 seconds)
  done (took 4.333978117 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072057868 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074512217 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081938432 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082975258 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069504703 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070936657 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072416295 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068940579 seconds)
  done (took 2.178299417 seconds)
done (took 28.319071216 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079598101 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068809542 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072922794 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088181172 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075334423 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08087985 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066368054 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075877412 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073109361 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073395919 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075068091 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068437866 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072121754 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066539206 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073988242 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069985887 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082364153 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071489875 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081000761 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082145557 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071335831 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074254487 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076452798 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081740347 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081557312 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081880524 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077716325 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073707123 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069856378 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071254913 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071461001 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080763205 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081950748 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082052585 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068365335 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068649756 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072912353 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070265738 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083191955 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077496302 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07010739 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077764169 seconds)
  done (took 4.716294336 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085323572 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090058119 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083611461 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080098872 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091247403 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083578539 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087966028 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078730873 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078599347 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087402206 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074751641 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081881231 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079660651 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074130179 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078094625 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075670243 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080284487 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074632736 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07797836 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078972212 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088283846 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073689393 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088671383 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080484073 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076121111 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08144326 seconds)
  done (took 3.701276974 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074907004 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086589017 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093869899 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145457868 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112655965 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081134449 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082716955 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092899467 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098009223 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069553595 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074020243 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094282706 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094414108 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075551489 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070009634 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085334673 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085408022 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071525953 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076733299 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099203352 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090488007 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086684433 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096314504 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086551225 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069060453 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072174756 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074920879 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085837745 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072157115 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081035024 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072276368 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073551131 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070738116 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080224876 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072116499 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068568198 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093675898 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08071002 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081554443 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069915844 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078672625 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070303337 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094816262 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130070338 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068301605 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073132517 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073150233 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080592639 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068563149 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096885123 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081543005 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069014121 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070133412 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068800527 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06844374 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071645499 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070789183 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071683407 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079254189 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075977218 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090592772 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074293486 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086819794 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068754452 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079805186 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068361641 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070459348 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067870035 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097400624 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07026519 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11270343 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069744099 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06782717 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080290323 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078981342 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075233807 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068749338 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086812695 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080798083 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073236272 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077326208 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072247919 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072695143 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100028312 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069575467 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068476323 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067796309 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07261458 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072857516 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06939262 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081082847 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068499623 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072475942 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090083284 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069065148 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070353298 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072696511 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071596757 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068212451 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079858507 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073174498 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070540676 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079191805 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069561057 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072489278 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082128122 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075700882 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068696257 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070905303 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072736997 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070800533 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07000864 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072936095 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071183712 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075982343 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075650645 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075018417 seconds)
  done (took 10.804147814 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166497382 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157320658 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072195354 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149411193 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077827343 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081323598 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152541504 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095853785 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069554367 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070881285 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069483013 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11164813 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106190333 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116681854 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082276469 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070902654 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092471609 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115862003 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155040964 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148671626 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092509965 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077661479 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072629566 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071449963 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071315472 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079361286 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086474884 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078871989 seconds)
  done (took 4.423131865 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078949225 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104309118 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073423644 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091674083 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089482108 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069613765 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071726465 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071155732 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086131965 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079144732 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069718884 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075359479 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074032239 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072934601 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070438995 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076087162 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076714878 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068947407 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074104458 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07540677 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079782651 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09447936 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073684602 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069300599 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072350929 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069475554 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07782855 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082158387 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069738832 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.106115135 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067486701 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074820309 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083900487 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07037474 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069445355 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070072122 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069833594 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069831677 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07109885 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068613333 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068175239 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073655392 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069163775 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077758839 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083024636 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071597966 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07197286 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072472203 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073048087 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067254102 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073012609 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073065283 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072494743 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077114557 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073775358 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07248129 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071116685 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097316989 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075363598 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069060531 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068981324 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068314483 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072141725 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079753651 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085368989 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071864384 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068376153 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069990412 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082892833 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082380102 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069157914 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074582292 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067469658 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071940304 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072937703 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072207462 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070807072 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068913 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069254085 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070135343 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.073621795 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069325403 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068618981 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072498898 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067960684 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068307641 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070033962 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07158491 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07844089 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068884261 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073434908 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070489164 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06865535 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072483641 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077705105 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072680109 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080509244 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080767068 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070746727 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068544499 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083116832 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072438662 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069053974 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075404826 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.0742985 seconds)
  done (took 9.439484304 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092226847 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070018646 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085954618 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093526922 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079534517 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075739635 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079846006 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069418252 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085962214 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07427862 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077321111 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068528696 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080725084 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079210221 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069989959 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080570256 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072804229 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087048947 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084578842 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068602543 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078369787 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081919729 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081679137 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083878331 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083516137 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084353087 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081343522 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079616543 seconds)
  done (took 3.868924769 seconds)
done (took 38.529824421 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.668497486 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.835242264 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.660144589 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.866797946 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.715628103 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.892082274 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.749399591 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.652491757 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.8782465 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.700430953 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.969584502 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.104110657 seconds)
done (took 64.426564519 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.703920766 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.809235089 seconds)
    (2/2) benchmarking "String"...
    done (took 1.907825777 seconds)
  done (took 5.310554468 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.838871445 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.449149345 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.894494525 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.652097343 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.65850101 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.931963961 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.43422692 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.116236871 seconds)
  done (took 29.731473284 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.817142269 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.878831311 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.354967612 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.392919844 seconds)
  done (took 15.085035006 seconds)
done (took 61.356856976 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.702663527 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.65440039 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.681244053 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.655909882 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.75006363 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.66760886 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.787702085 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.675462955 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.657598451 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.663130671 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.658862596 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.076866666 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.666565414 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.839677153 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.657800066 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.65774313 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.723232382 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.112965829 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.81076712 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.676447713 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.663816423 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.709494135 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.65788939 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.800608143 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.694810421 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.657902187 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.082740896 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.669045115 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.266489204 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.660047626 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.694488208 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.007748199 seconds)
  done (took 199.937519083 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.658212926 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.659699318 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.753138258 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.6971101 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.095697494 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.849036873 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.759920161 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.137786674 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.663177507 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.677520973 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.894547506 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.661573389 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.915489613 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.606109405 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.69844103 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.661663304 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.881347348 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.929139949 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.701302966 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.821383877 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.684895171 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.755246549 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.696345125 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.882860887 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.695045839 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.7470082 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.669128737 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.671017652 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.843859327 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.866120602 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.66481381 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.665597274 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.857527223 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.530608063 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.676501929 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.680540599 seconds)
  done (took 165.910043483 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.854777716 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.659912148 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.657843724 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.657845789 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.663975676 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.658414947 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.779804938 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782356009 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.325420115 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.993178604 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.717708329 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.65949306 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.422776694 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.659110968 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.724741593 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.673327939 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.66021986 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.674173013 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.685288893 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.660726924 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.661137128 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.781574526 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.673266024 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.659214843 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.669281495 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.659153764 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.66516673 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.046304961 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.659496582 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.868550359 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.664091369 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.664883444 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.90128829 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.66201453 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.663803731 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.485010258 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.174727098 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.65880598 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.739211108 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.660947101 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.665528493 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.659256388 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.878290755 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.661629969 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.660830965 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.662058439 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.662290722 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.769803294 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.662382075 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.783043167 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.663308864 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.134795042 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.660206237 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.663197548 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.954293403 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.496058268 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.65998289 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.663715339 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.660926929 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.661249524 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.674085446 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.202992956 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.736653803 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.662285399 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.661795505 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.667745769 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.662389759 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.883234658 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.66294235 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.844127906 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.675309743 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.781007358 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782829918 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.664261521 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.726231896 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753009807 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.66178132 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.661801697 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.660836504 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.661558403 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.661525655 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.741821402 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.662377892 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.778800599 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.66189811 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.673751192 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.663745681 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.661585824 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.719951545 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.731277594 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.663025941 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502342244 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.664176367 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.66159748 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907554553 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.72886527 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.662534676 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.6646489 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.751475553 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78493933 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.385116223 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.665189638 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.129064018 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.74710658 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.664087889 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.784383629 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.663134044 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.742253305 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672121403 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.6646723 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.698976385 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.66335866 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.676381726 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.6631708 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.036436051 seconds)
  done (took 387.726367028 seconds)
done (took 757.083425762 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.261126363 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.224296381 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.332097248 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.245674059 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.217792863 seconds)
  done (took 12.88454719 seconds)
done (took 14.488063734 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.745157097 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.74645768 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.683081558 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.745545628 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.680026269 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.74533695 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.727191925 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.686618468 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.713466891 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.686661311 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.714610506 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.685068395 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.671821851 seconds)
  done (took 23.835493632 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.899659774 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.904633954 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.728344515 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.89268534 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.704554626 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.892661198 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.817726363 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.812141484 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.80796608 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.674687713 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.672156823 seconds)
  done (took 21.412763195 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.889359486 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.89643112 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.735446598 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.892596104 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.708437709 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.898233105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.81799266 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.809405265 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.81548238 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.676567072 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.672255826 seconds)
  done (took 21.418482163 seconds)
done (took 68.271006106 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.671693138 seconds)
  done (took 3.277408221 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.685902419 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.843989369 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.667908829 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.668166622 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.670698898 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.670276166 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.669651923 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.668950763 seconds)
  done (took 15.152041047 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.670624073 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.669768442 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.669686948 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.671098514 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.669988783 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.670215438 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.669410379 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.671037227 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.668822635 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.670168178 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.670163463 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.669709551 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.670714232 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.6704657 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.670343478 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.670311183 seconds)
  done (took 28.329491009 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.673937487 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.670658193 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.670535006 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.669984355 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.670859334 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.671600104 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.672399346 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.670622568 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.669919705 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.671199132 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.671929792 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.667731336 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.668939374 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.668191674 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.668733086 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.667997714 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.668620715 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.668371518 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.673136923 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.668959586 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.668643049 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.669291349 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.669203209 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.668667258 seconds)
  done (took 41.689082565 seconds)
done (took 90.054065117 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.414210141 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.308558837 seconds)
  done (took 9.328195652 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.673821903 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.668973726 seconds)
  done (took 5.020905767 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.66986874 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.668390558 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.669399562 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.6686804 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.669069938 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.669250501 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.66941831 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.669369195 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.668742327 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.668830894 seconds)
  done (took 18.297882571 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.669398706 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.66987677 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.669113651 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.669756604 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.668706275 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.669888116 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.669007449 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.669507289 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.669966769 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.670027168 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.66931871 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.669676694 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.669982944 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.669263455 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.670522776 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.669766287 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.669668798 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.670171198 seconds)
  done (took 31.660311604 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.670787215 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.66976203 seconds)
  done (took 4.947306992 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.669967318 seconds)
    (2/7) benchmarking "second"...
    done (took 1.670062554 seconds)
    (3/7) benchmarking "month"...
    done (took 1.671250057 seconds)
    (4/7) benchmarking "year"...
    done (took 1.671213418 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.671222075 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.671298339 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.670976995 seconds)
  done (took 13.304418503 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.672090349 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.815854896 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.877778179 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.327566021 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.672762576 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.674733914 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.596476255 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.673546296 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.675541549 seconds)
  done (took 18.594220616 seconds)
done (took 102.758342453 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.504240628 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.671327262 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.950546983 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.774806361 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.690393745 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.963303704 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.686944575 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.955954792 seconds)
done (took 41.805391813 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.686370945 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.337117371 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.376723232 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.700773956 seconds)
  done (took 15.0224143 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.66905894 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.003934507 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.695167845 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.484832017 seconds)
  done (took 21.464954315 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.030273463 seconds)
    (2/2) benchmarking "read"...
    done (took 2.017658193 seconds)
  done (took 5.660442773 seconds)
done (took 50.442320943 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.672835262 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.673160077 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.672110337 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.672715514 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.672146142 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.672247247 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.673081801 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.672815935 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.671939438 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.672698677 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.672000116 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.673504735 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.673146208 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.672398432 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.674432058 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673307845 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.673680461 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.672948648 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.673939672 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673087407 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.673647224 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.673734134 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.673283088 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.673167255 seconds)
  done (took 41.761735122 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.674114956 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.674397377 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.673709562 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.674500797 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.674706373 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.675042542 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.674063941 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.674739834 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.674269279 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.67349723 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.675104985 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.674000095 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.673845891 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.674776982 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.673838356 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.674350144 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.673680452 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.674278109 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.674468555 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.67468965 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.674555708 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673880415 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.675790978 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.673773455 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.674677338 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.675009638 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.675058215 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.674230814 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.674794854 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.675345737 seconds)
  done (took 51.844021967 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.675992363 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.67577015 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.675052018 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.675106303 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.675512705 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.675282629 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.675590958 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.674924253 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.674735549 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.675337684 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.675358868 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.675098185 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.674695695 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.674429089 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.674225785 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.675478276 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.675276132 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.676234473 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.676449755 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.675591226 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.676288269 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.676315242 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.675587181 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.676470506 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.675763952 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.675675131 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.675711597 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.675612437 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.676196678 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.676528779 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.677337388 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.675881479 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.676202823 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.675712752 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.676696904 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.676562351 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.67674608 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.676256574 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.675986707 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.676810759 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.67595761 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.676490674 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.676476333 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.677272548 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.676325282 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.677440981 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.677362882 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.676859752 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.676774662 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.678222664 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.676843454 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.676962065 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.678064423 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.678200475 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.676732233 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.677464612 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.67755489 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.67749842 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.677987306 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.677544385 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.677518332 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.677526258 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.677373809 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.678429434 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.677158943 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.677608182 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.678030234 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.678297918 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.677510501 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.677251679 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.677003744 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.677452845 seconds)
  done (took 122.318640599 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.677294604 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.678109384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.678794284 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.677715815 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.678509441 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.678677719 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.678981862 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.679393686 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678052754 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.677758218 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.678849623 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.678959293 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678469831 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.679880464 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.678620299 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.678318575 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.678941862 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.679043904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.678759303 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.679051144 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.677284654 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.679471273 seconds)
  done (took 38.543914014 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.679606865 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.679884571 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.67965435 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.679075398 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.679053204 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.679586306 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.679187298 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.679854587 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.679161566 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.679402316 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679594809 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.679903674 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.679706777 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.67943907 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.67950453 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.679788766 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.679863656 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.680585962 seconds)
  done (took 31.848709894 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.679941855 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.680169351 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.679905497 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.680361566 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.680065143 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.680575391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.67955968 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.680527318 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.68054282 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.680662818 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.680534381 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680186477 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.681689036 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.680620111 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.681031029 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.67960325 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.681528972 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679894039 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.680349125 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.680391983 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.680928053 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.680596102 seconds)
  done (took 38.586143283 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.680629871 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.680522847 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.680878413 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.680273929 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.680119641 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.681073116 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.680336403 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.681669206 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.680492451 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.681464743 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.682080231 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.681062842 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.681302365 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.681807974 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.681915716 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.681870704 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.681468388 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.682747936 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.681974798 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.681008597 seconds)
  done (took 35.242035561 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.679636944 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.680208119 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.680441767 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.68093498 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.680668623 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.680491379 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.680141369 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.680916149 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.681978776 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.682557993 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.680642832 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.681928859 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.680841956 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.68151214 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.681295074 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.681156767 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.681392501 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.680518986 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.680925829 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.681533669 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.681140107 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.681284115 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.681325944 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.681798687 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.682752003 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.681991392 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.681170288 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.684315768 seconds)
  done (took 48.694141878 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.682141232 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.683784149 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.682997499 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.6836484 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.683305246 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.683018624 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.683453749 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.68397201 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.683090714 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.683446253 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.683760213 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.683576405 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.682929247 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.683784352 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.683707331 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.684625154 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683232146 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.683926445 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684023334 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683895805 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.684804686 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68443377 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.684489264 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.683964888 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683659306 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.6841556 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.684877335 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.68429711 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.68401982 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.684347493 seconds)
  done (took 52.133175775 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.705388557 seconds)
    (2/2) benchmarking "in"...
    done (took 1.706058575 seconds)
  done (took 5.031663195 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.684015576 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.684788394 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.683868952 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.685157824 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.684766964 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.684589742 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.685059923 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.685209667 seconds)
  done (took 15.098581972 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.688014759 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.688001346 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.687462066 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.688147227 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.688162686 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.686710702 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.694459348 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.687763869 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.689187282 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.687574501 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.694656502 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.695224197 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.691761471 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.687893106 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.689069385 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.689838516 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.689482555 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.687683106 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.688282412 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.688763111 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.689126864 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.689500501 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.689327699 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.687836615 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.690008999 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.697996891 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.692936886 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.688689814 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.688378923 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.691968158 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.688423591 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.688947856 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.689161675 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.689466599 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.688729918 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.689552845 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.695706228 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.690277876 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.695239927 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.688172999 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.689595532 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.689553518 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.690461641 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.690354649 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.690459067 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.690740503 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.689682854 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.690028788 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.689851429 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.691477892 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.697421336 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.688923937 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.690772484 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.694545053 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.691339832 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.696417138 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.690512952 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.69272752 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.699425424 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.699798984 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.701480138 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.699165256 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.692201622 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.692086546 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.699741524 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.715514725 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.696381364 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.691883396 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.69099279 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.690968728 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.696399656 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.701452082 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.699926379 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.690693015 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.691321402 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.690527041 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.691738743 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.691417928 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.697837224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.693506024 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.691401076 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.691501029 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.7002202 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.714687162 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.691314867 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.691739881 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.691723968 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.691736099 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.691369398 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.7017993 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.692947569 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.692073625 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.690326517 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.692613709 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.690746144 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.692091606 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.689588382 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.693016859 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.69293217 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.691559188 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.692684362 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.694778283 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.701481664 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.692261932 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.69292196 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.697127262 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.693222251 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.691822492 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.698803917 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.693139666 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.69410731 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.692500803 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.698307808 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.69212074 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.696309257 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.700885843 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.69317287 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.694288982 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.693469445 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.694527823 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.701561678 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.72015101 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.694622137 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.693435897 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.698077721 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.705570255 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.694786835 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.696383471 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.693377573 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.693961591 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.694215621 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.695818496 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.693908412 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.694781247 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.69455857 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.695322091 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.693972072 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.694424893 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.693284297 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.695075003 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.694177096 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.694584347 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.695042189 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.696466135 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.694553202 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.695398578 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.699943924 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.693727128 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.696099661 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.695782709 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.695430797 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.695073564 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.69536739 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.696428441 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.693386679 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.694818048 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.693197495 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.695255136 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.695322643 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.695700024 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.694838577 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.694709779 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.700226754 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.695851173 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.69854344 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.695006926 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.695672652 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.695527646 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.695409268 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.694650027 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.695660829 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.693821308 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.698608165 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.703934819 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.695938184 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.696359474 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.69806767 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.696493013 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.696903301 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.697078612 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.698795795 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.705370967 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.695840984 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.701105371 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.697200012 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.697920018 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.697064472 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.697360044 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.697081672 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.697850206 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.699308051 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.705554007 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.708050619 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.705476208 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.696484041 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.701946779 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.697234864 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.701660156 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.699831124 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.697784353 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.696997709 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.696485174 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.696496695 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.697810879 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.697358318 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.697526021 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.696683454 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.697413002 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.698166392 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.697614026 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.697479721 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.698384534 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.698765522 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.698344992 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.699195096 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.698507726 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.697149166 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.697430707 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.696772846 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.696460913 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.697746395 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.697717552 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.70421886 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.697904166 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.699442977 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.699792042 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.697965232 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.695817315 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.698556223 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.699945293 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.69803434 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.704676546 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.698439061 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.699214999 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.704487171 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.697779308 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.698233469 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.701273801 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.699125129 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.698667709 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.701377362 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.707272664 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.698623296 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.699645958 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.69889573 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.698565169 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.698888972 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.704560557 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.699379379 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.699236219 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.699352798 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.698808692 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.700166422 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.699939553 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.701176114 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.699262991 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.700648059 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.699288007 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.699269787 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.700210732 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.699860708 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.700209181 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.701389131 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.701127705 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.707795727 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.703790495 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.69933729 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.699985493 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.698995841 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.704085533 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.702074213 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.699848556 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.699723836 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.711315664 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.709076091 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.70583765 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.702260259 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.700707278 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.704950044 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.700966805 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.70400961 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.701225604 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.700645806 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.700887857 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.700905616 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.700691831 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.702150922 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.700595569 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.702034086 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.702104515 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.706119046 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.700347928 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.700939953 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.701838785 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.702070491 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.701200638 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.701567893 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.702214401 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.703988207 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.70394001 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.70043944 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.702399915 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.708115476 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703003983 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.702546472 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.702102319 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.701561858 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.70092105 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.702994202 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.702857924 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.706941143 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.710969523 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.704584249 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.712227266 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.703338327 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.711466337 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.703236321 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.705100682 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.711236527 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.702903802 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.700441661 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.702033834 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.703069634 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.70948547 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.703507567 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.703269893 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.707128803 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.70409435 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.70380561 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.70261627 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.703983526 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.703835365 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.7032544 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.709897357 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.70397251 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.707757025 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.704465913 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.703325925 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.703364676 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.703410075 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.702450736 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.705249243 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.703807043 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.70412038 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.702205223 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.702908808 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.705351954 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.704125269 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.703394475 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.704855379 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.704453208 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.70965625 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.705195123 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.708943188 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.704949201 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.712835802 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.705074762 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.710818326 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.705095722 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.704250882 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.705618278 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.704607684 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.704793045 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.705986561 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.706922442 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.705407118 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.703956982 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.707619968 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.705253153 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.704074111 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.7045873 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.704146178 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.7038161 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.712022079 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.728483906 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.705119908 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.709216384 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.704855795 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.706141064 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.710137708 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.705263582 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.703634242 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.707286041 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.715571748 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714456728 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.706054272 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.705774774 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.707164955 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.705002984 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.706051313 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.707268983 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.706020989 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.705196531 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.706047585 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.705125297 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.70895461 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.706771405 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.705994794 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.707598175 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.706011519 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.71586677 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.708159986 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.706189642 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.705864532 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.706251729 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.706073582 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.706940524 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.706517069 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.707068548 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.706760014 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.707887142 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.71394127 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.714120421 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.708697395 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.707510249 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.707566244 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.708532952 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.707152537 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.70818953 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.709284481 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.707931972 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.709082167 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.708761013 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.707278519 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.705089461 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.707742313 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.707737627 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.708317918 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.710433594 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.716021712 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.707628299 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.708066331 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.707348783 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.708085584 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.705988657 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.707926147 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.714365024 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.711483504 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.718378973 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.716247971 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.714150078 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.707961211 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.710680595 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.717248798 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.706358933 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.708898297 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.708230172 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.709604143 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.70765442 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.711885024 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.709478587 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.71412103 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.708250131 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.707256579 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.715271519 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.710392215 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70865332 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.709971925 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.71268457 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.707926335 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.7098085 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.709364554 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.707926084 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.71494684 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.711676426 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.709653937 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.711742579 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.706319037 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.710424542 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.714382471 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.710065932 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.711696852 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.710636355 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.710206793 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.710193502 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.710812951 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.710278681 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.708841377 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.709219428 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.713230276 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.717934574 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.709424517 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.711365357 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.711548187 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.710079364 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.711255657 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.711333209 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.710104527 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.710192669 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.708767058 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.710810578 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.710967558 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.713056297 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.709996018 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.710117659 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.714572192 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.711220397 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.713472185 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.721186836 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.717829667 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.711021875 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.710402044 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.710746276 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.713136733 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.711127292 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.710248454 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.712367567 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.712705639 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.711014258 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.712204046 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.711006959 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.714776703 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.726895537 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.711977509 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.711982743 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.712625178 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715959662 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.712681324 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.712129263 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.712328196 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.713542901 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.713950713 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.720471133 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.712577406 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.717924946 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.711970839 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.712550203 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.717772327 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.715111814 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.719853442 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.715196245 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.712878039 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.712811992 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.717359536 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.729123699 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.712964146 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.721967067 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743110668 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.7121129 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.713424885 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.714164343 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.712950735 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.714717622 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.714638612 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.714592325 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.714126081 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.714627071 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.712895661 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.713833276 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.719466198 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.714616048 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.712729413 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.713228737 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.712952244 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.713493107 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.713896375 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.714092533 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.71302434 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.7133594 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.714350687 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.714013447 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.714545878 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.724125504 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.723808751 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.713941877 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.714656136 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.713698208 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.718292419 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.717250923 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.725146732 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.723542433 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.715035439 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.714898754 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.7153911 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.715623724 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.714744273 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.715333418 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.714305113 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.714016838 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.714963135 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.725300454 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.72374162 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.718204349 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.714409728 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.713901587 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.715895983 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.717038795 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.71530276 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.715976011 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.716860216 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.714828096 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.72028951 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.716041606 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.716201964 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.717820746 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.724275725 seconds)
  done (took 1016.902368837 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.716156022 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.716206295 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.716902835 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.717020111 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.716597469 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716446842 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.716168034 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.716493875 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.717751744 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.71778338 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.71599681 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.715878198 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.716351336 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.717498585 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.71693091 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.716937092 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.716362473 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.716867159 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.717287621 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716309066 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.716969264 seconds)
  done (took 37.702827065 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.717349263 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.716746245 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.716310363 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.722048903 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.717519105 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.715978774 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.717076582 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716826366 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.717411806 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716575833 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.716555605 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716842955 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.71689814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.717173604 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717177166 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.717412877 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.716403404 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.717254415 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.717511728 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.71809568 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.717944103 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.718195075 seconds)
  done (took 39.433587535 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.718077111 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.718793177 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.716946278 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.717726611 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.718908349 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.717897058 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.71938759 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.718475747 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.718930834 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.717666084 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.716642926 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.717431351 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.724244186 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.72626243 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.719036365 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.718620347 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.864088581 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.718734601 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.719096367 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.718594774 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.718073033 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.723010087 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.720428678 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.721491896 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.717933608 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.720264407 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.718595893 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.719149126 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.719537459 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.719958757 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.723795455 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.719049479 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.719065109 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.722204836 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.717609442 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.71875474 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.723155098 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.719674803 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.720264431 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.719860892 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.72790398 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.744252771 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.719897021 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.72583112 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.720950444 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.719378565 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.723027085 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.728967221 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.72082301 seconds)
  done (took 86.11335155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.720635343 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.719717075 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.719559534 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.719919282 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.720008399 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.719099318 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.721068196 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.720848585 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.72027492 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.72021607 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.718968488 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.718601739 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.718958494 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.718829575 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.719229486 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.719416233 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.718922646 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.719582348 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.720267604 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.717963487 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.719231308 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.718125219 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.71827176 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.719271173 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.720358662 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.718156092 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.717492638 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.718128569 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.717862791 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.71852011 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.719339042 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.717493468 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.717426387 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.717341692 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.716517217 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.716948269 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.717956345 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.71803138 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.716906933 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.717654611 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.716875416 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.717071123 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.716401132 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.715901898 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.715581414 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.71608968 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.714977414 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.716426376 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.714449267 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.713794853 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.714059825 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.714723781 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.714304905 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.715522 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.711049244 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.710360014 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.710777718 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.711064047 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.711423146 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.712141811 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.70895344 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.708108657 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.708694473 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.70916224 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.708657446 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.70957164 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.706823808 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.706629088 seconds)
  done (took 118.359926384 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.708477454 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.708747149 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.708696729 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.706875749 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.708082984 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.707403526 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.708286282 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.708058346 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.70963826 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.707350177 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.707546535 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.707834274 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.708845657 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.707516408 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.707190507 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.708825093 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.707274269 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.707390368 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.708630417 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.708580285 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.70746058 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.708281667 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.707360249 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.708230269 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.708818767 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.708361281 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.708426738 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.707422269 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.707868861 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.70761368 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.708914303 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.707973876 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.709186785 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.709025171 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.708707386 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.708637341 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.708663032 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.709057339 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.709202728 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.708540933 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.707670851 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.708901562 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.709063393 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.711601561 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.708154516 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.709198195 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.709643921 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.709452521 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.709721985 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.710669694 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.708505652 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.708987213 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.708881183 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.709378411 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.709273817 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.710007914 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.708816729 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.708875579 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.709651176 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.709469544 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.711034918 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.708686872 seconds)
  done (took 107.581259206 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.708626552 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.708339116 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.709829631 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.709932444 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.709708597 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.710642091 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.709070049 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.709588988 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.709618915 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.710450535 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70920028 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.709756135 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711101168 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709285779 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.709965357 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711694528 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709259267 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.709345273 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.70966374 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.709230403 seconds)
  done (took 35.839888666 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.709917132 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.708534604 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.709420295 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.708881786 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.708945144 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.710474075 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.709609326 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708905619 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708723908 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70877166 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.709102099 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.708499201 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705244313 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.703653806 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.70272107 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.703523421 seconds)
  done (took 28.971376008 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.70374601 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.704917576 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.703926612 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.703684924 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.705399973 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.704027678 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.705450263 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.703548408 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.704030683 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.703975815 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.704594322 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.702208807 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.702971138 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.704177205 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.702883693 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.704342358 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.703800196 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.704050075 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.70510188 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.705013084 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.704157694 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.703363484 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.703835777 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.703716288 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.705563619 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.7046707 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.703661886 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.704063262 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.703982127 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.703603404 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.705420285 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.704861532 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.70439051 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.703856179 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.705355913 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.705364975 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.705206464 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.704185661 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.703649165 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.704690416 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.704643115 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.705454321 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.703813179 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.704394023 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.704143714 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.703992056 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.704522458 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.7055599 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.705463276 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.705417662 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.704257076 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.704398437 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.705155837 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.705366161 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.70387656 seconds)
  done (took 95.380942673 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.704341225 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.705864017 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.704684225 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.704499031 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.705541094 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.705061346 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.705682731 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.7045196 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.705154054 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.706328885 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.705085734 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.705163642 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.705633706 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.705182968 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.706310719 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.705513765 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.704257387 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.704521068 seconds)
  done (took 32.334444552 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.704258025 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.704833863 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.7054659 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.704712603 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.703966865 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.704232652 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.704232678 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.70462329 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708318804 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.703424257 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702020595 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.703844277 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70270955 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.702745605 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.705212295 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.701768024 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.702901399 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.702228313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.701940804 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.70287232 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.70308494 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.702008814 seconds)
  done (took 39.123070644 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.701886026 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.701308272 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.717293612 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.721247521 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.721419214 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.734155309 seconds)
  done (took 11.935335692 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700652333 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701813653 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.700399234 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700380833 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699964544 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699565384 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700489326 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70144022 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698703315 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698293047 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698630435 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69809407 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698457998 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699264361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697380172 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698653923 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69837382 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697921765 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697822265 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699571907 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697638558 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697926206 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697807596 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697628098 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697765326 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698184713 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697528007 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697397378 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698659601 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697873525 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697651271 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699002042 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69737307 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697637332 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698746662 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69778284 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698591638 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699872189 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697867711 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697231398 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.698051474 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698420327 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698850613 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697706895 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69698471 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697297003 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697588721 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697702775 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698759187 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696388013 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696760606 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697409906 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697016068 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697326057 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696816396 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697611378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696835408 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697064512 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699208816 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69745025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698916699 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696892903 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697031649 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696688244 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697165037 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697130733 seconds)
  done (took 113.719896684 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696716661 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.696723818 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697375452 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696779349 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69657806 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697407609 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696378207 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696523427 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696510544 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697098192 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695628876 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697380301 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69680584 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696618794 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696819466 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697746791 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697913086 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697560121 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696963118 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696639311 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697196649 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696474333 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696659427 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697193313 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698415532 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696492528 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696800528 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697070174 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696886357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697755151 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696405106 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696036653 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69602352 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.696089672 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69735052 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696231804 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697045885 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696772987 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697232852 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696052573 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697775924 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696214311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696284981 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695529642 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697035454 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696730374 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69743255 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696991098 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695552899 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696825734 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696035761 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696356004 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697729982 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696068684 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696290195 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696271985 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694864689 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696939295 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69724745 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.6958258 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695986384 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696468095 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696158109 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695664386 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696471227 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695061596 seconds)
  done (took 113.61695616 seconds)
done (took 2359.730569344 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.718901596 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.702203228 seconds)
  done (took 15.053096756 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.858023417 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.812351231 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.699572464 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.720514015 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.699118725 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.726741514 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.7184526 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.70082876 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.698909464 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.698792554 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.699080291 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.883580883 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.698512049 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.699588402 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.699608879 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.791730472 seconds)
  done (took 49.442520861 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.700710513 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.700744091 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.712118617 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.704893358 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.701536657 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.714912351 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.731803657 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.705552613 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.735125983 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.713375158 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.770005387 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.713981109 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.701354858 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.750894976 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.714643875 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.715860659 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.793429107 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.778648739 seconds)
  done (took 32.694563563 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.777171433 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.705800876 seconds)
  done (took 10.122370779 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.724650854 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.700124272 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.706354919 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.703232841 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.72158419 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.707395984 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.736288041 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.725064329 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.721026604 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.733218997 seconds)
  done (took 68.813631491 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.703832084 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.701401172 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.700314872 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.698525602 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.698942537 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.703322455 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.696768253 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.697116852 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.352755218 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.73465279 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.707113902 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.704048147 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.698509655 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.701442603 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.696743118 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.720673975 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.808025565 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.69526149 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.696061074 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.704433402 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.698889904 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.758839643 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.711235329 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.700049959 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.729862634 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.354078718 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.707993218 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.705539872 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.809898571 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.696574138 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.699642307 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.885170961 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.70198305 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.170747128 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.96450291 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.706283959 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.711895504 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.706384004 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.697326266 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.820995292 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.699711396 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.705702113 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.653899875 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.944426555 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.796687905 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.742907857 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.012050531 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.715346936 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.698940594 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.727556978 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.701509188 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.699763306 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.714163986 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.212191259 seconds)
  done (took 123.416941133 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.697968668 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.043311081 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.86207305 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.698643741 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978972469 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902826848 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.698426888 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.74319448 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.699399404 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.923513931 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.9482441 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.80125296 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.699807257 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.698659991 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.698234835 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.698056489 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.849548077 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.767301907 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.701389179 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.696872586 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.72418676 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937550446 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.81845621 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.701355581 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.723642839 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.90701555 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.818045537 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.80015492 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.481597408 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.696402589 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.758024721 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.700230766 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.700085849 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.697448905 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.851492086 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.790871814 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.77966189 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.699606878 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.697745292 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.696884529 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.355592816 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.895555913 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.791714132 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.826152894 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.947936164 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.901221194 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.475752493 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.697235565 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.435187303 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.859701656 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.925109749 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.925331395 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.817813174 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.701706775 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.037526843 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.697080513 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.69719703 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.94592455 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.91938053 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.79357995 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.700884757 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.698657406 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.698664386 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.935521673 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.70204061 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.792501129 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.699509743 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.698406688 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.794531262 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796869327 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.927973539 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.910773517 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.727921213 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.035684929 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.202831021 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.943412611 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.763631811 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946918121 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.701146718 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.699175724 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.775694141 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.540936882 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.951248614 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.939494426 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941943548 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733315512 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.413740086 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.700959163 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.923943044 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.91933409 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.959363448 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.94510006 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.933802656 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.023531632 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.699706161 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.69870656 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.023510943 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.822590821 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.703596702 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.041099106 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929189905 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.229668984 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.725378667 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.000494564 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.828472354 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.704459288 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.32719118 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.700932316 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.927217713 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.738927216 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.70363487 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.701041236 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.91673795 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.745505476 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.700616722 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.371124257 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.76285875 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.704644878 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931312975 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.705845312 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.967998177 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.704650965 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93096278 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.131742288 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.73025917 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.872806703 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.945357049 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.702611861 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.938993843 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.941914566 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.81483925 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.919083562 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.411630323 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.702051423 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985539709 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.702863817 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.701335048 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.868219474 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.701830131 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.843249628 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.704148299 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.991192052 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722622168 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929875974 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.704627023 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.95473128 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.733816688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.752266841 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.11776785 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.826391683 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.704083217 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.534550241 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.861834178 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70458924 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.701418319 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.252313022 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.701576432 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.848455528 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.925927493 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722346179 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.772359889 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.365468349 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.70216453 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.781037973 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.723870116 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.085573434 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.703329222 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.951659599 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.705582058 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.704720928 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.701783721 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.936224053 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.884692735 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.704695171 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.704433244 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.605044282 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.705638714 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.704795341 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.883402456 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.0084615 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.703090312 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.905113647 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707424007 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.830038783 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.707475406 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.78035444 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.036347518 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.703873099 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.70405444 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.704007504 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.705616711 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.703531687 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.910222862 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.729256242 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.195282873 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.83946516 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.97434867 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.012292829 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.94456801 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.746057545 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.706003206 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.956879183 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.705333844 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.765191852 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.706479154 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.723288402 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9307164 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.710355182 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.91114788 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.9745869 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.552721483 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.750873614 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.707062014 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70549542 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.70374725 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.847489957 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788110929 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.708161744 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.704323342 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.818634439 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.825026337 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.913372143 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.705967539 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.872222073 seconds)
  done (took 864.987510953 seconds)
done (took 1166.163571047 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.705299046 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.708649531 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.708822707 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.708059123 seconds)
  done (took 28.475112978 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.717205203 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.706575048 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.70731992 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.706295119 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.708137276 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.708404325 seconds)
  done (took 11.896837651 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.736996976 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.707424804 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.707571944 seconds)
  done (took 20.795401082 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.779139937 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.089241345 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.839170903 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.119594816 seconds)
  done (took 9.469430496 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.707639848 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.708913381 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.707522288 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.708801424 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.717798652 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.717794409 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.708231864 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.708825139 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.718245605 seconds)
  done (took 17.047349143 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.708582794 seconds)
done (took 93.037361296 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.993353579 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.724254585 seconds)
    (3/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.720228165 seconds)
    (4/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.975553787 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.789684268 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.030858331 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.821553363 seconds)
    (8/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.726451623 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.829029338 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.680378024 seconds)
    (11/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.813178873 seconds)
    (12/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.796412976 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.730953592 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.643476384 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.127888008 seconds)
    (16/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.087645634 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.885869928 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.738940495 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.739263714 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.812972456 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.948488064 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.848216818 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.074052157 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.747418866 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.716744245 seconds)
    (26/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.95768852 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.84145023 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.847292901 seconds)
    (29/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.891753891 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.81238668 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.902134232 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.6660784 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.731022581 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.110235259 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.720962585 seconds)
    (36/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.607495568 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.750568911 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.720615376 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.891943719 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.717784343 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.82519746 seconds)
    (42/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.795604675 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.944919961 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.723995773 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.957482403 seconds)
    (46/309) benchmarking ("sort", Bool, false)...
    done (took 1.934297891 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.106216344 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.465765188 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.9043383 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.848006755 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.399182893 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.721206714 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.461571951 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.968179975 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.011698366 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.82891643 seconds)
    (57/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.855318254 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.072534343 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.881192914 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.742119734 seconds)
    (61/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.045732487 seconds)
    (62/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.725446701 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 8.071933731 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.383456166 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.806798787 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.500766893 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.071795275 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.814706109 seconds)
    (69/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.729472586 seconds)
    (70/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.939655551 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.82185393 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.720125467 seconds)
    (73/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.930756923 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.030695411 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.728673599 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.83507219 seconds)
    (77/309) benchmarking ("sort", Float32, false)...
    done (took 5.418665214 seconds)
    (78/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.72405665 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.580026138 seconds)
    (80/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.749353939 seconds)
    (81/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.207598572 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.970679394 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.032515682 seconds)
    (84/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.021893385 seconds)
    (85/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.929610819 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.728556997 seconds)
    (87/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.339084994 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.67890984 seconds)
    (89/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.747200398 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.033890943 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.922681608 seconds)
    (92/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.899345852 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.088699022 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.844546602 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.747881183 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.72215766 seconds)
    (97/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.219971244 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.751092119 seconds)
    (99/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.861046947 seconds)
    (100/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.742472419 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.621108752 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.934025466 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.726621641 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.848115284 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.724450508 seconds)
    (106/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.99573861 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.057272449 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.838451211 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.724269229 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.064279005 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.006598758 seconds)
    (112/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.979171106 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.181782952 seconds)
    (114/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.587636462 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.944752478 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.744357922 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.907571237 seconds)
    (118/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.17534947 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.789251124 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.392895177 seconds)
    (121/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.03906483 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.087208857 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.944396925 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.834926045 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.725512209 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.720542415 seconds)
    (127/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.734854042 seconds)
    (128/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.739331388 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.75475044 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.72183171 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.348117828 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.274591717 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.345057122 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.976710532 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.043112824 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.623996209 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.727877596 seconds)
    (138/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.56840668 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.363354638 seconds)
    (140/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.822539427 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.875553656 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.981788983 seconds)
    (143/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.747112852 seconds)
    (144/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.726291411 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.727086168 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.84611826 seconds)
    (147/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.729084658 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.844159833 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.096162841 seconds)
    (150/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.914426464 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.852588772 seconds)
    (152/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.823066719 seconds)
    (153/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.967049415 seconds)
    (154/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.809591158 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.739925359 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.724695168 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.805370525 seconds)
    (158/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.82883342 seconds)
    (159/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.832919113 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.953540024 seconds)
    (161/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.727536875 seconds)
    (162/309) benchmarking ("sort", BigInt, false)...
    done (took 8.190658579 seconds)
    (163/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.98225135 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.746353959 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.525653293 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.899814997 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.757896234 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.726702621 seconds)
    (169/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.822142277 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.269355599 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.894281343 seconds)
    (172/309) benchmarking ("sort", Float64, false)...
    done (took 5.464807946 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.79154684 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.403003763 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.727792093 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.126381891 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.467612552 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.728759923 seconds)
    (179/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.809104229 seconds)
    (180/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.869765522 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.499189321 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.053688933 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.86230053 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.728621399 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.999830523 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.736783296 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.729718595 seconds)
    (188/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.669205743 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.734244438 seconds)
    (190/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.934599857 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.791443547 seconds)
    (192/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.6526194 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.057794651 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.872023814 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.917562392 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.051551374 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.617246906 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.811751722 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.731259218 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.964252433 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.725814341 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.294584779 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.63150181 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.730515662 seconds)
    (205/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.324047226 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.860237452 seconds)
    (207/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.790507202 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.878088815 seconds)
    (209/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.188028643 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.969789286 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.527982098 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.731287165 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.02287093 seconds)
    (214/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.730470433 seconds)
    (215/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.325040303 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.068881374 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.860537076 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.90645235 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.384136252 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.968640487 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.727317089 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.055749836 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.740343579 seconds)
    (224/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.095892329 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.974050464 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.898995157 seconds)
    (227/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.833900247 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.99217946 seconds)
    (229/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.835852461 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.979467008 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.872783464 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.380367787 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.119179434 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.73482156 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.098300337 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.75490588 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.816278188 seconds)
    (238/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.13821522 seconds)
    (239/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.793836695 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.390641554 seconds)
    (241/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.276726682 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.759903073 seconds)
    (243/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.728892734 seconds)
    (244/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.170507201 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.732229681 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.984064122 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.781630241 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.796842142 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.856583093 seconds)
    (250/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.84644358 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.929522696 seconds)
    (252/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.733719124 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.261720838 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.707069338 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.83870612 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.031447288 seconds)
    (257/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.983641415 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.736339938 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.844968231 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.022406832 seconds)
    (261/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.818500769 seconds)
    (262/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.444976836 seconds)
    (263/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.761936597 seconds)
    (264/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.862830957 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.94499953 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.987316435 seconds)
    (267/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.766805328 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.050921865 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.044200303 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.738168674 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.965119538 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.747408826 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.863178533 seconds)
    (274/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.809000474 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.883803813 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.863953075 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.905835364 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.078489776 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.053176056 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.736093104 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.453963827 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.81257688 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.132547167 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.070588626 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.832280546 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.883128368 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.421844636 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.865670639 seconds)
    (289/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.749873314 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.732201153 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.828831377 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.735189572 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.108469288 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.083809864 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.510101771 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.766903527 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.168889724 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.768528097 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.0250751 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.98559772 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.133934802 seconds)
    (302/309) benchmarking ("sort", Int8, false)...
    done (took 4.627597266 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.987028622 seconds)
    (304/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.116829273 seconds)
    (305/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.735994973 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.943908382 seconds)
    (307/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.842100111 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.949726519 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.755612845 seconds)
  done (took 962.761504816 seconds)
done (took 964.69045525 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.758654627 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.753491225 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.735737641 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.758312767 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.850059434 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.783062566 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.751046625 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.740930618 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.786743323 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.785780939 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.734584018 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.781868611 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.738214691 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.737974541 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.736326428 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.753098078 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.047977762 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.76975616 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.756323026 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.749731405 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.75535277 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.736341718 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.787172344 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.783287594 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.741930332 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.742666099 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.741389472 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.758084904 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.850774267 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.742179869 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.742050188 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.750513757 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.046727624 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.767430075 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.735435768 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.757694933 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.750496702 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.750026074 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.742467756 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.770863668 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.133856872 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.778904049 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.7393432 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.738479517 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.738760699 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.745289465 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.738653166 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.747136103 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.752762857 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.754468531 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.126859226 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.795150508 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.741814636 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.739091746 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.751867276 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.739167466 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.743648396 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.75582246 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.759534644 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.755594615 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.031919204 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.775726198 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.742629811 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.757992371 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.748629475 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.162819469 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.777186067 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.746323617 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.134532174 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.786610529 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.16242594 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.787672069 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.742166737 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.755777121 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.772825355 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.047210813 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.769845349 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.738868572 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.751444219 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.73821439 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.75226841 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.755843573 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.745157632 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.740791165 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.75678323 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.787861276 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.753325944 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.741873559 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.751670705 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.760122065 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.75126666 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.752175687 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.744604888 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.738794169 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.753728413 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.744969465 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.744042268 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.744069159 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.745994133 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.753888172 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.13157231 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.79783526 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.73794331 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.738802839 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.741031063 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.755835239 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.132887703 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.783531874 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.764138141 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.792115688 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.743586137 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.034845246 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.775935403 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758406213 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.753178282 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.744177512 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.739945408 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.032802742 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.161902224 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.796289991 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.742354242 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.740768003 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.758549588 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.744506882 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.740607423 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.051673201 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.775978076 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760639628 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.867088406 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.756974482 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.778298621 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.742178757 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.746058104 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.792130644 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.758653842 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.775732314 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.744224699 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.758844612 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.761487444 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.740447379 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.75647009 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.756648362 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.743106972 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.752027431 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.741108421 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.793007589 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758066229 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.757698158 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.764032523 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.866214319 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.741656909 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.037934796 seconds)
done (took 274.285012948 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.823756432 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.737582875 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.832865938 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.740865297 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.831719132 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.817325016 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.741857158 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.741211566 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.740887941 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.227876897 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.741287637 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.751107697 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.74190553 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.741336163 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.815511023 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.741033188 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.741664664 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.174393156 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.742814097 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.823656464 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.741185207 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.742610157 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.743406129 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.252529162 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.740963912 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.741618298 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.825619257 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.741923988 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.200720439 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.742212555 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.743449014 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.199114623 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.822029792 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.771072599 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.750361954 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.747037699 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.833474088 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.753948331 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.811966649 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.812970352 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.838335367 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.775571714 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.741399529 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.7424228 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.749036892 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.744493976 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.743209858 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.776834821 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.742727133 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.749690908 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.177256571 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.748035564 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.749028654 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.744078521 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.744231509 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.773898781 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.744067617 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.744693397 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.825499364 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.744721773 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.812540564 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.253586691 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.228920354 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.744344503 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.742973441 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.744606263 seconds)
  done (took 176.772346212 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.810192609 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.82031277 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.809094782 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.748619677 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.791873622 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.811850951 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.74813483 seconds)
  done (took 14.218882983 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.750409912 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.744210872 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.793327622 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.79360018 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.743479117 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.899753689 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.743861557 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.755288854 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.751613494 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.771402254 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.74453927 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.744487995 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.752332605 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.745040148 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.793222258 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.755890721 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.861322522 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.747270113 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.745464081 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.893003067 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.750614929 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.752102862 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.772397175 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.756113763 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.745456139 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.752263471 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.312959919 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.746117759 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.744786692 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.745999198 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.745834626 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.78685406 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.74589744 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.746417618 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.745416116 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.858691724 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.747450461 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.746163584 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.746014589 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.746012238 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.74646797 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.746431766 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.744865104 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.745965097 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.748072686 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.769051594 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.746521212 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.74710634 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.74626373 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.746722861 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.773082694 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.746831887 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.747370692 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.751241322 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.78833461 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754116831 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.751012055 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.746878341 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.746915154 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.746881261 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.895400789 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.798584576 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.746167884 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.796173561 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.747312092 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.74818397 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.747659355 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.748598723 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.835898674 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.74686603 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.796862565 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.747946653 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.90685738 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.773286259 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.749300228 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.751409455 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.750667392 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.747543226 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.749456573 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.755282707 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.748074205 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.751453644 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.754022226 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.752260869 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.748214416 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861280143 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.889846373 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.753048592 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.749589997 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.755049497 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.747896049 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.791899306 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.748617211 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.750400254 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.807450987 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.864486205 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.775584857 seconds)
  done (took 193.733069381 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.75935232 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.758452071 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.751842211 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.766489991 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.751312589 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.750719252 seconds)
  done (took 12.220748847 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.753859369 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.753723983 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.749232929 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.748864411 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.748773272 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.75049458 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.74888192 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.751588414 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.756969129 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.751211738 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.752317391 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.753962084 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.752761499 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.751695835 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.750615577 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.748845922 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.751474374 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.748440999 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.747307526 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.748667816 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.001864076 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.750856159 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.750336945 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.755510119 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.754248144 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.749417966 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.764294313 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.750180938 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.749146974 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.7591291 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.755351408 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.751300224 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.757276466 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.759766032 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.754602406 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.756545204 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.754423509 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.753817764 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.752196463 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.75140286 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.753790487 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.751924468 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.750971408 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.754271583 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.753442571 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.760294162 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.757064521 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.763806758 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.751005947 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.753919218 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.754976089 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.750839247 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.750601049 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.753495875 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.757778108 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.758304575 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.757921506 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.750978575 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.751522976 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.756942576 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.754948429 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.7532821 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.753988681 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.755671141 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.756404607 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.754280409 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.757795441 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.756873654 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.751659846 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.752287768 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.755320916 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.752042002 seconds)
  done (took 129.189748494 seconds)
done (took 527.82784105 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.022866563 seconds)
  done (took 8.708606302 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.840234235 seconds)
  done (took 8.586932534 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.251187245 seconds)
  done (took 9.939912128 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.782422196 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.801378539 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.765909937 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.754150263 seconds)
  done (took 28.813904132 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.038025827 seconds)
  done (took 8.724620721 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.774529094 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.749954178 seconds)
  done (took 15.281429581 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.913852361 seconds)
  done (took 8.600059586 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.029251769 seconds)
  done (took 8.725099909 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.769850738 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.773110706 seconds)
  done (took 15.251139858 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.753937766 seconds)
  done (took 8.438697207 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.928265755 seconds)
  done (took 9.71754464 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.775313976 seconds)
  done (took 8.532368991 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.778685153 seconds)
  done (took 8.46560207 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.840391234 seconds)
  done (took 8.526445415 seconds)
done (took 158.000249462 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.75476114 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.752570509 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.749361307 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.751447915 seconds)
  done (took 28.694086437 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.786789761 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.784897307 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.787245177 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.796501239 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.787639529 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.785437228 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.779407669 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.778569334 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.796671597 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.788462159 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.787495086 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.789157863 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.786144237 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.779768816 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.789409938 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.789670946 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.799153219 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.790292775 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.7796109 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.790998796 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.753691926 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.797248783 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.787435345 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.754320709 seconds)
  done (took 44.53171948 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.940564027 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.820715614 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.907793835 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.808401384 seconds)
  done (took 9.163489813 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.80520913 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.805824048 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.817366077 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.856182958 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.885357499 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.816789094 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.778478895 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.775383464 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.761394404 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.809763809 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.882640227 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.801829435 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.893228259 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.75347252 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.940478625 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.75540677 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.753624395 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.806894751 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.856593759 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.8705047 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.755508208 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.805918641 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.808232134 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.807435762 seconds)
  done (took 45.29202456 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.757055965 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.765478643 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.762550233 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.757428633 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.758172134 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.756855359 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.763169685 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.758819981 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.779157309 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.757560646 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.757347111 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.756074421 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.764342697 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.757956327 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.756713824 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.768847493 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.771601085 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.756914084 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.761934883 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.763727558 seconds)
  done (took 36.919746661 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.753286874 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.600869414 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.099811304 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.006596165 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.756400007 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.754060383 seconds)
  done (took 30.659933047 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.769035252 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.762663026 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.758136841 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.813792718 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.902461071 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.763726451 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.758961828 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.768078312 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.804222973 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.819331561 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.777720432 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.785934547 seconds)
  done (took 23.173422424 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.757196312 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.759973607 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.757245534 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.771872651 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.766754622 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.763861429 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.76256961 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.754298376 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.769075427 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.77435912 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.762840187 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.767322387 seconds)
  done (took 42.861123991 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834032658 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.629413179 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213518548 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218687887 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.280077242 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959041038 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.758132902 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.842507635 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.757808579 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029138734 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.152171336 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963209431 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998820134 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464068779 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.760000413 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.234491569 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049976542 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983285414 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789249343 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448412265 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868788478 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.234953504 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.403985757 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.869178314 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959952699 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.881626413 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.019981861 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.705409553 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804607526 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761129654 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76256412 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.757157797 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029046261 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878690277 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827391671 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761988964 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.166398739 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.463116378 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.817075613 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.400633514 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.286931305 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.882195994 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760477236 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758854364 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.683117955 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.234430541 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847712329 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.760749043 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.457173307 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.759206623 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.764790806 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832874622 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.760316163 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.565563328 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.438797302 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.024898908 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.758727521 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759904035 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319827985 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774449094 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348463012 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.695878207 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.844069389 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.399239438 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225843905 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.916693594 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.759505569 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760658257 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685998616 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.395838644 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875010667 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895021685 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.777509522 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398286148 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06270667 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.206426068 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.81777163 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043955573 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.511283489 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.691389458 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975140227 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.708266083 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.6862058 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.58715776 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.685325287 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9769842 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794621718 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.367622027 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797402833 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.841238961 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764835602 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773627047 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762391739 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974239357 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.654111732 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761218133 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.096076199 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.023209465 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77875269 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.845006881 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.68634906 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.76165817 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006652812 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.964185047 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.960692875 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.250065244 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854117047 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.666128167 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.774065583 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.644378977 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.77163715 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.03798501 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822696725 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785111318 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88167849 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.710900602 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013335117 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.703294909 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.860544753 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.15646033 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007872057 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.104663348 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009792995 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824398012 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.768029569 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.76236329 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.471300571 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377382476 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.978539471 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.774145698 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.216116889 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.772019695 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.762411155 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697490068 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.422746349 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.16371473 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.847366212 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.976242661 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.687241834 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038523977 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689484594 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89939654 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.765682292 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.976207483 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.41770813 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.853403521 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011422838 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.967311937 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.955598138 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771569217 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778197928 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856434228 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780222364 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.145897068 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012096331 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.764611033 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.764657562 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.466355574 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.822261562 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76411249 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.766813331 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314234068 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040948761 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.790538747 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.767131133 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.638446428 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.776147042 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827139068 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768097273 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.767141977 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.283963973 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270067931 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.769583044 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.424270862 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980876135 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768368609 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.415068686 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943023065 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.777046279 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.038388682 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834507333 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.691532131 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.465400754 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.46650878 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766186393 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.692938519 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.766582602 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768891646 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770984832 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.95247051 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.049421025 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820546412 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.465996976 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.877552537 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770492421 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.767532385 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765555482 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.256577675 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.79647023 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.236811298 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.895281716 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894649861 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.777719586 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.691994347 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.767547 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768545715 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.768156589 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.712793118 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814275433 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.4646789 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975264345 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015794764 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.171772422 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774988546 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.474045821 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.886625973 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.779918657 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.104119678 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262517661 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.863559639 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835865203 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.772173785 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.471911943 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.507378179 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330538513 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069858561 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088874778 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125216156 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.097187606 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.082212126 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.85270521 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993442907 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.289836549 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824083288 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.856979159 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70505768 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78373942 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.421338764 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125999761 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778893432 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985442389 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063899041 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.179319983 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90761667 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971933158 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798524858 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.540985639 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.791756772 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.304815545 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786262648 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.212942121 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978361687 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852025233 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.111977382 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.849800377 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.770943666 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120110428 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813128433 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.473823717 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.121740583 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.12306289 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.271360626 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002845054 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.773346715 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.209286391 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130793246 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.907146746 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.885049333 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697628132 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.775574908 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.77517406 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.782390105 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.741597832 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.600075359 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.015138104 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776135896 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997188119 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.844903344 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141542547 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.679504366 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.773037954 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77156203 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023425088 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404613296 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921018255 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.030982708 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.341043904 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780409085 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.698227725 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698968331 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.471506512 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.776223782 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735770737 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988016809 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.878714935 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454607927 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.108180048 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074769846 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013875327 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.781466327 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045064892 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048863407 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.264001205 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793017175 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.869107422 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.114346225 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.485414844 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.98694191 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.998323126 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301528097 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.98926256 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232821905 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.74539507 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.772267173 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.977719988 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.987254851 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.18302153 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951868306 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.481305064 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.785604631 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14064612 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836025286 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.187751676 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96222905 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.860017806 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77963747 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848034068 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777150568 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.778800347 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.779026426 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783596212 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.180246323 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897751131 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.785102899 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849260595 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808560837 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.351909744 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.781310439 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047455961 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130806146 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110027773 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839733907 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.773687232 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783999778 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70087585 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902036101 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.21223766 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045859806 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.890787776 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.904684567 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796470139 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.121708121 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.979731101 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076814034 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045886582 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.656634248 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379487484 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.888664699 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.990855409 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779865756 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.978842012 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995218209 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084102794 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347034931 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.857114204 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.960120034 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046859176 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.137721834 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.775579435 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356618107 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.785155007 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186113588 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.811813781 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.191826637 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037954692 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778063299 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896002603 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.778533424 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.974574514 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.225961213 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.429263182 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.129740396 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640646438 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.778936355 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058312005 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114934696 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083084017 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853809466 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781420372 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.466638363 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908367751 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.658705039 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.993326542 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.777393758 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979262147 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.486570062 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.780304655 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057947542 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08415108 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.778738444 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.711900574 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780498868 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.781607113 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991152034 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995680545 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026087902 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781733449 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.779493349 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.584942127 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061152909 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842311762 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703554493 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.77976724 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822817312 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.003983548 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796278349 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.29181576 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.478606876 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06269499 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.688454263 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794762845 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.136529126 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159627656 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121510383 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.307384463 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000763711 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.33518156 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.584179488 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149878517 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.781469294 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.137587207 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152952546 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.781968576 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.230386557 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883037358 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.053351834 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106493696 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.796608473 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505105992 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.814362865 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992407177 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.138435293 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708639367 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.784415606 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.826997556 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.780096571 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.788762156 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.788372357 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.71115114 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.177562316 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.613549879 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33730232 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.782295376 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.878440243 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.184717124 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.265242019 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882064577 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796116049 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789015697 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.492722831 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.066219164 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023371018 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.241326859 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.869171303 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.780998563 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779139967 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.699299977 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.962166486 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.967081165 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066529445 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.077380543 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.885153218 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781747056 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.988096017 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983624496 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.204473829 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915009894 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.856605524 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889113136 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.720203216 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.485482908 seconds)
  done (took 1612.231002111 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.795487502 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.79732807 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.783858764 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.816677967 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.801689081 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.795394902 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.840229309 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.873653799 seconds)
  done (took 56.217998731 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.778408368 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.936940945 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.783638445 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.780377254 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.784235186 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.779961163 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.938212434 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.796127264 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.192853087 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.785915642 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.782378056 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.782114862 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.112177001 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.804711305 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.782304989 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.796458661 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.786166442 seconds)
  done (took 73.123399931 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.784039402 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.124803299 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.813604233 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.784286434 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.530176509 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.792432338 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.923793302 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.841161006 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.785496421 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.832715915 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.078247504 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.837601588 seconds)
  done (took 88.844349556 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.79502757 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.784217513 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.784016427 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.785081954 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.783521691 seconds)
  done (took 10.65517875 seconds)
done (took 2104.07235243 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.128638991 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.969802983 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.020328533 seconds)
  done (took 5.705942986 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.921052405 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.971680989 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.084208821 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.106905771 seconds)
  done (took 9.80056044 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.086949847 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.164614275 seconds)
  done (took 5.963533516 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.099237214 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.809868403 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.192096618 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.783172952 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.784914322 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.786449424 seconds)
  done (took 22.071838285 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.780970138 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.780634187 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.780839268 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.780887009 seconds)
  done (took 8.836185999 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.779434567 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.472070676 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.77935024 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.788937289 seconds)
  done (took 20.532665423 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.929186123 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.897696351 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.924202243 seconds)
  done (took 7.464303711 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.92361714 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.641440213 seconds)
  done (took 6.278928685 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.918767743 seconds)
  done (took 3.631594101 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.80887458 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.050950522 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.278999465 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.300439631 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.374610966 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.605399762 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.106935498 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.003323261 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.226444851 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.245343914 seconds)
  done (took 23.715034911 seconds)
done (took 128.945346024 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.122613084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.812273283 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.993138803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.129097186 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.022820301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.985341741 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.00217637 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.120299391 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.828763979 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.811640695 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.156164194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.020299279 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.943944996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.803310485 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.949866211 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.807357748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.015119534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.158042571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.825011469 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.067716467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.014323841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.781910625 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.979833596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.797528502 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.020137679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.937773448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.327187571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.812861684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.966929993 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.339608746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.94450371 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.205259211 seconds)
  done (took 165.418600269 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.787796684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.78389476 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.784425457 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.785787357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.332092547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.78511347 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.782599074 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.782075438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.225029037 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.217183382 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.783867853 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.322750044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.784913849 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.783416666 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.785173031 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.78324111 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.399430556 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.784131246 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.78461264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.782730631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.784228216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.154428347 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.783861215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.167479087 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.391842498 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.784640315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.784112791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.784105686 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.783230469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.783361335 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.78474975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.785523367 seconds)
  done (took 206.7504213 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.71543826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.786025856 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.785737652 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.785154766 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.787083682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.786154813 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.78650927 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.78552561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.537666903 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.523982335 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.786013355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.786999416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.787206085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.785500031 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.786141811 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.784873347 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.785553794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.753703621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.7864567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.785591748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.786303881 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423120683 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.786234293 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.409248472 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.788607965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.787312247 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.787582091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.787405638 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.785319876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.787438322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.787563352 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.787617116 seconds)
  done (took 217.529658527 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.028126956 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.786481875 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.787404842 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.706628473 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.788078467 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.786500746 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.775223303 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.033564128 seconds)
  done (took 18.412055467 seconds)
done (took 609.833340712 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.148409326 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.985112687 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.963655657 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.810788297 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.066732013 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.853751585 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.806913694 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.872618674 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.630765377 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.88134669 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.447135266 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.832988906 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.541140173 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.835457231 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.931062547 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.871060621 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.361923266 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.463268045 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.983951157 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.886526906 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.983049555 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.730401505 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.889110011 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.686207362 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.570029955 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.787025399 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.830421949 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.369361655 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.818889301 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.964074428 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.45049284 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.070911953 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.824667779 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.808780616 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.862378489 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.839987562 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.018756809 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.821675014 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.934593668 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.52743374 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.887334662 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.535426054 seconds)
  done (took 99.105505756 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.799193158 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.794030939 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.794401563 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.795094484 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.803813778 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.794706612 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.793996831 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.79475161 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.794229866 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.794714187 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.794817438 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.803583048 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.794619827 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.80323187 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.794364491 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.794888533 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.795874703 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.804145064 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.795431514 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.795424431 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.794647495 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.796451034 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.790865146 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.795173851 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.795426937 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.794752016 seconds)
  done (took 48.436586013 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.790492257 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.943091499 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.038601154 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.814704654 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.792953478 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.79673406 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.81067547 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.795495909 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.795586141 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.794837146 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.882498493 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.797697996 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.808571964 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.036153648 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.811020104 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.790963881 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.790646942 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.792255142 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.948899692 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.806521984 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.810428416 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.79609116 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.809907766 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.804529082 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.794055394 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.793303711 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.795298351 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.233116664 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.800854466 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.88037799 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.838434426 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.817319336 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.176539527 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.049014365 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.848643965 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.802565432 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.791358201 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.884405646 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.798248538 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.792750974 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.809623411 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.797250103 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.03745613 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.317051314 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.807370262 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.792313991 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.243252008 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.894207444 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.834675183 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.803098099 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.039248618 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.810053722 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.79336087 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.793750139 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.83023309 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.799229784 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.793591192 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.097853684 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.806004013 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.811488998 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.798096809 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.794619432 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.95445806 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.802626181 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.944838788 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.80326793 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.7998085 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.794571953 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.039527477 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.811791267 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.328347779 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.808400135 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.792986234 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.883466536 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.949245314 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.268923758 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.80563757 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.95566621 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.190548313 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.817042252 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.801273011 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.222037376 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.822549261 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.801340415 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.795438943 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.794873567 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.794728111 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.836992522 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.809384326 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.239530274 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.329958501 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.117822029 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.821840017 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.810092834 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.796015771 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.098467976 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.802655791 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.793899323 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.033503404 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.336262641 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.809844995 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.801014636 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.302708421 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.811301863 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.813865812 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.802899672 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.04568746 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.811425456 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.838100517 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.794612635 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.801978388 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.797861147 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.812879578 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.8025905 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.795138595 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.298491348 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.905834659 seconds)
  done (took 223.042049412 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.796599199 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.79986537 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.795781991 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.799500381 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.794792199 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.795573073 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.794642977 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.794137226 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.795149676 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.793853096 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.793604648 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.796248827 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.797617285 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.794435922 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.801764387 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.797362133 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.398188505 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.794595311 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.795717509 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.795670923 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.439195818 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.80042655 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.795050415 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.795161081 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.7951341 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.794359652 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.803215341 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.80001154 seconds)
  done (took 165.279047568 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.796942124 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.909146379 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.818432065 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.826547749 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.806325082 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.797926302 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.89626608 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.815748984 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.803374495 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.7982765 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.798238467 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.857478471 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.80963245 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.896846431 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.829058214 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.905002915 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.901743227 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.805489253 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.797302056 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.799061251 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.826457501 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.806496291 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.857631901 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.921418641 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.818340086 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.911117077 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.82001636 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.798969918 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.798522286 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.910497619 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.818581432 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.860363304 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.826940859 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.816959816 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.915975877 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.91595276 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.90391007 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.903530492 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.80513313 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.800503613 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.79947378 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.801094997 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.910891508 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.821142014 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.800878572 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.914465866 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.819250496 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.800859259 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.800279877 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.800820861 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.812216017 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.816672148 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.863039516 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.932749479 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.837120478 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.823759979 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.897116931 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.922442955 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.799915666 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.897002566 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.807285101 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.912558176 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.821661985 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.80020735 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.802047151 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.804285703 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.829081974 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.906088249 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.904529794 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.807526026 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.897982878 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.835412104 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.807517826 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.8006603 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.801113638 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.912979877 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.9185949 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.836416628 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.836425631 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.831292205 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.809708803 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.80050919 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.80141551 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.817327716 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.805195613 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.914053553 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.917948988 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.807606052 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.80037271 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.800929731 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.801544206 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.826017701 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.9219105 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.837719662 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.906877595 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.866972221 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.877506091 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.818001262 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.815575758 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.807450288 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.863238489 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.817157972 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.813651709 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.086657024 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.860890492 seconds)
  done (took 195.379522621 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.194511699 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.851172833 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.857183135 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.118220593 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.152101171 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.777850893 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.847754724 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.848372565 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.873356351 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.043389937 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.925492941 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.874954319 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.836387853 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.82380012 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.847253647 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.872696972 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.857978728 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.184121428 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.059060123 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.974459372 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.84064228 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.114920178 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.155762831 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.419992199 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.899226984 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.277045857 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.416104944 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.984461566 seconds)
  done (took 59.669404251 seconds)
done (took 792.631330122 seconds)
SAVING RESULT...
DONE!
