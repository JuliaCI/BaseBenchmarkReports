cset: moving following pidspec: 12201
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.248959539 seconds)
loading group "string"... done (took 0.463728537 seconds)
loading group "linalg"... done (took 7.572128169 seconds)
loading group "parallel"... done (took 0.172468334 seconds)
loading group "find"... done (took 1.179912081 seconds)
loading group "tuple"... done (took 2.088795394 seconds)
loading group "dates"... done (took 1.332960361 seconds)
loading group "micro"... done (took 0.247013354 seconds)
loading group "io"... done (took 0.733826361 seconds)
loading group "scalar"... done (took 41.876817879 seconds)
loading group "sparse"... done (took 12.673532722 seconds)
loading group "broadcast"... done (took 1.101160766 seconds)
loading group "union"... done (took 13.873300668 seconds)
loading group "simd"... done (took 4.759198951 seconds)
loading group "random"... done (took 9.602790783 seconds)
loading group "problem"... done (took 1.975003214 seconds)
loading group "array"... done (took 22.288582563 seconds)
loading group "misc"... done (took 1.408793362 seconds)
loading group "sort"... done (took 3.55601452 seconds)
loading group "collection"... done (took 19.279232128 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532150665 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138997396 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131363922 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147229925 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202561064 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142127002 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156142244 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112579402 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.939725926 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178378012 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151951693 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.507387664 seconds)
done (took 5.065939418 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222819093 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094346532 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102453877 seconds)
  done (took 0.863066554 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076634239 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144543143 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093884562 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077371788 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094169924 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076323134 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094909282 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076423785 seconds)
  done (took 1.330126838 seconds)
done (took 3.17125532 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.728078077 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277527087 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201994158 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.458660126 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194445488 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211858826 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675219773 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354898369 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.249970103 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099311419 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141299103 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384108403 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135178817 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688487408 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089206221 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12212633 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178815243 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.460706085 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081743882 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109934386 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116442936 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141225561 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127473509 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090077334 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185344136 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081755139 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19167657 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108176223 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079685691 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287163094 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199870273 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689574944 seconds)
  done (took 10.849842788 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110556414 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131269859 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09642945 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137305748 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132267592 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098183293 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085231535 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095543564 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120622287 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175600301 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128915401 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.119707855 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094233495 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081007905 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113704443 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241938082 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120827813 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103611823 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099627144 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103160331 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119782942 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112278382 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107519095 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090935721 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165669057 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219644301 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109544718 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124543939 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094966849 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11112177 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142135431 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142304199 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093302 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08019291 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171004651 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124204844 seconds)
  done (took 5.081838458 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185902719 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119579907 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153220616 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166080459 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161740241 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139420841 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158806339 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112636922 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253032389 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.118965028 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17593541 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140030803 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098666884 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097025484 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080745819 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096278595 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.65726208 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160839683 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131731173 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097317725 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103526879 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099435554 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.377305008 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086510515 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096123052 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081130109 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094392338 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064898516 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159557954 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09992832 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.137036155 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119480518 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080810335 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133895118 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206050992 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108198648 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133149738 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094386798 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078732292 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172833019 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103061217 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078221344 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120060622 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133069412 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133014909 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096493755 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079335365 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203930443 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098179071 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112980342 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.979482705 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181419488 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088664712 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09652289 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.319991271 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097564104 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097551733 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077214243 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.31440979 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080497108 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.197469985 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080234642 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097139646 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078769141 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099748017 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380534859 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095870342 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.858440915 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081339517 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105778364 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081695809 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096115563 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103131378 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087282577 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113964914 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079133878 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.0983501 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078690188 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096354206 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080468 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108250844 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10151504 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079804027 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16386519 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.08122023 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115593166 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12848584 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084726168 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095111088 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128974279 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081656997 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097011654 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132545092 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079966448 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108308467 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098146989 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141182523 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079798387 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.197864724 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080262268 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126394492 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100009168 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113892788 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110701123 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098038671 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08400206 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094372083 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076236165 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164342172 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079015112 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09615482 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080831053 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094449956 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10931829 seconds)
  done (took 22.735907349 seconds)
done (took 39.339230692 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325257075 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102620816 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101903774 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101652674 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099556348 seconds)
  done (took 1.473813632 seconds)
done (took 2.191687108 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284203791 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.210329692 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076496201 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165166634 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09301887 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171225051 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156936186 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110376806 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216666802 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.075847635 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179040758 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075708525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092887948 seconds)
  done (took 2.652094872 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093972691 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113285633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08174827 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109364076 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075472842 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109623106 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09157437 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115988801 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108216091 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083900258 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092437434 seconds)
  done (took 1.786630973 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093284786 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112011813 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080773018 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109062571 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075140079 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109945766 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091757585 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114417966 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108745864 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084435285 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092382718 seconds)
  done (took 1.788024973 seconds)
done (took 6.937156807 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089299704 seconds)
  done (took 0.800726246 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.915826734 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.845414575 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112283007 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149119208 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.313645412 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171770755 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467657128 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123553232 seconds)
  done (took 11.014962032 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.142544695 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083941764 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100262726 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082224162 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103662734 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084388897 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098332085 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097804268 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082260513 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097412504 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081424131 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100253016 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102092561 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08378515 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100437084 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084105867 seconds)
  done (took 2.303616839 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117743973 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117027151 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104870353 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107554006 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086716699 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103733815 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105433569 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088005122 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100543559 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102186809 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088850124 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104034821 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102168572 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079576398 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106279083 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107564443 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08496503 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105115345 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106077548 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089110613 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105241045 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094463419 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085500742 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104484948 seconds)
  done (took 3.220811973 seconds)
done (took 18.056893817 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157088191 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106622548 seconds)
  done (took 0.985119793 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094156106 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11278754 seconds)
  done (took 0.932803414 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095671293 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094647041 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119350708 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107839104 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078882492 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095486205 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117170315 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080050206 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095174164 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078876805 seconds)
  done (took 1.691200001 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08113773 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108396933 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100206283 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094195477 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104044221 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093851296 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086526722 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097229176 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108949224 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075501103 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101237552 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112674271 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083941649 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113403377 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103853692 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082449057 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100671179 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098520588 seconds)
  done (took 2.476404771 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078467967 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.0963556 seconds)
  done (took 0.903338833 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079896784 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093004462 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07963451 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096186056 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093117532 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076217264 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09350762 seconds)
  done (took 1.339103105 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.461861095 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134040537 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.250946205 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083803238 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118158688 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.297215114 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097691806 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083508792 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101965003 seconds)
  done (took 2.414465772 seconds)
done (took 11.469269259 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09133907 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116114296 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110435728 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.462543128 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105534155 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095941718 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158552325 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248428078 seconds)
done (took 2.122407096 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.147246093 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322214024 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112829022 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066637762 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094299404 seconds)
  done (took 1.3311534 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078683403 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098592484 seconds)
  done (took 0.90950814 seconds)
done (took 3.125159134 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.11230237 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097664057 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078429939 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095245096 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078634699 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094775315 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076610785 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093978015 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078761305 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094972285 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095136391 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079110009 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09588244 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076229008 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093524662 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079278558 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09350027 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076218016 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094147527 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07899295 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094026985 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079477845 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093724766 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076938382 seconds)
  done (took 2.874147046 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097645844 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097390054 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101136858 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084887036 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100089513 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084429477 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100570664 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096328072 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084235384 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098596684 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099731212 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083397587 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.0979535 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083820307 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097445086 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099709464 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084919754 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096253717 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081108454 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099326558 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101611711 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079710191 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100843708 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101355553 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082226411 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099758804 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081710803 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096704554 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100637915 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082905126 seconds)
  done (took 3.533032219 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08403287 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093088149 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.076721627 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10020638 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076334492 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095772868 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.075850034 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094726225 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077858034 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093389325 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078597148 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093888313 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077539745 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096101131 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077919974 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097750646 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107040538 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076807254 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093722647 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077427793 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097242627 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077220127 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09467953 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076647105 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09385773 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076306614 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094452581 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077424247 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09492975 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07795508 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098794957 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080903204 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096061992 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085094233 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099263592 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07822545 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099978112 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07811646 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095078697 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095385969 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076811911 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096512154 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077993098 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102925267 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077277902 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097134968 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077337271 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098373897 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07900796 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099310666 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078400198 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095786516 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080451946 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096296969 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098795827 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076632557 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09488682 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076229901 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095770049 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076913247 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093461111 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07628774 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096251196 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078329972 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10947877 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083741869 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094060277 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078575428 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095330237 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079482317 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09564529 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107746889 seconds)
  done (took 7.094713779 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081756569 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104893422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079738551 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095553844 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076001079 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094363161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097527786 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077899959 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096673849 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08382578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095756583 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078677291 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096468989 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107771873 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077725145 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095651401 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084108362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093000014 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078666616 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098348481 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078887387 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098240898 seconds)
  done (took 2.715651018 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205464831 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103373377 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139796118 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105692897 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081578859 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104971564 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101036512 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086175934 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100589376 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082781345 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099081825 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101296941 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081648455 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098861345 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099477688 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084157327 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101477043 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084087763 seconds)
  done (took 2.60973083 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091395429 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097888481 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101075126 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096672134 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097984882 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082192906 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10358828 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10642128 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082695488 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096915398 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089527526 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099608881 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099079434 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07941394 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099979395 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080493404 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099309091 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080376758 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10586594 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103059884 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102439591 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089591437 seconds)
  done (took 2.836380276 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094581421 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099416408 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115776822 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08298931 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093983318 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078865842 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103457941 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079813262 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105114977 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099001999 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079602088 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096200411 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086548468 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096541164 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102929604 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079569585 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099023105 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080438697 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100195863 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077130564 seconds)
  done (took 2.599314777 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100798383 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099267079 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098753166 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090681161 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09990661 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081375824 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107776456 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099140768 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081414057 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122858594 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09892728 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081607587 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107652599 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104092204 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098401136 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090268257 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107101471 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109106797 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081667503 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098467035 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124265625 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081769965 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107603257 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099528599 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081522508 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.208164438 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09840517 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086487632 seconds)
  done (took 3.597005231 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07958373 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098299537 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077659109 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095395825 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077751553 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095338705 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077178128 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095076237 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079536365 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095154358 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080111908 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097129543 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079952883 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097794513 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082442725 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098850736 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079910106 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095372309 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077486743 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095527682 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07979943 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0975155 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080211351 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095145289 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077673147 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098729868 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077352212 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094824271 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07987785 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094919384 seconds)
  done (took 3.384524861 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089622531 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105746176 seconds)
  done (took 0.947738827 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078274527 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113231961 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078128983 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10156214 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102185218 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.080493442 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106660081 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08493142 seconds)
  done (took 1.497431044 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094659481 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109051138 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081957143 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110330979 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108673518 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.093369972 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163888463 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.1001722 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086229386 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096792539 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111205787 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080003707 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105573998 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080552798 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104104876 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086645407 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096077538 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086432165 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101727311 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096533857 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082864643 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109270621 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083565267 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095740053 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082160437 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109112211 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108435116 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08246833 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10126823 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10778768 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086327653 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092575704 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081294563 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099761018 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078409775 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108615737 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110978652 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083807544 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107839306 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082284145 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109332876 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093941247 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085509697 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104694373 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090622974 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09901454 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081911902 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094190815 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096094864 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082804825 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093991014 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080866331 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093462592 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088143229 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103380455 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111043687 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0789694 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100113018 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083543655 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101897357 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08689951 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101402375 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083769431 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097852574 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105273098 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085285562 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105909873 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076324483 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092395389 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078779101 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107090155 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121933914 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088851948 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100002164 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081729437 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096706342 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10221118 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081935069 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106475631 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088861843 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098733622 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105638895 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088795723 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098906207 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083878947 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106829507 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097008376 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083107371 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096614824 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095559472 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097157995 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078993662 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096905121 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107120818 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084505473 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098519249 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078440454 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105293391 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075832628 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102688959 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082657935 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099234984 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107712113 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087335699 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104640984 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106499353 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088733655 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098973701 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083875994 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095227495 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082863825 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101116053 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105554858 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07499721 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101596174 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081794523 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100099944 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088401248 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09771536 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.080979852 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106223142 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105513292 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080240779 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095470917 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084021834 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099900993 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084675558 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106743699 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097949549 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076345227 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094710916 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084738374 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099544475 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08593689 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104830464 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101844163 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075056852 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097474821 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085610207 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106185047 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09879679 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081112616 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103220619 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082093682 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098581393 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086217047 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102082126 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080858906 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102948609 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100817537 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076116314 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103234056 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.083448456 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098071438 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.084845185 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102854831 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101305018 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082602211 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097799299 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086263075 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100666583 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080269749 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099448906 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.07985183 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108286639 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101279749 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076781931 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096936205 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088526072 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097543772 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080698282 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098041588 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101689168 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08229461 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098042027 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080755206 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100508652 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093689699 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104222761 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101503458 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086231701 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109798242 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080908295 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100786624 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099301706 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082911372 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101317096 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087898853 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105360858 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105018882 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083705272 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096329446 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086822078 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107412015 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081159538 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097157323 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080407771 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10367709 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105740519 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084981265 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099742123 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079485678 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100350918 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103386658 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083978326 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099048705 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080675298 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104799541 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081140556 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106787255 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100227703 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090682282 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103763133 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076635483 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103942993 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097831975 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087809935 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095822849 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07947971 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098637006 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082670887 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099356476 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084200837 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094705654 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088714659 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107825196 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100658324 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080622342 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100176659 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089882706 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10163157 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084523095 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103328681 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104882128 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094199953 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099301702 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085166454 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109249532 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099828599 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075681478 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105810827 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079979203 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100032623 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080188176 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09754835 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084550755 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10859483 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104413327 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076033783 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102090249 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08023307 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099119285 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078015608 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106967086 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103511702 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083310125 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108923968 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082353195 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100458804 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084805169 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099395019 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100617771 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08297814 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102861423 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082971408 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102867299 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.080370079 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102217692 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081346153 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097483768 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101154897 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083904781 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099730284 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088381262 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09944801 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082695999 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102534376 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101251679 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082328789 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100892926 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081832887 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103965938 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082269863 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100989415 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0846672 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095573111 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08821092 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099968228 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107864559 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082666961 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096828206 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087299788 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102915766 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105088354 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083732373 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101790877 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083792982 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100363434 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084673175 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108662699 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098078682 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090660401 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105876757 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08228251 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102928795 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082414499 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101237149 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080103143 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102432395 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101018904 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082386653 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099946709 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086376753 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103691928 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082233019 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102065579 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.1016213 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08236242 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101250554 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076360148 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09965067 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081292505 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100795891 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088973052 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101441126 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102507898 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081409578 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101274133 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081702288 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09702425 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090593906 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109714339 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101569237 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090198493 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100599901 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08364192 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110098029 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095031754 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080417618 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098629902 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080092419 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108840683 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083209416 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108609474 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08240187 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100121959 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079265888 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101344111 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09979064 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076458529 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098332999 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084944131 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103007577 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081454491 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101384373 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084761533 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101349372 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107604498 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082128381 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10250541 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08239974 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097188054 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080966745 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099333854 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084789911 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101449327 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.09802693 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079444847 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100299879 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083990032 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101369119 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08216894 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109586339 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089021064 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100173521 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103481018 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086948209 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094837064 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086028397 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100225 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082632122 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099322759 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086273517 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103644733 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101529284 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08882648 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100816306 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082703123 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100864424 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080248796 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100269859 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100848843 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082430815 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099799852 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083968258 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109142826 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079859049 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102625608 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081638845 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101282867 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105140729 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084135693 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102429812 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089664724 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104893316 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083528532 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107210988 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104987005 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084894906 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102596568 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084204418 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106717561 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09991826 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090538175 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10117404 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083298362 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102847198 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080017539 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100449195 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081974639 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099744277 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105286857 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08269389 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099874703 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08088233 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09888512 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08336718 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104856142 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108561835 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084991991 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104233636 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07740334 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097907433 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083543936 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099054237 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083390289 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103032078 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106813313 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084706446 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101873528 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082178361 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10859502 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088346899 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106857859 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080767337 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105921881 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101736917 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084783238 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102954053 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082999638 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102552954 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.08782643 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103507897 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100606364 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091590717 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106093178 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08342697 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103124066 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.082799259 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101291707 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096759542 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084011369 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103298739 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089519385 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103868065 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083566824 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11097423 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.1012555 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083278696 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105478157 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081995335 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108246625 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078575656 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10304036 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102178182 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084459012 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096913716 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082510359 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100000468 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085057283 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101451972 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078673776 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110771062 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109042866 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085318966 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100219231 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081272792 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096647394 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078049125 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100615646 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084156107 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104340176 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111520933 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08232839 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101299598 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078284451 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101660041 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086682406 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104670177 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080266265 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097683235 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082387702 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104528176 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108553866 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082333199 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101297091 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087526196 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104124857 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080787873 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105460748 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079230615 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105083074 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111789708 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08368253 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102072039 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088199787 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109234087 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102289763 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078801745 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103185844 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085168052 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102175964 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08416871 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103326456 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115733212 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08606424 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101257951 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082693422 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104757459 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082714267 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108835529 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103977386 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084051833 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107154233 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084700874 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111859688 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104454131 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088612146 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104275151 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085465877 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100972848 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083075493 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100254386 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081670975 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103748663 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103474074 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087827608 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110229914 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08203192 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112225181 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109948296 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088555657 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099286926 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082356565 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101515772 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078554165 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103610871 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081599817 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100461273 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080864569 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101371567 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102812685 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089314388 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104406834 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084245608 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102040016 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077250591 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104256993 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085674547 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105907398 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098459569 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083587756 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104163544 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089544144 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106870052 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083430299 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103910349 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085288074 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103313076 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097795172 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089609727 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101060745 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086252518 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101706953 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084407532 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103968207 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086375354 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107377325 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104213003 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085314958 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114618193 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085601567 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10039295 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099167765 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088718007 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101344312 seconds)
  done (took 57.066732878 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144797143 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07953756 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098125167 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07862202 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112055321 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098710803 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078970952 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098719752 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08002455 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102057451 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079089479 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098410435 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108289807 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123724603 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092628306 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103421074 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097331973 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079855878 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09765992 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079557158 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107611864 seconds)
  done (took 2.839907478 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104334654 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117169796 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113993619 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117553785 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089324302 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114638577 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113901438 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113849386 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098689113 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109501996 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117674576 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114438522 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091005165 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110236816 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109207032 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092516709 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118493613 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109055854 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11464777 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094706064 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112578626 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113488481 seconds)
  done (took 3.192929667 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083487695 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101893219 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084179302 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097420778 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08315042 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097953832 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087432778 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100662792 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086535024 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101422955 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080808934 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10214546 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103056068 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078039218 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102012762 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081037329 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151055956 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106634563 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082706776 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103762277 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097295426 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085199424 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097567336 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078813346 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101870301 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087840602 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103176801 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08105066 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102158138 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081917521 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10284057 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080720792 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104811416 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102893924 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082489867 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101170982 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083275786 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101572182 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078978152 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100492761 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08376878 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097608819 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083312258 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103477467 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081216052 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10170029 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084070623 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102222085 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097104462 seconds)
  done (took 5.410253382 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103027468 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159272031 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085692056 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141456164 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120286713 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112472831 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087204051 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140675779 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101757865 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082127488 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121703353 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119485682 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102764394 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088423108 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109908424 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102988446 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084945596 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101694447 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10809302 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082587965 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107264658 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089703309 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118052149 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116507048 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106873113 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083068474 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103118757 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107898433 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096529679 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109628255 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107854824 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090148625 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120314916 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104486762 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082558502 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106414529 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121202099 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103432429 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086335985 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100494593 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086447438 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108169909 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108695979 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101182618 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10431794 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108419311 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083186919 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100851551 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116396552 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086805179 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112043833 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119343201 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107357676 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08373059 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108617107 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119040805 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084044534 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101466659 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087087151 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116951409 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1005046 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087342652 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118134062 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105028806 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111580113 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098385051 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108520128 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108231181 seconds)
  done (took 8.048921655 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092392764 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109927084 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120034145 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120179776 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090169643 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110266819 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110794154 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089589505 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110043788 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116365924 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109568811 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132882329 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085801994 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113458418 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110450855 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091518047 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110459221 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109126693 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090571313 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109345751 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11081541 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119274846 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090034442 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119716667 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140914072 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105159009 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090568767 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111216533 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120861934 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110453518 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122986789 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090314929 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110884287 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120807187 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123408245 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090406956 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102335178 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110926515 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09127815 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110368383 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104849287 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099997028 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110184465 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10595303 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090621201 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1109059 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121298399 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12246352 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113712823 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095234666 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111174423 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12045503 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109491891 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090816899 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119324834 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14503956 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12020639 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120350912 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1106568 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099100366 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119585424 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127044789 seconds)
  done (took 7.611292427 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105699836 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114426022 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116831038 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099372022 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08223026 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107234061 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082476591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101108827 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113025586 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09373587 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115960241 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107285505 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091620874 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115677834 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107913931 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111530554 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088076413 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107954844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113149702 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107531796 seconds)
  done (took 2.903272714 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092372789 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123118878 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084315425 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111502572 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107558542 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090869895 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10708302 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107382848 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085762944 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107121291 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095469262 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116374832 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104854061 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090881829 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115500236 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111055199 seconds)
  done (took 2.472165274 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09534581 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116231848 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119618075 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08454424 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102785666 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079464709 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105572862 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10065535 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080383449 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119947615 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083800297 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107817178 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104245417 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084341 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101280072 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08699828 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100874136 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081406137 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104576845 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118069157 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095670078 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102816582 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104691589 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086082934 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104041039 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089322654 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105365252 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102526326 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082753102 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104512649 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08420313 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112404964 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100665037 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083173484 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102537548 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082351774 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104105452 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084855471 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107422687 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10383998 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083329821 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104290519 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08442154 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105377816 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081144077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10563256 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100066209 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090759454 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102118602 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084362293 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104564374 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105773143 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08563854 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115112793 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08732689 seconds)
  done (took 6.186357464 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097978062 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107764066 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080465041 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102061645 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086839051 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107009329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107795135 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086639809 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10618513 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082161891 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106399261 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089135796 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106436237 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108539665 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086310768 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109090066 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079957805 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105963196 seconds)
  done (took 2.583794612 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089784092 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104736791 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091251553 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105323503 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083811601 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107889562 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079415276 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104073391 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102812792 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084800924 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104195299 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087208101 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10300173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086665963 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105132407 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084310836 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10714549 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102646608 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084418318 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100283959 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086967544 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103255795 seconds)
  done (took 2.934607833 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117629755 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123877577 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091768537 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227478816 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103214961 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131081536 seconds)
  done (took 1.622618537 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108131516 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119545279 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104778251 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106620357 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115639697 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10617621 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086852146 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107410482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117596797 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100855787 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107811297 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116631565 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116886771 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095472607 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113989479 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113059847 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106790028 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086453854 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106074927 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127444548 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086929852 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116799837 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106740502 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086360178 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107782334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115776985 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116165097 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121057891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087526817 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117562575 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112529756 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087102949 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116842729 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12163539 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107588187 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096243625 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108261645 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127288787 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113482381 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095957215 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108654681 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114677234 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096435106 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114053623 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117515236 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107371556 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092777009 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106983934 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106951948 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134520591 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092589294 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117175819 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114404391 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117444384 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116423774 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133922784 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100201359 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116533854 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114607631 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121606695 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116264414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093580498 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116293132 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122038877 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115253822 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116532824 seconds)
  done (took 8.06971645 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101366048 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125840193 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106777839 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121153751 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096329753 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107136788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107798451 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086638858 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107916696 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10617567 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150740937 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087237398 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117901572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116861247 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107059389 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086683689 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106909526 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116316624 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086970438 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13396037 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108015678 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116851176 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116253064 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095816497 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121803289 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114735182 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107402746 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08765814 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107732033 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106886327 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093327574 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107627436 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116979871 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085481295 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116699494 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107802262 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086705125 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113729059 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107533721 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114112146 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096267205 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126703803 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107471742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107295007 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100499771 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108110679 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107010808 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087116442 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108378193 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105570134 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100759801 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122084365 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122527344 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116551968 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107807288 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087179331 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107965734 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107382037 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08727271 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114230108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116145852 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107245022 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134200121 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087917119 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107568822 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116837771 seconds)
  done (took 7.943869652 seconds)
done (took 153.308161891 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096963009 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135694793 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.0953784 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168233579 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10625518 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118583047 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137980598 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096449851 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105605225 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08525623 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106096854 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086613578 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170777273 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083936684 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106399101 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107814424 seconds)
  done (took 2.641608166 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198573813 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253383388 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1024377 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105218178 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087713837 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109415851 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104086247 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090197592 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109418617 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084897466 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107860294 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085125458 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105061071 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086230333 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109769677 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087570897 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105168598 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087313961 seconds)
  done (took 2.857656919 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111344035 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152654899 seconds)
  done (took 1.109314631 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117363353 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178333736 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316749922 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15433899 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105374318 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126137344 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155447145 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130634944 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195326057 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122108654 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12102791 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096558885 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13989857 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115013044 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094214836 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11707738 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140972116 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091922627 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115158799 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114852773 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115836377 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105345364 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11478026 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092056421 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180755406 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118920488 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084268119 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10596371 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114652492 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094067802 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113060521 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124207129 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096573803 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174038265 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101833781 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175842089 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096741954 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113646133 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114130658 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090762647 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117855925 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117172026 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103878208 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117255089 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084446177 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119131905 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104787906 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085035495 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114337065 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096130005 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114631966 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112880572 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153635864 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117681646 seconds)
  done (took 7.478841025 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.79240778 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155715437 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089980595 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885653154 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138139925 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102631166 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782038663 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134970202 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235423818 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762866859 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133062604 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121255187 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225484032 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23575653 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9249075 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306587243 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673801974 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101006736 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151197514 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152757292 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117950032 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137573552 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129310483 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429065351 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095045786 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111767701 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116422499 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099049973 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157936101 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125796587 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114097706 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177920738 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244687267 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205870736 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115586095 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08945341 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111188844 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168393297 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26549491 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212964155 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180627148 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08666331 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110451198 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120624296 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10981554 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108330154 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162947995 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171329766 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194106372 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091675127 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121116529 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119803431 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119651613 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164740641 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120041605 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287105222 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320025174 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111050434 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119750446 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1045948 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262729584 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122530127 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222952136 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116331267 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21120817 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10983231 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77972408 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189869566 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089284296 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116815887 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11870034 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094721354 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120580068 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167516578 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40625011 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123064727 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092028024 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111630383 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205514502 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.1253573 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109946353 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161561124 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11580221 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09892869 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12464711 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121918038 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170114085 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.22501127 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124428857 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11930686 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093264475 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123728216 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115452045 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211691598 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21927276 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161101337 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210340469 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12276148 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162638411 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190436621 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097470858 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192589389 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097338932 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125025915 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121805806 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21495758 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144033691 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100696664 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115549076 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118687617 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147404237 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126319233 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097129335 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16617374 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481360204 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165608652 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108496903 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126099548 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097925454 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159787113 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1184952 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259501333 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120960991 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169091268 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118581657 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087423523 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119215627 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163707013 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12147765 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098598271 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121984513 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118105305 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234030946 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216091778 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122378418 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219470931 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182589319 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11853035 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171328579 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121170266 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166655152 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119720932 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120302498 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094494509 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795898818 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12391281 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09771673 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115702274 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188081169 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111354014 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101745884 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12488263 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107833628 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782922204 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126308584 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120807951 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101589284 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118714539 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121049872 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095152166 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115310393 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160947308 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229500225 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121076912 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118346786 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101925475 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181268901 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094625674 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125194158 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124634087 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124573429 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100016228 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11470007 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122822865 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168304601 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160441579 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218691929 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.594281617 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090440119 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123737735 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227693346 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089362451 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288329592 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119615359 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223298764 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162800321 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120104239 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317399892 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166446021 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187596769 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125726616 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173656934 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086726885 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118563582 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162999 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1134005 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116822173 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16139115 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125607408 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101020715 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961478385 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111986632 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228726751 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085589375 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192969461 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09502239 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120279241 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285823444 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111167241 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10784539 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185141371 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093127657 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124617456 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.847704175 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.1260865 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121475111 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117948003 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.199095842 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185713383 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097208935 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119473506 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121088756 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163223489 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209768905 seconds)
  done (took 44.013274623 seconds)
done (took 58.93980943 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273263718 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213675363 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260675601 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166407952 seconds)
  done (took 1.857358002 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.168958771 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1477682 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118616987 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107126655 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148689684 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084007487 seconds)
  done (took 1.644595409 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.350109246 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26795765 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237282913 seconds)
  done (took 1.728336529 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.284215313 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246432024 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353405607 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.391287351 seconds)
  done (took 2.266959702 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20714149 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130365512 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110047403 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103709072 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194592352 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247607082 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139134467 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199976942 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.120958261 seconds)
  done (took 2.370710185 seconds)
done (took 10.74102825 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128068421 seconds)
    (2/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.253245528 seconds)
    (3/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119667219 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.245551702 seconds)
    (5/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.180850556 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101021006 seconds)
    (7/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124788719 seconds)
    (8/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.183962353 seconds)
    (9/286) benchmarking ("sort", Float32, false)...
    done (took 0.17160773 seconds)
    (10/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.108275188 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121388868 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093018193 seconds)
    (13/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.231079831 seconds)
    (14/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118649024 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.102364393 seconds)
    (16/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.200246115 seconds)
    (17/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.21802363 seconds)
    (18/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.210951028 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.22725916 seconds)
    (20/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117514614 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.25693298 seconds)
    (22/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094001236 seconds)
    (23/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136470743 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.136855011 seconds)
    (25/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.096413255 seconds)
    (26/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.249495491 seconds)
    (27/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.22108591 seconds)
    (28/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.122675678 seconds)
    (29/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.200430652 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.220664311 seconds)
    (31/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094286817 seconds)
    (32/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.109892887 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.116757573 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113310645 seconds)
    (35/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.181353228 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093697582 seconds)
    (37/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.172633418 seconds)
    (38/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119241035 seconds)
    (39/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103116706 seconds)
    (40/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156195911 seconds)
    (41/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165645615 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.069733909 seconds)
    (43/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13697068 seconds)
    (44/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.14944626 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115406972 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093305853 seconds)
    (47/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.193270409 seconds)
    (48/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089011689 seconds)
    (49/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.118367542 seconds)
    (50/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119726006 seconds)
    (51/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18256583 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087206193 seconds)
    (53/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114140226 seconds)
    (54/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097172301 seconds)
    (55/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210696137 seconds)
    (56/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107472221 seconds)
    (57/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.095115139 seconds)
    (58/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.225062008 seconds)
    (59/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.119076646 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170583622 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11022836 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134510211 seconds)
    (63/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.098804332 seconds)
    (64/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082020363 seconds)
    (65/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193025672 seconds)
    (66/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.217428715 seconds)
    (67/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.121009639 seconds)
    (68/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.182019312 seconds)
    (69/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.213601656 seconds)
    (70/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.130616461 seconds)
    (71/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089663819 seconds)
    (72/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093076376 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108816562 seconds)
    (74/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067618669 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159801562 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 0.091126928 seconds)
    (77/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.189453951 seconds)
    (78/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177542251 seconds)
    (79/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091124868 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116340564 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141668435 seconds)
    (82/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092581238 seconds)
    (83/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.115840726 seconds)
    (84/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.162108678 seconds)
    (85/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.088464727 seconds)
    (86/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08283909 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.168887266 seconds)
    (88/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.084951388 seconds)
    (89/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116008851 seconds)
    (90/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.171418092 seconds)
    (91/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066692478 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065782976 seconds)
    (93/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173473153 seconds)
    (94/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066307086 seconds)
    (95/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135659241 seconds)
    (96/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066421408 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.136588879 seconds)
    (98/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114278972 seconds)
    (99/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082062464 seconds)
    (100/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065530696 seconds)
    (101/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111508644 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094038591 seconds)
    (103/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.178293523 seconds)
    (104/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066667178 seconds)
    (105/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144090054 seconds)
    (106/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135698827 seconds)
    (107/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090996437 seconds)
    (108/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.143056991 seconds)
    (109/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090780154 seconds)
    (110/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229081332 seconds)
    (111/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121153099 seconds)
    (112/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116921464 seconds)
    (113/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086256254 seconds)
    (114/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.184343473 seconds)
    (115/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171723483 seconds)
    (116/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09724756 seconds)
    (117/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.098188801 seconds)
    (118/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.125516192 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.190107213 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117480366 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067094443 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.132146585 seconds)
    (123/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.066992431 seconds)
    (124/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.109436825 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092273745 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.132015 seconds)
    (127/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066193751 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123826819 seconds)
    (129/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136623389 seconds)
    (130/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088536756 seconds)
    (131/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.089093813 seconds)
    (132/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099364981 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116574913 seconds)
    (134/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090009997 seconds)
    (135/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113487364 seconds)
    (136/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091461117 seconds)
    (137/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.172162067 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.136082834 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085773064 seconds)
    (140/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11641175 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093732875 seconds)
    (142/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.089848666 seconds)
    (143/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.159479466 seconds)
    (144/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.15640539 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11850319 seconds)
    (146/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065460236 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095323836 seconds)
    (148/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.090114776 seconds)
    (149/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12629045 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08616561 seconds)
    (151/286) benchmarking ("sort", Float64, false)...
    done (took 0.170377366 seconds)
    (152/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066803009 seconds)
    (153/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115967878 seconds)
    (154/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.129078353 seconds)
    (155/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162611659 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091249851 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138973822 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109101208 seconds)
    (159/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066407565 seconds)
    (160/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066518566 seconds)
    (161/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.107526218 seconds)
    (162/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084975921 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108583295 seconds)
    (164/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092924229 seconds)
    (165/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.146866318 seconds)
    (166/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125035328 seconds)
    (167/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090205598 seconds)
    (168/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.089068549 seconds)
    (169/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099435034 seconds)
    (170/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.065941712 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108717642 seconds)
    (172/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075882102 seconds)
    (173/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.089292338 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093519427 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134239863 seconds)
    (176/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065789283 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118549187 seconds)
    (178/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.076997768 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118337044 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098047518 seconds)
    (181/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123793207 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173773041 seconds)
    (183/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086987988 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136720928 seconds)
    (185/286) benchmarking ("sort", Float64, true)...
    done (took 0.228797312 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.219465536 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085504836 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10923736 seconds)
    (189/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085589889 seconds)
    (190/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090930273 seconds)
    (191/286) benchmarking ("sort", Int8, true)...
    done (took 0.218715571 seconds)
    (192/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096282734 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109302143 seconds)
    (194/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06719483 seconds)
    (195/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.229026673 seconds)
    (196/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111582791 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096460062 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118242136 seconds)
    (199/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159445204 seconds)
    (200/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.150448403 seconds)
    (201/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06705744 seconds)
    (202/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090757685 seconds)
    (203/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065963212 seconds)
    (204/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066104353 seconds)
    (205/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164617462 seconds)
    (206/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138650885 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086077218 seconds)
    (208/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118806311 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085710395 seconds)
    (210/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090161965 seconds)
    (211/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.149731009 seconds)
    (212/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.173083195 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11509523 seconds)
    (214/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219884133 seconds)
    (215/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068621424 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.353012402 seconds)
    (217/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.134960244 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066829482 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083987336 seconds)
    (220/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115674802 seconds)
    (221/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077297279 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10854095 seconds)
    (223/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086936379 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108463894 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086590008 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129432071 seconds)
    (227/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116580964 seconds)
    (228/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085358472 seconds)
    (229/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11174764 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092081661 seconds)
    (231/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066232636 seconds)
    (232/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.098820091 seconds)
    (233/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067751752 seconds)
    (234/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.117982426 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.146148501 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109922645 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085083417 seconds)
    (238/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.154975239 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.178868745 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091907309 seconds)
    (241/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099499171 seconds)
    (242/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081315971 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117827259 seconds)
    (244/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077543288 seconds)
    (245/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066344288 seconds)
    (246/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091784502 seconds)
    (247/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085112862 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.088401664 seconds)
    (249/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067683036 seconds)
    (250/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11973035 seconds)
    (251/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088753479 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108447158 seconds)
    (253/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092012412 seconds)
    (254/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066337926 seconds)
    (255/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.090420838 seconds)
    (256/286) benchmarking ("sort", Float32, true)...
    done (took 0.228159957 seconds)
    (257/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068200782 seconds)
    (258/286) benchmarking ("sort", Int8, false)...
    done (took 0.187920234 seconds)
    (259/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089953897 seconds)
    (260/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066420219 seconds)
    (261/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066300047 seconds)
    (262/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108685699 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093455229 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107368465 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084671153 seconds)
    (266/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110247333 seconds)
    (267/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066088903 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118548861 seconds)
    (269/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094035174 seconds)
    (270/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111718976 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087273123 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116199614 seconds)
    (273/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099946572 seconds)
    (274/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.090449526 seconds)
    (275/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086339477 seconds)
    (276/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089475191 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088068087 seconds)
    (278/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.066236426 seconds)
    (279/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110646581 seconds)
    (280/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111165237 seconds)
    (281/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094512255 seconds)
    (282/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.066453373 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.114920027 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086371362 seconds)
    (285/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133166798 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.161451802 seconds)
  done (took 35.741097016 seconds)
done (took 36.617167405 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100007573 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14693354 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095359652 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134907539 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123158025 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090670787 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117747948 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096535367 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12262691 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123155976 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096952905 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092206244 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096175547 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119566178 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095513552 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137717218 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122028307 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09253603 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118835707 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084861388 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117425215 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086749338 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111220794 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069178347 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.119940726 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092785316 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115110406 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119427375 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085993391 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109914726 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.088658126 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116502503 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085647359 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123261423 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092018764 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118660111 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096052139 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119549573 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111037649 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08575344 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117333618 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085540085 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115947638 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093333999 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115219036 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091013628 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118526501 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097776388 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138298989 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115106543 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093955786 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120025217 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095870865 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117186579 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091546087 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119091183 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091035842 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138045808 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11857336 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090852659 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117496819 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093378418 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114935837 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094554397 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118798933 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119926173 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097322813 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114925855 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095175998 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11497519 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085994575 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118252275 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089788122 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109815516 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095443506 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120552596 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084515109 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115075366 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118990516 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090872188 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109514346 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08848067 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111953587 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092435209 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112199089 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068693317 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.112754723 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09183989 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109410573 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095276563 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115683111 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092479055 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111445287 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098021707 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110100825 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091438802 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111343861 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086704342 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112213171 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.0903194 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110145228 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088623059 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118980496 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087983017 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11650353 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122831898 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086064058 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116450847 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085507923 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109857504 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101670605 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12013829 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08594284 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116021876 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085139397 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.1181279 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085640715 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110142113 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085724722 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110371105 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092111712 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110034669 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089445686 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117557151 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125169887 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086171755 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113701664 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089092252 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109575957 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091893074 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110598518 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086741748 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111875354 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076837128 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112892047 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.085968117 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116719114 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089011591 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117787127 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088335978 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119467219 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09135634 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116476705 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091356609 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109699158 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073944434 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115375594 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088333052 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112019648 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086891876 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112366425 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085898169 seconds)
done (took 16.774417463 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086388293 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182845217 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150426324 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141305122 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106389258 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112400854 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121599876 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117144068 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112979007 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141303781 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109253924 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131134022 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146763022 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086144889 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111279628 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090150731 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112244022 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101406066 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145076089 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132159764 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162732341 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085549756 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145160414 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133621625 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119941578 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113762668 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.1117451 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090702154 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114653804 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102444805 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131733141 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115241928 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087574608 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133313859 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103383895 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119104943 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087085579 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118076814 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086306167 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111318033 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139856087 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132507577 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09219057 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116548694 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090387759 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11361841 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088848253 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120262732 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097195433 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114888959 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12580185 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155322928 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089997615 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121086564 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085585997 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122176234 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120912812 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089658365 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111267666 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089476022 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111483352 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090430792 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125487994 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14056632 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091156216 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120414756 seconds)
  done (took 8.534197278 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103496484 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138366179 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104378912 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130084345 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111727604 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088160246 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111889843 seconds)
  done (took 1.724065535 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087850978 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134168174 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109599103 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135998322 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13382941 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111738055 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122602729 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08759098 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130068656 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08859399 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133874193 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149098539 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089904774 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119952965 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137263488 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087600933 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136464314 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087961048 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116240806 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110939484 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1155247 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134916281 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09044767 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113416356 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102064151 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113326511 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160843951 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093608053 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114121212 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091634766 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112218126 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151019445 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101902755 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124360974 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08763237 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128154948 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127822396 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085942197 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125461157 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092804898 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128268009 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088895213 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11347058 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086676535 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117482726 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098604612 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116402361 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089030463 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115661427 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133440643 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089025452 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126614206 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.105800782 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.1173177 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090341852 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11839541 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097328579 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113621158 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132674082 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089410753 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130394098 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104673483 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126604317 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129425605 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091020727 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126297877 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102067017 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115876798 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090100345 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116385772 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104430475 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112276356 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.08958378 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124538391 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115131144 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111553449 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136640952 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089979055 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124231464 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087654022 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113682683 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112541197 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111770779 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11744107 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088511503 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1168268 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091120728 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111837394 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087484586 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116835322 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086947836 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114961015 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093999088 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113942932 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092685172 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129471302 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114357552 seconds)
  done (took 11.729404979 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089469605 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11438041 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090985524 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113624751 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09057099 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114421605 seconds)
  done (took 1.56218817 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113595393 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116773513 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103639637 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120080029 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154475005 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103216786 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129759564 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12315041 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107468925 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127158397 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128169066 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104424278 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134398053 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120285662 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103467747 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120325316 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102712275 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124310612 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126131388 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096411333 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135410358 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119836555 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09653003 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.1302917 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116886288 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094609691 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124357923 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102119736 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12653626 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123101712 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096151412 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117736398 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.0959415 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122185774 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128179556 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095339561 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119526094 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118110541 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098534831 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117013668 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103192726 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120341241 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125945972 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.092581461 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122012541 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119811497 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09326701 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124107052 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102891518 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117473043 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118036384 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094205029 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116912287 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093587091 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121633427 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126266097 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093531978 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131055027 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123285467 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094826463 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117606257 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093040073 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123203854 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117860576 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10345085 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118091837 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120551722 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095585861 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12144903 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095433365 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118623312 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091574587 seconds)
  done (took 9.139774444 seconds)
done (took 33.624495949 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685576157 seconds)
  done (took 1.63071121 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.826691022 seconds)
  done (took 1.773272852 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.764267954 seconds)
  done (took 17.741565707 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.489086743 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.336822769 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.98356467 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178225507 seconds)
  done (took 5.935758931 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.944542468 seconds)
  done (took 1.911966729 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280739567 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232748157 seconds)
  done (took 1.465951256 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.763770865 seconds)
  done (took 1.726874606 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.359765929 seconds)
  done (took 2.312754522 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324196161 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18255718 seconds)
  done (took 1.474219737 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545461685 seconds)
  done (took 1.512617483 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.367008472 seconds)
  done (took 11.338623036 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266554485 seconds)
  done (took 1.245329682 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298716784 seconds)
  done (took 1.266336726 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.483721369 seconds)
  done (took 4.458154789 seconds)
done (took 56.752769451 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097820191 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126372693 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101518399 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123287977 seconds)
  done (took 1.414194167 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100588923 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120460009 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09985868 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119921051 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12507733 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095139037 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122603519 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100541783 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120226878 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095512805 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121290595 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118771883 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097695596 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122421375 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092973034 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122892507 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098358391 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121051872 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123265433 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095537838 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118086985 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096978913 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123689877 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094253432 seconds)
  done (took 3.6218923 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099804944 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118086321 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095341099 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118647731 seconds)
  done (took 1.409046469 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098965225 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13041971 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104725548 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125157521 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129876763 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104755305 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117146633 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091652328 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119557708 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.098372779 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115576978 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139698386 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105773458 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124076976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.100652177 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11308896 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091275526 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130777638 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124784184 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099603319 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118113172 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098115879 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115003981 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.107776382 seconds)
  done (took 3.677319581 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170096487 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127280997 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138046239 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094195157 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159344094 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139750742 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087752789 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140237081 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087185211 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130630728 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117800978 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132961719 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129241407 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087341106 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112979081 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087209557 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127495719 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128777885 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090928188 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127574196 seconds)
  done (took 3.397168554 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097301509 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116705732 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087275676 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116019339 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098217816 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120108071 seconds)
  done (took 1.616052736 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089944769 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113399965 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089955693 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11359328 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093305614 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113536012 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087218624 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114367968 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088689413 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113944345 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088989087 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112495489 seconds)
  done (took 2.199393617 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.49801455 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118657276 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119528817 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08742235 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123157225 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08844964 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128991562 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091470244 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14008816 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087900402 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114974681 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089973377 seconds)
  done (took 2.667937666 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233568678 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125502281 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282143981 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365484103 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155457659 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164406859 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277174935 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16068131 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195499191 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14841559 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228028473 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193455228 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150659879 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214709515 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110643571 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145311878 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186618139 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247037711 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151669695 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208899659 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20462781 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167403888 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179160864 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15083462 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110359916 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191904703 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094594729 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12878374 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232155903 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178252787 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187319383 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160013993 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145858698 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235574098 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246752093 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192909775 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277514817 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133683384 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.165461486 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166708094 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235136138 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137618105 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231826687 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156174063 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10298077 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220453618 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165519635 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174951738 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144813395 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138361744 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196205974 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238706261 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191474038 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138243918 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298901849 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146349687 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156142437 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187968947 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24963209 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226207673 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187736779 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120192394 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185770396 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189081821 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210037201 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151066732 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181541238 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146650156 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18171184 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187255341 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165180112 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202460348 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178567006 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137930118 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169436782 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172874551 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17073469 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257219085 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183727738 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122110837 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166942766 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14767979 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103846766 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.1938812 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125116966 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213212642 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142483962 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162378609 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207253291 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157807409 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159694799 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218341692 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182887147 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148388953 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082831932 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152200536 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154582551 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175133318 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139315241 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157802615 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15540198 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129300471 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167834627 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096823262 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20932342 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091618118 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172498403 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182305224 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126293496 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161217118 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15233427 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148931325 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176565901 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200007324 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139760628 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134810572 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207099057 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175859518 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141158665 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176057904 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22643587 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11651025 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147760155 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225799445 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214908795 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140127484 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227817844 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151988429 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107367124 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132688829 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180007343 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155466948 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160367038 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132098559 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182182103 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231806668 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098965179 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137730274 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193479587 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133246201 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130964716 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152545261 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146568919 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110437083 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142657775 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144052004 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173863644 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177792048 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154565716 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165214317 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149508522 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2482274 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13900182 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149259139 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121346947 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120854941 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192497194 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223815542 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103507875 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230616137 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170444425 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197772346 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195142394 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106160694 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176042328 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129695688 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091786941 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21917195 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166276791 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161898808 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193940742 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221360327 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178998936 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182084803 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165054384 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2022774 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163931044 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155449176 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110996518 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159725622 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158673373 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12351155 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.109914214 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133329592 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14963868 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141972164 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132177679 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196275741 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168773185 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213921982 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157797117 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120406815 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205247737 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10049631 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174210705 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204530299 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116672786 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.223829114 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191208919 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211400699 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115442512 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226752099 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092460984 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124941799 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141579903 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16877857 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133010345 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107327814 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160577316 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179308405 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205937145 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169394958 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204925821 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19981815 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188802814 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093408874 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168581372 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183243913 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201273594 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.152039061 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138139723 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15053717 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176367818 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154218234 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252496821 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168669986 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174866898 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229987397 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122347066 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131681272 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148613039 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177518735 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153235844 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17376042 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145900737 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138547217 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159417404 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.101715377 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159092671 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211999651 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161116474 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185479881 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14860123 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183739385 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12818707 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160970601 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160179181 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1643097 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080314136 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200280592 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200474962 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146191436 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165400047 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213936816 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10371852 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304636631 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233233531 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192836984 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137214231 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154024314 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159382014 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161611531 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169834311 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177799831 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157194968 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186283228 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158927278 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135311159 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110956007 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148602739 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151525843 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131427274 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147661269 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177186571 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.136459807 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186550756 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152832255 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15798753 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171406785 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14864645 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.115809197 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14938328 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241798686 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183361499 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237050226 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149899164 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177382657 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205136583 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125333432 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103234707 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133134191 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177162074 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135994383 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188491586 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.212664864 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198773873 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179299115 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20352417 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110736027 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119983393 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157112414 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16638446 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201529178 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147221919 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146801497 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227491772 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108957138 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132202997 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165105918 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28670865 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145349745 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193019122 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107448142 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278500424 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098495274 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131818743 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162653027 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231167887 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107358505 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17637526 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169689755 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160752117 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163394548 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148251905 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190599688 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236287518 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198069978 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209436123 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104691447 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15635561 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172756848 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220175459 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154804217 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109805854 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230628583 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193796576 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193046377 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141645163 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166655977 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167168024 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157231555 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212628223 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106650881 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233047312 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132876576 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190565986 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152400883 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13724541 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174206712 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187482184 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139606926 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186310769 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207559717 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10628915 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133070072 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164730898 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177422633 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153761659 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127075704 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180584316 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124638963 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194757729 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258134233 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1322585 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15379232 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11738718 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135628183 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154449972 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157958601 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138232005 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139562395 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225530352 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13371029 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190688064 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226248204 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169347602 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172627443 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144812314 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692159576 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.101342223 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220839211 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117708142 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232549097 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150166212 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171713223 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15845352 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166522869 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190775569 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159380706 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229567208 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218201013 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179705372 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130643238 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156612509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153594442 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142557884 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125057821 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16697503 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15847388 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14438136 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177312559 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192040271 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105824393 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139443261 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196373982 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148737741 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183941218 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178315519 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13838712 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169905024 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213573186 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104914643 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.205010646 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205234684 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142869919 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148098074 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132950016 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.147414741 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23138597 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124840245 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186408524 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209913626 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130574729 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166471762 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145327483 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220862673 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156727845 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183598041 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141732714 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157276082 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155540454 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136581049 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101614438 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155362992 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165588201 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150166648 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157976752 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163453589 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193497512 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094911907 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142916484 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308719634 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176373695 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212777408 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136063466 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134591088 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160305211 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119980675 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.202707677 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17779566 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135030422 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105892558 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136583502 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.128561916 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134999097 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154534427 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191467936 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163291496 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233583765 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.106847312 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27870761 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139352518 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155783181 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088151223 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131413246 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148933081 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145032187 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154865623 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190838843 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260487918 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.1482662 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105983675 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147852123 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125414078 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107505324 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164241213 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164076489 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176255267 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143646983 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108605516 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153551742 seconds)
  done (took 81.750572358 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172718792 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131654698 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145943184 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200542497 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174062473 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268800805 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209026905 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252368176 seconds)
  done (took 2.623684675 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093572323 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144807264 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156946621 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132198644 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091418434 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118833153 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340547308 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132393585 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115633405 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120722294 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173502174 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092885598 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.54425039 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090059686 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118388537 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107647156 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090977909 seconds)
  done (took 3.728445964 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 45.700517844 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.311953995 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.111392018 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195598281 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.786535577 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.093501951 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.720015578 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.166032445 seconds)
  done (took 59.156859709 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114051273 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134965127 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123134548 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151358882 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139587261 seconds)
  done (took 1.731896296 seconds)
done (took 169.962774645 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097161626 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126415692 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096336142 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129345299 seconds)
  done (took 1.510563017 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093339512 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069515178 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099862426 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074124075 seconds)
  done (took 1.407151634 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187534115 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.16680978 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40461136 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070503104 seconds)
  done (took 1.576787946 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112975186 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131246937 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103457942 seconds)
  done (took 1.430822008 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105280337 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127716291 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101816239 seconds)
  done (took 1.413581765 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104129895 seconds)
  done (took 1.182691399 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106940946 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135772717 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10787873 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135713023 seconds)
  done (took 1.564845217 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096684384 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125607905 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108242455 seconds)
  done (took 1.408740283 seconds)
done (took 12.921594852 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101701062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.415860098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384213259 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143096439 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719853013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379790771 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.03239291 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145165382 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16411363 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092396982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138499551 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672608852 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.027539278 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.376249581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983440566 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.375557906 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674686416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119948186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118456241 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093592208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019240547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090619575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120847296 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091333004 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702495567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424837545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094083199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374158615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091262858 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124591424 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38168165 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121889857 seconds)
  done (took 16.866194051 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094326226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172849987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096843595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137030886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121620632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09322868 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126577995 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091958575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177748337 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121091859 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109233647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119855433 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123945594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094120854 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140220862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091290955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123684942 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091285918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120294376 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120779938 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110955989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120138533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093070665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120227317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0922125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134288441 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121718483 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.091597097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119634695 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09792417 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12607108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093381066 seconds)
  done (took 4.771508794 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139530271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180559323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126952709 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125744142 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166600647 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123345185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197209227 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116675826 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181098169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121962465 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138315667 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092658635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155686021 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.092918341 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141456323 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120331784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095226075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121411517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091663069 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122975956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138950639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09275888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12137086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09213868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121889723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10656881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122990027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11957592 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09310765 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125441873 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09926183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123404813 seconds)
  done (took 5.098085344 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095884904 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125373074 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107626402 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137448628 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094128776 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124107232 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.095525397 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12413955 seconds)
  done (took 1.9904068 seconds)
done (took 29.809914635 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11006747 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125904432 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105547574 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133662477 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101299951 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131189132 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090116014 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13324308 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132539935 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101358956 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136343986 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09134642 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121354078 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090355541 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13374688 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096439714 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131982229 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100752023 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132300487 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130795319 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093103707 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132070327 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101536777 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132003421 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103217421 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13240412 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135613466 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099103067 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121622858 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093926872 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123414717 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10270809 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123127937 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103620885 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125825192 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095844162 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123543732 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093113032 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132823528 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13241726 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098229587 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132571813 seconds)
  done (took 5.942018528 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106061991 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13875456 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103935875 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080245894 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115641884 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079150389 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137156066 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078285628 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109191097 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106139471 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073282524 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105234434 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077698235 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100997482 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075998129 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074138245 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107435482 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075036951 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075248136 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105628147 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.07872576 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071667682 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107603249 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07783249 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074056326 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108961235 seconds)
  done (took 3.534291397 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100062482 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133526069 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112178936 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183289654 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159211199 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098596318 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131241252 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139199759 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108432217 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119907931 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095250075 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148382045 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108496693 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128968704 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090707518 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13641414 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135074916 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093098141 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12711103 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111744402 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137463027 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102292723 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14025629 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13295196 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091033426 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122145161 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095888094 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134035675 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096323 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130271537 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09566033 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124352187 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121926636 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10373575 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124697788 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.092924726 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140870833 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101372545 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129535535 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091654946 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129463451 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120953961 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.111882395 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161412642 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090175185 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128962192 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094889234 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131443574 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119865062 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110450844 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130591427 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090571099 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125111231 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090216381 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121014032 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105430043 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123228402 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094094535 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130764694 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126628264 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105383846 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124466137 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108146497 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121889583 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09893584 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120570465 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091984572 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119628537 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143464859 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093186409 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160587227 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092599474 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122583318 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.09982401 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129416521 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127155293 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.091803213 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136000633 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101678267 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124639435 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101029021 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125629499 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.0944435 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140344335 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123343828 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094649789 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121441756 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.09966095 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123814687 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093498128 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135647876 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090736159 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124652438 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109533995 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121348258 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092241759 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128431248 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125587648 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091659304 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134188158 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09684834 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122644676 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102082364 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121705369 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123152056 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10250279 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125209028 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091089063 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125757555 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.097621398 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12250077 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091837366 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124721885 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093066691 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131129917 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097416167 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126840527 seconds)
  done (took 14.688270543 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225384514 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212252476 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20373724 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.289929164 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133447428 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114183911 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211177198 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154269753 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122132339 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158715802 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172812658 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179567086 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168200486 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179908323 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168862618 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.091925778 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141592888 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132212812 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.243565361 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.25529288 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142947812 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100199442 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16061295 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158507348 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136811624 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131258786 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109010208 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133705921 seconds)
  done (took 5.742467792 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10688326 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153812167 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097050621 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143709661 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148496008 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091153307 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126958945 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.092890406 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133592275 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133941334 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09157247 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128102773 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099043094 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131038728 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122003193 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101701449 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130947754 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093770454 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124570061 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096013914 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132207152 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100804417 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126484802 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119720272 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10167345 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120600398 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085952202 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141687466 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121627103 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.113994824 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119854684 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100815041 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13561358 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093194155 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122376669 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.093922766 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124418383 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095285614 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124504774 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090675104 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122000955 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07684491 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120998018 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105731337 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128164636 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079489638 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128422294 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126982906 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093391565 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12012272 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095498269 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123971148 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096012228 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128706902 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095515688 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122838819 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095639464 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114661615 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098729616 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.1236676 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083763062 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119897386 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097750985 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116660107 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099906087 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126351718 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090214856 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124492147 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09664504 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128282989 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.093794095 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129123996 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.089355038 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125395894 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094103273 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127310909 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09535665 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12136245 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121712673 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093402914 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074375809 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122628913 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073466234 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12534458 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091051807 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121331771 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094665944 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128938096 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136298391 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094295154 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130396487 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093487837 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12185779 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.094712372 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112230506 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.094954658 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138647797 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138693279 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092231662 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119963995 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106575039 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124265932 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091516574 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105182962 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101389076 seconds)
  done (took 12.826887868 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12480975 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152521764 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093759945 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140396285 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154943987 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156318635 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099750568 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129233928 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.093937342 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14041305 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092699709 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130520481 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092770813 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135979834 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15442519 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102269922 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123924985 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107022889 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126769226 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167826509 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.109603207 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141591235 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109097756 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124088327 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097755964 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139174988 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159357738 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106369087 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135541845 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141365902 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106524976 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159108414 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.11187039 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127227648 seconds)
  done (took 5.413040581 seconds)
done (took 49.234867229 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.197527638 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.403811315 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.184903305 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.104933131 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.227761352 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.206430029 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.193775529 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.186615374 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.842017184 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.182760455 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.42825623 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.707435515 seconds)
done (took 59.979851423 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.198494688 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.319299657 seconds)
    (2/2) benchmarking "String"...
    done (took 1.446686996 seconds)
  done (took 3.881413374 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.556148857 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.121983601 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.442360363 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.182899625 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200246751 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.500434082 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.858416832 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.554323783 seconds)
  done (took 27.974715093 seconds)
done (took 41.722429851 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.16571085 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.254662123 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.196680703 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.167175644 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.295635427 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.210664165 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.450383888 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.184824607 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.212042878 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.170644878 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.203934673 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.183806517 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.19296684 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.485044163 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.183795506 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.184208347 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.266702324 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.698023967 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.594803698 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.19748419 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.192109909 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.257774319 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.213039044 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.188616912 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.195349126 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.184519662 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.188491277 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.190283663 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.754253488 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.187775887 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.199576992 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.634684912 seconds)
  done (took 190.000779996 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.184843924 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.276695029 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.334549197 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.234336881 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.811511587 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.384107021 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.333377857 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.881427706 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.201400624 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.213355022 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.446463751 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.190695091 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.520368441 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.162692428 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.214720379 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.248915612 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.524622072 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.55828413 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.222552415 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.344105116 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.209840815 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.613419521 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.552237443 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.4524527 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.21641392 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.210469055 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.20019269 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.22457285 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.380447578 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.469589719 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.190538688 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.217953559 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.814872073 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.038475009 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.193779098 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.202834421 seconds)
  done (took 150.593066515 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.186584782 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.187035324 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.187439785 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.186761971 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.220052044 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.186624803 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.773723339 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.761123786 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.684961417 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.419521054 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.616413558 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.456816553 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.186394994 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282744659 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.200068107 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.188467703 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203518654 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.231155203 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193299369 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188038895 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.776808483 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20513175 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.252125521 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.370044891 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.204088316 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219717588 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.188870092 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.578848988 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187142525 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220699113 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.521663233 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.23683292 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187549623 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.595862847 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.425041961 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304066958 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190315445 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219967896 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189521658 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.470399003 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188356254 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.188928971 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.192046553 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.879652424 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.19360925 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.778081228 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194905818 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.134125377 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190107839 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190204199 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.463174417 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.900006859 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.21067884 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.188188704 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.191583519 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.189440687 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190078717 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.22324165 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.402032003 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.194761157 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.282990511 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.207736399 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.193667488 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222520847 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.189182666 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.347519869 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195242115 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.929277711 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.244273133 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.305936245 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778515302 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195890341 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290668735 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311103328 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.191126935 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.190278912 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189775449 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.190882211 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.302237333 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.190676407 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.615475262 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.367789796 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.207941116 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.618536688 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292352742 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.191312735 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639480668 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.195891141 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.191032101 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.963255478 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290139834 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.191849368 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191090867 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191583158 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.619043307 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777916186 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.506241397 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.19619104 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.422886437 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.193808837 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.637694764 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.754384961 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.942933992 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.197435487 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305374114 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.370337705 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.209215937 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.191603401 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.548410496 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19332537 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.251924447 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.19264973 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.19182371 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.591187617 seconds)
  done (took 364.884009482 seconds)
done (took 706.589648115 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.806767884 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.797696438 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.90585637 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.79161264 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.755524293 seconds)
  done (took 10.182037936 seconds)
done (took 11.30193275 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.380698604 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379783607 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255210338 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.382041552 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226568998 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398953378 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.35930756 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.212653632 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.293781142 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.275423004 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296716766 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246809659 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228653142 seconds)
  done (took 18.061092142 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518257573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.506533926 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25708871 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.501403725 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233935633 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509989433 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.396619736 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421450649 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.409490159 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231264674 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207660056 seconds)
  done (took 16.319438184 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51266699 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515034858 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261656046 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50924428 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236039738 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516948576 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402819214 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.410257647 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418050846 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230304579 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207792076 seconds)
  done (took 16.346071153 seconds)
done (took 51.84702225 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.204295313 seconds)
  done (took 2.33078437 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240476858 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.403270268 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220408584 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.211802733 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204518209 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.206045402 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.211269025 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.205758867 seconds)
  done (took 11.030465314 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.204508767 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.201809597 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.201411192 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.202177828 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.204072847 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20423728 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.200117376 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.201418046 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.202140425 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.200422882 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.201219949 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.203255484 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204628336 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.203615633 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.204003713 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.204558957 seconds)
  done (took 20.371387548 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.203803753 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.202301484 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.202131441 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.203043768 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202050337 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.2026218 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.203067148 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.201443624 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202103812 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.201777744 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.20323792 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.20244462 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203116701 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.202234543 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.20253985 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.203182602 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.202309191 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.203139249 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.20913591 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.202780843 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.203750084 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.202938401 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.205016597 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204346005 seconds)
  done (took 30.003905459 seconds)
done (took 64.859633248 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.825686069 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.876524045 seconds)
  done (took 6.830736132 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.205397488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.205394698 seconds)
  done (took 3.54042312 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.205774189 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.205302317 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.20516923 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.205338279 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.205526608 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.206363331 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205630855 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205156975 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.206672026 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206813045 seconds)
  done (took 13.186831378 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.206779133 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.206906248 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204013134 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.207679978 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20564244 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.204353732 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207658307 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.206930153 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206531178 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.205632086 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207167073 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.205437137 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.20786754 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.204866397 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.20786792 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.20513631 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204941257 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.205930842 seconds)
  done (took 22.84132724 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208488131 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.207270045 seconds)
  done (took 3.546662963 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.206303654 seconds)
    (2/7) benchmarking "second"...
    done (took 1.205909073 seconds)
    (3/7) benchmarking "month"...
    done (took 1.205887237 seconds)
    (4/7) benchmarking "year"...
    done (took 1.206394941 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.207169354 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.20624789 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.206074046 seconds)
  done (took 9.574493622 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209912923 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384500238 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.464413101 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.800235155 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.209496643 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212459621 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.067204606 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212309165 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.214385286 seconds)
  done (took 13.90632481 seconds)
done (took 74.551558104 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.231098568 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.22125694 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.464622605 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.209356192 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.220200951 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.504336946 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.231396179 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.331085775 seconds)
done (took 37.54106906 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.229653737 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.180637543 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.981997916 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.182706263 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.250449172 seconds)
  done (took 18.728563558 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.24828662 seconds)
    (2/2) benchmarking "read"...
    done (took 1.540036349 seconds)
  done (took 4.921288559 seconds)
done (took 31.008337374 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211858751 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210042696 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.210657013 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.20845979 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211991692 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.208097076 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.206760593 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207881821 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21073927 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21171838 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.210926976 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.210918891 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210079275 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208756721 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209501076 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210675347 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208679428 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.208387191 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208855395 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.210528558 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208517157 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210972551 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208216609 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209480783 seconds)
  done (took 30.165913008 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.211954463 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21034306 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.211186205 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212613223 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208767817 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.211530501 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.212433853 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.208190771 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.212299714 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211224726 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208661538 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.208984501 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.211315947 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.210900055 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211465304 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209385906 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.211981108 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2097987 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213994782 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211168504 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213052771 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209812019 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.211473047 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212529098 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210365547 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210843141 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212255398 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211386435 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213308866 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.209854056 seconds)
  done (took 37.467982666 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.217609643 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.219934676 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212449901 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213074533 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212946094 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213640181 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213634878 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.212838281 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.213225029 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.212886957 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213693966 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.213381881 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213788704 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.214420376 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213168311 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214912862 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214112433 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213877228 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213913343 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213513074 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214447788 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21468751 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.214905568 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.214574935 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214329315 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.214011407 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214468731 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214755644 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214396466 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214833187 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.215351012 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214819053 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214491526 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.214976816 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.215031085 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.215164569 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.219858818 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221930131 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.215222017 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.214961922 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.215086103 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.215211002 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.215890563 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214875537 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215696244 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216012863 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.215808844 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.215145736 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21555531 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.215206906 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.216467804 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.215327703 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216027643 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215976568 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.215515222 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215636467 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215918407 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.217070402 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216197649 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216227683 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.21600539 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216000453 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.21612188 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.216761778 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.21726606 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216696481 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216856975 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216290783 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217996405 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217091099 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217382646 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.217671686 seconds)
  done (took 88.64203545 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217560253 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215253708 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215087727 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214073246 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215117317 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218332511 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215470433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218361843 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21534089 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.21816437 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217837619 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216271767 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216282641 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.21898106 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218569615 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.21587655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217992649 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215549824 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.218842231 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219583079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218285021 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216486776 seconds)
  done (took 27.912926516 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218771119 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220534397 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215454966 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.219332603 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216237992 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218977885 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219895133 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220546148 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218446398 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217690145 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217141902 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219340099 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216780641 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215708732 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216673797 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219801576 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21913285 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218271945 seconds)
  done (took 23.070825423 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217791824 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217463318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220011763 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216244205 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218480729 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220359983 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218006306 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220961201 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.21972127 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.21849082 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220579292 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220194395 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.221112153 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217855354 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220095493 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21818693 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220890355 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217449003 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219679194 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218249282 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.218357472 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222045058 seconds)
  done (took 27.96445574 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221165039 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221019724 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218104856 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219184221 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218647647 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219792006 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220781079 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.219026303 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.22271225 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221100021 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218384047 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221857998 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220925398 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.21938933 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219388846 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218617918 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221461938 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.21978207 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221094536 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219320399 seconds)
  done (took 25.544327037 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222649891 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223724272 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.223172879 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222707084 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222568114 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.22386118 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223690037 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22366691 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22346295 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224676842 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224026535 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224246511 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224228101 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223572031 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223537043 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223948552 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224672284 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224086166 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224635092 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225197389 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.224441402 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224836799 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225172892 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.224887486 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22494553 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224774133 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224790489 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225423542 seconds)
  done (took 35.42152858 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224484995 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224025161 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.222236195 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222101752 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222663251 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222159293 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222409253 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221657202 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22423157 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222153024 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.225304378 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224944188 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224384509 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225207123 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225761443 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.225144146 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226434903 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.223410385 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223958848 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222822372 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.226041347 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225336187 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.226220463 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222879943 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223910421 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.226358223 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224369773 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22305138 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225802297 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223801156 seconds)
  done (took 37.870427817 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245297857 seconds)
    (2/2) benchmarking "in"...
    done (took 1.245244786 seconds)
  done (took 3.637945563 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22399957 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22648997 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.226751182 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223039025 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223358819 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227022794 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227139338 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223907571 seconds)
  done (took 10.949973534 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.227137076 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227153596 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.228018859 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226499684 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226516256 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227501947 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234318432 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.248112447 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.228299426 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228650284 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.234435381 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.234720036 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230494733 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22794506 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.227938416 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229329447 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227554948 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.228268343 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.22851221 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.228420935 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228360963 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231403947 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230954923 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.225660691 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.229985549 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239440034 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.254176774 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.228909486 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228116678 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232276259 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.22890929 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.226534706 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.229997353 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.229975663 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.229204554 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230097606 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23983067 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248764824 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.236323914 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250695578 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230771625 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.228156051 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23079493 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.230623865 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232143393 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.229765095 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.232011331 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.228116958 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.22969889 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.234554719 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.236329045 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230188762 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.227848886 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234775188 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.232071056 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237013031 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.250947864 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.2336953 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.241042105 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242582512 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.264712164 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.258268184 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233507023 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.231748817 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240985482 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256044481 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238959684 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.24882858 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.22930681 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.231696586 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.237389535 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265189818 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.259730752 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.231058274 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233420834 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.232341992 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233065118 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232878105 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238777923 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.255298368 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.232787833 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233128696 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242910407 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255002587 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.233669978 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.232713725 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.232566 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239338245 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.234235357 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244085924 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.253366421 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.2331021 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233207226 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233173269 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.233867225 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.233151686 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233155456 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233602514 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.230959961 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.233388767 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232955468 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236311879 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.242732938 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233423441 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233786678 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239522027 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.255420233 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233595653 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.239995512 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.234356402 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234066124 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.236572746 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.239885313 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.232006793 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237150755 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.242510023 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.23572054 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.23578859 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.235098897 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.235173583 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244410615 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.261752571 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.234910815 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.234750187 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.240598783 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.246705985 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235292753 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.239575673 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.235316741 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.233703427 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.233153171 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.236946501 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.236562767 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.237366695 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236511394 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237154569 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.234250239 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.236966798 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.235873426 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.237398621 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.236609769 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.237772757 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237293005 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.237071694 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.23654051 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.238601442 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242181189 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.256415906 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.237534989 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238001426 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.234820174 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237047577 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.237226745 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.237467322 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.236586034 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237051789 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.236843544 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.238350849 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23757269 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.236865515 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237628148 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.237870758 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242162043 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.23735069 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239189573 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.236303135 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.234937574 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.238246648 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.237694672 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.237514596 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.238680488 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.236523734 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.241169189 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.245939431 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.238605778 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.238997176 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.240838036 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238011514 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238174513 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238528964 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242267082 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.247250674 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238655593 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.24583589 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.259639385 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239406055 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.239232915 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238986869 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.238389476 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239561053 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.242313415 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.24732885 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25127911 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265773262 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.239927433 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.245656108 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240993756 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.245128602 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.243773623 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.240389531 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241183233 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240468885 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240562226 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241634755 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.241838199 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.24165318 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.241285892 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.241403386 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241710648 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.24099706 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241074189 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.240430543 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242052155 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.238668811 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241370038 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240325727 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.241042943 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.23884355 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.240977249 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.241041256 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.24106997 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.241680613 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.247786324 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.23927929 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24259962 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242925603 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.241126897 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.241127022 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.242961543 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243434505 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.241468922 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248385931 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.261501507 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.242418441 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248129768 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.261798634 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240855337 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245345535 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.242442592 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.239515955 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.245510132 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.251284239 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.244080326 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.243116982 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.243090045 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243732858 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242738868 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.249136145 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.26163699 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243441449 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.243558806 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.244443132 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.241375762 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.245065715 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.243625723 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.244770121 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24562231 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242947578 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245261103 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245050076 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.244261547 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.243937765 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.244368226 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246398582 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.252639243 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.24963625 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.243936682 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.246539248 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.246708348 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.248915275 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244462847 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.244344195 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.244790339 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257445252 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.271014958 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25139565 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.266958736 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.245038883 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251519937 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.266844139 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.249654295 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245846172 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246134048 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245203944 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.246552168 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.243417031 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246623087 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.245808443 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248429151 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.245971499 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.250667628 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.245495178 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245670949 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.246532607 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.246925349 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.246089692 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.246606936 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.245818927 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.248159359 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248543718 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245687926 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247117826 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253676703 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268043544 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.248009991 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.246880639 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.246927228 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.246285697 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.248834054 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.246092789 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.250371489 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254778576 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.250228963 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.256056523 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.24961823 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255596523 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.2480397 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.250771876 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.25537562 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.245836094 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.246459703 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.246963633 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.248971318 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254689001 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268960578 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.249529106 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253057741 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248327755 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.248688096 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.248326655 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.249529596 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248631629 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.249188768 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256973869 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269791787 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.252696602 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25086177 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.246104773 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.250062319 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.249420656 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.24802267 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252679762 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250386947 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.24995299 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.248698986 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.248710443 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250492642 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.250016357 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.249491774 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.246718082 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.249752467 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25735938 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.271711475 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254323299 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.250556213 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.257803771 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272230016 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257596099 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.271692325 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.250457069 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.250184532 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251247662 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.251974028 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.250933907 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.251423436 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.252447449 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.253315624 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.25490928 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.252011788 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.253126284 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.252438972 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252014968 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.250672486 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261953768 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275990788 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.253562612 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257655914 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.249590543 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.253938272 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.255986858 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.253076702 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.250763554 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.255783322 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262817689 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26130393 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.252381173 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.251996093 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253086378 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252809503 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.251761477 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.253529404 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.251977211 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.252593711 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252408976 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.253716578 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255758784 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.252904121 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252971942 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253718819 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.253787341 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.262840821 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.273773959 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.25404798 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253180345 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253947513 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.254085592 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.25361122 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.253819681 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253996265 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25356879 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.255752267 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262586637 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.260697661 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.256798171 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.253453579 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.253943908 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.254071319 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.255085933 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255538599 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.25537406 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25445064 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.254816607 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.253785 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.254393647 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.253490787 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.25589424 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.254208032 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254012665 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25718605 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.262303075 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255407247 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.253382028 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.254592737 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254749212 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.254521057 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.255827724 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263080743 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280082779 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.266454755 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.263543036 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.260374991 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.256025151 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260128544 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26418043 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256465925 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.257525371 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.257369803 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.258147748 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.257482698 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.262106657 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256285359 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.263465159 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.277541833 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.257174831 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265487631 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.277788854 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257889021 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.258616033 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.260950864 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.256129936 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.254282453 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257655643 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.257332734 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264951831 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.279350664 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258269588 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258122278 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257295216 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.259534577 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262151165 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257524635 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.258366559 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.255120308 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.259454372 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258064576 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258899186 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.255109501 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.25722842 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.257657966 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.261418874 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263910212 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.256326966 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260297101 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.25857424 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.258047082 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258315898 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258538896 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.255834052 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.256184697 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.258292683 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258573244 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.258420986 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.261857838 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.258712848 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.260394033 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260533334 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260024154 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263265964 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.269885546 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.268370959 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.257542019 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.25978405 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.259639291 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.261407169 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260007325 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.259399917 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259172837 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.261337624 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.261551434 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260045643 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.259936016 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263852137 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276305136 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.27995185 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260374742 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.261496478 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263697301 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.261077718 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.258938175 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.261499696 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261693466 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.264033314 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.269691451 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261999246 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267239739 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28214854 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262468492 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.26540933 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.264569119 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.269202451 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264588231 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261339562 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.262043242 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.267084318 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.277674242 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262299544 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272206851 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292275685 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.284075126 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.263669485 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.262343612 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262565287 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26427941 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.26454923 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.263340887 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.263594361 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262533406 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263602563 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.264299549 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268649933 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.264361075 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.264945035 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.263676703 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.262715306 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.263332812 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.26098904 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.264033668 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.262961126 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.264500065 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263864177 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.263611568 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.263990137 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277190676 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.292244083 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.264514432 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.264327122 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.260728447 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.266398713 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.266583802 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27566243 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272270398 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.264834059 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.264306964 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.26512758 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264876665 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.264176453 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.26426847 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.264163097 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265407903 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.262717608 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.277241114 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292955195 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.269944628 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.264330125 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266677358 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.265488789 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265577967 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265078971 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26624786 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.266042145 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.26845853 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269629184 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.265532548 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265485225 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.26903781 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.273467107 seconds)
  done (took 745.985889066 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264022073 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26410122 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263330177 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264294722 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264495131 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264377781 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263765967 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264109844 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264261178 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26470614 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264274384 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263988909 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263860748 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264286076 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264180621 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264702796 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264704861 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264280402 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26498348 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266361082 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264299916 seconds)
  done (took 27.736106484 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266918395 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.264149387 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264394573 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.267846132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265337015 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267796984 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264881333 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26880164 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268486295 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265507678 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268306964 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267293842 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.266504403 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265546769 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265587453 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268472305 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.26852449 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265480878 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268111433 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265783808 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269260106 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265578981 seconds)
  done (took 29.054685737 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.268866727 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.26831918 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.266717643 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.265737804 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.269265641 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.266015704 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.269350156 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.269339079 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.269108969 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.271047637 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.270356919 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.26975368 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.275376645 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.274457482 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.270525666 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.269941754 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.413577142 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.269578597 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.269445206 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.270398552 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.268260958 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.275543935 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.289416004 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.266661935 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.269382861 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.270421696 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.269723806 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.269843391 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.269897215 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.271805301 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.274945525 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.27057154 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270010286 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.272752301 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.269426593 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.271472761 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.275085381 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.270641139 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.268041284 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.271089971 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.281211208 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.291625935 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.271871723 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.277575367 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.293820223 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.271833096 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.273553382 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.279346007 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.268068292 seconds)
  done (took 63.669640198 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.271854602 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.272920697 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.270050322 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271226008 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.271733524 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.273203029 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.272180017 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273528904 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.269923283 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.269762982 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.273000475 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.27112747 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269867034 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.273134657 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.273251132 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271292122 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270244774 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270133179 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.270694379 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270227094 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.269821413 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273661353 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.272381273 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.270664887 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273652844 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269838491 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271350886 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.274129271 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.27171589 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.271438225 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.273918787 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274867112 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.273887684 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.272616903 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271595424 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.27428106 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.274192089 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.271790396 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274949653 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.271350916 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.275123502 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274632211 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.274789315 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.275180678 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272535092 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.272443012 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.272044566 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.271950481 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27245214 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.274454943 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274002279 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.272571123 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273013041 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.272153096 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275956291 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.274884281 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272713694 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.2726654 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.274977062 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.274022652 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.273365191 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.27563041 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.273228352 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.276009569 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.275633027 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.273992966 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.274870076 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276428369 seconds)
  done (took 87.745803407 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275895372 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.276196224 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275734483 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275267202 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276734667 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.276126979 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275233134 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276377504 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.27544191 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277044874 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276179865 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27673501 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.277184103 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277232597 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27669559 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276033488 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277185594 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276105921 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276800903 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277682673 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.27695216 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276545022 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277480393 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277776907 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27851587 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278712102 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2767094 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278337792 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277040591 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277498671 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27844411 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277879994 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277485515 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277030573 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.277905329 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.278123435 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276884894 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277882385 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278031283 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277832661 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277926976 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277621073 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277693703 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.277271262 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278813139 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278350468 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278474979 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.279560374 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278466027 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278309897 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.277758192 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277310619 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27811117 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278622345 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278633622 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278680726 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278354912 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278651389 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278521406 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279852442 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278736235 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.279061755 seconds)
  done (took 80.401209421 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278906332 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279516059 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.2767438 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.277387495 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279865749 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277575749 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281117651 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279760401 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279568822 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.27993572 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280397966 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278210208 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278321011 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280066632 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.278463578 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278495339 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27922269 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278678326 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281159816 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278591731 seconds)
  done (took 26.780316188 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.278366661 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281302268 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.279308002 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27965212 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.281655911 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279638411 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.281136308 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281153352 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279497425 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280742985 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282288952 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282049758 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278454121 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279746671 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282400162 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280314893 seconds)
  done (took 21.687268433 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.28071453 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.282018852 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280770732 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280629914 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.279661564 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.279257137 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.282977515 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.279915862 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.279537452 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283368761 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281746586 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.28279633 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.282503532 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.281778618 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280141565 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.283209667 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.279898234 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279752763 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.283546209 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.282165715 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.281106691 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.280097694 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283728404 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.282762796 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28091434 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.281156262 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.279442282 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.281418813 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.280935956 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.283631339 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.281720622 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.28192591 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.281262451 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.281814023 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.285547416 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.281515461 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.285461123 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.282497479 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.284900083 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.284017171 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.284416933 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.283031174 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.284523673 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.284008523 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.282190409 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.285611415 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.281819969 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.282462387 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.28252284 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.282050425 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.284058635 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.284147663 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285056692 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.285795114 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.284398039 seconds)
  done (took 71.729465906 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285338674 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285680764 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283624793 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285749261 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284445652 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.283413592 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.285132354 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.285177887 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283341955 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286296653 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284435615 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.287602399 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283378977 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286873711 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286346479 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286956949 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.284087418 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283695335 seconds)
  done (took 24.333931744 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284153661 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284611072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.286529759 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284871661 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.284109739 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287690608 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285194034 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286844913 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287133272 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.286267799 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284085967 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287626893 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286673959 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.287339031 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285696806 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284840164 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.28794022 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287289269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284726066 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284764684 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288388147 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28874858 seconds)
  done (took 29.49937067 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.286958878 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.287265297 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.286543282 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.304267984 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.30566514 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.309787106 seconds)
  done (took 8.98423726 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295134723 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288214873 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285933116 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289715774 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288767271 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285229933 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285711886 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286496748 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28824882 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287000161 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285629683 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288258197 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287881164 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286613733 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289234537 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289048692 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286976696 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286032472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286461564 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289671731 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287532331 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289918028 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286772536 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286861848 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286253937 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286331984 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290936263 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287671752 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287653017 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289311719 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289547095 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288137069 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29033526 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288644114 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291128722 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290170754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287599528 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290109686 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290899515 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288539608 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290528542 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291701438 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291166326 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288136449 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291291543 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28769519 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288916565 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288809233 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287859291 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291672811 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291284286 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289280231 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290790293 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291262912 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291615513 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29229525 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290067259 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289502953 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29231128 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290042681 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290522382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292136023 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28960984 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290007597 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293286677 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290032254 seconds)
  done (took 86.311581463 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289660465 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290014595 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290049585 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290721365 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290713884 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290651917 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290193156 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291645958 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291041515 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290166914 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293513788 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29086232 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290630699 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290351765 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290763184 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290987582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289875496 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290381903 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291228547 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294152138 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292126534 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291473608 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291776797 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289659617 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291612057 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29364484 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291415226 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291669466 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292310794 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292414181 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291921998 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291474266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291914296 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291902107 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291624605 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292657346 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292347023 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292120397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292972463 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294851405 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291864129 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294740498 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292896242 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291986018 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29279734 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292304001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292252048 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292266601 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292300356 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291302375 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293890836 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293138672 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29399606 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292701735 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29321389 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292940419 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293545141 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292263121 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294115173 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295238777 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29286346 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29428505 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297022994 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293427102 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293855166 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292987283 seconds)
  done (took 86.49404128 seconds)
done (took 1740.191094559 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45777564 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.411789159 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.294059256 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.322038548 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29500545 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.290475405 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.295181024 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.293885469 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.294998241 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.295034552 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.294898804 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.493050572 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.290343894 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296127826 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296005079 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.390349222 seconds)
  done (took 42.52451008 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.32382887 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.301714924 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.421745038 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.320467513 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.324167037 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.499253471 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.360997917 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.299987814 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.485058133 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.344592457 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.976967328 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.326071126 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.301525347 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.494037798 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.320482939 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.501832135 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.564929895 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.984949972 seconds)
  done (took 30.366665024 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.796145808 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.299201465 seconds)
  done (took 9.311059932 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.322016177 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.302334896 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.301244537 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.299337296 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.292839929 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.313964599 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.300047677 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.298960384 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.306643392 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.437160466 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.303185613 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.308386521 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321817751 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.301149237 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.297942693 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.339866786 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.478221999 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.299052795 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299781763 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30768612 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.30156074 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.406619571 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.346197333 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.299529195 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438214816 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.312489792 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.303977834 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309128189 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.456457669 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.300714192 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.301157465 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.301852601 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.302216052 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.919409184 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.751335599 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.313776537 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.345675159 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.311653156 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300665243 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.453870087 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.303740145 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.310611222 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.295604887 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.763927066 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.446040531 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.427382085 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.593042155 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.322651048 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.304518007 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36797506 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304637 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.303292198 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.333648115 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.08751195 seconds)
  done (took 110.599296497 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.348487009 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.688147827 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464906819 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323213013 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.944977215 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.997806217 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.315520698 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.610604811 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.365382926 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297391418 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.586437178 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827709652 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322439312 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.314751627 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.946860479 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.355679545 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295748072 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.05842796 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318480393 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.30213744 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815786958 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308276331 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.296845794 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.475701184 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337767161 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.779500606 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.89493274 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.619965059 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.318174804 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.297714175 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78732785 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.316435308 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.339640636 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.300234481 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.572816938 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.682897727 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.678369993 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.316052182 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.304754679 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299767099 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.318680249 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773652903 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683784551 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.317452019 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318161849 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77897034 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.317095309 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.307265789 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.299146944 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501902557 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.982496461 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.300335059 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.880925191 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.305541006 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.707995592 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.306362474 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.355375907 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.807453858 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318244332 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.289651048 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.366840602 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299740392 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306806104 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.305364862 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.3007347 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.671443774 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.667794863 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.301823757 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.671225661 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802049184 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319768252 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.846321883 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.231268789 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317900472 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.404714607 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.30121142 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.847068953 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819524423 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325808831 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.300844696 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.659699602 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323352421 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.596125828 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318253274 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318946992 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827923423 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.310612732 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.345345265 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.301972204 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.319284964 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.944088605 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301579163 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.582723573 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.376811592 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.301577261 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.301836881 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.324688424 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301115009 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321194466 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.304723944 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85497905 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.329858713 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.430013717 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321786992 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310946083 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.308177041 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.303910531 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303015003 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.523840883 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.772504778 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.327146373 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.302662019 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.310963447 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.303250884 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.469657647 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.310303993 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.635584156 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322980245 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314927834 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.309588991 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.024059206 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.351585003 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303660192 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.325058266 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.207480208 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.509926791 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.324522093 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.324612617 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304320793 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.321946806 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.649744713 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324124314 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.33104837 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305912452 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039452738 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345429192 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.31447719 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.6317602 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31178653 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.273042528 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.323229227 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.303730894 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611977476 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.582444561 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.580057133 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.304496449 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.323726126 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.023926186 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.351494181 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444532777 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324275595 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.341365887 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504684721 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.7816685 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.306291916 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.942183005 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.305232501 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.520401023 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.305312035 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60672863 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.817980652 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.324912123 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305213381 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.030443465 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.047627192 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.988829882 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.306476912 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.59411481 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.319910738 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.784331451 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.30626126 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.307169426 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.746715896 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.309745832 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.309983448 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.307088152 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.306512309 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.459341211 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482201821 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.446861152 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311231048 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783555731 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350837091 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312025307 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.311434821 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.31126259 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.654368416 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.379978652 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.312071539 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.338145907 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.309230205 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309015049 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.802965363 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.275722177 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.30836272 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460511745 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.964260915 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.327385362 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309063827 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.915655285 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.59505215 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.844938308 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.391027372 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.642864768 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.329392182 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.348964447 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.90127267 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.365580036 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806357039 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327241921 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.309248255 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919733626 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.327365201 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.664409125 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.308291762 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.30933535 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880229798 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.330122434 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.30953305 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.649725675 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.329861627 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.577230556 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.308913086 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.319698009 seconds)
  done (took 1106.33920997 seconds)
done (took 1300.348012476 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.309865081 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.309563445 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.301274257 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.31722858 seconds)
  done (took 26.470939455 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.320381422 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.31624618 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317750454 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.315630762 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.319121874 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.31653067 seconds)
  done (took 9.13894782 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.002572722 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.310615566 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316770723 seconds)
  done (took 19.861941171 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.540332181 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.703422266 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.707599631 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.682264278 seconds)
  done (took 10.867357009 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.317446523 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.317619454 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.318469748 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.320373238 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.321589597 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.323196439 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.320675499 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.321003106 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.324005005 seconds)
  done (took 13.116811381 seconds)
done (took 80.683627961 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.397802804 seconds)
    (2/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.741445078 seconds)
    (3/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.339065807 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.749631033 seconds)
    (5/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.20359891 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.625762591 seconds)
    (7/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.447886619 seconds)
    (8/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.995679243 seconds)
    (9/286) benchmarking ("sort", Float32, false)...
    done (took 5.350673545 seconds)
    (10/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.466876832 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.354119369 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.340535819 seconds)
    (13/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.294920442 seconds)
    (14/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.331366178 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.157212033 seconds)
    (16/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.690199095 seconds)
    (17/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.421781261 seconds)
    (18/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.783492201 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.293174743 seconds)
    (20/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.340402981 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.329476545 seconds)
    (22/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.363591881 seconds)
    (23/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.401475789 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.102799848 seconds)
    (25/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.378440436 seconds)
    (26/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.972694177 seconds)
    (27/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.395535286 seconds)
    (28/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.488356034 seconds)
    (29/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.294356319 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 6.33267738 seconds)
    (31/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362551541 seconds)
    (32/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.488785356 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.345726031 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.334792794 seconds)
    (35/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.303314141 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.436931477 seconds)
    (37/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.206104148 seconds)
    (38/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.403347851 seconds)
    (39/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.113154069 seconds)
    (40/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.237712345 seconds)
    (41/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.309113679 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.295517722 seconds)
    (43/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.898377806 seconds)
    (44/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.296034949 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.425188778 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.576318552 seconds)
    (47/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.306090594 seconds)
    (48/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.395688064 seconds)
    (49/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.813689437 seconds)
    (50/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.342305982 seconds)
    (51/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.295241474 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.373886796 seconds)
    (53/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.140067706 seconds)
    (54/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.330693028 seconds)
    (55/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.297404278 seconds)
    (56/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.214790809 seconds)
    (57/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.421661732 seconds)
    (58/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.13198494 seconds)
    (59/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.351855604 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.315069504 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.337711376 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.307010587 seconds)
    (63/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.721760435 seconds)
    (64/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.298264427 seconds)
    (65/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.33360726 seconds)
    (66/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.315653162 seconds)
    (67/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.721112787 seconds)
    (68/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.188757545 seconds)
    (69/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.297243635 seconds)
    (70/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.730189984 seconds)
    (71/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.296846919 seconds)
    (72/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.459439341 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.333660024 seconds)
    (74/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.297987682 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.301433325 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 5.590790372 seconds)
    (77/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.870145516 seconds)
    (78/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.09649381 seconds)
    (79/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.337526107 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.440002648 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.223376012 seconds)
    (82/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.848510746 seconds)
    (83/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.34232025 seconds)
    (84/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.414510548 seconds)
    (85/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.614946681 seconds)
    (86/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.998664235 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.330270186 seconds)
    (88/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.201097628 seconds)
    (89/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.430996284 seconds)
    (90/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.298135886 seconds)
    (91/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.297904795 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.09252085 seconds)
    (93/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.30621236 seconds)
    (94/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.853328982 seconds)
    (95/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.326440964 seconds)
    (96/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.35602682 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.022587518 seconds)
    (98/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.833338606 seconds)
    (99/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.297907982 seconds)
    (100/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.193319124 seconds)
    (101/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.447380034 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.540872738 seconds)
    (103/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.297626026 seconds)
    (104/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.99137287 seconds)
    (105/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.322027103 seconds)
    (106/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.440272801 seconds)
    (107/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.401902169 seconds)
    (108/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.002112012 seconds)
    (109/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389153739 seconds)
    (110/286) benchmarking ("sort", BigInt, true)...
    done (took 6.319135505 seconds)
    (111/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.335706417 seconds)
    (112/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.403171466 seconds)
    (113/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.328187836 seconds)
    (114/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.709238906 seconds)
    (115/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.306153934 seconds)
    (116/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.472363442 seconds)
    (117/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.867688016 seconds)
    (118/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.73347196 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.848239021 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.361666065 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.299371341 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.622099641 seconds)
    (123/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.009185728 seconds)
    (124/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.376117959 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.148176539 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.573113176 seconds)
    (127/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.396765609 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.79038119 seconds)
    (129/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.348563361 seconds)
    (130/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.443581574 seconds)
    (131/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.178068662 seconds)
    (132/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.787161905 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.422808283 seconds)
    (134/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.440648265 seconds)
    (135/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.336841865 seconds)
    (136/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.346233408 seconds)
    (137/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.300718874 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.319622025 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.172590198 seconds)
    (140/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.34735672 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.347537524 seconds)
    (142/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.20513168 seconds)
    (143/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.857309158 seconds)
    (144/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.300416119 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.34344318 seconds)
    (146/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.31983364 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.331407224 seconds)
    (148/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.30863465 seconds)
    (149/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.907911141 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.344950011 seconds)
    (151/286) benchmarking ("sort", Float64, false)...
    done (took 5.659577375 seconds)
    (152/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.304725113 seconds)
    (153/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.348538656 seconds)
    (154/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.188052206 seconds)
    (155/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.324163089 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.564313599 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.991718384 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.327433736 seconds)
    (159/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.303207068 seconds)
    (160/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.304022987 seconds)
    (161/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.421857707 seconds)
    (162/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.595103456 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.324015172 seconds)
    (164/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.349696344 seconds)
    (165/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.605345862 seconds)
    (166/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.072601014 seconds)
    (167/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.393839466 seconds)
    (168/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.606588868 seconds)
    (169/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.332007402 seconds)
    (170/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.724939986 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.019741282 seconds)
    (172/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.884155333 seconds)
    (173/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.607362297 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.369244777 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.09410483 seconds)
    (176/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.611187398 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.690766179 seconds)
    (178/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.529622391 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.384916404 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.333568314 seconds)
    (181/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.070319395 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.796583718 seconds)
    (183/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.324850928 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.335765005 seconds)
    (185/286) benchmarking ("sort", Float64, true)...
    done (took 6.324124672 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 5.457470936 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.399502912 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.740293509 seconds)
    (189/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.171780682 seconds)
    (190/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.308578081 seconds)
    (191/286) benchmarking ("sort", Int8, true)...
    done (took 6.325854462 seconds)
    (192/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.451283331 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.750153339 seconds)
    (194/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.021622269 seconds)
    (195/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.326697133 seconds)
    (196/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.383667847 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.96054851 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.535416913 seconds)
    (199/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.311777534 seconds)
    (200/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.731846528 seconds)
    (201/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.312243712 seconds)
    (202/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.305188598 seconds)
    (203/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.348716502 seconds)
    (204/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.660189183 seconds)
    (205/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.310874241 seconds)
    (206/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.219066372 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.974872879 seconds)
    (208/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.326253243 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.716834072 seconds)
    (210/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.324469992 seconds)
    (211/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.325213672 seconds)
    (212/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.568166284 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.367898561 seconds)
    (214/286) benchmarking ("sort", BigInt, false)...
    done (took 6.326502083 seconds)
    (215/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.306590597 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.8596886 seconds)
    (217/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.914735862 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.307539628 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.385750243 seconds)
    (220/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.352995443 seconds)
    (221/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.066920552 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.147406413 seconds)
    (223/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.411759455 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.268313678 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.354941477 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.031893583 seconds)
    (227/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.360359412 seconds)
    (228/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.868565688 seconds)
    (229/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.391020693 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.416957313 seconds)
    (231/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.307338293 seconds)
    (232/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.740542485 seconds)
    (233/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.308330206 seconds)
    (234/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.378496373 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.374607693 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.092578839 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.556253296 seconds)
    (238/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.4433237 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.419829856 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.35269443 seconds)
    (241/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.160931752 seconds)
    (242/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.866691538 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.71832554 seconds)
    (244/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.308096103 seconds)
    (245/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.991526711 seconds)
    (246/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.835645674 seconds)
    (247/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.410839444 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.144811248 seconds)
    (249/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.33024429 seconds)
    (250/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.376099533 seconds)
    (251/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.423365266 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.754722575 seconds)
    (253/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.372521012 seconds)
    (254/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.308945797 seconds)
    (255/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.045070843 seconds)
    (256/286) benchmarking ("sort", Float32, true)...
    done (took 6.329097671 seconds)
    (257/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.315902667 seconds)
    (258/286) benchmarking ("sort", Int8, false)...
    done (took 4.376445382 seconds)
    (259/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.826097074 seconds)
    (260/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.519230191 seconds)
    (261/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.357294571 seconds)
    (262/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.860099857 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.417503455 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.412203242 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.446699335 seconds)
    (266/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.39228592 seconds)
    (267/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.619127401 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.171941407 seconds)
    (269/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.338892907 seconds)
    (270/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.417723305 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.330506718 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.387947553 seconds)
    (273/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.077483935 seconds)
    (274/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.545304409 seconds)
    (275/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.352750525 seconds)
    (276/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.591613686 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.442585922 seconds)
    (278/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.032246232 seconds)
    (279/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.336153819 seconds)
    (280/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.441142981 seconds)
    (281/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.340414705 seconds)
    (282/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.545975195 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.373157243 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.265813421 seconds)
    (285/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.123949356 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.358407647 seconds)
  done (took 946.302025705 seconds)
done (took 947.533902327 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.366224267 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36096314 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.343967294 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.36593591 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.454740071 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.367591829 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.356025402 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.346563203 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.392425019 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.394961342 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.342548235 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.366077172 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.345575361 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.343439402 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.344534815 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358590428 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.475190382 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.34530323 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.359859085 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.354847731 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.361496334 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.342503723 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.395222287 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.365541693 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.349025376 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.348075268 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.347975455 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.36389751 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.456287828 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.347720929 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.348683808 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.356867227 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.475022685 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.343465366 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.34177249 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.36483854 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.356838432 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.354974076 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.350007813 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.376189905 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.912500388 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.363590333 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.347573547 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.347891095 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.34680461 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.353075667 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.347249562 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.353810782 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362572419 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362087817 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.903883117 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.379677691 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.350378991 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348434962 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.35898611 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.347334716 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.350833814 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364540744 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.366928664 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363954662 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.460713737 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.353618146 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.350754493 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.36331531 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.354806949 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.942350829 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.363528264 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353811123 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.915656751 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.373220635 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.94135163 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.374049819 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.350514457 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.362494237 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.381025852 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.478605256 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.344175833 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.349841913 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.355246601 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.34664524 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.359467609 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362432969 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.355588364 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.350728636 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363595989 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.372402405 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.361210549 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.347837007 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.35908558 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.369561348 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.356199656 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.359728355 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.353102847 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344611827 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.359685929 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.353775138 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.351977453 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.351314169 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.354941144 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.361213382 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.916605787 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388031256 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.34788734 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.348577929 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.350539309 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.364565355 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.918396101 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.369722285 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.373804839 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.398082808 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.353579725 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.468261959 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.353586484 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369123708 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.361405219 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.355851848 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.347160324 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.471949074 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.913050206 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.385328447 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.355569505 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.350484906 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369061661 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.354894932 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.349311413 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.487757106 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.353344487 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367295128 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.472836345 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.363340413 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.383734402 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.349548564 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.356774738 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.373640988 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369807408 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.382941412 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.357205433 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369238447 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.367840955 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.350447464 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.363463047 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.36482145 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.354705607 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.35962854 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.34823997 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.37515816 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365731031 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366015468 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.375410113 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.473598855 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.351080709 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.473729294 seconds)
done (took 229.694174436 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.410714949 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.3447165 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.433951957 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.348086564 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.451793284 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.45203943 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.345293747 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.346390988 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.346008422 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.727829616 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.34675569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.346772502 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.349485596 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.346741706 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.432848515 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.348713448 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.346966875 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.689289787 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.349919247 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.41914501 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.343723678 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.345775211 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.349794386 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.730207913 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.345324628 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.343551886 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.419347665 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.349897795 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.694313623 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.344894412 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.344282916 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.69522311 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.438489622 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.367028131 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.359414561 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.357339682 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.453867626 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37002383 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.432507927 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.434054054 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.436847061 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.388575717 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.351940683 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.342505199 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.351598373 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.351915293 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.348417881 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.377996837 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.344721049 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.349914113 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.693097089 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.360821327 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.349181396 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.349319317 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.348549805 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.381041244 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.35119239 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.351812228 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.44068711 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.352797728 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.414856401 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.732059952 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73069349 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.35272388 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.352420184 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351319351 seconds)
  done (took 149.522049412 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417663518 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.424080244 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.471245435 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371951171 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.401045954 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.475365218 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.37177867 seconds)
  done (took 11.19681207 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.357818129 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3533678 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401601357 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401617073 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.353705743 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.530599168 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352933563 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.363512199 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349710274 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.405856432 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.355634265 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.354464135 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359623841 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.353669472 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401672566 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.364539369 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.468464282 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.354823174 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.354612342 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.508413312 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351720328 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.360394923 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.406408524 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.365244485 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.354754509 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.358693773 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.162171437 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353966084 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351772778 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.355001285 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351736322 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.43121358 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355844639 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.349614386 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35288675 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469966004 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.355932004 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352948011 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.355750168 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.353868939 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.355522826 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.354371646 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.355876817 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.351962837 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.355923465 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.377916694 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.355492326 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.355221367 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.355746581 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355830217 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.40556164 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357155807 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.352714725 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352949705 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.411518298 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362919446 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.357388122 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.35423863 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356143487 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353299309 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.512664107 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.403016782 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.356537127 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402765058 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35643019 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356849196 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.356732531 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.356222161 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.410513515 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.356454755 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.404149814 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.354845683 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.543727434 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.379736241 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.358015205 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.359626776 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.358122578 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357458357 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.353009293 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.363664491 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.354820473 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.359034421 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.362933902 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355295973 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355668003 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.523819878 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467935537 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.354792231 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.37015579 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.36573507 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356304814 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.411473826 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.358504781 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.355547058 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410147747 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472494835 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.410686591 seconds)
  done (took 155.747928279 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.362750766 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.36578186 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.360211125 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.374978475 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.360128194 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.358319466 seconds)
  done (took 9.452658448 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.362325932 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.361871758 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358761925 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.359131919 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.359430527 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.360040557 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.360615871 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360080955 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.36379565 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.358760752 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.360078992 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360165364 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.36106839 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.359435436 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.359956213 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.35976886 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.360174828 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357886849 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.360289683 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361280626 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.463546711 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.361141348 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360382886 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.360449636 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.365213805 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.360856054 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368474027 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.360704931 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.361008289 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.366710232 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.381344415 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.361114159 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.362206621 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.368436293 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.36507631 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.362932238 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366095216 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.362038939 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.359283045 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.361863765 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.362340845 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36261349 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.362571786 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.363751964 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.364171702 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.367150923 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.368119103 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369874104 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361970276 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.364107493 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.363454545 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.363700703 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.36785511 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365820645 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.36833146 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388907137 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.37030496 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.366088878 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365009292 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.366543353 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368973154 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.366949171 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369081588 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.37192224 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.364929856 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.366522207 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.367277177 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371409768 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367167836 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.366147863 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.366961184 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.363734068 seconds)
  done (took 100.60107424 seconds)
done (took 427.776491856 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.415108199 seconds)
  done (took 7.691408185 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.585083742 seconds)
  done (took 7.862486993 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.685740261 seconds)
  done (took 23.96915526 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.363410445 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 8.082030178 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.395121714 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.364105793 seconds)
  done (took 28.48088011 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.97475525 seconds)
  done (took 8.251169745 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.355789134 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.37663313 seconds)
  done (took 14.010221956 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.505539207 seconds)
  done (took 7.781883475 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.409827681 seconds)
  done (took 7.692049854 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.364057945 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.390226776 seconds)
  done (took 14.045095758 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.355534267 seconds)
  done (took 7.632708374 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.352400508 seconds)
  done (took 12.63029411 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.363254515 seconds)
  done (took 7.641921027 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.426516973 seconds)
  done (took 7.702883118 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.068149999 seconds)
  done (took 10.344977805 seconds)
done (took 167.010007021 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.3575596 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.366271443 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.366681207 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.366012021 seconds)
  done (took 26.733751567 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.398637998 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.400300604 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.401055371 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.410013442 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.403369527 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.406216374 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.4027172 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391413703 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.41136694 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.40334111 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401378517 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402561228 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.399792298 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.392035056 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.40287142 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.402372075 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.411491405 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.402065847 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392655955 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.40372159 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.368270033 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411602796 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.404546098 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.369013338 seconds)
  done (took 34.87203499 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.889788836 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.437137743 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521379855 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.418997128 seconds)
  done (took 7.547024109 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.4184184 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.421137591 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.434698099 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.471978863 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.503644682 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430424833 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.39016122 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388879732 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.374818886 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.421489347 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.49601672 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.437124598 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.510514377 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.368428506 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.550098893 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.367999378 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.368914969 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.421051418 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.47320153 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.488289247 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.368666279 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.42063655 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427913585 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.439180079 seconds)
  done (took 35.673755579 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.367875824 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.38699962 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.368079476 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.366573493 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.376510422 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.368295449 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.369236915 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.36985768 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.368728177 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.374319812 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.369450066 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.380762961 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.366926043 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.367586894 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.374817535 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.370405309 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.374868039 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.368193184 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.370543584 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.374858554 seconds)
  done (took 28.715116744 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.363011079 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.216343015 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.715287897 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.620760374 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.365700467 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.362974123 seconds)
  done (took 27.92542026 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.449780428 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.613469297 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.370255563 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.775238409 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.867452221 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.390410957 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.370408073 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.634592221 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.000084775 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.006412606 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.441745954 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.44527634 seconds)
  done (took 20.648723808 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.372935065 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.371179362 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.379498872 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.385964734 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.43153188 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.393306263 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.376808349 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.364386045 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.439089774 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.455890893 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392726734 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433753571 seconds)
  done (took 38.079776138 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453082292 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640227964 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.402967121 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395479073 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091245291 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578446724 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.430925041 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106658357 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391244971 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639934709 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372749475 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45554924 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623620582 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381771486 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374799477 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.439042212 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613945421 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896460826 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36837449 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.773226475 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39293556 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366833054 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.874169123 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624604569 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600748965 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350959297 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.629465032 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.143624228 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687905974 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381826207 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379139602 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367903361 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642266619 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059085132 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486475973 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603560103 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393206174 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.917318704 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.365392126 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.768251347 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371109869 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371877668 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37858989 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368259834 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.303181297 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368818313 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12912319 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.394848781 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.079364037 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370730884 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663975047 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464431321 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373110006 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.942711428 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380824613 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396366173 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.372944507 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46631237 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9642381 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.160662842 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386987922 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.313509225 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370354923 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.688000369 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058600777 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.395783158 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.374848168 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374468681 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30521205 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.745953877 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386593972 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50840909 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.396033884 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.033078937 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149280919 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.39700078 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301717796 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961227065 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38538075 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.312045063 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601113537 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148526424 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311390055 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.318889031 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305351208 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130452441 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380119174 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.835643158 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392870904 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.136437885 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632603721 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41009803 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395992766 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597224538 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.251544072 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372201837 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.372354148 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488287821 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395144237 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.123908957 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328431212 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.375787765 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631048849 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.584539751 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376226793 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.454793195 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911019088 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394961232 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.395010462 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383486888 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619648967 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.036005127 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408959622 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172462167 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390995071 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.15394802 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177809652 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376235367 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.385719856 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.374289927 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649895327 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19284816 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.258020468 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440248324 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376811236 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374025219 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.8585448 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.237162853 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.257732537 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.604478693 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407248669 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.392100682 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.376026753 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335770758 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.37299831 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395141838 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.161352894 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600998607 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390363626 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656954037 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309016303 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512598469 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3913001 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.598800881 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.692878023 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.401643167 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637457407 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382407037 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393791414 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394442107 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397433472 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477235711 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399067248 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.378033172 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642601554 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.380919992 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.380624481 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.862572629 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165811226 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380085488 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.38277502 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401170596 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049082863 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376949735 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384910472 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271536163 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.39203651 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445198178 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384674468 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625140162 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.471525751 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408713982 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.389377005 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.380244084 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609593902 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387665495 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.859429741 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465162352 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.893924188 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059428507 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419420949 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.311704034 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.088698451 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.072069683 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37891304 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.569472274 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378799677 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62382746 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422326973 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396829516 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047465543 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407191124 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.782288105 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.39199441 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393164379 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.384725872 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380337747 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.448764118 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385371831 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396882364 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.398364311 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523460759 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.393012901 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.31394376 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.895766169 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383977194 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381691845 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.154267234 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414053368 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.774846167 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245512695 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663822352 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384374507 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678397558 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.914923398 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.423980395 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.383894732 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387736091 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396891085 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.412733458 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409178546 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.391707223 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.877563935 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.837465222 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949981863 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188696352 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021490041 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.800549632 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.407049825 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.290906558 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136199286 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337484758 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041079008 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595467006 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150837213 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359972239 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903019016 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.734430255 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281599874 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690111538 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612904297 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.774736079 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.405496719 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682854008 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597706866 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417556682 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.385582476 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320641235 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.663236728 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985556143 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420368641 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464591539 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134522039 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414694228 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.162996186 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.470389526 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.209874936 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830935478 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.036368756 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.777595747 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39601319 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391961999 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256631675 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413776318 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912514912 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063839551 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422000287 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.908592125 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346012576 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625548154 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.418417047 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383338288 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.974926771 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.40280696 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.643031826 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682372306 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321208926 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388937539 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984619438 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.264528619 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.389020455 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386671483 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187706557 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389402505 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721562449 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.408966296 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.408250601 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407363512 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.321846053 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319804052 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.07921865 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388455391 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433579098 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930974172 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.405962533 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395701316 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424957671 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244384357 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64349409 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.401689239 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034012499 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632765489 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391048489 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41154706 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.392291759 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394930302 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.369154254 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.283919771 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.624721931 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433398235 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.633978332 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.44226414 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.293599629 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437064143 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600329002 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.269129265 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390052757 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656787587 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.118646972 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.393303176 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658240305 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43214745 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397649084 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408077258 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396261295 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410645308 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481160552 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62830877 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.420996567 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.399429127 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83688247 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427009049 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390308075 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.402006941 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48321306 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.213228442 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.411474943 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.162048154 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042164276 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219527637 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074932102 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.719009102 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391191863 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389609406 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32354898 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539021748 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918627861 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663599723 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509685178 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.390039629 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414173713 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400907088 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396864604 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61220429 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66569952 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.265237874 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406706012 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.062023733 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.272720505 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401866973 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.602595292 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94178439 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010469587 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516447915 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391452572 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158579855 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686861295 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.483496598 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391644762 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988493278 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.411545682 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.218763959 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.399000808 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409354524 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540852954 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691258754 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095453377 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.424604884 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.547019141 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.165442752 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.763931082 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650216055 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.956410963 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.637915012 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067237747 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.220132699 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665827576 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462193514 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63452187 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.527001941 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541057825 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.393436802 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.303268777 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395268074 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244232562 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.102274637 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402302296 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065957578 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686509936 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.39672089 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.394145122 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424696725 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402666029 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619527812 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163166951 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618700968 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404231841 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397333293 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.968088597 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050361108 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715102046 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329830988 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.398366187 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661783154 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65234194 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420888648 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.846817506 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.10509825 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993643342 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.371483831 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416820442 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398799434 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.21236737 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076672794 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.51162206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954653588 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.058059242 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413089353 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677154226 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.40098932 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396218455 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681284751 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.399608043 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.395713094 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647663417 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.071482132 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30219347 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.423739977 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.871425633 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.333754459 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.625157894 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443233009 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333482636 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406624799 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.85387965 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419918434 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51612084 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408821639 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.401834633 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406241334 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.165666358 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688401215 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.40339875 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.402752172 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.401588141 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400385955 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501462655 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008974372 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426137178 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.071186529 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.752584396 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.656050608 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399395228 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.386498499 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.402608455 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399502871 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122831889 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376584409 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414735596 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01316334 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.403768107 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.419161506 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402764163 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.616508017 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611893171 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407715152 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644197001 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427914378 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422145348 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.299094561 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.172309117 seconds)
  done (took 1676.541369508 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430962618 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.425411788 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.440832338 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.430484025 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.460821019 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.496618552 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.44823755 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.504458941 seconds)
  done (took 52.953818087 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.40318733 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.559905063 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.43420425 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.401202664 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.409874674 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.40091371 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.930084768 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.428378557 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.409956284 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.410810664 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.412225642 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.409290548 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.113906429 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.410747686 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.409433467 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.392104545 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.409910091 seconds)
  done (took 66.670476211 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 52.104366446 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.269119167 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.882865559 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.411535147 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.631660847 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.413118337 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.99236271 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.457837365 seconds)
  done (took 100.479440268 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.419689463 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419014872 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.419286019 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.418728924 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.419892905 seconds)
  done (took 8.414689518 seconds)
done (took 2126.531080391 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405795732 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407855987 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.405457136 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.408158201 seconds)
  done (took 6.945123287 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.385086839 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.120066556 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.383717266 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.408809916 seconds)
  done (took 18.615142988 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.419321114 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.426852396 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.201860761 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.099899543 seconds)
  done (took 5.621474561 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.158269243 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.165899549 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.151588305 seconds)
  done (took 7.794367207 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.404267856 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.412469966 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.410253794 seconds)
  done (took 20.545159431 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.701375941 seconds)
  done (took 3.021106822 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.551539312 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.600889204 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.765969344 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.75364257 seconds)
  done (took 7.991038916 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.788403036 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.791505654 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.59189652 seconds)
  done (took 6.490775099 seconds)
done (took 91.183545918 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.659200906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.426829515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.616641696 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.627698529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.639005209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.616287725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.704249383 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.596919776 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.138039625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.128879658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.631454964 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.638424322 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.658575135 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.420255687 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.659568982 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.421685923 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.637113329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.698229894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.319262733 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.404744888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.723591279 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.273192353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.46305665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.295372804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.637521218 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.563198989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.851799588 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.422724442 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405966978 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.873886686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.563924298 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.415473277 seconds)
  done (took 198.45282269 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405787456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.416480465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.405460105 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.404435566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.440890782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.40688486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.406693419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.438437256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.404809725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.427267954 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.424977689 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.405612188 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.406970547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.425766949 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408121149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.407369285 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.425757603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.419999556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.407476003 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.406205861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.407807598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.441592856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.408633712 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.406073531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.405740503 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425628874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.416708518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.418537043 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.406013844 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.427125093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.427671518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.428393732 seconds)
  done (took 206.63765733 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.414883603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.406503829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.427453995 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.422677504 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.408372899 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.427376444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.41195165 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.426492859 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408130065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.407849203 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.407761858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.424253507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.4094669 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.408483256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.413100551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.419404581 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.408622338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.407349666 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409119324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.41902035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412401563 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.409676277 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.42749532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.4089613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.409976032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.409749742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.409642964 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.40849151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.4097108 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.430776341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.409392882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.410025672 seconds)
  done (took 206.568198936 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.605295664 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.416742561 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.418046542 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.354663029 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.41770576 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417413182 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.414170488 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.615375976 seconds)
  done (took 14.984316961 seconds)
done (took 627.958319858 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.948111455 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.685341834 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.634184356 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.438504701 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.326515815 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.466923618 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.43789788 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.625935182 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.411110188 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.641614264 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.808899388 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.455671485 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.960535173 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.434347233 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.714779426 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.545343433 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.357401052 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.485887395 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.77882704 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.087928466 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.722659181 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.984591896 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.652567115 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.396027381 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.977596237 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.982627451 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.259350365 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.345988737 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.457223786 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.787508172 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.349915665 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.550618403 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509471331 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.50799205 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.56858798 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.542150308 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.499848375 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.505589857 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.653146028 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.743552049 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.098288237 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.204447702 seconds)
  done (took 97.8728533 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.40206968 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.401643454 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.400971351 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.400904478 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.403518984 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.403114477 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.401453591 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.401906501 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.40189674 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.401913207 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.403134166 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.402704255 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.402519503 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.403183712 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.401903392 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.403347969 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.40335783 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.405509017 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.401908973 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.402535551 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.40344313 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.404642836 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.404820208 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.402869497 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.403735106 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.403392786 seconds)
  done (took 37.80138579 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.423129031 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.685911686 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.867270483 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.429743109 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.422617959 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.426155045 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.511359096 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.424031997 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.424651998 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.425754422 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.599873786 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.425413726 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.460797336 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.894504482 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.424925574 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.424582906 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.423527003 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.422892494 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.695140112 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433445269 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.536390976 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.42433797 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.511556096 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.433683742 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.450212918 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.424845985 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.428340506 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.995853554 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.44510196 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.600884071 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.344009351 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.517225056 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.941087373 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.899815011 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.344404032 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.433296486 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.423968405 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.607803231 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.425764266 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.423624077 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.512153383 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.424115224 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.890900872 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.113146639 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.451163986 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.424120106 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.020124202 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.627605839 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.706058761 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434517479 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903651329 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.429220084 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.426966966 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.426639688 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.706559033 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.433102604 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.426455354 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.013688219 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.452434219 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.515495039 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.426992834 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.426520262 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.702144029 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.426604538 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.689655263 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.42909148 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.434577696 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.44877718 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.879960842 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.429247583 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.126661946 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447924308 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.425865364 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.603149168 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.692884525 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.056661215 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.451530859 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.711031657 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.95457517 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.533338159 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.431400414 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.988529027 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.539531562 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432308904 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.430030007 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.429210152 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.42760271 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.481632152 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.512947999 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.064529777 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.136976147 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.044900558 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.53858929 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.440194312 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.428508571 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.016395695 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.451574999 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.427391194 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.874541822 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127739889 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.449125171 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.437310375 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.132144482 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.452088342 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.51848981 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.43394899 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.886483192 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.430654991 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.481184561 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.428990404 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.436334389 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.455384396 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.517985773 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.433085503 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.430038149 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.101139598 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.633789984 seconds)
  done (took 188.709074374 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.429747622 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.422790364 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.424697224 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.42293194 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.422717066 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.431596158 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.421991704 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.422065412 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.430066398 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.424723124 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.422973301 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.426151517 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.425742482 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.424552265 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.43480708 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.43230897 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.034119609 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.425903797 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.42414384 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.446692221 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.258988814 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.434088608 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.425379751 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.443488521 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.423635442 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.425785001 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.42854539 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.44819613 seconds)
  done (took 154.777400886 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.43200973 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.06977717 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.452228159 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.582416802 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.455845971 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.430318504 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.578461682 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.497685538 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.452854678 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.429806022 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.430775948 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.774098844 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.434506836 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.017995345 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.652565978 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.601889364 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.015399616 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.452952418 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.431360729 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.431875547 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.584523255 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.43869854 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.780073079 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.073809552 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.454146267 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.108448959 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.426601097 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.433822119 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.43296009 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.111983063 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.459489336 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.798001774 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.529743219 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.501575993 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.130969655 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.04554695 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.037911854 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.602051185 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.43242818 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.432509645 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.432568708 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.417099089 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.106388283 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.464148266 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.434469266 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.083456132 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.463577309 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.434444968 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.43965363 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.433176908 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.502030495 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.522998909 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.806065156 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.111515505 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.549940329 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.446225206 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.582887006 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.835581283 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.437523344 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.019243734 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.417340135 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.121935689 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.465917485 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.416979846 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.435943291 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.43974893 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.605710971 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.584880196 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.020659279 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.456456141 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.021841595 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.624933598 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.434072526 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.434165296 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.43626904 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.122575227 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.051779085 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.626245669 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.58933439 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.661493941 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.419530924 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.436010628 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.420175871 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.523885767 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.434906498 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.123742749 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.049910824 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.456790037 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.437744951 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.437403317 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.43800889 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.639907541 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.142591719 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.554116424 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.011436991 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.825401665 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.812064627 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.447167259 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.502827292 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.455741869 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.805274585 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.447716389 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.502852485 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.906881145 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.785674796 seconds)
  done (took 173.291662037 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.705208908 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.76544518 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.53573435 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.603444385 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.092211489 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.023562977 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.815622639 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.594400893 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.557846867 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.726006067 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.698919579 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.528567091 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.67153779 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.526506297 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.222189207 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.538241984 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.555596119 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.595661985 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.609755187 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.532207994 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.161208398 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.740950828 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.640645999 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.417308986 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.540557756 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.278613304 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.05380868 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.998041479 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.636197148 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.903282624 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.006202953 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.653171883 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.479062801 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.186610731 seconds)
  done (took 69.941373214 seconds)
done (took 723.715632521 seconds)
SAVING RESULT...
DONE!
