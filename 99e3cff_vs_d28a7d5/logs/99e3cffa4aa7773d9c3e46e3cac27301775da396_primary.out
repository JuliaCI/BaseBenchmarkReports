cset: moving following pidspec: 7845
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.351710751 seconds)
loading group "string"... done (took 0.491510301 seconds)
loading group "linalg"... done (took 8.0874676 seconds)
loading group "parallel"... done (took 0.177064248 seconds)
loading group "find"... done (took 1.309581049 seconds)
loading group "tuple"... done (took 2.011708718 seconds)
loading group "dates"... done (took 1.356465292 seconds)
loading group "micro"... done (took 0.250055835 seconds)
loading group "io"... done (took 0.693523406 seconds)
loading group "scalar"... done (took 41.803989938 seconds)
loading group "sparse"... done (took 12.775637023 seconds)
loading group "broadcast"... done (took 1.051747225 seconds)
loading group "union"... done (took 14.342109489 seconds)
loading group "simd"... done (took 4.908597778 seconds)
loading group "random"... done (took 9.851935349 seconds)
loading group "problem"... done (took 1.985913817 seconds)
loading group "array"... done (took 22.973232122 seconds)
loading group "misc"... done (took 1.458907872 seconds)
loading group "sort"... done (took 3.660137378 seconds)
loading group "collection"... done (took 19.850564741 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543179957 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148448699 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.15750266 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.158315138 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199813702 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156765054 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.16248729 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101403263 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.022658888 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.1969912 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.159491081 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520480979 seconds)
done (took 5.257702506 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227868859 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097547264 seconds)
    (2/2) benchmarking "String"...
    done (took 0.110139747 seconds)
  done (took 0.882590616 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080932909 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.150482513 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097055685 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097357899 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.081929791 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.099619807 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081725149 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.096486891 seconds)
  done (took 1.379983691 seconds)
done (took 3.253896536 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.745498775 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.287268158 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.225592486 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.48521786 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.183862947 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.22110179 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683751253 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.358955997 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.274580407 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100586624 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153053936 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.41373944 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.1381677 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664561865 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093051449 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12942402 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181025267 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438831803 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085537223 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113930169 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117953563 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14359869 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129801677 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094155723 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187853612 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085998474 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.203645149 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109612213 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083346629 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.294749224 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.206703763 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685092553 seconds)
  done (took 11.034441415 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119311303 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141992385 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101379189 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159694851 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13937083 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087411253 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104857961 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083319634 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127386521 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182815478 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136738106 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.145584418 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081700634 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.102176728 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.123269523 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251530496 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109979345 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124757417 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104026428 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092972239 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142053881 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.117360483 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114618067 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097995502 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171579114 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221036815 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112252562 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127460988 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098040132 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117226636 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146530808 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146648737 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09778821 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084654297 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177965814 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.128007564 seconds)
  done (took 5.309790052 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.131705975 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194898845 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125934738 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174271575 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165360544 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145749291 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161902857 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117685591 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254151183 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.137078791 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183895231 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145701217 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116824862 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083506065 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.104443281 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.128445448 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081556332 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.759158262 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.170049993 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139634954 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105881434 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1082263 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.105436127 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375041714 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092430014 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.101430835 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085006885 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090377057 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165460414 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084592546 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.208158616 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125332986 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084787092 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138484672 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210143072 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129828729 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120583572 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100413307 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.099121102 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.18118912 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090492473 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100752791 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127697577 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135651219 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123613371 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102672056 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099991493 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.213864324 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097988549 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101529272 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.98217994 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182226891 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097165523 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101264158 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.344178077 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101038561 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10260329 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098025909 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261354788 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135313318 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100242604 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081506276 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100128308 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101904812 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39168681 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082861947 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.73062523 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.102262923 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.094075342 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1030886 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098456371 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089794853 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106572495 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117498238 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079206674 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.100936544 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083900163 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100024211 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098303466 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085279032 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11057748 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103858039 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083097504 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165852607 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083450568 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119250802 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128789217 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085722892 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099331428 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130498517 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087507472 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101131227 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122834752 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102191829 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111163232 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100016469 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129176727 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097206612 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.186208075 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081815141 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099006961 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110785969 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101184769 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130994649 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111306201 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102663853 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087913752 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097499534 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099017423 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15023657 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081575366 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097906177 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103271518 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095964085 seconds)
  done (took 23.219355834 seconds)
done (took 40.241215893 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.351628296 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106393743 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106771533 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106827167 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104035739 seconds)
  done (took 1.529261224 seconds)
done (took 2.260010223 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28781112 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.178667769 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096303163 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.172744638 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095586536 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179973131 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163547667 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114053176 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205898498 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079262736 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185008902 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079475984 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096365083 seconds)
  done (took 2.688773476 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098320688 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119050625 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084839237 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114448086 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096320076 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097368768 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113305988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102998224 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113149611 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104606523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079160189 seconds)
  done (took 1.846957944 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096741688 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116369656 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084734357 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113523602 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080761511 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113040539 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112968593 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102975251 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113458522 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.1046586 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079656707 seconds)
  done (took 1.84301103 seconds)
done (took 7.09727461 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09806694 seconds)
  done (took 0.815445996 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.032841861 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.270273557 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119692584 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.160813564 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.335539794 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19152383 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.585459898 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133849741 seconds)
  done (took 15.771354034 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.118846847 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.121820081 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102641774 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089086074 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105796935 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.1016191 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086822573 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104349429 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100615305 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088963416 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102062672 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08637274 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104979937 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103608049 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086469373 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104018912 seconds)
  done (took 2.395603482 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138846655 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139260256 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092199494 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110301438 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106312202 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090997 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109339171 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10877364 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08965102 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10629102 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108403844 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107941311 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090497611 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.0989641 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.1088384 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.096034098 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104377939 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10745146 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094931992 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108533509 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109228411 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.082820343 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104165508 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108623259 seconds)
  done (took 3.335852482 seconds)
done (took 23.042934887 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166347649 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112105156 seconds)
  done (took 1.007191334 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10626361 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.12187003 seconds)
  done (took 0.961619991 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111825841 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097494231 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138378528 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117833287 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098803477 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083008399 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133629296 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098475229 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082288744 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098397816 seconds)
  done (took 1.79750366 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089309061 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116351945 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.110217478 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.105942881 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113025591 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102058675 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.113930758 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08934518 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.119975131 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09970882 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094895917 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11820319 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108666145 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119655943 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098029961 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106724496 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110691073 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10455551 seconds)
  done (took 2.657426311 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083254165 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103721883 seconds)
  done (took 0.922806625 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08835091 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0993291 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08856134 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102985901 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098810308 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083290664 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099738545 seconds)
  done (took 1.397108092 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485298479 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137360195 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259130244 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103966339 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124241964 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.328324371 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083171678 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104850862 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104743337 seconds)
  done (took 2.506120785 seconds)
done (took 11.983039964 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096466146 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120153508 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.136019786 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.472554035 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.12583212 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.082646754 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.164106426 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.261003798 seconds)
done (took 2.199881652 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.154845354 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332582491 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119754403 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083055535 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084626005 seconds)
  done (took 1.362412505 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082714272 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101124169 seconds)
  done (took 0.926558015 seconds)
done (took 3.186353524 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083955467 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098504181 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.13147638 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.081418859 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099841879 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.080129944 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097032273 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082937619 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098622941 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.083968958 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098069316 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083591408 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096174304 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095983207 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083706997 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097636331 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081055775 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096578128 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080873345 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097754344 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08008508 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097747908 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081202947 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095266087 seconds)
  done (took 2.978764863 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111868935 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100434252 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106292277 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089627787 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104015239 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104400395 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088429737 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099551699 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105580848 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.085661664 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103781211 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103237457 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085496151 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.10340242 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100728097 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088637838 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.105013945 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084237391 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100972315 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10361583 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.088390125 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099411445 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102388628 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089885203 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102944067 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102668724 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085034215 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099731123 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10510827 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087169561 seconds)
  done (took 3.683823824 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087439474 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095384795 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08133868 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104776547 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080411873 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102079831 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080394662 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098251212 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097529248 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.080516267 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098652518 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080025454 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096366941 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081924647 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098353879 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100394542 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094534591 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097406851 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080808566 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098015784 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083597325 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096763226 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084633112 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097443532 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095843289 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080998868 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096702021 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080612337 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097547501 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080604474 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100291308 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084574738 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096601756 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103519883 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084581232 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096479323 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085112401 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.097005233 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082039729 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09610582 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081382416 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096925863 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080582813 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103850989 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.100101418 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08336816 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.097449093 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082563139 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097916951 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084523641 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096254774 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097029254 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083835957 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098303551 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084535865 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096753997 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081327275 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0966008 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097869412 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08149333 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097072822 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080644538 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098821998 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081903128 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112709148 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087952535 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09730646 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098494909 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.085113244 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098945473 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.083353432 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111185797 seconds)
  done (took 7.362105148 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086925849 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108254977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083059305 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098903557 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095204514 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081806399 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101072807 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082056969 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099118131 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115506557 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081835578 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099444265 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083503586 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10129941 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09713084 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083655422 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108140429 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078677687 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.098027451 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101173557 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082150161 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101011823 seconds)
  done (took 2.820508654 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218538945 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107194943 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14530784 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124668907 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117805607 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098282774 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103896803 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105529514 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088857283 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103412183 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101943999 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088691878 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107070389 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102255725 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08762008 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104346318 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08903344 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10507121 seconds)
  done (took 2.752945402 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097246613 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10134466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.123115376 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084924473 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101491486 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086457777 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105717599 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115711258 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101605785 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.084543435 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111059454 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087351753 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102937503 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100287626 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086534245 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101084162 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102801228 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085077707 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110928105 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106367683 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091083927 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109803678 seconds)
  done (took 2.955003982 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102196812 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102901224 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122578765 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087808631 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0990385 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085758526 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108320714 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.10016055 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093476892 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102187692 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101148885 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086241319 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107264962 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084763401 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106080234 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10041389 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087141299 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100870007 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101854468 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084007712 seconds)
  done (took 2.720496923 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123053014 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101425215 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.210319587 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109785663 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102296425 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101593222 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124599093 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086776265 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102251037 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129928674 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087061325 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101504815 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126001224 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12172958 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086332253 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126549872 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125680254 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125296391 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086006627 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102358222 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129212509 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085774992 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125083062 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103603208 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085888618 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101425725 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102222686 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120696556 seconds)
  done (took 3.894304351 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084972434 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100129557 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080875712 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097674353 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081505745 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098656913 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081322918 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097551049 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084122099 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097740421 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.098734518 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083624754 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09999238 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083222458 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100608482 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.083457885 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102315928 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081030526 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097036423 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081670866 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100007757 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099746599 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083775843 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096840989 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081164418 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100477337 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081555449 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098185538 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083634732 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09782394 seconds)
  done (took 3.49820544 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094735895 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109072523 seconds)
  done (took 0.965196009 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082799428 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117599307 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080841823 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104666217 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106950341 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086244551 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109630949 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106231285 seconds)
  done (took 1.556101222 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103190321 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119822532 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090506485 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.120795664 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.114678616 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.116581265 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145870106 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106980489 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107089154 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081635007 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117791755 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08278645 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106313893 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10066508 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090623608 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106796884 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085258433 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.116048556 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.107200461 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082648004 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102536765 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112091832 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087506455 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098598448 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086831497 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112089265 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110326852 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085923043 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104215933 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110373599 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090724292 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094585625 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084848542 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.105876969 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101109453 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098421343 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114179596 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087438549 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109855056 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107271683 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111281836 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099703362 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106836388 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091262914 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112018221 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10486945 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090165428 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099769984 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08225681 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103712352 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.084475183 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101248018 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095236549 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092847084 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105405415 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114393047 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086365759 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102128272 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087517019 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10492918 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09083865 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103727043 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102644339 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084543541 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109275771 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088854105 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108742426 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0990576 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078675553 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.102215389 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093648115 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126194687 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110279053 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090785848 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107312317 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.103362459 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087974297 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107310852 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108664635 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094611057 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105817421 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121765713 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093195809 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102045849 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087394392 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.115111781 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100008265 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087315217 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099070189 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116752881 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084070947 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102532155 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082508745 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110550409 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087744656 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101564733 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098556079 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092303289 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096006933 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090876819 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10707548 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100813871 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095760662 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11185976 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112321072 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093199629 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112845056 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084517667 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104854692 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098089331 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091367444 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103805643 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09228607 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095020707 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103690612 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087980219 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106306146 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092604047 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098971363 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105336393 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093093418 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109108805 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08374244 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098043325 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104619658 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089341106 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110964904 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109061115 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.084580444 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100442361 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082879253 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107038844 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090060746 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106892318 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112495887 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088900682 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095601884 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08581237 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.111911945 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110349868 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08593341 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102464428 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107493313 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087620887 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101378261 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091328023 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104094425 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100464994 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089530684 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104024949 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084513225 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111781952 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104233527 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083526241 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105619438 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093076376 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104219226 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106898099 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084477373 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108069031 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090450949 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100571319 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100999508 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083756489 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111745601 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086943644 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100184037 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098293193 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097959945 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099175013 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.088416709 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101344876 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103253569 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09177284 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103376461 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08534886 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103669831 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135607101 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097795129 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107704325 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10769876 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094560859 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106142136 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086785044 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.107075525 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107941799 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09080609 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109370697 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089861616 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112488068 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104155557 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082192923 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10834328 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109242884 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085579898 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103426967 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084208405 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105802963 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108088725 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090522278 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106353837 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083705678 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102827007 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110712368 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088277394 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.106184935 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084266662 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106811759 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101879468 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097433217 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107680847 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112634683 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089378499 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100626513 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094126776 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10156252 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109348595 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.084201372 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099794057 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083917525 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108577483 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085189013 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105458094 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096633505 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092395325 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111044163 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085387442 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100784806 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106528259 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095733561 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10420865 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088620175 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105223316 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106638546 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100367817 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101584796 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104943699 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095013712 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.107016266 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079534946 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108682792 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100300764 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08486161 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101737906 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083950163 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105815376 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117765613 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090988209 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095834119 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088864233 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101463881 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100725572 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.084915729 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109997273 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090148204 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104589889 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112053543 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092034152 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.108469782 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089904648 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107279482 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108319228 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.091490729 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106278638 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.090430703 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10458233 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101364797 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087974105 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10251319 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086130924 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104674682 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106269716 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086239196 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108096358 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086855033 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103073824 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104726614 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.092244563 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105318304 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086000159 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102151381 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08825797 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103530932 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101946796 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088532418 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10092573 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093366131 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.107003561 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11041524 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085449232 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099028077 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091847409 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105474394 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11219643 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090770489 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108489706 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10290983 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090835711 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10585145 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094338182 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100461979 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111143355 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091989878 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103536602 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088281089 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102629684 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103827695 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085160425 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103900175 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.091250647 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103551273 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085745726 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108623218 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106354364 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086035836 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104955985 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091213215 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103612811 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104552999 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080683621 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101952235 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085481629 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107916995 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110333724 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09140927 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105733782 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085071445 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109069425 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101419325 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08320639 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.117852861 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11763802 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.091032594 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111418948 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085384893 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104942434 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112468229 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079681431 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101457647 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086946034 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100893 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110744751 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091950277 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111665232 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086072309 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103014218 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082646639 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.108789058 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102151577 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.087876948 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103631185 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089573259 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106035311 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083899308 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.108508001 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105264068 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090759786 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110895122 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102173642 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087826204 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108114984 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083287981 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101207809 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08492723 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106410316 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109418757 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084431925 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100118223 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089657448 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105627525 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086348791 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10349502 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10451741 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093651137 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103024458 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088196898 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112548579 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097930814 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089271516 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104040267 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.089559259 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103085367 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10782071 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089418694 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110927996 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092815454 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.107118574 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103583233 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087350121 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.104382608 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.089480088 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.107658377 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108043697 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085557778 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.110501623 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094740915 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.104025585 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106188803 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0860845 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103962964 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090673174 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.109448589 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106401759 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100553186 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107136168 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086943299 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109739474 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108900065 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08974173 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108941895 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106011363 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092508963 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103057623 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094220048 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10406111 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109810193 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088046764 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100873359 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086297901 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104384146 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085577321 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108984636 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10904622 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085465732 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103022955 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087549919 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105810658 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113522838 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094527196 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108435827 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089369935 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10283655 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101027895 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091822539 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102060302 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088595876 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107735969 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110773032 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090210339 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105369358 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084669143 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111376571 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110822321 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092817174 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101937037 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090894752 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.110664728 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106764735 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087738673 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103684305 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088521345 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109741344 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106065312 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08610093 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11308022 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091050994 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11011919 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106050416 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086944004 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104007672 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084308253 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110755587 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106406713 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094739499 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10718225 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086435612 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114879483 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103465512 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086243259 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114359141 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086004213 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111861717 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.102761295 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087395256 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111572466 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092073911 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103538069 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104696782 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084012458 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107443015 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086078502 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103125196 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114840494 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094565066 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107243328 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085168369 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105185513 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0845099 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.10341213 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104491923 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092832184 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10759408 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095747582 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103835139 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103897328 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084726011 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105342234 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090076066 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109868139 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102909452 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085271764 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103230127 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088557499 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11266296 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085182801 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108649318 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107918229 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088622285 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106179242 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095617434 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101804446 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109128169 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097040202 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109834882 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086234351 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110415431 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113553092 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.092241147 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103950062 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110223038 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088995698 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105426199 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.091676763 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106839745 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119798204 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089571797 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105391213 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085599453 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107245638 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104489133 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093672992 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111058217 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091177977 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111148957 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10664934 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101618978 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108237702 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111378964 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089141164 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107814397 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085807407 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105388553 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102987015 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085270553 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10810753 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091946485 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111512186 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118833662 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086675327 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116623054 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115028989 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092745588 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10190072 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086706279 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105655906 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.085905648 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.111466376 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103690553 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084964173 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104326903 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086618835 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.106632363 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093188746 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107004886 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11113561 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087699832 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09998401 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088416778 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109329938 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106755826 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084264563 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.11113509 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.092234526 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112148425 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117686636 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088374176 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107350478 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.0885294 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10616923 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.085600617 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112467571 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105014551 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089661547 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105226992 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086973084 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112556678 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109896182 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098346268 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108019785 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108332332 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096206851 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113463381 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084594277 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103757914 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112257767 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.088671654 seconds)
  done (took 60.180645573 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15333049 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092747467 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101459237 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083134568 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120499429 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106088421 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082605483 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107000105 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106214438 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089504382 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100919401 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082106336 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116380957 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131006397 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119504653 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110950527 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083057736 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106176596 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082603756 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106063891 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117085588 seconds)
  done (took 3.011589517 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110671035 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120085447 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118777387 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124485412 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093004814 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11980233 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118481594 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119415301 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124222186 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094426692 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123339977 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119496242 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.114479218 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11366949 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095836013 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116491333 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123682581 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111829084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101892335 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.118463226 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117445373 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118758066 seconds)
  done (took 3.329755476 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096048028 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108919379 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091348878 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100864749 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087032468 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101765543 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115223865 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084743772 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110095355 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08531889 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.104725371 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.085793068 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110620944 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.100600707 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.086695014 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.103949332 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.157234113 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.092436008 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.109804095 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107077022 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.084474477 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107914402 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.084999424 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.105117721 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084979865 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119418845 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106833664 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.087226402 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107067702 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08588922 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.110020028 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.103667612 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088754388 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10622727 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0856068 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105509197 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086511826 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.110261633 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.103433829 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.088621068 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106941256 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085665731 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.110393277 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088239485 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.106922703 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08498918 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.107640355 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.1063416 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.082009586 seconds)
  done (took 5.695155774 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120875446 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159830638 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088803051 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130696717 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12434285 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120260835 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.111070588 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148858518 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085290073 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.109613583 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127232652 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124475776 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091202701 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.115897749 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11420498 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090822196 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111928772 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105480774 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.095824513 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106444785 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116432461 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093901285 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122968591 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122411383 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114753539 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089455611 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106892808 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115922396 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.121844143 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.097668391 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11577628 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11757694 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124939092 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093275982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106404484 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112810273 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126822995 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.091619795 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113820418 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084831375 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.11200743 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116312237 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11360435 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.108749732 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.112494416 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112944412 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091081507 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103642233 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121074179 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.094075354 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120788896 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123860213 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115154466 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.091367683 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116200182 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124936925 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110147479 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088873966 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.114186172 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121038881 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085351271 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114787402 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122477208 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112422006 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.099709962 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123975668 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112011594 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114400482 seconds)
  done (took 8.547694699 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118571808 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.118444213 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128509856 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129315475 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117318871 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.099013004 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118456689 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.117847995 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117538169 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106298069 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118508792 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165575178 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.112789947 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121425994 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099100462 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118748786 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119089476 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118028659 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0998419 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11845801 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11853474 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128393524 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09957762 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129265205 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127469791 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113033344 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118818481 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099081021 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130080387 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118151267 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128904398 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.118195615 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100077543 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128482688 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129020825 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.118548363 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108452886 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098931855 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.118734155 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119107253 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092775219 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12969237 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118814877 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.112316411 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099995241 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11871737 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128838645 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129831499 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123430136 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12582523 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.09910099 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128732966 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117379564 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120102981 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.129883911 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.135599346 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129208602 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1293158 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099732389 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129808126 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12839067 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134840198 seconds)
  done (took 8.200693878 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.138495434 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101695848 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.128346102 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.103577595 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084905509 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116083869 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105120137 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085953317 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121284198 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.121155688 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123093339 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096037927 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119547904 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123921703 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115740983 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099865732 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115841075 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116201259 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120848855 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09580411 seconds)
  done (took 3.061013412 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096636948 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12917826 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.108392693 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096182541 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.11199955 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114902811 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091179016 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110748896 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08947264 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11115377 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12098458 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12085378 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08881069 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116137227 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12030023 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.096425735 seconds)
  done (took 2.554758088 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101460901 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.130154318 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127477441 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.108674055 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.086237851 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104509441 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090685528 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104774234 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104378683 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105540895 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.10907355 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113532117 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091804522 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.106163317 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084255526 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.11520074 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104456847 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086364734 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110758088 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.108168488 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.119709319 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108242305 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092537347 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.111808303 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108227489 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094117742 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109380864 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106540785 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087280396 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.112255294 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10753352 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097335324 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105561202 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087288296 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10662245 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106271212 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090196196 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111132245 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113209411 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.090645004 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.106151296 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088651022 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.110942813 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109121959 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084667083 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111779015 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083708672 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.115241335 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105388906 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088864133 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111096948 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091467576 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109894649 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120197446 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09212448 seconds)
  done (took 6.522325584 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102997092 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112441071 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083948218 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105803009 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.110807654 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.090239596 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112329695 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091537842 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110660189 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.105957831 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090254135 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113640447 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089953578 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113421569 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110287661 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092847426 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103185544 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090147891 seconds)
  done (took 2.668212924 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094632238 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109151593 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095407501 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108606344 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.108447752 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090419033 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104097985 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087057657 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107546352 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088478531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10851339 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.111142878 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087197746 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.111156854 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089690706 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10845578 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110755985 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087317995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108354936 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084162407 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111447283 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086945993 seconds)
  done (took 3.040103173 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.125223485 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129546253 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.115855705 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.217815924 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106459616 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136707109 seconds)
  done (took 1.673620612 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113788399 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147498762 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10972535 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092475823 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122928179 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114783295 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093667211 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114803361 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124510693 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127341378 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113580783 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106168851 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12634857 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124975007 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121816875 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121571507 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094980476 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113640065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110395301 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134436003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095388877 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124233944 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11446805 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094134131 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113917818 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124749711 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125178079 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128406092 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094078525 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125702592 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122149581 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113980598 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12521011 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107434387 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112054721 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126839872 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114881608 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134221658 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101066454 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125673642 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11325128 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122219484 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105635089 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120861429 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125149478 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115123018 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120241182 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094911164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114866488 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140855628 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122185272 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124041929 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102075091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126156274 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125483686 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141566365 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127414035 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124530081 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121733292 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127287313 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105988414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121823511 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126558731 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127071464 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122589053 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125337778 seconds)
  done (took 8.643887399 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129751247 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110062562 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115683579 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127448113 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125391655 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094445063 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115334797 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114983334 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095017423 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110512439 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15991357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114863991 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125380359 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10483518 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114798058 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11553279 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11456698 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106305391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110461 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141403548 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115233133 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124592294 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125522817 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105588686 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12734628 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12158893 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114259193 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094753465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114256964 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115126982 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120839952 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095177838 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126698397 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110747967 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124663207 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095105336 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114763217 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122325315 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114404704 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102206447 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125919099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13348788 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115394294 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11518035 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127361703 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095019725 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114533989 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110497013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095446786 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111442233 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126747626 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128150883 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126245467 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105560143 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114986226 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115605832 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114409504 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095349602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115570541 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121018683 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125069716 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0947126 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141972296 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115716011 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115129885 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12538818 seconds)
  done (took 8.504447976 seconds)
done (took 161.562392621 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104230927 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143558386 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.122515918 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.150812254 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109580976 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121792881 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.141668031 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123710043 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08917079 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.10912726 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088938913 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111449859 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152719338 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109953622 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108470462 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091234314 seconds)
  done (took 2.724724074 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.205448925 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.27548103 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127093127 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.086860465 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.114596942 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08859312 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.108933004 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096226782 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.11157385 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108224571 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088970481 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110226289 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087522702 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.110066073 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089814588 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109224979 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10751203 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089337746 seconds)
  done (took 2.971220128 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116389747 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14934 seconds)
  done (took 1.118244 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12354495 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187169452 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30430931 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157861239 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.143537873 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130735884 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.13785859 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134433171 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.228267702 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.107538156 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.127747263 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.121638145 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146904046 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119438464 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097871049 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121561165 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.147110768 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097178797 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.118310262 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120176576 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141994845 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088668203 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11960999 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096343921 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.192561516 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123576087 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109167857 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088340233 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12074477 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117796463 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094640334 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130248043 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123365592 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.171991521 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.126832535 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.185846263 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101264834 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114857087 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117512398 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094696942 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123520487 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123056215 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108652855 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.121637945 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.110224039 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101471911 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109068609 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087814516 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118182028 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.121954198 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116227476 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095650751 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.184162788 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.1018487 seconds)
  done (took 7.804646272 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.829109033 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157605713 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116733018 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.928479128 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12350508 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129627659 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.8203876 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14106486 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246620261 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.809655245 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139365125 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102924237 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242364364 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.269031859 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.01855777 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330040156 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.698485163 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133621833 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142924056 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161103489 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09868756 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141416163 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13357063 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439606009 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119834332 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114529248 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100228828 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124283868 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168839846 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.116086288 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096648137 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.208543483 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.261207364 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.216587047 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119574721 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092518198 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114278473 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.180495348 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.283583339 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.229455001 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.1846176 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11150188 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091853583 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125549753 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134792296 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089409045 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194921194 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.184017054 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.203193257 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095161726 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12498178 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123181555 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10227131 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.195354486 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126413792 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334140407 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.330723587 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092481062 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123603031 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13061719 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279839345 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106117978 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239006355 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14196795 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.227108981 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091863968 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840308047 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.199597821 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091737935 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121273414 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121504603 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097645087 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123019513 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175628988 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.415595378 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127601614 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117891187 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092306659 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239613488 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094046599 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113790275 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172291486 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12044844 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122368386 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105549176 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125522705 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.200396803 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.245513012 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126308536 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100872247 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119031716 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127297436 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097232459 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.245432636 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232788806 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172190651 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226382583 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124285832 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.195357617 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178106555 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124880304 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.183300767 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121915777 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129102855 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103586583 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230558678 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152513025 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127922523 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118622737 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121160194 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155241339 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095767488 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122193077 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.180379371 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.491905027 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.178043333 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.112672937 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096406804 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122264764 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.172490532 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121143783 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278961802 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1249246 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.180575706 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121804252 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089797687 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122377132 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.174368616 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126087113 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123723365 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125040197 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100058907 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.267962177 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229266651 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104803341 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251965721 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189552761 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122190308 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182217148 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123664453 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176276636 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124175315 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123761544 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097899093 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834760819 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127645538 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12112141 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097241757 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193383072 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115784749 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128548992 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093260536 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111844231 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.852347344 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095499747 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12578989 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.129365373 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100387417 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120983492 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121021708 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096741911 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194767577 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24351459 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122902955 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098702429 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11540059 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.170032182 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.120203906 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093929044 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115041253 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094556909 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121756062 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119389827 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129236024 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17781669 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.171500726 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234740056 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568979699 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114609854 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093013217 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243247649 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116009954 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303408713 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100378312 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238670509 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.194747969 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.125227934 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.328450604 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175718723 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195211363 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.117301791 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.182839506 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090196673 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12034378 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.196398857 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092725319 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122729295 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172352065 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128128354 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126259817 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.989514768 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092910787 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.261341566 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090957503 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.180129648 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119132027 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124257177 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.307171952 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092967982 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131899905 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.194975994 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096581037 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116245642 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.861535035 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.11486484 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125491464 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100045078 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235151374 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.194329421 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121905371 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101140495 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124381699 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173401283 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.245175155 seconds)
  done (took 45.917709991 seconds)
done (took 61.38614689 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284183261 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214376056 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257460877 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16745254 seconds)
  done (took 1.880417067 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180597298 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150297143 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.148505412 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088120898 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.154585415 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108752719 seconds)
  done (took 1.711803875 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.369507041 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279244954 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241228846 seconds)
  done (took 1.772236804 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252055392 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.272240933 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.330789545 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.419815396 seconds)
  done (took 2.261810443 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.237951031 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.145182051 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130203159 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.126597763 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.223021164 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.264399848 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.160255836 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.216622554 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.141068972 seconds)
  done (took 2.57077145 seconds)
done (took 11.082891436 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.254938762 seconds)
    (2/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.254620362 seconds)
    (3/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.184078035 seconds)
    (4/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.158190518 seconds)
    (5/286) benchmarking ("sort", Int8, true)...
    done (took 0.23433821 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.157424307 seconds)
    (7/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.208862072 seconds)
    (8/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.151093904 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108316578 seconds)
    (10/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.222854594 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12949321 seconds)
    (12/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.199924675 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096659976 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118300204 seconds)
    (15/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.204315159 seconds)
    (16/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199382783 seconds)
    (17/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.103621589 seconds)
    (18/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.187233376 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.228243618 seconds)
    (20/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.216424379 seconds)
    (21/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120685613 seconds)
    (22/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.174174671 seconds)
    (23/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093402415 seconds)
    (24/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.125526283 seconds)
    (25/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.258923913 seconds)
    (26/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.221434135 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 0.239746624 seconds)
    (28/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12572318 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098947207 seconds)
    (30/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.204114312 seconds)
    (31/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121707676 seconds)
    (32/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095813373 seconds)
    (33/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.121293117 seconds)
    (34/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.102367632 seconds)
    (35/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176465539 seconds)
    (36/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.13253275 seconds)
    (37/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.18672662 seconds)
    (38/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108464522 seconds)
    (39/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.157483025 seconds)
    (40/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092541029 seconds)
    (41/286) benchmarking ("sort", Float32, false)...
    done (took 0.183341816 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120011599 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136364008 seconds)
    (44/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.122458942 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.152750428 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139141921 seconds)
    (47/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.088297364 seconds)
    (48/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128372893 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091626469 seconds)
    (50/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.185374877 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.141984631 seconds)
    (52/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.168473204 seconds)
    (53/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.071393404 seconds)
    (54/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.122623086 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115270293 seconds)
    (56/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.194722764 seconds)
    (57/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.16264838 seconds)
    (58/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095530232 seconds)
    (59/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.171750318 seconds)
    (60/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087895804 seconds)
    (61/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.095761791 seconds)
    (62/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.195056276 seconds)
    (63/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.174423193 seconds)
    (64/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.184239997 seconds)
    (65/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.141907211 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.119456626 seconds)
    (67/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.205816489 seconds)
    (68/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.124483516 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141229508 seconds)
    (70/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097930254 seconds)
    (71/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17310237 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.089957038 seconds)
    (73/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.160564308 seconds)
    (74/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.079236848 seconds)
    (75/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.189641473 seconds)
    (76/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.187315194 seconds)
    (77/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085799223 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112734114 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170298621 seconds)
    (80/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097443455 seconds)
    (81/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117427672 seconds)
    (82/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.125052895 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088848903 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.115014804 seconds)
    (85/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136451469 seconds)
    (86/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.140075409 seconds)
    (87/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.093462326 seconds)
    (88/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.102204122 seconds)
    (89/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.147195775 seconds)
    (90/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.125782154 seconds)
    (91/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120554649 seconds)
    (92/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11472635 seconds)
    (93/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11844019 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.107405165 seconds)
    (95/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089178464 seconds)
    (96/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.104631233 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.188185774 seconds)
    (98/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.126368369 seconds)
    (99/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.183218213 seconds)
    (100/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.203650974 seconds)
    (101/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.073647571 seconds)
    (102/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.207366949 seconds)
    (103/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.185192939 seconds)
    (104/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.121842586 seconds)
    (105/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.093043173 seconds)
    (106/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.20831562 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 0.193074294 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099118142 seconds)
    (109/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.09365284 seconds)
    (110/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11326531 seconds)
    (111/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196504407 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118082634 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.135420385 seconds)
    (114/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.249089754 seconds)
    (115/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068887843 seconds)
    (116/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.121213434 seconds)
    (117/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.196306485 seconds)
    (118/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118328446 seconds)
    (119/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072582975 seconds)
    (120/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.169838044 seconds)
    (121/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.130944812 seconds)
    (122/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098243074 seconds)
    (123/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132994283 seconds)
    (124/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119379975 seconds)
    (125/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192405005 seconds)
    (126/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118616633 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111747599 seconds)
    (128/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096942171 seconds)
    (129/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120183459 seconds)
    (130/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072110542 seconds)
    (131/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091932126 seconds)
    (132/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098428079 seconds)
    (133/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.122912457 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090012772 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122112072 seconds)
    (136/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138376385 seconds)
    (137/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099569619 seconds)
    (138/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.094007398 seconds)
    (139/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096169008 seconds)
    (140/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127581683 seconds)
    (141/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.124528019 seconds)
    (142/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.092340729 seconds)
    (143/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.100443926 seconds)
    (144/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.0924123 seconds)
    (145/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.078641671 seconds)
    (146/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072149265 seconds)
    (147/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.097954445 seconds)
    (148/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.077322741 seconds)
    (149/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.125075732 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096024856 seconds)
    (151/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.121634522 seconds)
    (152/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.177569899 seconds)
    (153/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091332671 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.122980195 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.122812945 seconds)
    (156/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069826342 seconds)
    (157/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.088712268 seconds)
    (158/286) benchmarking ("sort", BigInt, true)...
    done (took 0.247678725 seconds)
    (159/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118200194 seconds)
    (160/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.074994371 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113462111 seconds)
    (162/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.119072082 seconds)
    (163/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09801262 seconds)
    (164/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111842979 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100551435 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.094410169 seconds)
    (167/286) benchmarking ("sort", BigInt, false)...
    done (took 0.230251774 seconds)
    (168/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.06965287 seconds)
    (169/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.112466556 seconds)
    (170/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.139541506 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091955213 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112919084 seconds)
    (173/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070480043 seconds)
    (174/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127662293 seconds)
    (175/286) benchmarking ("sort", Int8, false)...
    done (took 0.200063105 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 0.455323061 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089819814 seconds)
    (178/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121604579 seconds)
    (179/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.119483447 seconds)
    (180/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.094672203 seconds)
    (181/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.097738769 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077423968 seconds)
    (183/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.186647057 seconds)
    (184/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.101715553 seconds)
    (185/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.123971847 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113035234 seconds)
    (187/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096038534 seconds)
    (188/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.120432315 seconds)
    (189/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098628197 seconds)
    (190/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.116536584 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100356903 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120744497 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089216154 seconds)
    (194/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180453004 seconds)
    (195/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172477752 seconds)
    (196/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.173757495 seconds)
    (197/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.119138714 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.112664637 seconds)
    (199/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07217289 seconds)
    (200/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.1143742 seconds)
    (201/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068951869 seconds)
    (202/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.092798108 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110671891 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112065936 seconds)
    (205/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069203767 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118206984 seconds)
    (207/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090236244 seconds)
    (208/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.095513238 seconds)
    (209/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.068742017 seconds)
    (210/286) benchmarking ("sort", Float64, false)...
    done (took 0.182866255 seconds)
    (211/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077469532 seconds)
    (212/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113612361 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089593377 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.114461499 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089434042 seconds)
    (216/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111636892 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111361293 seconds)
    (218/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.070730064 seconds)
    (219/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.071616564 seconds)
    (220/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121067363 seconds)
    (221/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069279548 seconds)
    (222/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.096321266 seconds)
    (223/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.071094712 seconds)
    (224/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127410679 seconds)
    (225/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.164666937 seconds)
    (226/286) benchmarking ("sort", Float32, true)...
    done (took 0.244316092 seconds)
    (227/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.093869497 seconds)
    (228/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.092736822 seconds)
    (229/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118526827 seconds)
    (230/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.118701434 seconds)
    (231/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086534692 seconds)
    (232/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.13517447 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138847105 seconds)
    (234/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115929786 seconds)
    (235/286) benchmarking ("sort", Float64, true)...
    done (took 0.245072096 seconds)
    (236/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.070231535 seconds)
    (237/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.112310501 seconds)
    (238/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090713711 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114028873 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090271256 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111601516 seconds)
    (242/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085544252 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119731285 seconds)
    (244/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.068793133 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.094968573 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.145377338 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127406674 seconds)
    (248/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138513955 seconds)
    (249/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.070860929 seconds)
    (250/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.095601416 seconds)
    (251/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.071173543 seconds)
    (252/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.077598199 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.095959296 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091578246 seconds)
    (255/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113323112 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105213307 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185927199 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112534906 seconds)
    (259/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09567483 seconds)
    (260/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112071025 seconds)
    (261/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104040943 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120706101 seconds)
    (263/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.068861408 seconds)
    (264/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.11343625 seconds)
    (265/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093222626 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.112040283 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088244387 seconds)
    (268/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173646703 seconds)
    (269/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.092863399 seconds)
    (270/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069532113 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120688952 seconds)
    (272/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079463429 seconds)
    (273/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.0695891 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118977663 seconds)
    (275/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.091381622 seconds)
    (276/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.114154265 seconds)
    (277/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.140335725 seconds)
    (278/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069757197 seconds)
    (279/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159592907 seconds)
    (280/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.069800446 seconds)
    (281/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095872327 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096945609 seconds)
    (283/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.07953893 seconds)
    (284/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094841983 seconds)
    (285/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.073195116 seconds)
    (286/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.095012416 seconds)
  done (took 37.379263155 seconds)
done (took 38.266763647 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103877781 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154537432 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.122961065 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118617351 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127146142 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093525232 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120332682 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.124974278 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102518796 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128133654 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.124927428 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071194074 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.12336676 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100060506 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.123170698 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144191237 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103302316 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120580284 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099631962 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.11131524 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120817328 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088962945 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.115120491 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070918205 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.125315 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.097133127 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11936859 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099540898 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.111934008 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.11255256 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094237113 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120438816 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089721442 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.1276182 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095791029 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120779801 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.123970292 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099487439 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114970762 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089745958 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120569211 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090183553 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120639621 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.121535142 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095763889 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.117973768 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098600585 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126256746 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144933897 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094611108 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.122424375 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100024589 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123337344 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119837823 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093718469 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122983751 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094977732 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145661317 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122414361 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094975829 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.12089386 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098955948 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118500183 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.121947122 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09875707 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.124354917 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101498999 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118239739 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123213849 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.095816532 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112537106 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099115269 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.116456151 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089606481 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.122586202 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10128352 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.112282439 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118753388 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097533082 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.118932863 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089305504 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115817543 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.091305794 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119005292 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0920232 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095289651 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093465809 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118962364 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.090138438 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.123039409 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.119212051 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096720525 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115876028 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102278103 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112734076 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094786968 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112731166 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113293836 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092817638 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117476522 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.09032974 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115989478 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098788609 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.114835527 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096410031 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125959488 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112865198 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.096491284 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.112763142 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089329089 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130534246 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100739782 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.113402259 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118746832 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089223733 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120447571 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089520755 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113076183 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.089357868 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113218226 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096050732 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113486575 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093152744 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120454227 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127511324 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089952659 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11678495 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093030003 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113905964 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.096181631 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113997898 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090088932 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115131572 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080241764 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116427436 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.113013827 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097882908 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116488606 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099146091 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114652318 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099379928 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118000958 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11929597 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095559944 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112280329 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076032732 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117898882 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092850582 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.116255647 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089828926 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115377566 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089725949 seconds)
done (took 17.475544062 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090636632 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188448914 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.158331279 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14920335 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.134870017 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.090810778 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12644883 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.147314465 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091965285 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147044033 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138309945 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133774068 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.130725587 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.113928898 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.089878689 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.118339437 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092480126 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.130007395 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152794677 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135858152 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167929773 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090088336 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149697072 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138682045 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.124634737 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.108558372 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114922223 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094233567 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117913373 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140611843 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.111083725 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.118539392 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.090811005 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135281013 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132215078 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.098424591 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.114080826 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12106018 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.09133677 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114171336 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144365828 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.113412375 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.120341616 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.096475847 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118342857 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123144253 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09330988 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122823992 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101337549 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118766687 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130430455 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.161576501 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093302214 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.131484744 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11348193 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100768615 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.130418084 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122470182 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.091674467 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122443459 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.091024405 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.117819264 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106524238 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146123905 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.118343013 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130399325 seconds)
  done (took 8.934932357 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10920021 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.144938571 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133199597 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109067052 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114369 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090988542 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114661334 seconds)
  done (took 1.763554618 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091943386 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141656362 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.133811274 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142585255 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139611444 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.117434493 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120631426 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.115289054 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111126032 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116891278 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11703398 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156702876 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117368923 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12265524 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.120373153 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.115106362 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11896211 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114669107 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119706691 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119679109 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119099034 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133829842 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094160598 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116270045 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110533906 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11626279 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164064914 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096499336 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114424736 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.095006106 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114257699 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.155317868 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110306732 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124357991 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115609402 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111260589 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.134410108 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090335067 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131517004 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121737428 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.110257332 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116826293 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093329954 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114694069 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097109814 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.129444793 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120689735 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093114526 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.119669877 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116033741 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.116153336 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134275373 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093381888 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.12034988 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.093785034 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119440005 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102849065 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116535585 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139979649 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090148201 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137303645 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135803406 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.11012115 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136249552 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09443205 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134561419 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.13432147 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.095180566 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118472985 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095769753 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135943569 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090589056 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.118492832 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.13106334 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094169317 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.143803069 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145001768 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094307894 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129156198 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.092405172 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118654655 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091629849 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.143890441 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120958998 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092268131 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120591805 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095622306 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115119552 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091069529 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119148698 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114774871 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.094391768 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119828547 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.092745134 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118839354 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136601889 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093347522 seconds)
  done (took 12.258710448 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094224553 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118845262 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096560689 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118184585 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093165137 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11786931 seconds)
  done (took 1.603735494 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12350491 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120154028 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.132400429 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099696125 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158975496 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135917871 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.112378216 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126169341 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136136414 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105329527 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135827803 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.136241238 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141676279 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099164763 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136063042 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122139047 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.112798996 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127987514 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128585233 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099864896 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140621243 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123784978 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100345569 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.1373662 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120658399 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099362138 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129600583 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10613166 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129974713 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126374129 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099037659 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.122467005 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123474308 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103223882 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.138026707 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124134801 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098797174 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12233161 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128499028 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.097031772 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135987412 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124075837 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105219 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122462091 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126723712 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.100087711 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121514523 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128927 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111187221 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121995972 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121509079 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09915037 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120900679 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097446888 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124109474 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126891111 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097474899 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136616979 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.125190688 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099984425 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120841153 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121855924 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101360268 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121390653 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132822073 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098378547 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123978398 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125249352 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10040556 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.124141132 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.098383974 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121451924 seconds)
  done (took 9.563079599 seconds)
done (took 35.07284369 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691542041 seconds)
  done (took 1.650387523 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.871106431 seconds)
  done (took 1.832509504 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.54866812 seconds)
  done (took 17.541938059 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499417987 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.580613342 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.007892687 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176299765 seconds)
  done (took 3.225863526 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.936799925 seconds)
  done (took 1.921533712 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286528096 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258216521 seconds)
  done (took 1.514331776 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.787086942 seconds)
  done (took 1.761201565 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.456695565 seconds)
  done (took 2.428996484 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327101725 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189992663 seconds)
  done (took 1.500605611 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566848531 seconds)
  done (took 1.544915582 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.090943154 seconds)
  done (took 11.07340634 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.276016726 seconds)
  done (took 1.26410712 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309433415 seconds)
  done (took 1.289327292 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.437877684 seconds)
  done (took 4.423428426 seconds)
done (took 53.943495085 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103814607 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130030999 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104662733 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127556852 seconds)
  done (took 1.444300645 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109288294 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124337077 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107520393 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124145696 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.133734927 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099001194 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126900752 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.130413742 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098444132 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.12486074 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.09922621 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12325203 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.12765965 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102549225 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122199789 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126711237 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10483592 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124049031 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104814619 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.123465137 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121203237 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101705089 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128325631 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098296802 seconds)
  done (took 3.774878741 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104759877 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121763085 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100282711 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121663193 seconds)
  done (took 1.440451794 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103380059 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133961198 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108960467 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128376911 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134425319 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109800601 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120889812 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096406453 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.122870795 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126925182 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094835234 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.143589836 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13501914 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.104055912 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130739943 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091911236 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119463671 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.134365799 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103583083 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128280388 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097059398 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127423583 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093981857 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137906389 seconds)
  done (took 3.816267453 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177377433 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13062237 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.143057907 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.098481049 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164355565 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.144457094 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.092058255 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.144584914 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116107875 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.108595051 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.122226555 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163109825 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.107291227 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.116771592 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.091632708 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.116573203 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130491865 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.105855641 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.119589411 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105887803 seconds)
  done (took 3.492800313 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101978656 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120634276 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091649616 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119363084 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102304292 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125315606 seconds)
  done (took 1.656784811 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100279193 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117674723 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097732334 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118959057 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097002249 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116393062 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091664725 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117188756 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.116839208 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.092600313 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.118068381 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092636323 seconds)
  done (took 2.267096399 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.51392485 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122616194 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122875295 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.092221689 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129155113 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091999998 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134950579 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095808227 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.147266443 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.116829321 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093120038 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.120886662 seconds)
  done (took 2.777323 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231607548 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128749404 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285959619 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361881006 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177741749 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194237617 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283043953 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168576777 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205974628 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159447136 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232347302 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182619849 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157768765 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208495877 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141858794 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146524956 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196263518 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269185487 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157986641 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219621516 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171389534 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193104049 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185031976 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155526293 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117568936 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176034206 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125104736 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133554052 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189554583 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180901405 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221367783 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166997451 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159871041 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.459851902 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23577355 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222538699 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286236425 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139416454 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171331202 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17345681 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238989861 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142893423 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23544478 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167197149 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108916255 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233887857 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.320346892 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.208731405 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149773291 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120474389 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22840356 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202079938 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.225276938 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11637526 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329964342 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156443508 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165228438 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197370776 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239703521 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206156689 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219512222 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099185276 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21731936 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199549124 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190407846 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.159636949 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186414594 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152307534 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201955361 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1979524 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179951757 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173434904 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.210466001 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116648467 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196850277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174958369 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172278174 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261372108 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188836353 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124226905 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172086546 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151805374 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111951299 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198363712 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128575568 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217422895 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144781603 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16585439 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214297966 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160415096 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162956761 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214665755 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177318754 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150246621 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086669021 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157586202 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158013794 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177236649 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140720003 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159999827 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153851155 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13331055 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17378666 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100918971 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213403057 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094198795 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.357495562 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186163991 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129087838 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166072167 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151325032 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128462956 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212405039 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20201193 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14604051 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13678081 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214092913 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184307572 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14393108 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181263701 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230440929 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.119394514 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153032472 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233830898 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218950522 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144723964 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230838237 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151701042 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11252212 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136016095 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186303166 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160364398 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162587761 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138738463 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186873758 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230812991 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102161214 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14090758 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225516252 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111161537 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134361531 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149789102 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150955078 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138283787 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.118020382 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149498575 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177947258 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207539556 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156429139 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168236336 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147901117 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218220673 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144358847 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153177107 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150198498 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097147291 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.226028027 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203145671 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13434149 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205862089 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171698383 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23236936 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170808023 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138174815 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179822669 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133165046 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.097449088 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224519667 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167672452 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163670761 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198155852 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228601553 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184817731 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186619333 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170076928 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203910284 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169155891 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126619923 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139567745 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164276877 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159039539 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125911308 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143230955 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.11174525 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152446166 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147261195 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13842281 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200382817 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175297121 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221317406 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164342789 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15344353 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1858733 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.1325494 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175962476 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.40405759 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152851826 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198252953 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196301315 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216442219 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144267271 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20551681 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123932558 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101818272 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147397094 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170487742 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138883525 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138018835 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165330382 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186483719 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.356606658 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175959727 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240254345 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184737432 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196549241 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124724445 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147650541 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207617224 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183082105 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.158992257 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140552258 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151856366 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183475736 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156156662 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238028427 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171011813 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176670932 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199829248 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152850308 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134971345 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151634781 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174566706 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158263496 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178343805 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148440169 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141099391 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314149843 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133334954 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165968698 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184977381 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165626795 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207347667 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.127788749 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216156355 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104491891 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190670039 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159631772 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165058321 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.085033746 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330501206 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223295152 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147115253 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315650666 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18575412 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134318495 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313923952 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230522013 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.335147973 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140722378 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159247793 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16294011 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165839447 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.319047096 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204173953 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16252086 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188935838 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159995018 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112320794 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141211964 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152887442 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155984392 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136034114 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151198574 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.182644752 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138302506 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187838141 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151753426 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159220471 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175883513 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152777623 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120537563 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154030686 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246386324 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189074208 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191547995 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150624132 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178338794 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233307504 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101495133 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135238899 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136503784 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180207655 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138782854 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196481784 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.218731955 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206160477 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189008563 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199866356 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11521487 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123039444 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162481321 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172602007 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234216953 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122928468 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152201366 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228371215 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111986331 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135340806 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166254689 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295250897 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147322413 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190475549 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110097918 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288724581 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128918248 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110026612 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168051404 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21513083 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112839083 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18068366 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170985678 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15522681 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167367851 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153859117 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222034623 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217201919 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204515841 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213453577 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.109923274 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161919389 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.346185573 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190620671 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163763723 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139237854 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191834869 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198957623 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221620887 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119618035 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199033097 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17115078 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161879328 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194897076 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140551799 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206473713 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138519723 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198658659 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156446544 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14635828 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203114622 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193771854 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142894567 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187064469 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190083606 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142253796 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137321957 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163841272 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182453486 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152646976 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130137885 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184203456 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100818613 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225479312 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266559926 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112412726 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158257029 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149481614 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13952683 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159344375 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161930648 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140897802 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141402602 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221837655 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.110906871 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217267999 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207645584 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200338909 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316210692 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145176678 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.713001723 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107800169 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226644062 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149525235 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182349519 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15359759 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17520832 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162957036 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170823224 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200404658 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161161299 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23371088 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224357712 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.184180414 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134778445 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163070543 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151207733 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.122272635 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157482844 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170322217 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161465917 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150219335 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.210523538 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161004797 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110061184 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143579526 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200979042 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151629004 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183180176 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207136156 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116241559 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177252953 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219370509 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136755771 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.185959696 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190568902 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146034019 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152006985 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.140354414 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155453723 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24409683 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127315858 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18668801 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216109189 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162643386 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170952507 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151197896 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195953839 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162389766 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19084646 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146490521 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160269434 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161541642 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144222366 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134918063 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157753269 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170935339 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152682495 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164791255 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142255066 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222126108 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.100148489 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147627217 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295250901 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176298741 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243775666 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138488575 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111067412 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164150149 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149098739 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181258368 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210736877 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.112564969 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139133345 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138844885 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158326215 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115982279 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162229248 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200072078 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348210645 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208009393 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140930694 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285731388 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142948993 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131777188 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118284486 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13805183 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153605144 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123345782 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155283161 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224622678 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268301636 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123450719 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.137416715 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155199777 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128544536 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111720248 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169238186 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16411889 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210156195 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118112254 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111255846 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160221261 seconds)
  done (took 86.013078856 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187110668 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13903092 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152935668 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206364548 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181890282 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295886851 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214169856 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.259290581 seconds)
  done (took 2.718938926 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.097638308 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.155824476 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.160300508 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.137935699 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094975403 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12197009 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.38577568 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109345729 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.120283401 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.152859118 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.149099768 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.121577124 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.645590982 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.121645853 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120074828 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.158880716 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.120212117 seconds)
  done (took 4.049310636 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.109539783 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.483932356 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.780365499 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195023526 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16124702 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.11990423 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.690055323 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.121858978 seconds)
  done (took 11.744772381 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.128112682 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148521703 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.16479093 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.139472504 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152433151 seconds)
  done (took 1.822040534 seconds)
done (took 127.997589538 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101357143 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131100533 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101666457 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132616593 seconds)
  done (took 1.542106905 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100715861 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073268655 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102525327 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076597199 seconds)
  done (took 1.440183154 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.196699652 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.172330216 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398531517 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074124557 seconds)
  done (took 1.593067361 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.118694299 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136828954 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.135331977 seconds)
  done (took 1.48614513 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109731129 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132125919 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105967524 seconds)
  done (took 1.433512481 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109578833 seconds)
  done (took 1.20073812 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.114225197 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.14338507 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11517095 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.142763769 seconds)
  done (took 1.60726277 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.1019192 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129569495 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115434952 seconds)
  done (took 1.438889373 seconds)
done (took 13.197163208 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109530147 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423306695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421173706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11338702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728937282 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415838611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033112006 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150288058 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172516558 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123286311 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114687381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.703583972 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.014181969 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346448722 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.000963599 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.437274762 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.716894208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121216939 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095800593 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123941571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017808765 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12744184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122848499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095791028 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.713441019 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.401796005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125034041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.461311986 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096221739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131339576 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383753574 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124050227 seconds)
  done (took 17.247776903 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101607984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184700517 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134055217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097605822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130417117 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09752387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126574016 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123829378 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187812048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097664569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144345482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095313924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129435544 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124936069 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118214097 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122534227 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09798525 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123241303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122095607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098120781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141707186 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096714029 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125131802 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095353649 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12433993 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138105293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097823099 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124093121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095885291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13210384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127008531 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098940307 seconds)
  done (took 4.944287836 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156265639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193093388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134620821 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.156842088 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176596762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098655949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202688854 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149558288 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191353835 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09748185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143191203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123597145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132080054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125197151 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144988291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095745402 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125234705 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122789713 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095978754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123883566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115474493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123196462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124880815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096960727 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124476368 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111544221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125759769 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123017038 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096833147 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131881822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099709041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125786763 seconds)
  done (took 5.286774562 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100973231 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129075388 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113386827 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141359804 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12513378 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099852171 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.12828178 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099756469 seconds)
  done (took 2.031826962 seconds)
done (took 30.602955809 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114900846 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128970036 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.110224985 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137004467 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.133370968 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.109797849 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122355248 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10820412 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.136696477 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104683194 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140505693 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.123493033 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098648538 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.122758791 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.110559563 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.128253912 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.10947295 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.133828003 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13815412 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109715495 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.125460938 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108384797 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.133662108 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.137921014 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110956886 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.138483907 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138743735 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103953772 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124907964 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09791492 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.128111475 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109509119 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125930204 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11074794 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128119536 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12766698 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097513022 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127844339 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.109227089 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.136336414 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.129468411 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107808124 seconds)
  done (took 6.168178853 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.11334283 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144567232 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109613931 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.111437333 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090620004 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082929095 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141893296 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081352592 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111797981 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113132351 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104710499 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079288489 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.107770066 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0757502 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078185004 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.106183758 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081682788 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076830242 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.107182881 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079396485 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.108885429 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076284233 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080764255 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.109126272 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07735617 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082954579 seconds)
  done (took 3.636629684 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104230883 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.144680956 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117038772 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.179572803 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158708674 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.13123896 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109938185 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.143407991 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112150974 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.124279959 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09857618 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15323045 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14192283 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10450484 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.127537574 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138842704 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.110977727 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.125670545 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106282098 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144381337 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140592287 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106943638 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14343397 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.106500639 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.124237554 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097665975 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.130893142 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137429907 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.103609795 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13438681 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129721135 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100084157 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.126181616 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107397222 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130359684 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098097604 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144390744 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139055871 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10567378 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.124736694 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.103141371 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127036031 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145505751 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136553976 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.124636875 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130618533 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099210882 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13480984 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096741349 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143341434 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13309234 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096543386 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126763021 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.097298888 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124550755 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111896077 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126151154 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098561145 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132636176 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128465539 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.109478346 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12833622 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111793995 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124265221 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132631023 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09725646 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12434894 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09511497 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.147746904 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102396718 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164594634 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.125652099 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097871008 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.13379354 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132203055 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102745877 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124021119 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113443178 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133925815 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127320626 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109610538 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127895953 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099134209 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142564241 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.100146561 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125867146 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125027973 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.104758274 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126352102 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097196285 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139148241 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.095431156 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126968964 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138086962 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096393673 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124762568 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104712601 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129262105 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.122319519 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109974572 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.130461287 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095852134 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.134828694 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125171349 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100302698 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133497611 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.10117277 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.123847845 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101111945 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.131239433 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124860995 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101516391 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126752502 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098475144 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135757016 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.102817632 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130022769 seconds)
  done (took 15.30765708 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237554326 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.224626693 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.193056742 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301429 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137102803 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.150911256 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.219230638 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.131389065 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125081549 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16361294 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173954668 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187865155 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.174158771 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186772185 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17573066 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123877787 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115430899 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.170986434 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.221435154 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.299050695 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144735648 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.104256133 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164846655 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.164642767 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138831005 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134823016 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113288481 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.145504793 seconds)
  done (took 5.937975326 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11338126 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157304626 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.13121308 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119147058 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153582265 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125000655 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101491457 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.127195973 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11017954 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139491189 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.124549394 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103347867 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.133033468 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13395364 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.097827668 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.135317535 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.106074208 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.126909744 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101019553 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.129034379 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134824947 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.106153468 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128786141 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094901837 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134666225 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095153742 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.118978047 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.146163867 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123851663 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119644124 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123147502 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104397366 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139183463 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097184697 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124497894 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.126882611 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099925031 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126128534 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098804591 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123051513 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095902743 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.108297986 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095838445 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140231572 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.132083456 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.083714872 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13099894 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102638846 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125891114 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.094323027 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12765649 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.099967039 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128672161 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104673893 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128492879 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12633065 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099844271 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116810821 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103029855 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126627037 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087003785 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123242335 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.101808628 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120378843 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104814473 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130331045 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09587776 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127618844 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.128825035 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103618729 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12707924 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102951016 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.123011283 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.099014961 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128166774 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.101406494 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127643958 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123584375 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096866618 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125411293 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077475659 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123999434 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076545839 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126860562 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09533328 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123514502 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099098298 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131865109 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.142279515 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.0978432 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134328459 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097181064 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123876526 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099704122 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11454183 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099581465 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140937874 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.144725025 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.096452669 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124070133 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.140029116 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099575135 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123717539 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078450737 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.133854885 seconds)
  done (took 13.353322917 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135523573 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156463572 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127473787 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116156885 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.161019102 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.161561563 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103739454 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13377951 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.098616951 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143853917 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126030929 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106878163 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.125619832 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.111048546 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.160292839 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.135824132 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09938689 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.141197802 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129856625 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.144593312 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.144798853 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144237455 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.115423663 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12705956 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.102910831 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142850664 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164145673 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.111601605 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.142195244 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144998592 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111634308 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163848792 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146187638 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102331178 seconds)
  done (took 5.608912615 seconds)
done (took 51.111829002 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.206420355 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.404060904 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.188272327 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.007516712 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.214837802 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.198309952 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201773272 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.191089896 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.62407587 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.190046335 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.455083026 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.622213967 seconds)
done (took 59.621257986 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.206610984 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347818866 seconds)
    (2/2) benchmarking "String"...
    done (took 1.480335276 seconds)
  done (took 3.942223098 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.763097912 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.090874433 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448716971 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.189921763 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189647351 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494166239 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.782716797 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.503196897 seconds)
  done (took 27.812661356 seconds)
done (took 41.842050104 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.183870468 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.260815719 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.228833953 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.167064725 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.295543302 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.209752038 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.540164942 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.232022227 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.204879326 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.187522355 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.188458079 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.18527789 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.206101533 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.528577798 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.193198428 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.189214846 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.257872552 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.755797939 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.552821023 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.199117051 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.193484592 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.232645001 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.19601834 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.191693158 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.207454365 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.187527994 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.19517327 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.19752472 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.183306494 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.191813283 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.284055198 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.708971126 seconds)
  done (took 189.851647723 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.182943639 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.074448296 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.185519364 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.202892315 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.560116167 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.38301585 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.316997737 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.709866721 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.198716877 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.199519463 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.400564272 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.182611284 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.443878137 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.153125358 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212642086 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.223903962 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.386771916 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.469918464 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.216563367 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.316999851 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.191081883 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.210055351 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.143144792 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.392747561 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.212455635 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.276931553 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.216454279 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.188316262 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.377920431 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.332520263 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.201478165 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.188685313 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.712898042 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.03951894 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.192983617 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.193714374 seconds)
  done (took 148.200405799 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.182626992 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.1828309 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.183083332 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.18344229 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.209922748 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.183432188 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.66424569 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.669007433 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.679850471 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.470449468 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.257505477 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.362817919 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.183853943 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.274558846 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.19654218 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.184370119 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.184848808 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.201071055 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.224125998 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189442846 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186325353 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.665537134 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.201988334 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.366973515 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.348306982 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.198544453 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2099926 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.567112972 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.183409999 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.210158575 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.498547334 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.22428485 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.176198203 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.467408734 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.514552546 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275846266 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.162658353 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.188664198 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.162042541 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.432701058 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.160870689 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.161278393 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.164599558 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.748561446 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.163602876 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.640841629 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.162786966 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.030624845 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.159252557 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.159120868 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.397255066 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.668553071 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.177434996 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.159674181 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.163790849 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.160134966 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.160064032 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.187380039 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.3705464 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.252610314 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.17602531 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.162479246 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.187957427 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.159673888 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.323628356 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.163704111 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.194979496 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.236755172 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.273999289 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.643079568 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.164856836 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254385892 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.277634606 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.160725207 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.159905137 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.160245104 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.161561489 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.160363402 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.266492715 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.160224106 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.514025573 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.322670607 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.177297265 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.247504125 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.257664163 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.160919171 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.479164601 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.165578531 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.16077902 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.825572551 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253477538 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.162494311 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.161886279 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.161445704 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.516623975 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.644878357 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.319863359 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.166289961 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.452653279 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.166841862 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.161881393 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.535801566 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.636816894 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.755469658 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.167923348 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269292198 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.323219824 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.17776805 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.162612665 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.26079773 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.162311448 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.218249769 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.1625315 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.55637387 seconds)
  done (took 358.788936875 seconds)
done (took 697.95851116 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.754988578 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.751869713 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.849909023 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.745567376 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.711058124 seconds)
  done (took 9.904070655 seconds)
done (took 10.993852073 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.324942922 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.327419056 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.210349644 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.330725421 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.187821574 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.344277062 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.311032777 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.176701627 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.246307608 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.224125606 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.245264735 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.200681454 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.183487199 seconds)
  done (took 17.395718264 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.450222579 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.470433811 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.219237734 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.454936904 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.192203324 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.487526308 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.343727472 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.354193183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.355896648 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.182490955 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.164881493 seconds)
  done (took 15.755445816 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.458122173 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.458401586 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.21893175 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.463113295 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.193371788 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.444000492 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.348669496 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.36491938 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.358627956 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.182714434 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.165466601 seconds)
  done (took 15.734966168 seconds)
done (took 49.973651395 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.161575972 seconds)
  done (took 2.240323675 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.194379782 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.355659385 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.179508023 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.166728954 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.161998917 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.165437597 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.168138748 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.16308626 seconds)
  done (took 10.634456171 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.158477059 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.161101992 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.158716143 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.161588537 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.161416785 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.157905941 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.158508307 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.161338966 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.159000091 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.16137036 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.158930985 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.158524545 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.161865625 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.163145927 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.15905091 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.162071685 seconds)
  done (took 19.643292194 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.16136748 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.158843311 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.158819625 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.159993935 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.160000303 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.160172614 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.160421829 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.159253657 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.159001411 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.15911162 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.159920125 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.159592081 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.159203973 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.159525289 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.160153116 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.159439055 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.160260452 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.160036977 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.165024685 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.159259489 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.160904436 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.160141583 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.161447138 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.161782264 seconds)
  done (took 28.926009625 seconds)
done (took 62.523577183 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.727701777 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.495134694 seconds)
  done (took 6.304190955 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.221336053 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.224529206 seconds)
  done (took 3.530706594 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.163092538 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.162385562 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.162394012 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.163479592 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.16275728 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.163133487 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.164068395 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.163545569 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.163097187 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.163289688 seconds)
  done (took 12.713085242 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.163613397 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.162887357 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.160709879 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.163896786 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.163030761 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.160577588 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.162462224 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.162745393 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.163753855 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.161183114 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.164419726 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.160806145 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.164019803 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.161157192 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.16349068 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.161036023 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.162266958 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.16208512 seconds)
  done (took 22.00652159 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.164453114 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.184768112 seconds)
  done (took 3.432020816 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.291691527 seconds)
    (2/7) benchmarking "second"...
    done (took 1.204106126 seconds)
    (3/7) benchmarking "month"...
    done (took 1.272161147 seconds)
    (4/7) benchmarking "year"...
    done (took 1.259894987 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.204018431 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.182991092 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.203472734 seconds)
  done (took 9.701872596 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.165986685 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.33646254 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.436625375 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.74593766 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.165076841 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.169383956 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.052542442 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.169058073 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.172333062 seconds)
  done (took 13.496999771 seconds)
done (took 72.267896717 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.119886248 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.172637826 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.232799411 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.179338365 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.179476157 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.45772067 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.187012363 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.281137795 seconds)
done (took 36.895842376 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.16386465 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.15064647 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.779981637 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.144301655 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.165670419 seconds)
  done (took 18.325836883 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.098855549 seconds)
    (2/2) benchmarking "read"...
    done (took 1.490409878 seconds)
  done (took 4.667201348 seconds)
done (took 30.242770795 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155183052 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.154691149 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.152052737 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.152032373 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.155494397 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.153418652 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.15301487 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.153500711 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.151726457 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.151831407 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.152855953 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150964325 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148880239 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.148153224 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152158341 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.149116355 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.146918345 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147242104 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.147740579 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.149951861 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.146860233 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.150216279 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.14684852 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.14731898 seconds)
  done (took 28.692305261 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.15074536 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.149134948 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.150935117 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.151625117 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.148412339 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.151037851 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.150922589 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.148700243 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.151010717 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.150435173 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.148452737 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.148805351 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.151168896 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.148340456 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15070031 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.148573714 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.151244551 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.148489487 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152045104 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.149738521 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.152393957 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149206285 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.148744439 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.151683775 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.149763394 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.148855945 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.152214483 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.1500306 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.151989582 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.150947011 seconds)
  done (took 35.575812787 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.156370348 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.157731485 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.152413935 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.152856209 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.152662181 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.153104275 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.152317236 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.152856083 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.152853808 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.152077511 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.15210042 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.152481774 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.152366925 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.152799747 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.153237819 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.15326532 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.153294126 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.152376248 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.152227164 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.153609009 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.152837799 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.152753119 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.152431799 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.154186309 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.153755204 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.152577488 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.152785689 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.153109112 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.153757534 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.153451834 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.15368273 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.15307494 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.153800947 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.153793745 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.154512467 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.153110373 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.158448376 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.159839999 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.154055458 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.154465995 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.154664794 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.155004102 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.153683828 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.154281547 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.154922539 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.155105525 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.154039654 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.154691408 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.154651084 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.154293288 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.154619614 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.15514639 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.155569082 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.154774799 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.155748205 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.155092718 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.155362564 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.156032047 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.155153502 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.154990561 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.155091807 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.154813767 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.155155228 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.155389582 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.155484486 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.154880792 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.155359093 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.157372978 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.156517427 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.155962119 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.156038838 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.155838927 seconds)
  done (took 84.181939942 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.156051999 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.154212154 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.152979389 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.153326112 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154138145 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.156208161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.154327613 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156997775 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.154286781 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.156385303 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.156370062 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.155786629 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155203451 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.157190349 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157683501 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.154663741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.157808262 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.154278957 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.15784649 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.15791839 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.15698847 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.154556349 seconds)
  done (took 26.499364358 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.157477549 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.16053491 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.157887897 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.15912479 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.156220712 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.158245834 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.157811408 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.159389298 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1585554 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.154642046 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155181938 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.15903738 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.155902501 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.154737929 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.155558216 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.156755418 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159311869 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.156776268 seconds)
  done (took 21.91038314 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.156327741 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.156053469 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.157975631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.156098638 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.157068785 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.159762119 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.156421541 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.1583857 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.159675703 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.156157607 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.158622915 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158419022 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.15889875 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155796697 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159986919 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.156973278 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.158963307 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156896253 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.158834761 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.156930186 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.156264239 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.159870068 seconds)
  done (took 26.547515425 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159845361 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.160913134 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.157116936 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.157892428 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.157139269 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.159393743 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.159877172 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.157085582 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.160690605 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.160544568 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.157820136 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.160017475 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.158096693 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.159004679 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.158333448 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.158297901 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.160196595 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.159039673 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.160926138 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.158086849 seconds)
  done (took 24.258411909 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.161994071 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.162039601 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.161891263 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.161787119 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.162438127 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.161605158 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.162490971 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.162339207 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.16259362 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.163029348 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.16203833 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.16245078 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.163141805 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.162748456 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.163950553 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.163319986 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.162545798 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.162758606 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.1635674 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.164247153 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.163297374 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.163833603 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.163548202 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.163400896 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.163228699 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.164054138 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.162821969 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.163194044 seconds)
  done (took 33.639678827 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.163453229 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.162878657 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.160326714 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.161126685 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.160924201 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.159679056 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.160949685 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.16117347 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.163323795 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.160662796 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.163416092 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.163581387 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.163767502 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.162739522 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.162742289 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.164124616 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163812845 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.160761516 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161578371 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161360794 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.164012891 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.164554333 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.163973294 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.161409636 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160548666 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.164507168 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.161784845 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.161859426 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.164732086 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.161391577 seconds)
  done (took 35.953045269 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.182839392 seconds)
    (2/2) benchmarking "in"...
    done (took 1.182883803 seconds)
  done (took 3.448249913 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.16246778 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.164819552 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.164221284 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.163185893 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.163741064 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.165164344 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.165662258 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.161568347 seconds)
  done (took 10.392633293 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.166192691 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.165953642 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.166330333 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.166872499 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.167491281 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.166373072 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.174864463 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.183969262 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.166931632 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.166932769 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.172348353 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.171663016 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.168277651 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.166630694 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.166080391 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.169156101 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.166595291 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.167778535 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.168525575 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.168382772 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168201147 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.169970104 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.170077848 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.165585229 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.169292506 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.178127052 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.188441279 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.168574749 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.167418873 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.171179022 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.168090763 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.164990513 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.169017765 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.169077715 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.168703743 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.16888709 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17840689 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.188011498 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.175529065 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.185755501 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.169331703 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.166027427 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.169045737 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.169756884 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.170462476 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.170891027 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.169481317 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.166749824 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.168513233 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.172164318 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.173015101 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.167922127 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.167394401 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.171853157 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.171098315 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176551273 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.187188407 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.172673065 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.176857184 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.179156233 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.198520253 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.191143123 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.172085485 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.170165103 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178869782 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.188354113 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.178191174 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.184770704 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.16796839 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.170758927 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.178167668 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.198112059 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.194356619 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.171310778 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.172136927 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.17158992 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.170692106 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.17137162 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.178952325 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.190724865 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.171679312 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.172678001 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.181183575 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.189799085 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.171074516 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.172148753 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.173266706 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.172438281 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.172190263 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.181751204 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.18888656 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.172901006 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.170957961 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.172525432 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.172544643 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.172174078 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.171976067 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.173764879 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.169690512 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.172641827 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.173490448 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.175484191 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.179599646 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.174506371 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.17375467 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.179705679 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.18981292 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.174284624 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.179566022 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.189952893 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.173734386 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.174166372 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.177732419 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.171026071 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.176891494 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.179482768 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.173666865 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.174729586 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.173844664 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.174272884 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.182389732 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.194837028 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.174958037 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.174176081 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.178536901 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.183812004 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.175413322 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.176682895 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.174338121 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.172580635 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.171924794 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.175319771 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.17493339 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.175440687 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.174397908 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175005973 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.172880319 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.175214761 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.175746291 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.1760873 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.175778305 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.174490937 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.17586323 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.177193769 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.176095623 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.1767396 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.181683577 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.191835886 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.175384866 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.175618498 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.172758843 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.176518925 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.176538661 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.175998523 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.174971246 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.176397945 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.175536595 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.17600017 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.176039037 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.176289188 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.176156754 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.176414373 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.178940717 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.177328373 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.179140669 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.176012571 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.174053809 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.176883616 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.176928092 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.176111684 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.176882825 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.175779453 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.180025384 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.182651587 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.177611902 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.177975503 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.179689427 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.177060979 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.178460944 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.178133167 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.180049668 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.182530441 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.177049526 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.184735119 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.194580597 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.178942727 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.178787641 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.177318883 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.177839747 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.178358479 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.180668466 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.184238896 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.189835837 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.201259006 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.179077451 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.181173871 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.179157267 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.18200711 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.181921942 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.178934339 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.180285455 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.179400054 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179052385 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179160957 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.180252653 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.179941914 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.179691486 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.179988739 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.178816556 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.180517012 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18041377 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.17886132 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.18077335 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.17679192 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.180213463 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.180015555 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.180426552 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.17685931 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.1775466 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.17925376 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.179680632 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.180131144 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.186477923 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.194692824 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.18144872 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.181274669 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.180430632 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.17847346 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.181129524 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.181296227 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.179854531 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.186966835 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.198268458 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.180628754 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187840131 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.198364425 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.179772137 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.182702586 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.181321611 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.178246357 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.183134851 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.187106828 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.181160501 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.182681622 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.181122041 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.181081822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181619049 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.187356251 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.195993961 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.181356452 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.182061394 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.183570083 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.179652688 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.182634785 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.182738772 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.181958412 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182634979 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182871534 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.182142556 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.183517958 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.182618984 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.183198787 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.182805616 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184789227 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.189571624 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.187029449 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.198527871 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.184596725 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.184325364 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.186052005 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.182205719 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.184083231 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.183300927 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.19439719 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.207122751 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.188924532 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.201051503 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.183625109 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.189371349 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.201384083 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.185418893 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.183790397 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.184735313 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.183345737 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.183781015 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.181458992 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.184999461 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.183084991 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.185536078 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.185629706 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.187432413 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.184666861 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.183609589 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.185466369 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.18631682 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.185543378 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.183818824 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.18534785 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.186294667 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186136466 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.184811227 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.184751749 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.192302555 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.202928599 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.186573153 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.185682333 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.185635916 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.184161264 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.185049931 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.1858141 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.188828906 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.191936455 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.187717432 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.191435356 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.18648264 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.194366973 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.204485554 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.189093321 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.192412289 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.183049778 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.185696235 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.186785731 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.186018787 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.193550201 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.204799592 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.187574915 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.189899415 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186985234 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.188351738 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.186807002 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.186753478 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188418255 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.187837683 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.196102966 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.207479422 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.190082871 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.188641299 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.185002328 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.187338791 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.187586852 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.187368436 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.190343625 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.188457052 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.18886972 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.188068725 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.187752516 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.188376695 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.188068493 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.187879261 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.185207299 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.188505653 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.195869223 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.207577745 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.191066948 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.188622868 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.195544769 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.205411668 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19567594 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.207550419 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.188690347 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.190548635 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.190764126 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.189840466 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.188443568 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.189617801 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.189574932 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.190653912 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.192281147 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.1886887 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.191321296 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.18956256 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.189901003 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.189659219 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.199267726 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.209519763 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.191501468 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.193818183 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.186578603 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.191417288 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.193737097 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.190850904 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.189925965 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.192664719 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.199962801 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.196794422 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.192152766 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.190886347 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.191081705 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.190900795 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.190203907 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.191332372 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.191277601 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.191150224 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.191253908 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.19155256 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.194117225 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.191794278 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.191730767 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.192937216 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.191846855 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.201048703 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.208207872 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.192279821 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.191548916 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.192821828 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.191518622 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.191767785 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.192510916 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192659369 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.191822065 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.193080562 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197466544 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.196860494 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.193883586 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.191539708 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.192320502 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.192268854 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.192714051 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.193110598 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.193947072 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.19440345 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.194181898 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.193114574 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.19389236 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.191400924 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.191941236 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.192264241 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.193401906 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.195643989 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.198754149 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.193215711 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.189672981 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.19322964 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.193197662 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.191621824 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.194122656 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.200351885 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.21406923 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.201459292 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.199706168 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.197076535 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.194299883 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196155885 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.200468008 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.192975491 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.195309389 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.196263609 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.195487666 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.194433112 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.197483395 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.1953804 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.200675229 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.213146468 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.194225621 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.203636508 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.215354124 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.195013299 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.196066003 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.197916335 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.195082143 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.192499941 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.196071362 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.194446227 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202241989 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.213343235 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.196317076 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197856078 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.195014904 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.196563337 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.199181908 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.195892322 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.197446373 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.193189303 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.196629403 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196150455 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.197242121 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.193784147 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.194836374 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.195036076 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.199159459 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.201678717 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.193565937 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.198095703 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.196632324 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.196320275 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.197606018 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197459733 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.193755247 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.193816144 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.196041885 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196187117 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.19716241 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.199167825 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.196374863 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.198000463 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.197252627 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19895935 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.199517087 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.205185209 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.20277893 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.194480023 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.19633204 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.197073698 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.19938821 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.198740795 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.198034219 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.198769517 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.198653251 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.19847038 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.198012617 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.197499081 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.20057521 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.212452938 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.217361514 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.198308768 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.19874964 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.201317925 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.199394642 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.195545883 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.199454787 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.199748531 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.202474568 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.205625833 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.200087824 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204952321 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216052742 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.199531514 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.203295765 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.201902872 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.205968274 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.201454078 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.200826486 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.200030138 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.203725019 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.21403909 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.218462675 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.209098775 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22715138 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.218004896 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.201167962 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.200580393 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.1995714 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.201613284 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.202148166 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.201384525 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.200991318 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201247948 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.20191877 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.202234367 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.205050657 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.202112368 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.201035327 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.201277101 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.200392034 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.201475055 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.198977465 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.201288726 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.201464972 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.201550438 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.202855792 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.201986065 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.200668938 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.212778658 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.224471052 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.201721578 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.202442713 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.199311063 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.203918671 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.204403133 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.210117507 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.207574066 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.202347982 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.202591437 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.203026921 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.202976101 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.202144127 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.202031386 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.201374513 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.202344806 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.199854999 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.214016064 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226513251 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.207709326 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.220418696 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.204952333 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.205117254 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.203673204 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.203728063 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204061367 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.20359733 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.204963955 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.207234704 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.202787579 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.202946366 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.206128285 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.209313167 seconds)
  done (took 709.036317578 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.201475386 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200685062 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.200577247 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.201312257 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200556501 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201282955 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.201908352 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.201396821 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.201811376 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.201312319 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.200333557 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201573417 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.200661991 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202085417 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203651391 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.202172986 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201452531 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.201825595 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.201752768 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203304277 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.202827882 seconds)
  done (took 26.352330644 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.204137951 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.202056993 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.202006526 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.204818569 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202639855 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.204403106 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.203872064 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205094217 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.206044236 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202630755 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.205209718 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205600439 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.203316364 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.202893604 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203511219 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206065707 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.205934486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20388094 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.206091473 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.203091915 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206322149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.203484435 seconds)
  done (took 27.613071247 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.206872252 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.20685407 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.205761293 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.20385174 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.206667624 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.203335208 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.207825533 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.20655771 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.206687215 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.205546799 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.20576312 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.207603988 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.213816367 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.210148636 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.207978951 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.207449704 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.350946456 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.207954253 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.208011079 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.207997589 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.204845661 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.212691545 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.223960466 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.204688101 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.207224866 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.206757692 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.207726513 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.207475418 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.208600913 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.208304962 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.211468004 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.209466985 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.20804 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.209384569 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.206949165 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.209092701 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.211923647 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.209627314 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.206432428 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.207557871 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.21772721 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.22544991 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.20954911 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.214756068 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.225845141 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.209183048 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.211345192 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.215676759 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.2058721 seconds)
  done (took 60.525865813 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.209727154 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.209607992 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.206570553 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.209378653 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.20989216 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.208746925 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.209380116 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.209263069 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.206368679 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.207215232 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.209872151 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.208994869 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.207354899 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.208890563 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.21003665 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.207307102 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.207930694 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.20682043 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.206846244 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.207180726 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.207609444 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.210971406 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.210014073 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.207760069 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.210484854 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.20801213 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.20842103 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.210671124 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.20830315 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.208694469 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.211341634 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.2112458 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.211469095 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.208835081 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.209115643 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.211231769 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.211792724 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.208847923 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.212472162 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.208928127 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.212122012 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.211067381 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.211335812 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.211377812 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.208750038 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.209565884 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.208941994 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.20893762 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.20963968 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.211231525 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.212163161 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.209964674 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.211892137 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.210582874 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.212341323 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.212038339 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.209453996 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.209551142 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.212123183 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.210933243 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.209933134 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.212771781 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.211058498 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.21296415 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.212893318 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.209952234 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.210949452 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.213161186 seconds)
  done (took 83.395910462 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213202414 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.213070025 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213225174 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213760141 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21437862 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.213242419 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.213932535 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.214465402 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.213304477 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.214058721 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21397778 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.214420145 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.214482892 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.213580674 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.21438881 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.21451135 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215068131 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215759707 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215654456 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215491609 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.214671396 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.214510789 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.214408534 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.214849219 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.215507931 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.214937741 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.215260043 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.215077651 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215231515 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2144804 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.215324183 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.215903503 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.215576611 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216021925 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.216539711 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.215686348 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.216108989 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215431562 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.215333543 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.215737563 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.217011196 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215531584 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.216194771 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.217095258 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21591886 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.216222683 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.216149055 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.215835973 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.216249936 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.216122858 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.21614385 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216313619 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21643799 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.216562448 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.216454118 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.215766984 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217288419 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216459911 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217518454 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.216722225 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216728375 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.217401138 seconds)
  done (took 76.481969675 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217028785 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216682523 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.215673292 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.214211911 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216754949 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215550563 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218228959 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.217153088 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216703647 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.217949552 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218348288 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215677317 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21662372 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21837178 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215993618 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216533181 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216845908 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216832213 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218776946 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215704035 seconds)
  done (took 25.466705612 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.21499919 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.218520931 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.21565582 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215676623 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.21784705 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.215398971 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.218407653 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218540314 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216501438 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21855073 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219049918 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218631265 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215785756 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217592659 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.219555642 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.215620982 seconds)
  done (took 20.608121124 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.216654841 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.220250538 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.218908758 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.219578586 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.217541213 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.217110001 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.221055282 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.21746623 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.217281479 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.22055703 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.219636833 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.219990129 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.219630859 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.219746759 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.218610981 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.220290175 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.217896049 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.218100712 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.220779662 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.22077883 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.218164134 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.218259708 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.220199787 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.220880673 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.217526805 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.217655911 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.218713664 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.218140059 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.217890251 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.219756785 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.217694917 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.21821097 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.21820106 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.218301375 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.220319884 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.217971114 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.220921228 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.22199805 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.222030629 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.221272048 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.22151339 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.218128227 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.221338001 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.221620203 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.218878072 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.221689564 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.218955322 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.219735889 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.219160883 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.220068128 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.22197803 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.222145308 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.222178975 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.223090312 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.222615553 seconds)
  done (took 68.212965564 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22352715 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222319455 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220466345 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223082307 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.223246555 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.220371912 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223099868 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.221699264 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22053707 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.222253305 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220930832 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.223106723 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221376214 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223666936 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221342287 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223170875 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220433364 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.221684281 seconds)
  done (took 23.13203604 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222505976 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.220896052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.22246011 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221092369 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.2209477 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224309824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221463502 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.223131425 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223944209 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.222484255 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221265859 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.224887366 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224698063 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.224902963 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222994106 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222462077 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.225376959 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224259399 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.222467215 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221747635 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225462272 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225864952 seconds)
  done (took 28.04675201 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.224761067 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.223490641 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.224290895 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.240421131 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.240129177 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.244801778 seconds)
  done (took 8.535505948 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230327514 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22481543 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.221567176 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225956552 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225148286 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223011394 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222845153 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223714114 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226459002 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224195312 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223209544 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226220617 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226294276 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223804022 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225854089 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22685358 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223920789 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222962007 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223849191 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225828645 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22358552 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226246953 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222638588 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224308343 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224353052 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224446615 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226022024 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225007776 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224550993 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226381528 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22674787 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224823609 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227212875 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224763615 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227301807 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227336981 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225896679 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226777196 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228222611 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224686332 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.227648932 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227738852 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228064811 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224938103 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227927823 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225284686 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225312161 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225401847 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225581586 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22765037 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229534336 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22560986 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228151327 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228450459 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228924257 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228913407 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227214691 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227545594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228831875 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226978838 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227459679 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228565942 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226334904 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227423792 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229708098 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227241555 seconds)
  done (took 82.080234598 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226975886 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226760148 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228103464 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227726831 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227783891 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227153167 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228668949 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226636653 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227322799 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227527839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230334924 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227122211 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229085916 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228261481 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227718889 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228693016 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227675557 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228930957 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227117024 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230819744 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228225881 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228772079 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227086305 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227799142 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228295261 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230536613 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229468741 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228504498 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228515104 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228234548 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228668936 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228929636 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228230754 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.228318001 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228801365 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228759951 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227996687 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228813594 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228534072 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231578082 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228902119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231721264 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229132879 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229324607 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229212941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228999632 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229416289 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229909812 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229940478 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229432677 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22960726 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230225619 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229361265 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229970817 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229083067 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229429468 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230116139 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231258892 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23016288 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233278086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230388955 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230232563 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233362902 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231301927 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231374011 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230923452 seconds)
  done (took 82.264586364 seconds)
done (took 1653.925413739 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.395272833 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.34881937 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.230847764 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.225632125 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.231625396 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.249920843 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.244450135 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.231517857 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.230983827 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.231397328 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.231117833 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.4186799 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.287313893 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.23193176 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.231651071 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.326297138 seconds)
  done (took 41.49436239 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.254458754 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.255086733 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.357531592 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.267787557 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.273274278 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.42612162 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.30322829 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.25384425 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.407355468 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.290407485 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.682002189 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.275848602 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.2536808 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.274942177 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.269783488 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.425855837 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.477632486 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.688712263 seconds)
  done (took 28.583427901 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.662416859 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.280077662 seconds)
  done (took 9.105492992 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.271086435 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.253359496 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.25506906 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.252643744 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.253946597 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.245521153 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.253201501 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.245403609 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.63806053 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.367906293 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.271068019 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.262826994 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.271403927 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.255719708 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.25079573 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.289971385 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.394108804 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.252651634 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.249465697 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.25892877 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.253631809 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.35125563 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.294014943 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.251914496 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.369630411 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.641283426 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.256703051 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.260446702 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.375287424 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.252654761 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.254522721 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.254693718 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.256581071 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.114511567 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.732530641 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.261663702 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.277527443 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.263351576 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.252401776 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.396486365 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.256650177 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.26141691 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.248432076 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.733014316 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.381630626 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.360080489 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.347183668 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.271261951 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.257102826 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.317334057 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.25774735 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.25821642 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.296099127 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.998677124 seconds)
  done (took 106.576898553 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.293998434 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.64630283 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.416836135 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.265276171 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.013314198 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.962667645 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.263736192 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.511556808 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.330845602 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.251704312 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.528402584 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.736213242 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.277115548 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.332631676 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.869647301 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.324451805 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.249440943 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.051875581 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.263015027 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.251606376 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729117587 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.256921343 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.249874479 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.430234853 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.286258163 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.679102757 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.516138507 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.695232933 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.268801072 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.25210494 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.699841946 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.276004083 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.305153671 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.251543267 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.500376903 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.579197786 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.571878108 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.267608929 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.253232285 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.255338424 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.266668963 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.674807981 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.581278338 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.266733028 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.267091119 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.679384589 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.267686164 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.260658852 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.256332482 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.456177168 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.937802112 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.253284559 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.519733843 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.253004083 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.530525326 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.257290203 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.330076997 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.70949915 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.267621548 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.333921386 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.287349108 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.252741519 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.260255074 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.256178138 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.256231792 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.573763237 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.826954132 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.259601787 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.572052395 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.711392085 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.27214957 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.756099077 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.165591577 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.278044595 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.35770157 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.254042052 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.88464665 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7159344 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.301310766 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.253584523 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.560659666 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.26987881 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.519701857 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.269134574 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.269299668 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.754969804 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.266184449 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.255594144 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.255111982 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.255878421 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.03669822 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.254987241 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.524357115 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.306979645 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.255627109 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.25483524 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.281687775 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.265294571 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.256372632 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.255252098 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.756893668 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.270948358 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.218800675 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.272738913 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.256379227 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.255592596 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.258628969 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.254634738 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.47796947 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.659114948 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.274560541 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.257141391 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.256222697 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.261967874 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.423914217 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.259004727 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.537487065 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.27089146 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.261701817 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.261636475 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.996500182 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.279467774 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.257009051 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.263425348 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.126864393 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.460517467 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.27396536 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.257014827 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.256515416 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.272918394 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.413659803 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.278496722 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.327852514 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.261508689 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.934130351 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.28319477 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.285479871 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.598570352 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.264712148 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.027854523 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.276869069 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.258538191 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.544824355 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.510424295 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.748233027 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.269318144 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.259408471 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93470309 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.295175795 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.394537356 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.277962075 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.285359231 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.454483444 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.394243138 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.259223556 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.854283039 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.258895955 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474648466 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.259787706 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.556817733 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.73066908 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.273982918 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.268313989 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945516946 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.940765175 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.058413239 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.262688343 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.521139083 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.229519109 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.737990092 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.259831474 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.260983013 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.838880087 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.262480826 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.267481578 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.2599198 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.26161464 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.543888952 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.430229072 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.80621955 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.265809337 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.68522373 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.319057631 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.261138375 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.274439001 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.264342681 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.606740746 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.281088987 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.26700993 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.303815346 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.262651932 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.265866685 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.705143681 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.204078852 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.266976081 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.411273789 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869936532 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.277689134 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.262544965 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.823922966 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.626672432 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787144399 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.341818948 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.54372056 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.278217646 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.297960017 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.95770712 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.318843386 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.710897871 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.277857428 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.279102317 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.84471705 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.276203857 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.620621786 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.262804778 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.274058244 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777164114 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.277433621 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.267079536 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.442034673 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.282573125 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528706318 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.263493013 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.318475325 seconds)
  done (took 1093.900955322 seconds)
done (took 1280.806293868 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.26270544 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.263681893 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.248394034 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.268755765 seconds)
  done (took 26.223854408 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.274331971 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.269952707 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.271663986 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.269172608 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.272494858 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.270011907 seconds)
  done (took 8.808657901 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.312988947 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.26382888 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.27068566 seconds)
  done (took 19.029705923 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.460846823 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.463776872 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.576635012 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.28545707 seconds)
  done (took 9.969157911 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.272881028 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.271779029 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.272059382 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.273921537 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.277037482 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.277252977 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.274349897 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.273932682 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.277626301 seconds)
  done (took 12.651602927 seconds)
done (took 77.864799173 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.837426691 seconds)
    (2/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.439692943 seconds)
    (3/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.515207009 seconds)
    (4/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.365960819 seconds)
    (5/286) benchmarking ("sort", Int8, true)...
    done (took 6.265867476 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.281875172 seconds)
    (7/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.445397398 seconds)
    (8/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.014647595 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.511178457 seconds)
    (10/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.092192771 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.322816218 seconds)
    (12/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.207414361 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.307501126 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.093086469 seconds)
    (15/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.180929235 seconds)
    (16/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.245397348 seconds)
    (17/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.439318174 seconds)
    (18/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.829549014 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.094535376 seconds)
    (20/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.255449488 seconds)
    (21/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.354156008 seconds)
    (22/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.476506895 seconds)
    (23/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.330700949 seconds)
    (24/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.35169155 seconds)
    (25/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.736529558 seconds)
    (26/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.245739135 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 6.287915497 seconds)
    (28/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.282785933 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.440161504 seconds)
    (30/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.245986995 seconds)
    (31/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.312144037 seconds)
    (32/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.572470376 seconds)
    (33/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.372388989 seconds)
    (34/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.291162645 seconds)
    (35/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.40878975 seconds)
    (36/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.065202913 seconds)
    (37/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.472969591 seconds)
    (38/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.266955081 seconds)
    (39/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.604356138 seconds)
    (40/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.331822703 seconds)
    (41/286) benchmarking ("sort", Float32, false)...
    done (took 5.232372108 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.394016688 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.530278673 seconds)
    (44/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.440818842 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.834688453 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.602891343 seconds)
    (47/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.255111492 seconds)
    (48/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.380722919 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.3267493 seconds)
    (50/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.247172371 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.304163113 seconds)
    (52/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.64236202 seconds)
    (53/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.653543808 seconds)
    (54/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.399439242 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.142667857 seconds)
    (56/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.248405564 seconds)
    (57/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.440267181 seconds)
    (58/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.299266026 seconds)
    (59/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.284446318 seconds)
    (60/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.065074033 seconds)
    (61/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.247184683 seconds)
    (62/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.27729742 seconds)
    (63/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.88040594 seconds)
    (64/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.252973861 seconds)
    (65/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.299238612 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.488620372 seconds)
    (67/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.012498332 seconds)
    (68/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.371959516 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.284826693 seconds)
    (70/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.297595049 seconds)
    (71/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.408262031 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 5.441948151 seconds)
    (73/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.301194267 seconds)
    (74/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.512241873 seconds)
    (75/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.249015493 seconds)
    (76/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.378558859 seconds)
    (77/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.756426692 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.277117838 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.256654906 seconds)
    (80/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.31937203 seconds)
    (81/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.285546676 seconds)
    (82/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.271832039 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.932751642 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.770531115 seconds)
    (85/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.264317462 seconds)
    (86/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.304846826 seconds)
    (87/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.250220303 seconds)
    (88/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.297926441 seconds)
    (89/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.842797558 seconds)
    (90/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.837683742 seconds)
    (91/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.490116508 seconds)
    (92/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.335263274 seconds)
    (93/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.353975088 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.260724347 seconds)
    (95/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.290949185 seconds)
    (96/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.257704385 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.561447376 seconds)
    (98/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.409909652 seconds)
    (99/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.117979325 seconds)
    (100/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.930155728 seconds)
    (101/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.299192867 seconds)
    (102/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.254212615 seconds)
    (103/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.250666442 seconds)
    (104/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.197964543 seconds)
    (105/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.736078559 seconds)
    (106/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.292147548 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 1.794617078 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.310447011 seconds)
    (109/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.251465632 seconds)
    (110/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.57086117 seconds)
    (111/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.257517881 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.985638854 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.557442326 seconds)
    (114/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.273793103 seconds)
    (115/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.257587705 seconds)
    (116/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.395941267 seconds)
    (117/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.236633994 seconds)
    (118/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.318119855 seconds)
    (119/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.251981672 seconds)
    (120/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.278244674 seconds)
    (121/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.969488323 seconds)
    (122/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.40464102 seconds)
    (123/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.005919522 seconds)
    (124/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.300650446 seconds)
    (125/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.365636868 seconds)
    (126/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.290616667 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.004738092 seconds)
    (128/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.299329582 seconds)
    (129/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.394114542 seconds)
    (130/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.253691634 seconds)
    (131/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.954748644 seconds)
    (132/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.296298447 seconds)
    (133/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.33188794 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.888214762 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.672566588 seconds)
    (136/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.64373215 seconds)
    (137/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.296992339 seconds)
    (138/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.698343236 seconds)
    (139/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.403241836 seconds)
    (140/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.964387172 seconds)
    (141/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.493947587 seconds)
    (142/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.836333244 seconds)
    (143/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.398819655 seconds)
    (144/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.060385515 seconds)
    (145/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.464574119 seconds)
    (146/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.253950905 seconds)
    (147/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.260363153 seconds)
    (148/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.619533223 seconds)
    (149/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.28494638 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.718245255 seconds)
    (151/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.274883728 seconds)
    (152/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.300562878 seconds)
    (153/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.325564837 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.678023301 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.160473424 seconds)
    (156/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.765186331 seconds)
    (157/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.358561935 seconds)
    (158/286) benchmarking ("sort", BigInt, true)...
    done (took 6.276484672 seconds)
    (159/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.318513013 seconds)
    (160/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.254672232 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.163652157 seconds)
    (162/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.293645467 seconds)
    (163/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.301876524 seconds)
    (164/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.699541205 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.317375508 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.34965695 seconds)
    (167/286) benchmarking ("sort", BigInt, false)...
    done (took 6.293342585 seconds)
    (168/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.338904091 seconds)
    (169/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.022586863 seconds)
    (170/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.107853802 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.297398496 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.140692864 seconds)
    (173/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.255630128 seconds)
    (174/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.586978706 seconds)
    (175/286) benchmarking ("sort", Int8, false)...
    done (took 4.303663061 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 5.29538925 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.348905494 seconds)
    (178/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.302841684 seconds)
    (179/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.476221697 seconds)
    (180/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.387477957 seconds)
    (181/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.278453227 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.613848361 seconds)
    (183/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.468196283 seconds)
    (184/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.297428475 seconds)
    (185/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.284683953 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.900694345 seconds)
    (187/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.302604653 seconds)
    (188/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.328792945 seconds)
    (189/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.295395161 seconds)
    (190/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.394951555 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.23590763 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.495182049 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.161324418 seconds)
    (194/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.257678598 seconds)
    (195/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.262999642 seconds)
    (196/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.256459026 seconds)
    (197/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.17049776 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.290141332 seconds)
    (199/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.263456302 seconds)
    (200/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.312447922 seconds)
    (201/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.271640652 seconds)
    (202/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.871614898 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.574362693 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.619406972 seconds)
    (205/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.519936344 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.31619204 seconds)
    (207/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.362403335 seconds)
    (208/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.256770524 seconds)
    (209/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.625123488 seconds)
    (210/286) benchmarking ("sort", Float64, false)...
    done (took 5.569734217 seconds)
    (211/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.716935182 seconds)
    (212/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.382562327 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.318706611 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.413008114 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.677345423 seconds)
    (216/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.63559661 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.105742681 seconds)
    (218/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.938338844 seconds)
    (219/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.27648122 seconds)
    (220/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.309471829 seconds)
    (221/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.069159694 seconds)
    (222/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.259017984 seconds)
    (223/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.266163584 seconds)
    (224/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.428501179 seconds)
    (225/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.380147574 seconds)
    (226/286) benchmarking ("sort", Float32, true)...
    done (took 6.279313262 seconds)
    (227/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.259418183 seconds)
    (228/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.426415908 seconds)
    (229/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.405893419 seconds)
    (230/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.994986076 seconds)
    (231/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.762544435 seconds)
    (232/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.979959333 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.713992472 seconds)
    (234/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.343925468 seconds)
    (235/286) benchmarking ("sort", Float64, true)...
    done (took 6.279811083 seconds)
    (236/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.622763721 seconds)
    (237/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.362409322 seconds)
    (238/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.325975578 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.629308788 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.297215585 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.488476097 seconds)
    (242/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.768729046 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.307471319 seconds)
    (244/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.629460141 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.268390342 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.25939569 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.729336168 seconds)
    (248/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.283195878 seconds)
    (249/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.267343023 seconds)
    (250/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.260937424 seconds)
    (251/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.259924706 seconds)
    (252/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.639512944 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.26945644 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.283523972 seconds)
    (255/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.529862252 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.576758651 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.297446273 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.676688573 seconds)
    (259/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.321488552 seconds)
    (260/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.998306737 seconds)
    (261/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.368508029 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.36469078 seconds)
    (263/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.458110478 seconds)
    (264/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.30410841 seconds)
    (265/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.40015091 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.364234991 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.392231711 seconds)
    (268/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.50828046 seconds)
    (269/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.265643471 seconds)
    (270/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.781480222 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.080887193 seconds)
    (272/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.007304556 seconds)
    (273/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.602615121 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.345718023 seconds)
    (275/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.310680607 seconds)
    (276/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.299251327 seconds)
    (277/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.122001286 seconds)
    (278/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.804668521 seconds)
    (279/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.39938396 seconds)
    (280/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.095819589 seconds)
    (281/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.310182381 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.308870057 seconds)
    (283/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.491355919 seconds)
    (284/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.277480483 seconds)
    (285/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.269726668 seconds)
    (286/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.074646775 seconds)
  done (took 916.946896724 seconds)
done (took 918.130388136 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.315668305 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311994215 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.2932199 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.315151583 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.405320483 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.319010306 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.305842642 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.296651195 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.342349278 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.344100889 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.292626989 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.317173359 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.294652054 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.293867283 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.293879477 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309316528 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.292879598 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.29456611 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.312097398 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.303902461 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.31082468 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.292656957 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.343706174 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.318000854 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.299787299 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.297633163 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.297957249 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.315341213 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.407141237 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.299001436 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.297911877 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.306884594 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.292194795 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.295121393 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.290636607 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.315649249 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.306776977 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.305191042 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.299278164 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.326482327 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.677275675 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.311281152 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.297588822 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.297940328 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.296683572 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.301658742 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.2981449 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.301768787 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310821872 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312162653 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.659456343 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.326942407 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.29983187 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.29805497 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.308414546 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.297374637 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.302135563 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314602501 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.316859146 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.315520987 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.275578349 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.302289882 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.300524718 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.314881648 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.304757607 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.695393581 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.308985392 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.302909447 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.672417347 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.320312751 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.695455769 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.32174073 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.300235466 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.311849853 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.33004948 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.289428473 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.293974064 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.297364768 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.30618437 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.297005514 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.308592818 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312746793 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.302721449 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.298888786 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.312443304 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.323116438 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.308906283 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.299706645 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.308593387 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.318902991 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.30705081 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.310761144 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.302599926 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.295373285 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.309793289 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.303715823 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.302978567 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.301541359 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.306326748 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.311224141 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.678499058 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338721587 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.297523256 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.297284994 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.29921828 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.313792388 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.682679391 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.318878929 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.322862257 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.349443587 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.301869718 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.27639309 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.304270547 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.320832901 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.310078821 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.305310622 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.296969679 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.279615754 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.686078767 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.334208283 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.30259707 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.29903867 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319256043 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.303715895 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.297918736 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.297474903 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.302809555 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315975406 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.421843574 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.313073207 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.333505757 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.300463753 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.304967028 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.330326159 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.319326259 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.33351341 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.305051913 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.318991511 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.318922213 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.299610816 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.312892986 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.313835826 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.303874011 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.307726721 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.296891303 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.330555207 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316355516 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316166951 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.323495334 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.423306353 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.30057442 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.282420515 seconds)
done (took 219.391197989 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.364985043 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.293614146 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.387087725 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.299184345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.403010205 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.403725315 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.297184974 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.298325561 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.298553878 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.678402675 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.297846993 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.298849812 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.300387624 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.298289822 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.386724265 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.300942225 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.298541588 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.641352639 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.3013398 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.372067758 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.295516871 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.298135481 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.300592532 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.682598802 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.301447784 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.296689309 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.373291507 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.301219881 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.646332553 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.29938417 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.301009324 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.648055688 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.391877402 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.318207866 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.310723411 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.308922324 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.405858792 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.31933291 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.386626885 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.386672024 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.389519878 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.340022325 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.297017756 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.300560584 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.303787847 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.30254063 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.300669969 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.328267107 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.301102703 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.300332413 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.641390049 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.311040193 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.309790353 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.300685144 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.301109849 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.323210345 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.300781073 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.304949256 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.393178681 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.304796246 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.367468922 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.68363127 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.682240639 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.303256265 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.304429704 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.302000993 seconds)
  done (took 146.299667321 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.369478298 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.375620557 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.412775766 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.321211982 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.354511166 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.416058777 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.321668456 seconds)
  done (took 10.782164073 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.310708752 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.304885079 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354491151 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.354772951 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.304808583 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.483435164 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.305917374 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.317446108 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.302354698 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.356581129 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.306107862 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.305655205 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.311536747 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.299392643 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.35515539 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.316271475 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.420119721 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.305970068 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.305863256 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.456543924 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.303602948 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.311665483 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.358075531 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.317416566 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.30740417 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.311730399 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.126695675 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.306423614 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305224747 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.305962114 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.303193143 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.381002423 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.307638075 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.303679155 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.303158479 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420442281 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.306074478 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.30405505 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.306268881 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.301744767 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.307164654 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.307368215 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.307351884 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.304228131 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.307386217 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.330658253 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.30685074 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.307737627 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.306702931 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.308587652 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.357057508 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.309129773 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.305171343 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.304613031 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.361782862 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.315319335 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.30954188 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.306084228 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.309263221 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.305722862 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.460408891 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355781104 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.307332988 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356137595 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.308612692 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.309109055 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.308556553 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.309319396 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361117447 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.30911883 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357459229 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.306220383 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.48695379 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.332570971 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.310208351 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.310889858 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.311237749 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.30880014 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.302443977 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.315568473 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.30573744 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.309186337 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.315064172 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.307330358 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.306691036 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.474723477 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414068805 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.306981843 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.320666289 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.316349235 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.307340452 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.361717769 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.309390076 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.30798744 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364604511 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.42440928 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.361332096 seconds)
  done (took 151.004158613 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.315761305 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.31847888 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.312377433 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.334053984 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.328244044 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.310392728 seconds)
  done (took 9.134976701 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.313076304 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.311490222 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.310313737 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.3107947 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.310610964 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.312054684 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.311474645 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.312907179 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.3148962 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.311489109 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.31205365 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.314937034 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.313369367 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.312200086 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.312744599 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.311610423 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.311452158 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.309965915 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.312927036 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311857215 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.417945746 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.31261281 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.312868629 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.314724373 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.315397205 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.312146326 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.31992727 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.313329843 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.312310057 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.317547551 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.331702742 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.314199934 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.313791502 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.317847859 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.316510818 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.315206969 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316129791 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.315197443 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.311639114 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.315170942 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.315798566 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.31444507 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.313604665 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.315138104 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.315950266 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.318783977 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.319353227 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.322229425 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.313616655 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.316092745 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.315883495 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.31430922 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.313971765 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.317288891 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.316382964 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333875585 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.319470287 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.31535686 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.314799029 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.315072415 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.314995623 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.314113527 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.316848452 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.317897257 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.312795992 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.317903054 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.31656174 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.318164514 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315798322 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.314956881 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.316747375 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.312694215 seconds)
  done (took 97.008976885 seconds)
done (took 415.437769486 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.612426104 seconds)
  done (took 7.83438792 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.404150481 seconds)
  done (took 7.628292538 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.219715239 seconds)
  done (took 21.445541187 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.318269771 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.312872439 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.346730856 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.310185825 seconds)
  done (took 26.51127825 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.510610814 seconds)
  done (took 7.733583377 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.317824679 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.319202274 seconds)
  done (took 13.861977101 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.689965463 seconds)
  done (took 7.9130129 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.738667939 seconds)
  done (took 7.96228846 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.315985944 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.332613744 seconds)
  done (took 14.130822251 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.29870893 seconds)
  done (took 7.521916014 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.221435415 seconds)
  done (took 11.445175477 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.31130246 seconds)
  done (took 7.536907763 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.337491824 seconds)
  done (took 7.561157379 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.111746713 seconds)
  done (took 9.335221652 seconds)
done (took 159.645076435 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.309366937 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.310529134 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.309830899 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.31008962 seconds)
  done (took 26.46285712 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.349626871 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.350423578 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.352983885 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.36337098 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.353678565 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.351394605 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.342913199 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.343789253 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.36166952 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.353827272 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.353010931 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.353938844 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.352149214 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.34276148 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.353530847 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.353292092 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.361768401 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.353104603 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.34327513 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.353909268 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.318908963 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.362585082 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.355223574 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.319125526 seconds)
  done (took 33.623880433 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.839783464 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.387830787 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.470916978 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.371301634 seconds)
  done (took 7.294101321 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.371160208 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.373401624 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.384112824 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.424958313 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.449782447 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.381157602 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.346113232 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.340155152 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.326142942 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.371833506 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.449075422 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.388073984 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.458771811 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.319045098 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.51801219 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.318376891 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.320299607 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.372385001 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.422929586 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.437136471 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.320576614 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.370548955 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.374583391 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.38796548 seconds)
  done (took 34.452225401 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.318788061 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.33694964 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.318980493 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.317475447 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.326636548 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.317925558 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.31906976 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.320578926 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.317918534 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.324964226 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.318086606 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.332009588 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.317671271 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.317947761 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.325501678 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.320042326 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.325121963 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.319012694 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.318419953 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.324619331 seconds)
  done (took 27.66469261 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.313143491 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.345021144 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.66587741 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.568730421 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.314993042 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.313371953 seconds)
  done (took 27.748108393 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.383861327 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.535826931 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.326871454 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.656442619 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.753009004 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.336764564 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.320937271 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.548455787 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.854169449 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.841791917 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.379146483 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.389103689 seconds)
  done (took 19.554276377 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.31817957 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.32230805 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.333675464 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.336737758 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.37010219 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.345779107 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.3267084 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.315905309 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.377909289 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.396168241 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.346806987 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.371715606 seconds)
  done (took 37.390631525 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403104086 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359284502 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.240918168 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370421476 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.054467969 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5276908 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390361236 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.031846582 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.338638683 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590098278 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32439694 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410841322 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.570745972 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315997319 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323368181 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.245296325 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566479851 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80474133 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326182534 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.196145018 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348790789 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.325492942 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.262429892 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.548168896 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552586858 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.297917362 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.577967311 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.093899223 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587067883 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33754886 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327809592 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319191202 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591274176 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.221836825 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412835834 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523719142 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34249032 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.955289771 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.298464477 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.207027487 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327830844 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328210385 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329159623 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319500128 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.253095948 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327539881 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.324101199 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.324614835 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.031325989 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320435341 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561407109 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422939828 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.324063012 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.889207963 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402374398 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.325596155 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.32281943 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409048996 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911331319 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.425107648 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329609714 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.261607586 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320597324 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203260473 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92641522 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.34968096 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.324358997 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324508633 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253755321 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.19351493 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345022571 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477789789 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.344858091 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970243438 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993260454 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.345865118 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.258230102 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847827381 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333572242 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.262783039 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548494055 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.105950052 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256048281 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.264713716 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.256238356 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995596775 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336792073 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.711761513 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341525594 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.04161978 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.548940576 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362636677 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344804924 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.544701021 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.199011687 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32195175 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.333019516 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456380354 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343491217 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.02574079 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27528537 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.325079284 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577232078 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.532522385 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325555023 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.255077751 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.106033688 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323368517 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.349002163 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.322689258 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53765904 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.909345364 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360742309 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444797599 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347227351 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.098478804 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037791051 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331464534 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.33315479 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.322927548 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590597759 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.041484431 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.221203827 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390558535 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325800126 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324267114 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.268146376 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180851257 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.22282048 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.513930272 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35021038 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.340741368 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.325104487 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272935855 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.322758248 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332170522 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.11022792 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547802598 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32640502 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621436321 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258463684 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470703484 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.332889573 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.547928228 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.48107177 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.352685029 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58344721 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32947076 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.345212406 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34302494 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34378898 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423868414 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347960781 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.324621313 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602828564 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.328923027 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.329858433 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.258783488 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.109943054 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332001993 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.331532487 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346644533 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887472329 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33878148 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332625951 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25587609 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.34121656 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394113556 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333140016 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53778913 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.500751587 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351443183 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.330904783 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.325238887 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57112103 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.336844698 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.219094021 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412569879 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.797472991 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89953436 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362899154 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.260637448 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.039802215 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.020101751 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328504427 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.517468284 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327754093 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537566567 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358889697 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333282663 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896311602 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346961369 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.218947294 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.341590086 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339397211 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.583834534 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347048555 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.475667475 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.488316616 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338940551 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.361792861 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471329007 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.342880168 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.263577797 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.845380279 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334152053 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32919227 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.104257246 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363400136 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.232873068 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.535748982 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610753672 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332125625 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57436773 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.303314621 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.368166019 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.325638907 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335093843 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349006505 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.341092317 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346023741 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.340488 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.356765042 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.775489798 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90018755 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03805679 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859718076 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.61129652 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.371423884 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.220913238 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.040415003 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28351251 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.9867432 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555155721 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067318901 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295045425 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.078908146 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.496479181 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085989189 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584711372 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566734667 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.58202476 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.356956944 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602705091 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551649149 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367224307 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332178474 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267759229 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.84908369 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29215922 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346564037 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421550744 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.370319564 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333242935 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.118700599 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.336486483 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.986966921 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.98971847 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.87715565 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.71822967 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333281743 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.340710804 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.49999605 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362671629 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.861271656 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93181761 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357814837 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.812317436 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287835152 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.542738269 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.369160889 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.328637158 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.805640293 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.351181979 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.596921319 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581053633 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278199076 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.337616157 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877954258 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.211305876 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.761005452 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335948485 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050729407 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336622904 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613821787 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.352286441 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.491445686 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359920539 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268716669 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268662052 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.026688685 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336670678 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309501417 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799953094 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.356277664 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353846584 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341575728 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185406779 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.591094635 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.349563927 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893482528 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577444097 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348573654 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358568183 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.33950178 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336123639 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.317549849 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.229962376 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.570895145 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409284977 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.559251896 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.258833763 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.235942816 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358424547 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548367015 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.237811808 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345202855 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558830675 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.065226132 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.355420221 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049773636 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379385547 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.348290055 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348903743 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345772238 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358305019 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426156573 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550587389 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.365646994 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.348529862 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.002287065 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346573768 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339026621 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.351698349 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431194418 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.508076783 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.488822364 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.134244423 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902481201 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05730788 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.93180567 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604770721 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347858766 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347366307 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272013081 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487083049 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.863239587 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611393563 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469363857 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.339651559 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362927396 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342896018 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340363401 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556808972 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613599364 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.209357061 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340356935 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.031713502 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.494931062 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349507376 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.550993291 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809152621 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875622202 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641942997 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353886485 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056971604 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633515194 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.43065797 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341120894 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930865974 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.346605561 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.028620579 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.347023317 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341536194 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503844606 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589410375 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.262492472 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.350453234 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.50189339 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.112933551 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.257653384 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596978109 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.760973056 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.553842632 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923504253 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.033461017 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610761863 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411050366 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554738384 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.468771431 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488870665 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.338448648 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.23728963 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34229358 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180380935 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.04603844 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.341474987 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907209646 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618110151 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.335746227 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.331059526 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355481514 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.342364252 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.554550247 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019919769 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564404779 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342359532 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335296515 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.902954019 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909086925 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604639631 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277077296 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.33654043 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55172483 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595235045 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358428932 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.785918457 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.044842503 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873452714 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.306197797 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354914009 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333258472 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.044676761 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91951027 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.515895371 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849178661 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.000837617 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335986341 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616097012 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.339301364 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347165651 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618299333 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.338315126 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335300004 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571077816 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.920294471 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102233383 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.345059686 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.289248687 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.279178054 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.560661281 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395142743 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277184909 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346897555 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.745765577 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355513884 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465408568 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346102741 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.343156303 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342908152 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.094040191 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620517075 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.339806041 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.320622922 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.340187121 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370841073 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433587971 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337491685 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342960226 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.009772998 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.681685325 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.588505684 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341461833 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.309650009 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.332557586 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328619849 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042083409 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293284112 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326613087 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863649171 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.330420589 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.33941397 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325100684 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.537191052 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532796595 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333670705 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545106214 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351501731 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361141321 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.227007427 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.089058294 seconds)
  done (took 1668.239566023 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.360997789 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.374801309 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.355170686 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.360710099 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.391882534 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.441241996 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.358449515 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.359243266 seconds)
  done (took 52.236609286 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.327543803 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.481318802 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.351588296 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.324307987 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.340903474 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.326668688 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.766313836 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.354032333 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.338757527 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.332405442 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.339051564 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.338393354 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.933953587 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.339525157 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.329614937 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.346183789 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.339297916 seconds)
  done (took 65.151631578 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.210034127 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.55001871 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.876541121 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.377226983 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.375021599 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.331532025 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.755123447 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.337971377 seconds)
  done (took 58.049653443 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.333866546 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.333946562 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.333750113 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.333980996 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.334767911 seconds)
  done (took 7.907017989 seconds)
done (took 2067.001573348 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.327126995 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.330999918 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.327839179 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.330676305 seconds)
  done (took 6.55283161 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.303930291 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.987708969 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.305389758 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.326192824 seconds)
  done (took 18.159892009 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.336733562 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.348640031 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.962942976 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.90188108 seconds)
  done (took 5.10327384 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.074498462 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.084134613 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.071955419 seconds)
  done (took 7.466975493 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.32298672 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.333540183 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.334060332 seconds)
  done (took 20.226803858 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.60867419 seconds)
  done (took 2.845305564 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.472989408 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.521042194 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.641724218 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.647052938 seconds)
  done (took 7.520901117 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.712620726 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.706447281 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.526938926 seconds)
  done (took 6.183222992 seconds)
done (took 87.980412656 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.020833397 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.32993695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.533054828 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.030052878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.554020509 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.533335298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.733753589 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.997220869 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.545420924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.496969306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.990606942 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.562874849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.452034653 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.32876709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.45245885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.710087043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.627064833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.161157736 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.724905588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.877954046 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.727224753 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.629594599 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.822329171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.697934623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.637788854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.489342619 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.206946911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.707675784 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.973877043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.280626182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.499080882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.048896986 seconds)
  done (took 188.623129564 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.337761679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.326292463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.345468771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.352790342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.340646259 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.334718651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.344076433 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.34313709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.327884289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.328734573 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.341939872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.34177767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.32871837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.353568254 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.328496301 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.34346109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.35597477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.331210771 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.327226632 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.327356636 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.345032046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.327935856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.327980491 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.333393168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.335469553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.345105577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.352396386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.33780729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.327750056 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.359898317 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.330192865 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.350957699 seconds)
  done (took 204.075694439 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.328885554 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.328693045 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.330324893 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.345028742 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.34426725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.330185872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.344788644 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.333966105 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.33000057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.330078479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.346841833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.33029923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.330677084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.334845283 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.328296111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.329618463 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.330526507 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.330436682 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.331359708 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.34606377 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.334914488 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.330137725 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.344911461 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.330037286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.33107831 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.332110851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.336656127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.330415166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.360390934 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.331103452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.354727532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.331533734 seconds)
  done (took 203.975636145 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.532166911 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.338082696 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.338999227 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.289410953 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.339137513 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.338292104 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.335273683 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.528915803 seconds)
  done (took 14.283385157 seconds)
done (took 612.196237714 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.563727049 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.299111912 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.539577625 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.366188915 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.080609856 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.383352965 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.358963771 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.520282309 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.246103454 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.526948653 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.576845072 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.372639594 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.707820532 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.357367945 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.608209325 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.453086409 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.226784905 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.35253689 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.672299185 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.879941194 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.619485514 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.793891288 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.538122192 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.242408828 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.734599651 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.807400028 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.033425136 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.232529778 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.382674668 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.673394104 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.949746196 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.254274537 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.423283327 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.414648564 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.471983692 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.451705629 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.249524791 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.421166328 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.554109918 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.582307604 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.856218534 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.077084263 seconds)
  done (took 91.10043287 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.32313015 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.322664861 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.322867678 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.323567318 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.325819293 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.322842571 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.323307959 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.322842984 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.322814543 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.322472255 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.322746777 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.324213785 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.322762684 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.323471681 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.323529203 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.324541362 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.32373742 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.325617612 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.322728938 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.323618836 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.323849093 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.323001733 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.323732063 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.323589535 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.32465766 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.325248222 seconds)
  done (took 35.659927724 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.343575104 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.584767809 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.747463813 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.356226351 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.343443134 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.34848486 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.417431607 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.352501857 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.34620815 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.347810133 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.493308053 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.354283284 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.377346486 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.764730689 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.354665176 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.345252803 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.34436009 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.344168431 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.593519798 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.361350456 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.437300046 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.352977957 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.418434468 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.362160844 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.365199441 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.345905448 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.349492011 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.910252921 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.371156284 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.492898333 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.087960727 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.422799411 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.870771996 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.776681678 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.098190027 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.354496389 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.34651892 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.49727963 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.354256821 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.346028269 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.418927084 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.354305341 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.75067143 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.020931385 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.370790269 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.346813148 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.929767151 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.521070708 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.579790408 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.364294217 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.773358146 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.357911732 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.348911097 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.349240129 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.577875675 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.360744895 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.347859245 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.939485467 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.376320824 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.421245942 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.35641584 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.346784753 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.599888157 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.349644344 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.588694593 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.354639327 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.356443439 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.364898381 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.753363508 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.358607533 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.036315071 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.371282069 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.349139958 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.495024068 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.595627696 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.961964777 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.376278766 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.603700824 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.881286322 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.444820054 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.35365884 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.901570557 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.447764718 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.356640044 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.351397832 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.350558686 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.349524863 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.400603991 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.419132539 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.981901098 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.051656483 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.96480311 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.449362673 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.361099217 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.349116158 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.942840338 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.375006438 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.350342273 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.749540507 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.046562046 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.36624614 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.357178615 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.035753118 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.367827195 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.42497487 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.362143868 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.76137755 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.359578457 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.399871527 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.350412371 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.358390117 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.369992962 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.425642635 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.361740545 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.352283307 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.005155671 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.528949066 seconds)
  done (took 178.128596143 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.34385107 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.360151888 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.358808697 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.34546816 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.343997176 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.353255125 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.345111098 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.345653527 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.350512096 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.344846858 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.345897527 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.34633553 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.346530807 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.348534316 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.374511844 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.351847684 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.956548265 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.347926508 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.345520876 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.344966981 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.131848277 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.353597493 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.346334062 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.347043384 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.34641361 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.347970404 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.353366493 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.371527089 seconds)
  done (took 152.453943362 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.353578086 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.891882516 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.377773166 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.477392 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.380770224 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.352258026 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.474746602 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.414326678 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.369743109 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.351660574 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.350578907 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.642544895 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.363047504 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.845787817 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.542972593 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.499092 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.853760143 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.377872386 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.350071986 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.352205694 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.477956243 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.361822433 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.643894275 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.904251816 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.378414075 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.897061982 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.345932525 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.35484371 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.352870342 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.89852812 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.377314262 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.643989478 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.434701514 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.41795632 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.915111908 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.867497518 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.858031225 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.491019388 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.362125894 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.354340654 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.352514452 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.337037756 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.897688106 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.380755995 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.355987181 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.885779393 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.380322969 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.355504562 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.361399169 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.353116485 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.409493216 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.427300353 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.665199512 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.911171556 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.453233026 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.374863482 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.479042425 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.715633222 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.358312119 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.845128072 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.337185249 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.901576344 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.383404281 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.338047477 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.355291423 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.363045164 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.497621612 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.486848578 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.854567907 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.371667256 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.845422572 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.513532158 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.361961621 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.354718719 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.3577081 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.902289605 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.87002291 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.512553145 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.490896197 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.544781109 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.348019954 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.356011191 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.339871909 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.428648548 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.36419167 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.905283873 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.870843686 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.373262989 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.359208087 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.358215933 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.359523724 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.524183776 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.928197135 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.454917698 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.842163212 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.663416399 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.64949445 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.359435701 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.413038155 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.371925289 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.650339903 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.360816408 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.411214396 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.769682949 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.658506502 seconds)
  done (took 161.282395562 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.586888009 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.513830149 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.444355138 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.503704432 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.950216827 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.915884169 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.590998273 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.493488351 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.467532757 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.608502354 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.478849513 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.466515757 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.567407744 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.440667995 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.066470734 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.448325907 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.466238836 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.503552911 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.511202578 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.363256108 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.014503053 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.648037557 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.54556339 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.161213241 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.446412722 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.108098218 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.915054606 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.879241274 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.532693534 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.628808896 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.877495635 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.46669344 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.283652662 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.030520175 seconds)
  done (took 65.19041325 seconds)
done (took 685.058189626 seconds)
SAVING RESULT...
DONE!
