cset: moving following pidspec: 30270
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.937513272 seconds)
loading group "string"... done (took 0.550931847 seconds)
loading group "linalg"... done (took 8.913059385 seconds)
loading group "parallel"... done (took 0.171674555 seconds)
loading group "find"... done (took 1.453841795 seconds)
loading group "tuple"... done (took 2.077091907 seconds)
loading group "dates"... done (took 1.36100417 seconds)
loading group "micro"... done (took 0.216551372 seconds)
loading group "io"... done (took 0.629543038 seconds)
loading group "scalar"... done (took 42.74655078 seconds)
loading group "sparse"... done (took 13.479545747 seconds)
loading group "broadcast"... done (took 1.086330457 seconds)
loading group "union"... done (took 12.340093768 seconds)
loading group "simd"... done (took 2.52278961 seconds)
loading group "random"... done (took 10.191450277 seconds)
loading group "problem"... done (took 1833.082242838 seconds)
loading group "array"... done (took 25.614291184 seconds)
loading group "misc"... done (took 1.115240087 seconds)
loading group "sort"... done (took 3.748488549 seconds)
loading group "collection"... done (took 18.728167122 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.64317492 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12162048 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.167505973 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.34496109 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.210531338 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145125768 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161960062 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.557021344 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.044284904 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.226754936 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.130363578 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.546835086 seconds)
done (took 6.028511396 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.24503324 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.432849888 seconds)
    (2/2) benchmarking "String"...
    done (took 0.114791161 seconds)
  done (took 1.208333594 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093716484 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.17926513 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095312968 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109595443 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110469164 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108246766 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09340752 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109054428 seconds)
  done (took 1.468155319 seconds)
done (took 3.686782994 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.490878388 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.847566891 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.507766599 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.125101108 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160409506 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.150827144 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.304082288 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160342414 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.130134786 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088722904 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171990761 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.380299111 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.471505326 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.959963946 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.085235997 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126877947 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.08516658 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.713993619 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080501082 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130604789 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.519938682 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.11445348 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120775343 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139987498 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.195322544 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129457725 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16410035 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.094930474 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675959867 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105079675 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.183749121 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099890288 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162962907 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.244774981 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097137342 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092652638 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678062018 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.182022009 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.111306272 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098485808 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678722054 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082863721 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.193398169 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099393852 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109381881 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18734684 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115838575 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078823749 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.100926703 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088955496 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159316386 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.459680075 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107196872 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.148374826 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108351079 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.700777821 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099662948 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157544491 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.138380825 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.104141169 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.096354966 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.108174975 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155041306 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110860165 seconds)
  done (took 19.539679335 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119511434 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141352515 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095096244 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142493263 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13930895 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097023865 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085672976 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094753351 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125219851 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184581897 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.120894483 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141137406 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09229829 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081475586 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118254031 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250956341 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107075596 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12232039 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081415761 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107250214 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141378951 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098123838 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110709111 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110242027 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169852663 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205425845 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110163919 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123769267 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09452075 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099983058 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142687793 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161468124 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075863416 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095221561 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.184381206 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119970902 seconds)
  done (took 5.170102534 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200296629 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117381471 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.191535884 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.177161211 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144398917 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164932111 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117958864 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263000237 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.178795611 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179991167 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.168385972 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114804996 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111643815 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094195374 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080981674 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09340079 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.672141558 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.138396742 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.163572844 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12512027 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105194762 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082288547 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.383694199 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10105235 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095458823 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086057896 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087932792 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175169004 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084360337 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.419047641 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.086546763 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118009231 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091495617 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.100145653 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130658495 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118859562 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142355591 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103477243 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082929336 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232668161 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095075034 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095762526 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.110282613 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134470217 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133873966 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098729713 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095588506 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.241194147 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08517553 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121129668 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.058259549 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198844434 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.099633554 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097627913 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.348178438 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118284946 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085305527 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09741957 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273191702 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132251125 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084367383 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094681417 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088086854 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094522851 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.416227371 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091916744 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.89582553 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096871851 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157884693 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101246377 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107152148 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088258406 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103436936 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103332084 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098054845 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080072764 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098154846 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079844964 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102003173 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114065477 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086159487 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100884996 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079293641 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158121939 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085184407 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117812167 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101383805 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125508356 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099347759 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078037288 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127152595 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095730537 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083024935 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.143638156 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101898225 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.097769842 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09969386 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141478525 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095199062 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.16223565 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095857273 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123667431 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086548537 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128531619 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122619203 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097175032 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084927655 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093508139 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080742339 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159576821 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082392753 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079802597 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100589246 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110893557 seconds)
  done (took 23.580331175 seconds)
done (took 48.952416655 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.449341767 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.115818594 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114322627 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112522631 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.114236561 seconds)
  done (took 1.640641074 seconds)
done (took 2.348838419 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.356203162 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170924688 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101389358 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19328395 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087135302 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197377999 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162035672 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117213269 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.194606925 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098858593 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.173718407 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097255893 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086876479 seconds)
  done (took 2.776927728 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095498775 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118769576 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082614671 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110450117 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076887642 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109248809 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092849848 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.131050696 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091549137 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102345372 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07640307 seconds)
  done (took 1.794995487 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092171497 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113965399 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082567062 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106153165 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076481136 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089548484 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107869516 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115991313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091977809 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103012176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076432807 seconds)
  done (took 1.762757914 seconds)
done (took 7.033957298 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.03867532 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.400156323 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117542544 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165939758 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.341804733 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.208484266 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.516255498 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132875712 seconds)
  done (took 11.820329848 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.117386672 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.116770884 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082409542 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098868854 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081336043 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103775832 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08153152 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099826859 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.080769201 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098615398 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082114162 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095908468 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083019465 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099702853 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.081512896 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099891403 seconds)
  done (took 2.272597514 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12043974 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118840284 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10468673 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109005288 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086088745 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102735118 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088488001 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103073079 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08409542 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101958085 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.106598907 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0916436 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104731709 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.084451914 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103497734 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107487588 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085213247 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102809877 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089285051 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.10408775 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09240841 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101758661 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10463122 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091255113 seconds)
  done (took 3.209020577 seconds)
done (took 18.009274453 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170706981 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086445002 seconds)
  done (took 0.967839612 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10432219 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120447392 seconds)
  done (took 0.942498784 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108582541 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097394766 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13709017 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115742588 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083856168 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098365627 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115144818 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099468205 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082164441 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100267477 seconds)
  done (took 1.755151379 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087525481 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102191081 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090737316 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.119576909 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109484835 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085196468 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103303403 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087001595 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104406902 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080850879 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106002805 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11742495 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089500348 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118549267 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087700616 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.104116404 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108048139 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086809436 seconds)
  done (took 2.50616406 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082641404 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084024034 seconds)
  done (took 0.885210811 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084731959 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095667604 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084016449 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099453579 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081289402 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096526854 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081138276 seconds)
  done (took 1.341896366 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.506595143 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.252990102 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340870997 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099795292 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.152649956 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.370442645 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.134519874 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.110855453 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113914447 seconds)
  done (took 2.846291169 seconds)
done (took 11.961986624 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09513225 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.189551936 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.54248669 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118430749 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080243103 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154941296 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.266455358 seconds)
done (took 2.166577287 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.359159538 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124817072 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089059704 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081372948 seconds)
  done (took 1.37166871 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08158343 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104007872 seconds)
  done (took 0.906940705 seconds)
done (took 3.007686193 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082057891 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079557997 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.115382613 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095571992 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078231183 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097843318 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077402333 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077555704 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097304931 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079512195 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096387682 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080397854 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095893333 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080320073 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095717033 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078522936 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077007708 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095807761 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077487598 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093760987 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077641462 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095184758 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078174598 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077363301 seconds)
  done (took 2.855689915 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.213850941 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097161707 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086468253 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102529653 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084673203 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103230221 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10229323 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080629568 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102822657 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08263697 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100512439 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085055827 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09908234 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085614202 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099592756 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100851897 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086558956 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096837451 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083138183 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10131004 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.085764597 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097121894 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084760338 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102021025 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100214221 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084260644 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099650367 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081216101 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101623678 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085066451 seconds)
  done (took 3.641310132 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089133415 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077142221 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.095256892 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08976211 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.095145959 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081673127 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.094153975 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078257753 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095389256 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078464984 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095967501 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077673601 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09434098 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079677344 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07953551 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101654978 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112976204 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078482363 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07726781 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095674701 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084032751 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094003521 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081132836 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094651273 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078529494 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093826409 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078859357 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078428457 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095703975 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078091731 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099927627 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084983031 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094153171 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091426353 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101756748 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078980955 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103818561 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078016578 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095690462 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077709611 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094157032 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.079043683 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07766481 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106600117 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080826296 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095627996 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078234534 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096046367 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078545802 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097761933 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078064366 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094665271 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081024817 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095966255 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084736174 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093972883 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079745176 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077745658 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095374868 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0778611 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094071649 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078252733 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101344068 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079137152 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118597613 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09042099 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09462038 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080314541 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099375668 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086865012 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096488512 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098365108 seconds)
  done (took 7.125210672 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084732316 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105950354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080610652 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09705841 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077445229 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078678359 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102647153 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094986526 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081437503 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113511885 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07939565 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09622022 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080476703 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098115522 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080378928 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096357019 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089867159 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093854968 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079697985 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098741806 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080175625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102311882 seconds)
  done (took 2.727857638 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.225016122 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105262906 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143754947 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115391923 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098654396 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112863571 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102887644 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087520746 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101968851 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089943496 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105842695 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086819478 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11553618 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106220136 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104782122 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09104934 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103065778 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090471964 seconds)
  done (took 2.719235287 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09522591 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098957898 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108068737 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100316055 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08249571 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10299159 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089118691 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11476781 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101281991 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082779475 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109422329 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084929204 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100777222 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082429153 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101231233 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082074216 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101526218 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082407833 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109008021 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105223579 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089224702 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109660659 seconds)
  done (took 2.872012936 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098829544 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100112934 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113153504 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102617605 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077513359 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097614444 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105448981 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082531562 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107258118 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084055591 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098689745 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080423822 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105951125 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082178078 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105266825 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08237425 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100491582 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082426773 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1003028 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07786993 seconds)
  done (took 2.621837069 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127051912 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11491502 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099355929 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124659759 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115459873 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099047054 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126579391 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115813832 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099713843 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128184389 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097088218 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114180157 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1239596 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103414585 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112902114 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122849929 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106783905 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123203536 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11265772 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096192478 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12635371 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113089809 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107518922 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113528864 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099101852 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114310242 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113086804 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102763919 seconds)
  done (took 3.893522222 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082634722 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08140855 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096592497 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079646858 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096658719 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07986378 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096264514 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079977066 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081322517 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096523973 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081517171 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098366156 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081743041 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098293924 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081551014 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097880565 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081993971 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079492829 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095672613 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079488345 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099119363 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082310005 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099033289 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079377668 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095255919 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081942072 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07880396 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096397069 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081635033 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096236077 seconds)
  done (took 3.377856783 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091490168 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105363984 seconds)
  done (took 0.937062321 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0809448 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115940511 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079887069 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101913845 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08909977 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099792471 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093458779 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104954779 seconds)
  done (took 1.506862903 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.108874358 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.121081529 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088312422 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112363482 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102441606 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.119538104 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167799243 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089107984 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107165959 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083721171 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119715724 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082237261 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111653121 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104988484 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093030929 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114836121 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081069503 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110527738 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091293839 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102738303 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089546731 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117628147 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095513051 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107670904 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08550356 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11292076 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115005017 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.095218946 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106097239 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096922216 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.106171685 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07502802 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101799553 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085223442 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094452982 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099050553 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116131829 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08745634 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110623804 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10491917 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094376106 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095002089 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.094793339 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108720539 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096649201 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106114091 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090234078 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095537731 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084269611 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104435633 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078664947 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104113532 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077900205 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10982463 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093041166 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119038556 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084253357 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102330407 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08532781 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101158127 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087595711 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101646565 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106622895 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084650668 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107291298 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091234404 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106223497 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077507266 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09390141 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082044571 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110680277 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1095914 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113122961 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088394011 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106595471 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081020396 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106121171 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090000774 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108554341 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110424973 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088798199 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108550105 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094964667 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104565527 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087452841 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108015943 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086370819 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10384923 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085562948 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122021456 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085739091 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097639585 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082990911 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112351398 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08849685 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101610143 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081651175 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107721923 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0758631 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106516275 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087588923 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105348199 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109186885 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086900964 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10320128 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089968395 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110721762 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086224788 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.101175078 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077315508 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103336819 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083140109 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105653763 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075522816 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102473427 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085419314 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102769603 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091684082 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098867772 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085754934 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108013832 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092561525 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10012709 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077474486 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101192269 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084660983 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106845702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108652443 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.084104378 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075835422 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094063324 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089219923 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10166305 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104235492 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087553618 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102810877 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075717817 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07857872 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103203641 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108551478 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085041522 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.104370498 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091332261 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10450876 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084377866 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107966642 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084282264 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098215447 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090665038 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102382887 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076485068 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109553812 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085262341 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103947705 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088825318 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11110184 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104829786 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.090610143 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100453475 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088710504 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103217581 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082031955 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109627723 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08336051 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110205972 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086107933 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092777727 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078353257 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104853728 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082567085 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101034439 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082227753 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103007633 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087110387 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078994388 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10169506 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084183955 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115354733 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110550903 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086891323 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105937386 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093507978 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102203964 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087794674 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101702404 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087439591 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103432715 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090718154 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105693256 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087502216 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102106819 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077909238 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104684643 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09160527 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097877609 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080363267 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097946209 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085576216 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109441629 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085780624 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103526368 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083028058 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104576631 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089646711 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102857723 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084513121 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098858879 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.085647314 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.107495153 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087271709 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103729217 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109588263 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087273509 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092948405 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091391878 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099035461 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089700521 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094033706 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083019551 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082267574 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107229295 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083984351 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103840984 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074263485 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108196927 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10784083 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087384533 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098253136 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086833479 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112119771 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084699885 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105667285 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086039575 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105687356 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099743379 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099307337 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0853137 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110633784 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102560238 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075285907 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105625423 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084113976 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080551325 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102141005 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083263942 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103247357 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088569904 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105346768 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074852031 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103291591 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084169983 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098990614 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077685075 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109160422 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086037205 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103024675 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112804592 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089125782 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103068676 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088022843 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101458455 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087543259 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104031722 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090260566 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10371974 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08489366 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098132417 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086578129 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09944004 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080139537 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101565241 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087239032 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104620761 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088754245 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101492115 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090761152 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103231037 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087100724 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121724735 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100509155 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082979585 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104001866 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08884738 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102819501 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085825801 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094657184 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092087918 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103192443 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092719612 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103016139 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078786684 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103529113 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085915367 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104832377 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087506438 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104365999 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084611647 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103106045 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086923908 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112494953 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082419463 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110979006 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106006796 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088562034 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102169006 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088144007 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101874232 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082543766 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102955968 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087624995 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104363972 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086080215 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10577509 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087034704 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102220789 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084552021 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105367965 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086840149 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105716995 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07703847 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099560142 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08310835 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103666952 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091413226 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10443944 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085583539 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101719761 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088290102 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102273246 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079135435 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.1082309 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089510875 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10468577 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096592159 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099857399 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086940077 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114435893 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076462376 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102003623 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081157211 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101437174 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092810258 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104782221 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091717083 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104571618 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082101043 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096406216 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087513665 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101962068 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077136881 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097416535 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090042811 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102460446 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085406413 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104347342 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089512548 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104800357 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09033076 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10212869 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086601086 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104307363 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080038706 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099549809 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083280373 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104164686 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088457205 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100466005 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079738617 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102837991 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08697801 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104327187 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086229143 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102637574 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093064714 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103483366 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087683941 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10885661 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077113634 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103992362 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086387073 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103662957 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083018031 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105117885 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087996417 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105790773 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091076271 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104373242 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08919772 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103970077 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081039918 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103594114 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086501178 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104721457 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082327257 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106664919 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092565234 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099097034 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086558709 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106122884 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083962143 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106473715 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088188981 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105152467 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107357895 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088485556 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104483327 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090379357 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103503677 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0892418 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105316746 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085819097 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108965996 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083013085 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110946012 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088711751 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105577158 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085934652 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101413181 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086226913 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10399099 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085915347 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110089094 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08876618 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100020608 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082562154 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097834779 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088223353 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109022345 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093372653 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104565405 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086978482 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096762875 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079679438 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105795705 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083557208 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103397508 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089066465 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110050238 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087475922 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102767859 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085057545 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108969442 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107795998 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089855199 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099969588 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089710008 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105157672 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087860314 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10209233 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086785731 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106078242 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089280283 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103003958 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084124409 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113405023 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091892918 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106718371 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086100998 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10621271 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08594929 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09614073 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088158579 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104981713 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106683272 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087999598 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104115383 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097949773 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098471586 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087061717 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108179537 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086893038 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110934223 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078397197 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105291245 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089510436 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10547941 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079138507 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100218907 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083362687 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105210682 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083791989 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096002603 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097544371 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109573228 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088126344 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102688615 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084672769 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096261458 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.077928138 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100738758 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088887137 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103483613 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095736196 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100416599 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082658203 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096369646 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087993152 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105868226 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090092433 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097679641 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078994869 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101435887 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089147651 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111533809 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08580612 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104757442 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0892981 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105056705 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08071155 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10994353 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079849587 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106324104 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097320918 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106432419 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107301876 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091184518 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110884306 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089228267 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097084043 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089077129 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105575889 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089384665 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105799363 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08997722 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120921054 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088115203 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101879577 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085194983 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104832613 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082866071 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112418886 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106579514 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088979846 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107119707 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086432953 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106611599 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094528791 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107184152 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088843896 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105844942 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086361626 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10509422 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085856074 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.103874442 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090439648 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106670668 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087404068 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108295934 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084715822 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116652945 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094646025 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109067483 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079637923 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101978966 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084025427 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097049546 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089419741 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099096388 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085510356 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102879759 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087055688 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10831265 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090238067 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105990257 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089300102 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104431402 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077996282 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109273341 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088761543 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107536226 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081976877 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105135834 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08971929 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109773189 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092297897 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103848591 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087875156 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104861953 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091339237 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097590609 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090407669 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104158626 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086552251 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101688083 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088017771 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106719233 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088740756 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106550709 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090109175 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105496308 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092910786 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108926292 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080037404 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098450835 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091010735 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100111392 seconds)
  done (took 58.071684472 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.155256534 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08981781 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096991936 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079009081 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12348008 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080099163 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096261894 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080466975 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097285069 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093471276 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097189351 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078804522 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118873173 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124609938 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122204027 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111690929 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079876456 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097827017 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079451711 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097902752 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099587632 seconds)
  done (took 2.890663973 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109341044 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117470135 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113907148 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101220545 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108849215 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114641981 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095573493 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115190409 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118631578 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108671836 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101297399 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114532202 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.109075118 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.09139744 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11035791 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111210887 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100996103 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107894494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116618549 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095520595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112498508 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113938669 seconds)
  done (took 3.179599846 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096211713 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085314902 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110092443 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080057965 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104432174 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081392678 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109821645 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083649992 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109603554 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.088251463 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.10234682 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087315875 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11010427 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.081085234 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.103021842 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08393771 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109457313 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086861792 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106815698 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081486429 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126288735 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099035301 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.082031336 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.08373029 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114783106 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106400088 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.088509857 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086048959 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.102207142 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087170614 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101185686 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089664739 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108719626 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084094914 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103203492 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087234086 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105276743 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.081156843 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101829654 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090133068 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099851632 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088575923 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.112335221 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.084247745 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101439162 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089551241 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105348768 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.081524379 seconds)
  done (took 5.382817326 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12867475 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159133222 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089693019 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.151062327 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123204165 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117078005 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09254164 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148535817 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103118166 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087229655 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123022214 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12091673 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090838762 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.113059321 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092953443 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107269448 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106979166 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091094563 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.113721317 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089575833 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114641456 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111317123 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102084584 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117847069 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109383794 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087012196 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107184745 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.095215519 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12031065 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111744466 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.09328721 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117142938 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122850462 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.08835062 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109083636 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109569071 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103999085 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105969799 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089624537 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105205325 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109599562 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095269901 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111313557 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122821525 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089902697 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110771582 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091321827 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103742928 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120547841 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.093608417 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115382196 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11930595 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093113753 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.1064794 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09624097 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12367675 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107704123 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087255868 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109128886 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119823356 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087959536 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111353249 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.104066936 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110811711 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115541093 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100324092 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108821741 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110459328 seconds)
  done (took 8.285088116 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09900935 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.130822531 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123088676 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104566795 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112505248 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110502908 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093118384 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.110666693 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093395933 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118465929 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110814977 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.161281082 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08666169 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116800951 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.092833413 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111373824 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111510945 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093711571 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110624109 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093891217 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111940408 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122041405 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093197528 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123165509 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124451753 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104799522 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094869905 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111332379 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104341113 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112659297 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123733778 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.110631673 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094182291 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122391836 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123872151 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093214314 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101447902 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093713748 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111934392 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11063385 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086865075 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122822078 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111564896 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087183137 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110528765 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093668326 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122917385 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124389062 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116854237 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101434615 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111412778 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121810356 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09352099 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111309155 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122711281 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130671903 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105007224 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123066568 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111085476 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104432267 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123727389 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131133507 seconds)
  done (took 7.640821048 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089376817 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085011673 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101371736 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081479222 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101954482 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082805615 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102438837 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084882406 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083279809 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.103490038 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083528066 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100680984 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082094637 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102295272 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082659257 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100040588 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082899725 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080775892 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103167557 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081490807 seconds)
  done (took 2.618502466 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098723712 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128263411 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085908614 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111077738 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087087856 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111674719 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104697417 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08914378 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103486485 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088491098 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115499982 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097879228 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10558768 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110188343 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096888145 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111364142 seconds)
  done (took 2.452497872 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111124597 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11728824 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.129345349 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090367148 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102061145 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093954775 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103739434 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.080970437 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.098939152 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094166812 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.109588954 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.095007241 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103336684 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083437738 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104404159 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091565934 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098924101 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089856449 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102984425 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.109396817 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109556533 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105944796 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.086692546 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105143496 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088480295 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.111372963 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092376028 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101154851 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083011512 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104089378 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087483737 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112616482 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080939182 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109756921 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.082951466 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.101289072 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.084207435 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104309962 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.08955082 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103623386 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082765553 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107017715 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083210922 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106511522 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079549692 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105710939 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080077536 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.110644151 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105119204 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088677713 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103363125 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.093709801 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110027104 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.0974283 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114104225 seconds)
  done (took 6.229215004 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105270648 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106746002 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089964287 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100831577 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088714963 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111818167 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088960994 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105929827 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087395243 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101117256 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087775317 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106880647 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087844233 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107908958 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087476267 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108127412 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079809228 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104564964 seconds)
  done (took 2.566113911 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096659522 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103730543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093478293 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.103374473 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085693601 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105186162 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081114755 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082691975 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102044705 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084510801 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104306714 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086740329 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102101607 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086526182 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103715201 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084822174 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10587308 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084368928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103396581 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081049933 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105216198 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08411647 seconds)
  done (took 2.880934504 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.108943233 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.144762842 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.104789709 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.146244947 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.10884829 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089073823 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.119522905 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.088834928 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.126525859 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.106268517 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089263221 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.107052616 seconds)
  done (took 2.154531366 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115257527 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14253687 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082588871 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107057047 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116943336 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091348131 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10831893 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090565199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121180125 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122013151 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088902165 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122420669 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120551542 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120254367 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097317186 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118362355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108781394 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091071657 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105127688 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130720198 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091660277 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122100579 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108093887 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09156241 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10954417 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120004872 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10280636 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122425643 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109484007 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102194101 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118685329 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109257313 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102912781 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123418508 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106728277 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121389292 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092285377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130877256 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11694101 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101318835 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107526001 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117237931 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103127078 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117134579 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121732118 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091118033 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118286343 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109635873 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089741183 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136747225 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117736197 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121176778 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097992346 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122562082 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121931796 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137038043 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123071905 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120466664 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099805565 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122974404 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120488155 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116234364 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102011994 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123435449 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116560365 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121047634 seconds)
  done (took 8.213656654 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133536163 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105087522 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090379937 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124177405 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122038267 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108845675 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091731325 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110014544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090467233 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107834379 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158456673 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109600537 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10184031 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120901896 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109121712 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090612337 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110104166 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120450802 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0881751 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137067708 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110117149 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120448903 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102194466 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121501391 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123079464 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11745137 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091955193 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109559969 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090987025 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109304837 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116040111 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091417978 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121356825 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101960264 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102493986 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110664807 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090280605 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118190057 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109604154 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097208172 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122073443 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13142945 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109211408 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092034828 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122763333 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109853 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091520694 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10664809 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090306674 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106903629 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124244827 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124003405 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104411405 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121517441 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110013232 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09162056 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110629543 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108831328 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092666225 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117099347 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120973105 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092294292 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138198794 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110655156 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091942206 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122260937 seconds)
  done (took 8.068462045 seconds)
done (took 155.633792977 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.111413323 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.147985031 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.107473254 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172658542 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086635036 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140221212 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118650763 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.121296126 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085032703 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105428881 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.08551582 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.10845715 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151518369 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.104876228 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086147463 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107833246 seconds)
  done (took 2.656969608 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184700607 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283651413 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107109709 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109475154 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091802995 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10873479 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089323013 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112448014 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.087385976 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.117786263 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.105972973 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089451425 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.116690055 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089015532 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106100909 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088381328 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117705739 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087991296 seconds)
  done (took 2.917278844 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116718869 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149322508 seconds)
  done (took 1.09363342 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130443701 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184893885 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30148226 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.160823763 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.116127379 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12772755 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.163369515 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.125122121 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192960532 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127262529 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108718878 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.113210105 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137182893 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099220255 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11579754 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09264082 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139334132 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114176203 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096839779 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113734747 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.114904102 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113777461 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116352017 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096322777 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181544777 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127466044 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113125427 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.094657501 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113688195 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09576412 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.118164993 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125965408 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.107564613 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.187886124 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.097999751 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.183256514 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100808122 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112454549 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09347375 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113525505 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115741475 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097753178 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128559851 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.111680827 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.094984663 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119878572 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.094398703 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114375427 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100258484 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123581559 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.119715302 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.099212037 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.186587172 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121323805 seconds)
  done (took 7.620087205 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.83890501 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15523381 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112165244 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.937779779 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144493281 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126599575 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.830997755 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114487122 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.261021284 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.046786224 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130699126 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132257525 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232284962 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256621524 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.196870336 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.339246531 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.706436797 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125746672 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.120434414 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154654723 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118770568 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141703904 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11098734 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442414129 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.093194836 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1120896 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098232614 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124286825 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164872595 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.111201611 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095238238 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203202227 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270156514 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182105069 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113736812 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090010895 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111488649 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170940056 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270573671 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21854457 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174822432 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087552964 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110734421 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103272812 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13154079 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106651434 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168245295 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176327111 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196814514 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094914466 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123324471 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099457734 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123781731 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164521044 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.109699363 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.33694953 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34296744 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091218088 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119931524 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109196568 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267516143 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112237391 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225962687 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118500973 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21536265 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109753385 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799878248 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188232932 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090996247 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120659841 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098040268 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116015032 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121853672 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167264704 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.380084245 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107537803 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115212158 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089838489 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.245475159 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091260808 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11143837 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168544429 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112769164 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099872673 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127398101 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124997818 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17663491 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252285076 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125357547 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118270462 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097774041 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125792301 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.091814766 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236336306 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199721226 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.182366591 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.216795308 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124606979 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.168574379 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169925082 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123473791 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174206049 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119381062 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129312153 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104081629 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215818005 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145952856 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1104827 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096800631 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118379838 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148995843 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094626222 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118762682 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.172292095 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.469645304 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170549891 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087709583 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114626703 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09866412 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185876708 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098166674 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265036839 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119795988 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172840632 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097661604 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110002953 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119106569 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169410557 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124497679 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100550185 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124173173 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118937865 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255785093 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221505257 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106612039 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23733844 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178616696 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121161792 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177708089 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099079804 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194036633 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100888502 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124306203 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112709458 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78744883 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124782592 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118491433 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096597219 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194986026 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111848414 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092745126 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1097729 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088118068 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806730112 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09406914 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.108962049 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093528052 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121115482 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099122273 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119120663 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116367267 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16683984 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233772116 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104508479 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119323504 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11044908 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165146926 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093160443 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.11229326 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091185572 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.112683165 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100016685 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116725363 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092583615 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197426745 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163269761 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222512486 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.510902772 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112957122 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090793685 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231088985 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111983697 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.307123576 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099017647 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227369857 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170600282 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108338041 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337612563 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.174283987 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195239522 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093155388 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197355373 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087380681 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117243443 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166319288 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110553938 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09879159 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161338827 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129105227 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12563409 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.153759826 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090927817 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251290231 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089130315 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173335077 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113779512 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103432586 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.31188097 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112073262 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111518738 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187255483 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095005088 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112194005 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.589520134 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.112149985 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100948295 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121886056 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225856879 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.169892141 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120229049 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118394791 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104689666 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166092569 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23633617 seconds)
  done (took 44.799964766 seconds)
done (took 59.910492414 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310201503 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268780837 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.306829815 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.199939749 seconds)
  done (took 2.016421559 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.186518971 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156194353 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127924766 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110642739 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157219002 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09001303 seconds)
  done (took 1.681147455 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.498512229 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.376633751 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.344873568 seconds)
  done (took 2.075249574 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.2722455 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.286688637 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.360384062 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.448783929 seconds)
  done (took 2.331566866 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215938418 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12807652 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.103444687 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.141653712 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.174810351 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.178144289 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144660891 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.153748178 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131316736 seconds)
  done (took 2.275453662 seconds)
done (took 11.237583582 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.292068982 seconds)
    (2/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.258773726 seconds)
    (3/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.14101024 seconds)
    (4/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.140946541 seconds)
    (5/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128906331 seconds)
    (6/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091815547 seconds)
    (7/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116390685 seconds)
    (8/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.299441972 seconds)
    (9/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110529761 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.222707151 seconds)
    (11/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.279574005 seconds)
    (12/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.268313997 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112946265 seconds)
    (14/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11202916 seconds)
    (15/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.232538939 seconds)
    (16/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114562233 seconds)
    (17/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.18950143 seconds)
    (18/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.144278892 seconds)
    (19/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.220676435 seconds)
    (20/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180597944 seconds)
    (21/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.219412907 seconds)
    (22/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.124196158 seconds)
    (23/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184296005 seconds)
    (24/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.272602823 seconds)
    (25/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.234834694 seconds)
    (26/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.133097563 seconds)
    (27/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.204231571 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.145443794 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125547524 seconds)
    (30/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.199387689 seconds)
    (31/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.142871129 seconds)
    (32/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.20463482 seconds)
    (33/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.201718408 seconds)
    (34/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127734981 seconds)
    (35/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.187779586 seconds)
    (36/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124580354 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.117827417 seconds)
    (38/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.148772795 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.120359969 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.143869302 seconds)
    (41/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.148550216 seconds)
    (42/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.192719921 seconds)
    (43/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.078980729 seconds)
    (44/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.194128009 seconds)
    (45/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091968439 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114885829 seconds)
    (47/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.076028128 seconds)
    (48/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.202802382 seconds)
    (49/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11298844 seconds)
    (50/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.219267585 seconds)
    (51/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.205796792 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106365192 seconds)
    (53/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.188508281 seconds)
    (54/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.075644612 seconds)
    (55/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.157094 seconds)
    (56/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.163950921 seconds)
    (57/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.202140369 seconds)
    (58/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.282832474 seconds)
    (59/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.226441917 seconds)
    (60/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.090765712 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.117206467 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123302868 seconds)
    (63/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.133951677 seconds)
    (64/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.079694165 seconds)
    (65/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.133631785 seconds)
    (66/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.187416984 seconds)
    (67/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.108961439 seconds)
    (68/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.129393346 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.117067731 seconds)
    (70/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.076688878 seconds)
    (71/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091791246 seconds)
    (72/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.098445137 seconds)
    (73/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.085877758 seconds)
    (74/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.141786424 seconds)
    (75/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.079315104 seconds)
    (76/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128982705 seconds)
    (77/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13027058 seconds)
    (78/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.208372877 seconds)
    (79/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094437982 seconds)
    (80/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.204758071 seconds)
    (81/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.233608378 seconds)
    (82/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07802811 seconds)
    (83/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144673672 seconds)
    (84/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.190894218 seconds)
    (85/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.159152995 seconds)
    (86/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106863966 seconds)
    (87/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.19206784 seconds)
    (88/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.130243451 seconds)
    (89/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.126821932 seconds)
    (90/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.125855849 seconds)
    (91/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.076511166 seconds)
    (92/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118481708 seconds)
    (93/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123498438 seconds)
    (94/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.094518915 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.116300001 seconds)
    (96/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.126021543 seconds)
    (97/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117975516 seconds)
    (98/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07871927 seconds)
    (99/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.121944162 seconds)
    (100/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.077930689 seconds)
    (101/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.098221624 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090276038 seconds)
    (103/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125507634 seconds)
    (104/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094184725 seconds)
    (105/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.119536704 seconds)
    (106/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09614194 seconds)
    (107/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114291626 seconds)
    (108/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.077868627 seconds)
    (109/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125770341 seconds)
    (110/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078125529 seconds)
    (111/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.09746985 seconds)
    (112/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.123264961 seconds)
    (113/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.157438444 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.096695458 seconds)
    (115/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.099997639 seconds)
    (116/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.203239554 seconds)
    (117/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078538765 seconds)
    (118/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.145632676 seconds)
    (119/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078458436 seconds)
    (120/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.153541683 seconds)
    (121/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093248923 seconds)
    (122/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.193459585 seconds)
    (123/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.2076069 seconds)
    (124/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.130259878 seconds)
    (125/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.20432467 seconds)
    (126/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093731898 seconds)
    (127/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114754552 seconds)
    (128/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095836835 seconds)
    (129/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.199544648 seconds)
    (130/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.097335349 seconds)
    (131/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088261502 seconds)
    (132/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.077032571 seconds)
    (133/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.099863021 seconds)
    (134/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.15509591 seconds)
    (135/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.157004887 seconds)
    (136/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.117164642 seconds)
    (137/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.078028865 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11726104 seconds)
    (139/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093119837 seconds)
    (140/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.099498278 seconds)
    (141/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105014777 seconds)
    (142/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11424574 seconds)
    (143/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078927335 seconds)
    (144/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.09862564 seconds)
    (145/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097990156 seconds)
    (146/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.130163319 seconds)
    (147/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097480952 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117496663 seconds)
    (149/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096496141 seconds)
    (150/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.107238128 seconds)
    (151/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.078069246 seconds)
    (152/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.098008622 seconds)
    (153/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110441959 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127140367 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10347608 seconds)
    (156/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.125856063 seconds)
    (157/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.077202581 seconds)
    (158/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.099997596 seconds)
    (159/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.077314132 seconds)
    (160/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.123169887 seconds)
    (161/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096697402 seconds)
    (162/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.1383143 seconds)
    (163/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122017678 seconds)
    (164/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09259512 seconds)
    (165/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114263171 seconds)
    (166/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090586011 seconds)
    (167/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.111013878 seconds)
    (168/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078507644 seconds)
    (169/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091969248 seconds)
    (170/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.100419787 seconds)
    (171/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093156655 seconds)
    (172/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.098975357 seconds)
    (173/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077509783 seconds)
    (174/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.099487517 seconds)
    (175/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.1031636 seconds)
    (176/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.154477934 seconds)
    (177/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090965009 seconds)
    (178/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.167881243 seconds)
    (179/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097833032 seconds)
    (180/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.098581897 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097379966 seconds)
    (182/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.098851313 seconds)
    (183/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079057522 seconds)
    (184/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.148084419 seconds)
    (185/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.119479209 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.118754216 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089637912 seconds)
    (188/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.099255354 seconds)
    (189/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078792313 seconds)
    (190/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116727637 seconds)
    (191/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096635149 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115058776 seconds)
    (193/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.078104605 seconds)
    (194/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.098562557 seconds)
    (195/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.078507206 seconds)
    (196/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111747068 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.105099524 seconds)
    (198/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.09975925 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097503378 seconds)
    (200/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.140058523 seconds)
    (201/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078027608 seconds)
    (202/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.098641788 seconds)
    (203/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091387304 seconds)
    (204/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.07744058 seconds)
    (205/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.124759348 seconds)
    (206/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.137617071 seconds)
    (207/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.107333758 seconds)
    (208/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.107323144 seconds)
    (209/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.127118759 seconds)
    (210/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.112517114 seconds)
    (211/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.078955329 seconds)
    (212/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.118805067 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.104857806 seconds)
    (214/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.099512679 seconds)
    (215/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096744183 seconds)
    (216/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119040805 seconds)
    (217/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093897917 seconds)
    (218/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.132614865 seconds)
    (219/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078732929 seconds)
    (220/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.107608962 seconds)
    (221/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.08556431 seconds)
    (222/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.09878027 seconds)
    (223/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086641962 seconds)
    (224/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.077696889 seconds)
  done (took 29.876255011 seconds)
done (took 30.735875581 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.451251586 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106921288 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125703112 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101951503 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145609074 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125672821 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.102632834 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.126648332 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.100544009 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.114353007 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.09186879 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123761569 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101899619 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.142081011 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.125245269 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094765247 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.114971734 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.102719491 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.123728272 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103762848 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144003336 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094089127 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.123159359 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.093027733 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145618693 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116184842 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.101113308 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12407872 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100106799 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114939411 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101947211 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.115603203 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.102783628 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.127192044 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091652271 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.116194511 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091244112 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.107360269 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093379106 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.116543451 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100726358 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117294926 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.125646094 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.09514746 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117387395 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092581462 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113484063 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.104671547 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.114023753 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101997471 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117328171 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.105646834 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.114392357 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091638467 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.113424816 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.09447782 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124795365 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092357179 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124610838 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092256953 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.116356195 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092486345 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119287623 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092557743 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116297127 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094152213 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116606109 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094734878 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.114976761 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094179991 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114933238 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.093734986 seconds)
done (took 9.167384761 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107310215 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185960665 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.14833526 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.152912437 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.149297674 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110619982 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126386998 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14781399 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.101703114 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144944697 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14616214 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.137944908 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.13063033 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.124086819 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.132401886 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.10135136 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122626501 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.132925262 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.135599579 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.142604607 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148348169 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.123721824 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12208284 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142979872 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121554933 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121488005 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.125973779 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.123094835 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104845409 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139371927 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.116883527 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.127326995 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.12548063 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.112647022 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.129963995 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.099021878 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.134400482 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11816092 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.101715347 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123003106 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.134807385 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.112049301 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119702417 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.130077645 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.101649461 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.126761936 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.101300007 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122234951 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101222394 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.13359549 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127444373 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.121540836 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121396759 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127120452 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.102333275 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12291709 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102265174 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.126209632 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.12460274 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.10485476 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123269979 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.102738371 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129795704 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139068798 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.121628128 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103422489 seconds)
  done (took 9.121860771 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120669214 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.153434586 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129770539 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108946965 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.126385826 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089806377 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111797289 seconds)
  done (took 1.751361034 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096762686 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143416029 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124516646 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.147486322 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.135605148 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.128827046 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131009057 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090878375 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137484861 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.124077748 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120482388 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169860212 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114971752 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.103215127 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.149342103 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.113868127 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.128620784 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114349778 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09925677 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.147676569 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119582278 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113841122 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.127570532 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092914887 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136486339 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.093316752 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183051315 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12643622 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091452825 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120744317 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097068167 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207412985 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114717485 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124730897 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089907388 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144180795 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.112931806 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120426785 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.140774248 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096733821 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13665956 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098803479 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122049231 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119483431 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099027859 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.129959348 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.103344112 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123528237 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097646137 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143809542 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.124975624 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115157679 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115836353 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096346206 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.124494279 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098628626 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129281936 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.096873522 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.143206301 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121646145 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119213578 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141973241 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136868779 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.120685395 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132744866 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.113971462 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.138869973 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119564712 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100581861 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122270211 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.119158829 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118596284 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.125091834 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108412578 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123701687 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.121308917 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.143230443 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096200318 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.128225764 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.098403196 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.119539958 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092183506 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13175559 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117848311 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094720928 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131455393 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104490205 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120449896 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095729998 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.13734918 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118593011 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.104036612 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125724753 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.096234426 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130496582 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.143450662 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.102912166 seconds)
  done (took 12.623922595 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.101089663 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.093882226 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.122514362 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116930579 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094683279 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115834493 seconds)
  done (took 1.569574649 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.132255214 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119072992 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109592798 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122974709 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15981509 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.117187818 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.140864333 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125084905 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.113640622 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13099825 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.116460588 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.141636683 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.146406032 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101121815 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.14067818 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100832265 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.139976844 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11907035 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.107868633 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12000404 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.109409336 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123533152 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09759188 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138820778 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.100725604 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.124619449 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120750387 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.108908394 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130690715 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103095298 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123807446 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.099807521 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.124320735 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124972498 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.118888758 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12354911 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095290652 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12585235 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122417037 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.101462008 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.141565256 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097249991 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128807819 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102025461 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125592204 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123139237 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.103384351 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.121933024 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.118634351 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12489381 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.102992318 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123474508 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.100818666 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.125624519 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100825823 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126444396 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.124831097 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.119215855 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123399338 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101272003 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120615945 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.101130771 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126565418 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123485366 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.100614918 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.125847842 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101005569 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12007588 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09809976 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122554567 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.102582327 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121200087 seconds)
  done (took 9.442862863 seconds)
done (took 35.420279848 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.087330578 seconds)
  done (took 2.004864456 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.856011563 seconds)
  done (took 1.77542949 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.784687424 seconds)
  done (took 16.735890185 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.514188914 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.593242761 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.964089063 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164793621 seconds)
  done (took 3.156152064 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.935650159 seconds)
  done (took 1.874319997 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.320545448 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267750721 seconds)
  done (took 1.511890196 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.814666197 seconds)
  done (took 1.746246205 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.577396817 seconds)
  done (took 2.508102752 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.359657253 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.200657578 seconds)
  done (took 1.502009493 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.584576906 seconds)
  done (took 1.520799666 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.054927048 seconds)
  done (took 15.994643958 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235499645 seconds)
  done (took 1.18565032 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309412771 seconds)
  done (took 1.246540225 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.306287419 seconds)
  done (took 4.246914534 seconds)
done (took 57.941624979 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.109202537 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128911655 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107079591 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126752299 seconds)
  done (took 1.404153812 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112768712 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123389853 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104881673 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124349091 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109623698 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.124600689 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099009524 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.131735946 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099910514 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.127369235 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123632517 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10142993 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.125362993 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099620031 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.123079819 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.102356693 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127482851 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.10041438 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123591175 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101519296 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124702686 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12453178 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103370119 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124432453 seconds)
  done (took 3.703551739 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107407049 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097696368 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.123337734 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096380661 seconds)
  done (took 1.367813555 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.11291603 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.138803903 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114558294 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132183906 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138552239 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115131511 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120695016 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097612756 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124608527 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.108935366 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.121961051 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.117037622 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139226306 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116027229 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111647442 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113657952 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.094632657 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13957683 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.107786519 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.133119237 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096731158 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131181264 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.105058355 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13537544 seconds)
  done (took 3.815035577 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177695539 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.134745407 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144340416 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.168290345 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.122866423 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.119728149 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.122039733 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128860878 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.124114318 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.098586519 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.121829909 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.156290096 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126240465 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121705068 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.09721598 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.125467211 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103465451 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.125616308 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.098536107 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.13510256 seconds)
  done (took 3.50244355 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108798865 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119959486 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093686002 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119405299 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104423884 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122558231 seconds)
  done (took 1.620523982 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097534035 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.092584737 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115840093 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091487927 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.121102389 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092546108 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.113971931 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.091714171 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09249238 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116189481 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091602181 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114683607 seconds)
  done (took 2.180033668 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.221852562 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118040774 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119916138 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097799627 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12479284 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095642333 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135300191 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09637319 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.175372751 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.121731543 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.112174408 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.1747836 seconds)
  done (took 2.543227964 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217164161 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101771143 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276062668 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372789411 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162694537 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169673304 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278779436 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172586995 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.190746772 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140937931 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208611651 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160728891 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133207211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182518115 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144889409 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.188539295 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177076699 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203862341 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151428975 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242583212 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168652441 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170354264 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192891904 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130898853 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142290084 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160301386 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120452804 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107711654 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175398492 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172004868 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198925855 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12708185 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141058164 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203354005 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243149113 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181237558 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.303722466 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135804731 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.192670392 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.195309168 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27742372 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143688432 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199077058 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158389149 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108992301 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209534371 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159817262 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.181391753 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110641949 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145397174 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187388461 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179056099 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.184247888 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142817574 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321661771 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12984368 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.149874137 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184419752 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193195841 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227531573 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171875574 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102857278 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190594924 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218263255 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18544049 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.123520147 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170609691 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127836011 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180715663 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208283548 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180290498 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171356046 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.210261669 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136941053 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166840791 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183007332 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13211333 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182000345 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164877348 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124506906 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152371124 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115589968 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131400636 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.188213616 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101975257 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215712061 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141418764 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.291666403 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234768193 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161433669 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139284002 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166846256 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195786501 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125371546 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.122590126 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148736017 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.174346002 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13550504 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136098042 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161247275 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148727045 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102966455 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155024909 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126705467 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161483483 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.113651473 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170864557 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16792018 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132442915 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16800683 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152917927 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.139047719 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173669047 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222441129 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112061135 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135598783 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207024241 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16221334 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138786447 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18919883 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200097183 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178468275 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140280257 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171968342 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200043055 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145391909 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20167426 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119503143 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137849443 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.153856864 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161669579 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160334656 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15791525 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107184034 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155509787 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203876104 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.130359575 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137920662 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177550152 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104162022 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132292208 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145916339 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114175564 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.145974001 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153867974 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.117010057 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157904267 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163675182 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157979266 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161337954 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146836115 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195916255 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13654959 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.16322847 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125916692 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122058214 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.183748061 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197318252 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13333542 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191270787 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173033714 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200693638 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166627444 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134753584 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186017869 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107602411 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12421999 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1691102 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164914693 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166335539 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195349667 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196950327 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.196393997 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.131287722 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151894838 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171299832 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.188755698 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161254122 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.150222979 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166557208 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169650535 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09976305 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.128243974 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.129708913 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118302089 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134691894 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109508982 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21226607 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168020195 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191923112 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164873346 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143004282 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196311529 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102849708 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167919338 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17519901 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142860898 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197172427 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194908532 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171899765 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146794372 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173692986 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123588271 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102760415 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136424176 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171079674 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109567485 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139291023 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147578019 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196193479 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179529832 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154228671 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23059464 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173522322 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20741388 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098434465 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16984918 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184640055 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162704171 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.188719286 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11357412 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.165171541 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191567263 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147833155 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196765676 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166524082 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172614878 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227864386 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135694459 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13519379 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153918257 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174303699 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142641676 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175521205 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12394034 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139193142 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157309528 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113479925 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130078302 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182638341 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147240319 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183467982 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.171328046 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178721327 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130885544 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148398421 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164990943 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122610922 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.121360289 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176266575 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1987148 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147586476 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161951503 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187278989 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133971874 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316945988 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203198858 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188436555 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142667667 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146693715 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165258197 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173400259 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168129252 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187675193 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12089663 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186543691 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163453145 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.147864627 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138439163 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12587985 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155592394 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.155099142 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.136659572 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15619946 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.119601206 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213229829 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122599497 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163563018 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169228567 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150921853 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.159210652 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118571569 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214146903 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163476304 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181711787 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160860054 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179952029 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192274469 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12948832 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104847595 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13190771 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188057991 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135650316 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136153763 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.213160578 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204203667 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162949771 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174884128 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141780628 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.100716849 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164205823 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151788074 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203101353 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145958485 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.140629269 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2060089 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.156451412 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107867184 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168655956 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310158715 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127017377 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18666495 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.125888942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280808586 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107407234 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135394662 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174688571 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174765247 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135029869 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.161392303 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166626875 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150325117 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174398547 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141749822 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193827886 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213618781 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172464611 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178558423 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148218347 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162010495 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166387808 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190011937 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147288364 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147559781 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138709674 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221779951 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198644879 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.10846357 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167235802 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167187521 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164302376 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177018464 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13923028 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19308111 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134441698 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169681704 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115938657 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128213885 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161239566 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.1864414 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135454337 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187260272 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162267666 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108313904 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130316598 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155028864 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163681476 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11999985 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133658059 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182793749 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.131413367 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165288209 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183359034 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108528565 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157881281 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149798082 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108458358 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146923886 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147253834 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11190812 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172399694 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194593189 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134366178 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189760708 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17468157 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167954509 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163348495 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147185014 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638027385 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130978363 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195296622 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15098791 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192033002 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15382564 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169477461 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163967476 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125690878 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16954416 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151248508 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223557913 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168106456 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.161622919 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132635238 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119973786 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148452494 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132959544 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12684325 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165502669 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143553893 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138822657 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.159771372 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122477316 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14700438 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141442426 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196346303 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149773858 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185840133 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187193471 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14028344 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142259077 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203554121 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105503012 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.163724343 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173662268 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145123119 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152063172 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105899647 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13919081 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182020124 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099535456 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162870667 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162037453 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164387639 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165671961 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136352691 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162035436 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117754496 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162345405 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128722824 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157031141 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160428928 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107525751 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129742205 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157655078 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160907574 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.135121093 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129653425 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.1484124 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214427268 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.101498831 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136068529 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280841327 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161153983 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197052338 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.155345866 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110831775 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147167647 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15662631 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.155032364 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161826532 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.105222289 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138005616 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.10711376 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.184909937 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.164929551 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15971556 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186030668 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164135257 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191761269 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137742078 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.265002499 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114409906 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157568409 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.132263995 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103829073 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143303228 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135700412 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120061737 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217394854 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182200718 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.127709928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147503694 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128595397 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099714233 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134012615 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172927957 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156381319 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161013624 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118598598 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.120678215 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145013874 seconds)
  done (took 78.924166557 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15603426 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.143893811 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149287703 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199236734 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168998289 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258604213 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208143445 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22951158 seconds)
  done (took 2.528195188 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.10923899 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.136882394 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143005575 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.125700318 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.125805848 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.347445119 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.114161497 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124304246 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.185731298 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.134415717 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.123413703 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.613046693 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.098942763 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.126701788 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.106949348 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.124568106 seconds)
  done (took 3.746988416 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.056477923 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.506761275 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.56563789 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.238157721 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.222702956 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.153570424 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.683622635 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.184045961 seconds)
  done (took 11.626509941 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137406917 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143790533 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.257217468 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.176552667 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.161099734 seconds)
  done (took 1.901899557 seconds)
done (took 119.797528625 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103912805 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125258305 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099158065 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.126557374 seconds)
  done (took 1.462443676 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.116820752 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.087167774 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.112569968 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08273637 seconds)
  done (took 1.417146615 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.486104327 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.083532545 seconds)
  done (took 1.627093146 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.132750851 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140385187 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.115489584 seconds)
  done (took 1.41801485 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110054116 seconds)
  done (took 1.132356054 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.113102385 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.104007428 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.142736756 seconds)
  done (took 1.381883536 seconds)
done (took 9.460592086 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139967026 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.428038219 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.389614796 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139360574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722633296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383659466 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030533697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15738117 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164708941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094237283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138348462 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673974155 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.014497649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.338843189 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999791716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.337353071 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702286952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095715149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.126552156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09542551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.005876903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092676078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121246303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095243373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.699943769 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397890001 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121276243 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374865771 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094339127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123396591 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384161922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118469115 seconds)
  done (took 16.812411852 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142089285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179832248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127672393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09609339 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123554167 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095692176 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12939607 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.106513458 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178604214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120117102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113104816 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119620652 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098710921 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12019001 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116292885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119199529 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096935991 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122464088 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100626391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121418354 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113333799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119386793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095689125 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122684102 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093614995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133405452 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094339528 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.131145875 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094042273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125643966 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124358114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095466058 seconds)
  done (took 4.789778463 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147863773 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190112096 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128863322 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129324253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170327222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121180665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.206204132 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.129279276 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18283316 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121305492 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137811529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094622182 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157324076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095345306 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141804987 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094763804 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122491124 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096783303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.126704466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096480248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139606318 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094116279 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122163061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096298209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.119864814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107597274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120730707 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130623981 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094797937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123714911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100637919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119111052 seconds)
  done (took 5.088294475 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106602181 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127405012 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111913816 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137035542 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096932371 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12598955 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.102123705 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122033751 seconds)
  done (took 1.949544319 seconds)
done (took 29.665753145 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12176296 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133333979 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.109533489 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.129626202 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131085589 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118447493 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.106354537 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092207177 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.130990841 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.110292816 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.120755201 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.094938319 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135081154 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100402825 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.136191216 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.10286974 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140964062 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110242415 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121308879 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104496075 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121387014 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.114665276 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.126490009 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094802008 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.147007693 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124940249 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11215261 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12461187 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.099856968 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095628946 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.137364405 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100434877 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121742003 seconds)
  done (took 4.885186933 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.127265322 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.165045693 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.093824925 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118692752 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.160920472 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.095858122 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.147290399 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.09319997 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117883637 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.092819048 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.091094515 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.145059036 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.151627942 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.125332812 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.169436438 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.158321481 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.121612132 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.157830627 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.145079211 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.130992231 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.150648967 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.092488965 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.153654398 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.160077685 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.09371989 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.118069757 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.135613005 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.152210004 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.162600189 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.151525239 seconds)
  done (took 5.013600896 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108330691 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137100604 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121151145 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.193118134 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161872154 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.109676532 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134731434 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.113773266 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.149771513 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.093761642 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.132263316 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152437027 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111952616 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.132127047 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.099849838 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135480206 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.114242363 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.123309862 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101815126 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140550307 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112790971 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133706144 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.109189374 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131970247 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094044561 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130368566 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100497002 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13572851 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.128805485 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.105267312 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12370617 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099419365 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123291024 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105828413 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123944397 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.103058476 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142843293 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105502344 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.135444109 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.156218045 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.105688314 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.125490356 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117066022 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169058202 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096445059 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129205191 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105059928 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132370391 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.093372806 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140573463 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109259851 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.121896986 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136432817 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09514243 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119168657 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102592825 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095862684 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124306924 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.105490213 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124782157 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.140225075 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.103317679 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12927661 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097385511 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127451474 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.094610168 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.120395139 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.100530112 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145809122 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100648577 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15456239 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095067276 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12766116 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.103724909 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128420199 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105740065 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.121947824 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103066239 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130215573 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100328104 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131027921 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097695053 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.125988684 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113073125 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136334856 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128607967 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.100455359 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12819696 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099266354 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12359125 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109736889 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123465989 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099374966 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.132146272 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096109557 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124476163 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101443902 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12737335 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094626628 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142596709 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101348666 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121889578 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.113952951 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123001244 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098810126 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.13148098 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.108383383 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121714734 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10053262 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128023463 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.095201081 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.127728335 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098434272 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12098726 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.107218486 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.134220374 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100335955 seconds)
  done (took 14.950867547 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.24803784 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.222481811 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.193950435 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303979762 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.145162539 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.122548757 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.217347586 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.175285469 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123646484 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163310603 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178446316 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.18398176 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.095362104 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.155208438 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.222820411 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.310035295 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.155868298 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164409504 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.135318083 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.145010902 seconds)
  done (took 4.705591483 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116192909 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.162511512 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.152228014 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121386793 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124072895 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108861203 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.124991981 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138536246 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097437791 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129546902 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.09541139 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.131589034 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098760363 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126473527 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.113509128 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.140565002 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099891545 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.130754273 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.140413512 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.101607489 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.123661783 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144155734 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.105350693 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.152028585 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104015416 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138439852 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095243903 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.129960854 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093163252 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123695083 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101451476 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137638439 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130604666 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.097505317 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128098073 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096129255 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.118559493 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097961322 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124650182 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.099836704 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.139236853 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.101072211 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123051273 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096339614 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131178531 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.092999362 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126458409 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.102379054 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.127341782 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104475957 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128934777 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.100408682 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130703017 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.108089658 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119860036 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.105721158 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.136647168 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127173175 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.102245945 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.120717986 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094549427 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100036232 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.121848641 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.099966759 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128635149 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138115902 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.104716746 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.123719948 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.101637789 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.127223255 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099494662 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140832694 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143315281 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094800228 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119927353 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.117626901 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120141522 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085000648 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104889547 seconds)
  done (took 10.33970771 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129693082 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12310963 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.114806772 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.159686464 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.110484903 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132322115 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095592843 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.14403874 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.101988034 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132136667 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.102361296 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137937482 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.151416267 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.109227218 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123367313 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.111083966 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127734028 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.136413474 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.142521181 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.155163381 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.107838276 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128971227 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.110207014 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.13491422 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.128599001 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.136385749 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.15614957 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.102675377 seconds)
  done (took 4.601572099 seconds)
done (took 45.520278482 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.176600305 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.3206156 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.113071961 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.11665443 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.143393919 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.120405283 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.112361763 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.31049034 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.81319597 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.099482668 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.110919412 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.116538591 seconds)
done (took 26.591747851 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.161043529 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.671892411 seconds)
    (2/2) benchmarking "String"...
    done (took 1.447551329 seconds)
  done (took 4.153239046 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.107634153 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.110488984 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.356357497 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.114397412 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.111291104 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.126497296 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.116400934 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.112282499 seconds)
  done (took 15.078606865 seconds)
done (took 24.534415476 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.138812247 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.306761205 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.364276643 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.121778158 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.108165727 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.107301649 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.09623551 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.132443488 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.113113899 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.092363052 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.100876071 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.39823045 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.106398681 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.481989928 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.09437172 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.11226099 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.120991992 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.319784218 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.112037175 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.147078736 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.101686644 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.098872152 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.116290717 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.144255143 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.114740731 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.123788551 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.097201139 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.099448312 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.291499732 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.134906609 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.149966287 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.10548926 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.171127414 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.112699907 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.211653592 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.136721044 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.275308813 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.10137213 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.095049797 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.118233384 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.288902601 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.48888861 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.120919514 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.10246275 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.11467658 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.170106419 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.095445915 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.8037987 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.126459524 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.094283697 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.16178399 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.48894067 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.111291214 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.114686026 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.137773142 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.321160656 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.129493102 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.122256317 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.147916909 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.109994765 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.125174899 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.122997675 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.178170932 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.116293311 seconds)
  done (took 137.206113061 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.116089564 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.112058114 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.107475145 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.175202593 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.115734737 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.114880688 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.113417413 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.113694121 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.115532074 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.113190005 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.10949018 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.107986548 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.112041674 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.119680516 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.109830196 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.126824338 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.109081156 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.110027859 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.118447436 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.103147352 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.1070863 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.106499008 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.118676109 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.103134701 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.132742584 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.17153594 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.117176147 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.114013815 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.104921189 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.102868954 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.130408532 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.164132613 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.650870242 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.960838233 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.115699141 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.133460878 seconds)
  done (took 76.695931857 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.104784421 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.105446323 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.109042985 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.132049204 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.104222977 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.613745917 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.61277294 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.821514582 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.248127991 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.253084484 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.10351312 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.291803172 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.101287247 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.197810535 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.116078083 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.100146206 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.121594093 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.133032173 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.105359984 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.106936979 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.618273033 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.118549388 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.148416933 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.26448419 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.117141338 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.134532611 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.500070552 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.102764998 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.137529683 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.240003672 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.423375392 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.146394464 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.101431028 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.108254942 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.415246514 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216785184 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.103251029 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.137904906 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.107774448 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.383561036 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.10444183 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.109783127 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.11017086 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.726505842 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.107052366 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.618503994 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.107310711 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.003388928 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.10332328 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.107961797 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.111397625 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.698525055 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.123328655 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.105643382 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.113681758 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.107450733 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.108001486 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.137524147 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.09053393 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.197913085 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.107519823 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.111656075 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.135796302 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.110385686 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.300555086 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.10286528 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.815031468 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.160941445 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.233005745 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.617908073 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.107553466 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.203835537 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221501823 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.103001167 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.108676358 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.112417345 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.107451286 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.218131434 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.104189771 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.486386596 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.10220484 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.27242753 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.122677048 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.263694449 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.107891018 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.203787266 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.103056489 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.433011773 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.110900265 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.109283855 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.789970528 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.199013393 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.106442326 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.109612767 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.109826913 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.490032976 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.617544573 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.285499231 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.111108385 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.233414053 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.109625884 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.494774011 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.60196583 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.738141428 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.11011735 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222828266 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270882273 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.122392684 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.110629593 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.265311249 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.108815756 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.170274754 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.107193971 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.508625588 seconds)
  done (took 353.225219563 seconds)
done (took 568.15955521 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.780385358 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.730927211 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.86158133 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.763746267 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.743426786 seconds)
  done (took 9.910839694 seconds)
done (took 10.942987938 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.291113261 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.289709203 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.166678682 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.292433259 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.142799521 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.307162858 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.268903122 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.132371884 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.21107789 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.189229093 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.211714169 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.166663689 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.144895003 seconds)
  done (took 16.84672973 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.359748701 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.109387303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.184036064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.341261996 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.149077161 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.357644258 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397080327 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.110386686 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.248247445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.126471631 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.127529992 seconds)
  done (took 16.546715599 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.361332436 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.111234998 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.176208287 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.351387982 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.151119458 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.370699761 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392414234 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.110233323 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.254043615 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.125296958 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.124872298 seconds)
  done (took 16.560768746 seconds)
done (took 50.988378187 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.152722827 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.269806457 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.137518405 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.127940227 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.119605576 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.123170283 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.125541348 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.120621773 seconds)
  done (took 10.212359844 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.119463946 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.121373732 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.119454319 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.119877515 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.118144882 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.121800371 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.117993014 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.12193099 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.117019035 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.119181572 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.117258131 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.119360925 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.12031911 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.121809968 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.120012999 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.123121164 seconds)
  done (took 18.954035668 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.119879665 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.117960303 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.121282802 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.119010016 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.120740958 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.119137493 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.120122353 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.121071947 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.1187387 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.119483947 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.121919627 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.120349845 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.118159175 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.11872674 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.12499602 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.12522015 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.120836537 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.123049743 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.124369283 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.120707943 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.120704368 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.119909944 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.120935096 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.120776976 seconds)
  done (took 27.937842373 seconds)
done (took 58.139263069 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.118149728 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.118125827 seconds)
  done (took 5.275254541 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.187003174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.184941615 seconds)
  done (took 3.411502908 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.123813025 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.124908286 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.12490236 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.12234313 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.123540245 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.122292484 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.124267847 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.123741906 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.123411792 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.123364802 seconds)
  done (took 12.275218032 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.125040725 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.122294775 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.121270636 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.125829499 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.123551166 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.122314376 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.125602565 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.125270894 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.124719547 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.119556003 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.126199411 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.121846379 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.12426587 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.122102132 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.124318258 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.12302379 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.121505261 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.12248046 seconds)
  done (took 21.257769381 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.143407503 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.146922398 seconds)
  done (took 3.329413998 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.262556435 seconds)
    (2/7) benchmarking "second"...
    done (took 1.165632403 seconds)
    (3/7) benchmarking "month"...
    done (took 1.239266069 seconds)
    (4/7) benchmarking "year"...
    done (took 1.228444095 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.16456119 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.14260055 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.165229609 seconds)
  done (took 9.407424373 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.127942049 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.316979898 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.418926956 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.665949952 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.12717937 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.1280321 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.115319049 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.127076336 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.131294109 seconds)
  done (took 13.199408991 seconds)
done (took 69.194591734 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.119630933 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.182368358 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.136608524 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.128426317 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.466118528 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.164132507 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.120239887 seconds)
done (took 15.358799236 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.114923173 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.116076343 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.10982102 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.118291147 seconds)
  done (took 9.498166768 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.09123078 seconds)
    (2/2) benchmarking "read"...
    done (took 1.495078911 seconds)
  done (took 4.626367798 seconds)
done (took 15.166642877 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.127971578 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.125781954 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.124853569 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.123464281 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.125539441 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.126338576 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.123945788 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.123623181 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.127687455 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.126136179 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.127825015 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.127030412 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.127211528 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.126214437 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.128568532 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.125528507 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.125209612 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.127089065 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.125194485 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.12375162 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.123557131 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.129488645 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.126452061 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.127594297 seconds)
  done (took 28.066778939 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.128529742 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.123086855 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.128637295 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.12909656 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.12360629 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.128457935 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.126052978 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.127011538 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.130210057 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.1291441 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.126361317 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.126140668 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.130084135 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.126846372 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.128691226 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.125480513 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.130997061 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.124341101 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.131049609 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.127318594 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.130286137 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.128344445 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.131143953 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.128602399 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.129415495 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.128481134 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.129099442 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.12870762 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.130418659 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.127817126 seconds)
  done (took 34.887153784 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.135063411 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.137947788 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.129458986 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.132517869 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.13153066 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.133128262 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.129932252 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.130624655 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.131022744 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.131598179 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.13110735 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.130628314 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.131076267 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.132424884 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.130781418 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.133447108 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.132246364 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.136087577 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.131653999 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.132176607 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.132936852 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.133947275 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.133237513 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.135055583 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.132736972 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.13016206 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.131994463 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.131927217 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.133099927 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.131739463 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.132913322 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.135104087 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.133657039 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.132581847 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.133821441 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.132487688 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.137650464 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.139795654 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.133318029 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.13451499 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.137872409 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.134168299 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.132326955 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.134732145 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.132329548 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.133089636 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.129777424 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.13292501 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.132165706 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.134329052 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.135496685 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.134814422 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.133112542 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.133773054 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.133568598 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.136125545 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.132713458 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.132116797 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.133040249 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.134195766 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.134257658 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.134211934 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.13366009 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.135455902 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.1364863 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.131756593 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.135661011 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.133994012 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.132924428 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.136707078 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.136841597 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.135993292 seconds)
  done (took 82.653614738 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.134791936 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.133202358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.129450567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.129451526 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.133967908 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.134991973 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.132444625 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135443184 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.131706138 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.137061369 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.136035693 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.133677224 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.130120196 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.135686712 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.135113552 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.130727902 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.136974069 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.133186392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.136219985 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.134326021 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.135670645 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.133340824 seconds)
  done (took 25.992559253 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.137363332 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.135369457 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.132496069 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.137620037 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.133498398 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.137196162 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.136734647 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.138582739 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135703758 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.132964322 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.134490743 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.137319155 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.135983671 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.136038526 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.134188605 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.13483742 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.137907896 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.13540368 seconds)
  done (took 21.494698887 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.137047675 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.135855324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.136799579 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.13297771 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.134887569 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.136919233 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.13282866 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.134966493 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.136570617 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.136715185 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.138959243 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.13648956 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.137187749 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.134518282 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.136112177 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.137258436 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.138567816 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.133484344 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.135741614 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.133348271 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.13661827 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139914057 seconds)
  done (took 26.044802958 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.139272631 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.137166735 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.135685995 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.133869571 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.135321162 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.138682951 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.137808262 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.135384763 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.139444241 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.139573976 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.136630577 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.138622867 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.13712661 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.137285667 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.137084273 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.138049838 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.139246192 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.139182725 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.140064142 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.136333439 seconds)
  done (took 23.802402823 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.141984251 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.140374516 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.138102388 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.143153748 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.140863203 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.139166438 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.141961537 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.139798555 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.142617104 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.138390865 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.138678425 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.140277326 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.142718896 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.140207813 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.14123808 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.140343186 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.141552479 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.140403862 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.140167018 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.141921326 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.141783654 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.139774474 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.143060747 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.139481849 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.141083447 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.141554553 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.14267061 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.143163159 seconds)
  done (took 32.999031898 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.141188695 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.143362675 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.138960341 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.141947419 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.139277857 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.141126287 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.139633932 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.140655273 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.141875959 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.140540595 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.143038483 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.145748913 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.143536287 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.143085935 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.142314353 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.141995456 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.143693445 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.140666945 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.138659971 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.14232961 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.141043503 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144422761 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.142773613 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.142770834 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.139629396 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.142791922 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.138291508 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.141246797 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.143594337 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.140506161 seconds)
  done (took 35.309462272 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.189112981 seconds)
    (2/2) benchmarking "in"...
    done (took 1.183887428 seconds)
  done (took 3.431797495 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.142919684 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.143551968 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.144004563 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.140525984 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.139287326 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.143478618 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.144216982 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.141545676 seconds)
  done (took 10.196344297 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.143329937 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.144142925 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.143854712 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.14399736 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.14454741 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.142354021 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.15109888 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.160794168 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.144430812 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.146287208 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.153736732 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.153429593 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.147811436 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.145881 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.144867932 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.146090299 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.143826884 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.145423885 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.146023536 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.145420764 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.146256406 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.148664444 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.144949344 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.141699302 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.144668428 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.157029201 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.149751204 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.147732651 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.144767272 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.149346167 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.145047756 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.142047346 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.145375549 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.146336413 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.144331877 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.14614042 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.155833486 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.162201703 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.152969976 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.143930041 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.144631557 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.143320016 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.148715021 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.14448117 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.147547289 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.146241941 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.148073555 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.146579983 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.145224197 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.149658511 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.152504346 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.146364011 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.143008338 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.150257496 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.145714982 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.151621536 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.163400565 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.162936523 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.160709592 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.157590466 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.161409149 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.168323596 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.146884149 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.147245098 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.156397798 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.172490849 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.152037045 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.162190907 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.143177871 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.144736801 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.153621252 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.161150087 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.170212863 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.146866339 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.148844699 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.147356076 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.148517698 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.146242355 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.152471827 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.170008408 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.146130139 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.150940373 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.157817447 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.171668566 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.147146506 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.148124552 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.14908045 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.150166005 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.152041645 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.161396013 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.166784559 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.149375711 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.148158529 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.150229396 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.151005885 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.151165657 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.147767597 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.149394357 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.147726162 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.149209049 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.148726406 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.153498712 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.161526892 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.150627526 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.149631574 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.1571965 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.15131377 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.149994229 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.157413277 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.153279132 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.150556882 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.154929452 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.156254229 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.150951694 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.151806 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.16453765 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.152205614 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.155203121 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.150492449 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.153611845 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.160317527 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.179659841 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.150684062 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.152301765 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.15682608 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.167284295 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.153685523 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.154011762 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.151530273 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.14948928 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.15008366 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.155588189 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.151646591 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.153578758 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.153058246 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.152674119 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.149246972 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.153329177 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.153136138 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.152146156 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.152815604 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.154205302 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.153677871 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.153514571 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.153961775 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.156659465 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.157401159 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.153129374 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.153435856 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.15234964 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.150898702 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.15251925 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.15381292 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.154363361 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.155075122 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.152975323 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.154487361 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.152779815 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.152945672 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.15386578 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.156336939 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.155045646 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.157844792 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.154775396 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.157565068 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.154711067 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.152449337 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.155582296 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.157415016 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.152537159 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.154016077 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.15451304 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.156195542 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.163802736 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.15723319 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.15498806 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.157579404 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.156633824 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.155718913 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.154646515 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.160773145 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.167130784 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.155369752 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.163209116 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.156064865 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.154820975 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.15660555 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.157133122 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.154002733 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.155021122 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.158693834 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.169534008 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.167953981 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.179627165 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.159200723 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.162493522 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.157809809 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.159648452 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.160103727 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.157507074 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.156781394 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.156359582 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.159168831 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.155844049 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.158464275 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.156496669 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.157755522 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.154895929 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.160139694 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.158385012 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.1596837 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.160107255 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.160592263 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.155101781 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.157738301 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.158133836 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.158726378 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.155639758 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.157100015 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.155406721 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.158256793 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.159461134 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.165170664 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.155783885 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.158482962 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.16018403 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.159477482 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.160464279 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.159872477 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.159487057 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.161027971 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.166622135 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.176726964 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.158762988 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.164857613 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.175340366 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.157989885 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.164951565 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.162596008 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.156534344 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.165898687 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.171059993 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.16227936 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.160708767 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.161975832 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.157238452 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.159655976 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.166423634 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.157875378 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.162210005 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.160904175 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.16127002 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.157350717 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.163512104 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.161809776 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.159447862 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.162370324 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159227425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.161891942 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.162549035 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.160593731 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.161459116 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.161097303 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.16595851 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.173438752 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.166834323 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.159986044 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.164554767 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.164792388 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.16721433 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.162699906 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.162526294 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.162596048 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.17205297 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.184304683 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.169119118 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.178348215 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.163615396 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.168172429 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.179901074 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.171947495 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.161661949 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.167841579 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.163079214 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.166132599 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.161273724 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.163993347 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.161690092 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.164865975 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.164794809 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.166287599 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.164072655 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.162479062 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.164428913 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.163554897 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.16465914 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.162953325 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.165905402 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.166994059 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.16514731 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.162507374 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.163375918 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.172646473 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.181858423 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.163866625 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.163392546 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.163935651 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.163798006 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.16621872 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.165110251 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.168730053 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.177382665 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.171404741 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.176899097 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.164335662 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175615144 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.164548052 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.172786155 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.174821483 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.162119814 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.16197777 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.163897442 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.164804248 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.171614417 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.183968038 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.169618838 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.170501019 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.167440495 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.170970629 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.164428726 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.167604727 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.167412221 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.170215484 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.174114355 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.188399826 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.175157839 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.166910491 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.162596592 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.164219748 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.168027908 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.164033207 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.169643148 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.165127419 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.166035341 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.1658502 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.168595519 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.16432137 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.165226994 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.164718173 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.166370257 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.167896287 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176426452 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.189356012 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.173149122 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.169121893 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.172714583 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.167132676 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.176452863 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.183088774 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.169485387 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.166775191 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.170050595 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.166762115 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.167526328 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.169611424 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.16745194 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.169573142 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.172520964 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.16707079 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.169615476 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.168868822 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.171648608 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.170543318 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.17817959 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199816353 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.16899792 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173988619 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.165652217 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.172411384 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.17244711 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.169811226 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.170291098 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.170792953 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.180871178 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.180113425 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.168938081 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.171014095 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.170653657 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.168850658 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.170744021 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.171530131 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.640576639 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.169904729 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.172120486 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.168045708 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.174956599 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.169130948 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.169993444 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.169709252 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.170307927 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.177488686 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.169327838 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.172022254 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.170325304 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.1731585 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.171729306 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.170631429 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.169957716 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.173719376 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172979364 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.172532858 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.180010017 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.18115483 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.174332975 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.169277667 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.169059078 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.172004993 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.171951506 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.171523558 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.170017399 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.170816166 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.171257378 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.170044457 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.170346303 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.172098083 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.178128668 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.173401287 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172567376 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.17444061 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.178196361 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169447397 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.169239174 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.172702855 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.174411412 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.171543392 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.174076267 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.181244487 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.176483109 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.191342883 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.183953744 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.177684345 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.172296496 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.176392388 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.18536696 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.171946453 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.17748596 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.170553363 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.175897858 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.174203314 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.178911574 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.172029382 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.17873364 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.171815424 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.17334412 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.181210739 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.193484477 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.172792074 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.175083568 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.18038282 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.174700539 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.171422051 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.171314567 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.176577083 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.180906023 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.191105892 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.173723329 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.175689957 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.173650998 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.175718123 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.177493589 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.175910397 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.171896138 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.171426887 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.174881119 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.180358825 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.173378966 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.174360193 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.172462701 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.176544432 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.178516669 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.182084425 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.173577718 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.176426691 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.175355495 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.173914108 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.173531821 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.176697836 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.173521756 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.173777769 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.174607484 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.173183712 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.17743517 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.174994613 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.176588722 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.179350721 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.179592538 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.178370661 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178616055 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.187725155 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.185963474 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.175598976 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.17748417 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.175293243 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.176394966 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.176842263 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.176098017 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.179812952 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.180502156 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.177785124 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.176027443 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.178719467 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.181242488 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.194676532 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.197514359 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175841475 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.176838473 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.178808072 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.175463585 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.175469282 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.176525716 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.177989355 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.180420152 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.189790606 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.178644093 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.18512125 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.196182463 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.178283582 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.18384463 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.182420306 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.187915976 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.181554424 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.178728923 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.177624802 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.186285846 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.198203761 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.180837831 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.186564616 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.211633929 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.196201551 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.179296993 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.179712346 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.181809177 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.17963898 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.181728303 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.179394693 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.179561068 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.179419527 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.18309012 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.177786815 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.185202703 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.18121472 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.181829492 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.177565124 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.179295 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.179662764 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.176811377 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.178198632 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.180011794 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.179903459 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.179903997 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.181211739 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.183608609 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.194662506 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.202240862 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.180854199 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.179413596 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.179959009 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.182552071 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.184313572 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192049621 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.187201297 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.181840447 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.181332892 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.180401678 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.180369872 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.181780584 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.178958797 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.179559091 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.18043408 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.17885677 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.191978602 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.204744565 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.187134064 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.181936259 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.183800464 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.183000504 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.183335327 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.182291237 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.180918782 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.184476372 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.186165652 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.188137088 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.180914965 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.181004555 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.186597924 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.190105624 seconds)
  done (took 696.570098637 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.181844439 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.180571965 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.180558844 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.181424728 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.181372134 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.179973801 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179809106 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.180401192 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.181528253 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.182143899 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.180135983 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.181219778 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.178571567 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.180804985 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179381762 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.181903648 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.181762877 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.180513673 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.179172688 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181518155 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.179515121 seconds)
  done (took 25.887255637 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.188988198 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.183468613 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.179177954 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.182101081 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.180934263 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.183392784 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.18299499 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184856742 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.185392648 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182635581 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.183806848 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.183075701 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.183591126 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.185178108 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182298383 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.183388558 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.185010947 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.179709458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.187764256 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.181436195 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.184794155 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.184108367 seconds)
  done (took 27.133667091 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.189696822 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.189155041 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.184527819 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.182490534 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.188078823 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.181988657 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.186037032 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.187754785 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.188066656 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.186778394 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.188462603 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.18742375 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.194906371 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.193983522 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.188972895 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.186755531 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.184282699 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.186785791 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.189306505 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.184508349 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.189975231 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.202055176 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.180614632 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.186409996 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.186521345 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.186011938 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.18736569 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.187139354 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.190674861 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.190939342 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.187886941 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.188288091 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.188593063 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.186345514 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.190144945 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.19377247 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.186701946 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.186061153 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.187780969 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.197312475 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.209176579 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.183915205 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.194329074 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.207007216 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.186706774 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.189888228 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.199123713 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.188547887 seconds)
  done (took 58.184327984 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.763553582 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.779320957 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.776070554 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.778971419 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.794676166 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.775503074 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.779706649 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.793822715 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.768756792 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.775283738 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.775840468 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.774960918 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.781444727 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.78202566 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.774654041 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.776139986 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.772255992 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.786459911 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.774862115 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.787890715 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.771975537 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.774230742 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.77374471 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.772155536 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.779934648 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.776967853 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.779964871 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.779044041 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.780192125 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.792853607 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.777516885 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.77628811 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.791924784 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.772528989 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.779130959 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.775777564 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.784894673 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.774753074 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.787730188 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.780815714 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.783757623 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.781983689 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.796691044 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.783833949 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.797889743 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.782283284 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.781497749 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.779410451 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.780435872 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.785122853 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.779592887 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.785036263 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.78299514 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.781666139 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.795786165 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.787879205 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.784840559 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.793866168 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.780224476 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.781626103 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.775045238 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.783791064 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.781066579 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.78317137 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.779936193 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.780804432 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.780068394 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.797513367 seconds)
  done (took 122.224240269 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.1920721 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.194150339 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196601598 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194394351 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.195209764 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.197228881 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.195714787 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.193888824 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.198517387 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.196370582 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.198333448 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.19656865 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.195271291 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.194617922 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.194098475 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.19729668 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.196448252 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.194942954 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.196683248 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196273607 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.196368643 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.193393281 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.196418009 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.195613362 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.196797242 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.194736312 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.196120408 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.194732141 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197789765 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.19643072 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198453283 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.194822635 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.19841853 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.194102419 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.198608613 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.197972307 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.197740128 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196333357 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.1965843 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.196964673 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.197622629 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.195296731 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.197505349 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.198030086 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.193531394 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.196720469 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.200071099 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.196801914 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.197727533 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.194657254 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.199485367 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197739927 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199268139 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.196544484 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.197228149 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.200377948 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198060493 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.197181594 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198404399 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.197592684 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201837165 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.199210375 seconds)
  done (took 75.300763059 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200052783 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.198082397 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.196407647 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.195728257 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.198634973 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198948324 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.198571693 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.197297277 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.19963783 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.198396679 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198843257 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.196661334 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197784419 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197927099 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.199601097 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198174985 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19791621 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.198996707 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203530606 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.198223173 seconds)
  done (took 25.076579032 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.201327224 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.197787494 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.196104106 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.198224238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.203177783 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.195438147 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.199549889 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199921519 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198601577 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199763081 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201847651 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.200704876 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199352369 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200085915 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.203149218 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.197871458 seconds)
  done (took 20.299991247 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.198258136 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.20100084 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.202760009 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.199554307 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.199536233 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.198929325 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.205712045 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.19943211 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.197934164 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.204351999 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.203359479 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.202084202 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.201537467 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.202322327 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.198262007 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.200684473 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.199838375 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.197496595 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.197966008 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.201611936 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.19984683 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.200110835 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.203878354 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.204656796 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.200160342 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.201392555 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.200297959 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.199914825 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.199941819 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.204550863 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.20090396 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.200254574 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.198227251 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.200293033 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.204506733 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.200301936 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.204603858 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.204047003 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.202678938 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.203617542 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.202941827 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.203027152 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.204703781 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.205477779 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.202036579 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.203309722 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.202678467 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.201627254 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.202602922 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.204058557 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.203158022 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.203576237 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.203905433 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.206696111 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.203624625 seconds)
  done (took 67.210464252 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210664264 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.203301268 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.200929869 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.200634651 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.203778809 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.202667729 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.205997803 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.202033456 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201952026 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.201640388 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.203312825 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.207670651 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199961075 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.204881703 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.200994128 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20322246 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.204690778 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.200987873 seconds)
  done (took 22.771346142 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.204113793 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.202851685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.207247257 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.201394516 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.202184256 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.207066168 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203122895 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.205475349 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206750295 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.205593302 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203594152 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.207419684 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204471151 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.205355789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205376757 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202431647 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.207722845 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206073774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202716977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207789657 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.209829846 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205659724 seconds)
  done (took 27.626291317 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.210399808 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.205707397 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.205113804 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.222857383 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.22855593 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.204595899 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.207485722 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.208358425 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.22995371 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.268424685 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.260810608 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.233335343 seconds)
  done (took 15.797717188 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21055357 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209549538 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.205378147 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207090755 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207468831 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204483036 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205494142 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20674893 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209788605 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207000346 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204880252 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209055615 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20931194 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20733119 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208636739 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209735035 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207671336 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205254614 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208535834 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210291565 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205865858 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210018071 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206138372 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207532119 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207195381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208153805 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208729841 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207616797 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208467687 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208158976 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210418725 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207965424 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209967892 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206256867 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208217988 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207605674 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209235756 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209881801 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211038546 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207581374 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.209155327 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211572185 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211435492 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208582271 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210187616 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207062284 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20770569 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205288541 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20660491 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209871987 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209217496 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206305845 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208632979 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211091923 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210157413 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213003588 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210576591 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209285377 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211205478 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2100054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209680836 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213575826 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208970207 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208292669 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210731983 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208372672 seconds)
  done (took 80.881640411 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212387561 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.209193473 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2111545 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210085894 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206716862 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209240616 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209668202 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212431372 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207428523 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209050067 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214646996 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209064694 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211730057 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209545025 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209643398 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211941849 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211588393 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212001604 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21275218 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21533296 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210700498 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212967747 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2088933 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210646922 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211137187 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217241556 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209616925 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212189706 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212150166 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210089674 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214869571 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21202072 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2118144 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.211217673 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210850177 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21178522 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212494614 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211178567 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20963167 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212987287 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214685499 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21233594 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211299456 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211617817 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210686954 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213337849 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209026712 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212174598 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212754764 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212011135 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213838343 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211224659 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214265689 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210470581 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212567299 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213559461 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21140265 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214898268 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214499527 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215492025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213684846 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215215645 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217603391 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215630685 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211939008 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216831086 seconds)
  done (took 81.113014895 seconds)
done (took 1671.995683547 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.380908408 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.332662551 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.215150758 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.226768012 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.21169911 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.238009425 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.225364313 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.212406645 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.216259046 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.217524143 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.21574893 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.404751928 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.209710517 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.213561347 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.217904014 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.308071926 seconds)
  done (took 25.168996044 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.24301617 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.224625613 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.329456422 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.237520614 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.246030283 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.398537811 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.275515069 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.22572875 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.387406309 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.261660413 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.221234678 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.245044484 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.225000294 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.220911197 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.241086297 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.403031649 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.466427245 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.224009932 seconds)
  done (took 27.199502163 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.667374296 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.241393125 seconds)
  done (took 5.038054719 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.245084627 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.222116359 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.224142935 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.220836483 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.214141578 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.209591557 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.223524478 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.214942136 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.215019434 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.346600802 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.224417791 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.234617685 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.240761872 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.223911431 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.219961481 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.263222896 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.367203874 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.220140951 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.216317659 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.229471166 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.221378557 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.327731267 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.26251416 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.22224848 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.345085805 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.2277103 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.223976786 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.230279705 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.357951412 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.223550485 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.220408589 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.221973675 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.223244815 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.127383695 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.665750941 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.218755488 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.245684569 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.232599798 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.221836661 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.378855775 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.226715618 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.229949224 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.219280568 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.644780002 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.378985483 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.340853188 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.228272508 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.221878774 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.225211854 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.288565556 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.22295336 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.224400831 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.26651466 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.043645627 seconds)
  done (took 79.071454096 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.216143901 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.218440452 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.397486461 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.237524193 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.211972805 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.219773838 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.216750644 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.504398615 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.234687571 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.21885608 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.511153177 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.788230368 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.244094416 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.269143628 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.095729419 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.278874957 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.217741847 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.236442284 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.217701432 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.217685255 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765823247 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.225941142 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.212876636 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.309056337 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.258501204 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731737901 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.212923597 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.232522364 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.217692847 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.214740737 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.73797927 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.237512215 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.22795538 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.218818165 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.493305429 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.588906262 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.549381039 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.218406048 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.267986444 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.21788945 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.243149428 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.716913255 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.570101817 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.215444009 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.218270806 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.728139015 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.213935601 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.221758733 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.223051107 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.470885191 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.219988943 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.220992098 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.231552711 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.235971571 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.220670285 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.231782083 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.308854963 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.732581128 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.216379207 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.216127098 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.243308619 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.218617391 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.224285274 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.22314908 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.2371297 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.574191573 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.433154677 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.222019053 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.575584915 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.729210483 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.230151516 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.795293299 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.23246381 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.231955624 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.409072942 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.223079046 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.233826296 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740983836 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.238900243 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.21785994 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.556117155 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.220884702 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.512610278 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.234865163 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.218896354 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.777523884 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.233470841 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.299223912 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.220449396 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.237806678 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.219207163 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.242650328 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.496258114 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.294900669 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.220722864 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.220700769 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.227349697 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.221181002 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.217692524 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.225647221 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.79779117 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.239742087 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.22116241 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.224857682 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.223364424 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.222359339 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.225389483 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.224957394 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.491377864 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.224818506 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.228566947 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.227848163 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.223104059 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.242295986 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.31765843 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.23388451 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.535673893 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.221381017 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.222727552 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.222130489 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.223311086 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.275280007 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.22067242 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.225365578 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.075659645 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.504922188 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.239692216 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.222575728 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.224264867 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.223155999 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.222079947 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.223929321 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.259979993 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.22523414 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98514933 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.245446974 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.230525725 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.225402596 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.234539041 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.223721742 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.22513931 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.224575166 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.524891463 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.51048631 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.421323839 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.222502699 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.231021125 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969680568 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.262141049 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.406848653 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.246632879 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.223590294 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.4754708 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.43980328 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.227552999 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.224080568 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.224134408 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485286222 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.228634921 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.543903964 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776449057 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.242859851 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.226219552 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992552922 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.94642829 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.227218513 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.229297172 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.51277608 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.241633029 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.228055455 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.226054702 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.228719069 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.242896268 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.242463764 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.226820893 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.228763205 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.230553668 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.548701708 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.421873211 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.244843874 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.231378728 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.733839395 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.234082659 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.227811262 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.232933454 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.226146347 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.226581461 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.283795089 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.233608183 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.274196881 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.229427153 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.23007072 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.752921971 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.227238429 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.230174781 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.421785842 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.91351945 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.243743033 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.227793315 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.242755055 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.12182673 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.756626394 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.263559971 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.535750792 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.224554401 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.271888328 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.231432403 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321903555 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.801330366 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.229411226 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.245244784 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88598153 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.247261414 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.645879797 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.226446225 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.22874458 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834911053 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.243493434 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.23336833 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.228242141 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.224537872 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522850928 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.232179482 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.249509458 seconds)
  done (took 473.714232871 seconds)
done (took 611.314067097 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.229519866 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.227435833 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.218231403 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.230089824 seconds)
  done (took 10.047115394 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.243854644 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.23617263 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.237543898 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.238632755 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.239672793 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.236430716 seconds)
  done (took 8.575138942 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.232178326 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.22914883 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.232374303 seconds)
  done (took 7.837192101 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.443874157 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.248166175 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.560138524 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.24975979 seconds)
  done (took 8.64653849 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.23881738 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.239216991 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.238296951 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.238756985 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.241099197 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.242124481 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.238911056 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.240160896 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.241777386 seconds)
  done (took 12.299765512 seconds)
done (took 48.548865772 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.234047082 seconds)
    (2/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.39554328 seconds)
    (3/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.432918222 seconds)
    (4/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.233485844 seconds)
    (5/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.457563333 seconds)
    (6/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.245173963 seconds)
    (7/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.23282937 seconds)
    (8/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.411404204 seconds)
    (9/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.290510652 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.392485904 seconds)
    (11/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.219520047 seconds)
    (12/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.344507447 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.244921534 seconds)
    (14/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.318696375 seconds)
    (15/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.376238581 seconds)
    (16/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.265080559 seconds)
    (17/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.425544381 seconds)
    (18/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.321142015 seconds)
    (19/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.882838093 seconds)
    (20/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.258676467 seconds)
    (21/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.280831426 seconds)
    (22/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.253167648 seconds)
    (23/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.32207741 seconds)
    (24/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.316648288 seconds)
    (25/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.374786045 seconds)
    (26/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.253053622 seconds)
    (27/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.220847146 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.333672245 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.244478383 seconds)
    (30/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.360753823 seconds)
    (31/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.395689998 seconds)
    (32/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.344540109 seconds)
    (33/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.357027891 seconds)
    (34/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.258212127 seconds)
    (35/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.88619125 seconds)
    (36/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.244876548 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.401099106 seconds)
    (38/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.237866601 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.273357859 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.283353959 seconds)
    (41/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.259432813 seconds)
    (42/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.235957959 seconds)
    (43/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.896651809 seconds)
    (44/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.329844862 seconds)
    (45/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.426184566 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.259613642 seconds)
    (47/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.31572242 seconds)
    (48/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.220236133 seconds)
    (49/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.256291856 seconds)
    (50/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.983319639 seconds)
    (51/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.396381414 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.299819223 seconds)
    (53/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.248862133 seconds)
    (54/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.320965238 seconds)
    (55/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.288799988 seconds)
    (56/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.372414019 seconds)
    (57/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.283326081 seconds)
    (58/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.570626867 seconds)
    (59/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.424832718 seconds)
    (60/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.110856878 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.309752207 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.337778793 seconds)
    (63/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.542214656 seconds)
    (64/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.043654832 seconds)
    (65/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.372228527 seconds)
    (66/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.305395155 seconds)
    (67/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.440619689 seconds)
    (68/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.260098226 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.340885196 seconds)
    (70/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.304827554 seconds)
    (71/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.26395916 seconds)
    (72/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.225658227 seconds)
    (73/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.38544441 seconds)
    (74/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.277494011 seconds)
    (75/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.081338423 seconds)
    (76/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.25836059 seconds)
    (77/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.254066383 seconds)
    (78/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.41036749 seconds)
    (79/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.268183951 seconds)
    (80/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.106158197 seconds)
    (81/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.957626249 seconds)
    (82/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.224207424 seconds)
    (83/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.283244791 seconds)
    (84/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.363690508 seconds)
    (85/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.23694124 seconds)
    (86/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.315772791 seconds)
    (87/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.93945435 seconds)
    (88/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.322735758 seconds)
    (89/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.259261169 seconds)
    (90/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.271138755 seconds)
    (91/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.463388606 seconds)
    (92/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.32825841 seconds)
    (93/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.266688775 seconds)
    (94/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.368894603 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.29572716 seconds)
    (96/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.262231081 seconds)
    (97/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.320633476 seconds)
    (98/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.439856154 seconds)
    (99/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.250258667 seconds)
    (100/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.89100615 seconds)
    (101/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.236937017 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.325174492 seconds)
    (103/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.248976384 seconds)
    (104/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.253065581 seconds)
    (105/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.239734591 seconds)
    (106/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.29872778 seconds)
    (107/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.254695586 seconds)
    (108/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.384207465 seconds)
    (109/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.25794769 seconds)
    (110/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.412004203 seconds)
    (111/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.324503822 seconds)
    (112/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.610968886 seconds)
    (113/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.355820442 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.349220761 seconds)
    (115/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.888150229 seconds)
    (116/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.321812985 seconds)
    (117/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.229397822 seconds)
    (118/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.266740546 seconds)
    (119/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.227172424 seconds)
    (120/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.355907822 seconds)
    (121/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.26998456 seconds)
    (122/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.984898234 seconds)
    (123/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.241776634 seconds)
    (124/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.363662131 seconds)
    (125/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.331605563 seconds)
    (126/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.254061521 seconds)
    (127/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.255329278 seconds)
    (128/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.249623503 seconds)
    (129/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.986286531 seconds)
    (130/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.367315709 seconds)
    (131/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.226966849 seconds)
    (132/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.243688748 seconds)
    (133/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.104385458 seconds)
    (134/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.280988074 seconds)
    (135/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.421511581 seconds)
    (136/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.298702123 seconds)
    (137/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.987628856 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.358512627 seconds)
    (139/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.251679662 seconds)
    (140/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.414129179 seconds)
    (141/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.463928845 seconds)
    (142/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.247997512 seconds)
    (143/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.288670158 seconds)
    (144/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.229376907 seconds)
    (145/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.262821808 seconds)
    (146/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.345841207 seconds)
    (147/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.387359449 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.296456426 seconds)
    (149/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.313486743 seconds)
    (150/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.343643146 seconds)
    (151/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.907142333 seconds)
    (152/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.248034314 seconds)
    (153/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.278266115 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.333332675 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.266086712 seconds)
    (156/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.254960579 seconds)
    (157/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.994141783 seconds)
    (158/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.907450618 seconds)
    (159/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.387414204 seconds)
    (160/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.266648966 seconds)
    (161/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.23906661 seconds)
    (162/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.452971367 seconds)
    (163/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.362645959 seconds)
    (164/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.269429121 seconds)
    (165/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.25927027 seconds)
    (166/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.327676622 seconds)
    (167/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.387288959 seconds)
    (168/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.230973101 seconds)
    (169/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.358660311 seconds)
    (170/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.344002242 seconds)
    (171/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.270517953 seconds)
    (172/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.000149348 seconds)
    (173/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.960433614 seconds)
    (174/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.233899882 seconds)
    (175/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.492721912 seconds)
    (176/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.264473614 seconds)
    (177/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.302714107 seconds)
    (178/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.34123837 seconds)
    (179/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.329999307 seconds)
    (180/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.264487667 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.311863645 seconds)
    (182/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.37311909 seconds)
    (183/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.593439527 seconds)
    (184/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.33604911 seconds)
    (185/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.252373546 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.411624923 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.28568905 seconds)
    (188/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.362938148 seconds)
    (189/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.324050759 seconds)
    (190/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.253024465 seconds)
    (191/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.306724276 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.258013737 seconds)
    (193/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.074985487 seconds)
    (194/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.32361851 seconds)
    (195/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.380279632 seconds)
    (196/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.285501842 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.281229036 seconds)
    (198/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.376216904 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.355841142 seconds)
    (200/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.450097355 seconds)
    (201/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.323981553 seconds)
    (202/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.297937403 seconds)
    (203/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.323145518 seconds)
    (204/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.988203397 seconds)
    (205/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.276672793 seconds)
    (206/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.268259313 seconds)
    (207/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.459866498 seconds)
    (208/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.296182731 seconds)
    (209/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.271246033 seconds)
    (210/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.328244725 seconds)
    (211/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.238083839 seconds)
    (212/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.259173131 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.426573723 seconds)
    (214/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.988528512 seconds)
    (215/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.271735525 seconds)
    (216/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.245856256 seconds)
    (217/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.277199597 seconds)
    (218/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.348451245 seconds)
    (219/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.897162443 seconds)
    (220/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.492333792 seconds)
    (221/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.297160474 seconds)
    (222/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.324116421 seconds)
    (223/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.401346784 seconds)
    (224/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.948727996 seconds)
  done (took 347.436062181 seconds)
done (took 348.58129747 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303812148 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.436470153 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.272656305 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.27575547 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300002117 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.254016932 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.288190895 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.273986453 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.257349343 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.259695738 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.253370897 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.264203164 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.278308645 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.29099984 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.370426591 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.262921114 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.272956623 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.259812688 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.296069722 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.316661731 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.298757408 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301370269 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.273102389 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.277064033 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306880389 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305988146 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.279392154 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.254500224 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.253823063 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.299027194 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.248811943 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.275676944 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.30746045 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.307340255 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303282425 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.2592564 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.302549698 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.437129524 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.292648468 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.293127707 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.263100983 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.309626903 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.269587017 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.266869627 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.309560804 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.269838463 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308026056 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.383403754 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.249114578 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.260781179 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.302578313 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.321477891 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.26218189 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.260951568 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.245331568 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.378252236 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.262790937 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305695468 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.263349939 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303119683 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.373708434 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.305018925 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.323094534 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.307626719 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.25983462 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.27903712 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.261975654 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.320025176 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.261678741 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303191821 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306463743 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.266128381 seconds)
done (took 102.190615285 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.321724249 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.258608207 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.361585019 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.259395908 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.358014834 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.352882167 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.255826888 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.258628887 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.259275826 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.641666179 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.258821483 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.256047102 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.256546212 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.259321063 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.344158566 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.260415891 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.257111957 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.614058834 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.257950915 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.332607027 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.259714051 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.258717044 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.260774741 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.64750077 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.258898466 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.25439429 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.333775665 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.263394994 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.603394938 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.257269037 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.259729132 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.612812359 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.350738364 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.27774348 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.269848543 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.271325557 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.362006796 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.27591527 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.345627213 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.344690707 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.361361833 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.300096343 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.255015388 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.262832151 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.264054221 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.262538683 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.260569818 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.287152186 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.258856336 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.256944265 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.606610588 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.272016876 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.259685831 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.2602109 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.261110634 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.29210244 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.259814031 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.262279509 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.353620604 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.260679195 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.32601127 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.641969769 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.660164652 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.267047143 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.259286064 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.263138994 seconds)
  done (took 99.632759504 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.332460973 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.336966547 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.376318878 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.277883481 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.316896816 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.380989581 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.279067555 seconds)
  done (took 10.467140541 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.272169895 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.265804108 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.315678279 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.314247567 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.266120773 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.481577784 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.266614027 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.273398448 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.262380475 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.341437956 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.265703471 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.265517345 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.270212311 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.259672558 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.31116081 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.275735119 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.381769102 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.26558329 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.264963672 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.417351892 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.263296765 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.270326608 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.342968643 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.276934262 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.26715257 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.272281168 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.234905248 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.265826776 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.264779534 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.266425527 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.26547445 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.377527678 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.266377074 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.262107344 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265833449 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429026526 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.269853454 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.263493893 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.267512183 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.255976254 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.268969161 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.265031055 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.269919186 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.262482698 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.266836554 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.290955815 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.269725111 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.266351977 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.266341916 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.269045897 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.346112078 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.267118403 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.264365858 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.265771637 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.343805374 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.277166234 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.270524272 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.268062567 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.26810088 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.268185294 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.421573767 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.316272121 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.270066818 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.316980433 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.265148005 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.268849661 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.267790878 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.268149774 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361051481 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.270312745 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.31510884 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.266856318 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.49288398 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.293420583 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.271740843 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.272143241 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.273894923 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.269760238 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.266177625 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.279814152 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.267869513 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.27148783 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.276993339 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.268235391 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.267379936 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.455589497 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.427312144 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.265750022 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.282146351 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.277621302 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.26805039 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.346499983 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.270058484 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.267197187 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.321879643 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.386619979 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.349434093 seconds)
  done (took 131.686301012 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.289128682 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.291317607 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.288242565 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.307731718 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.301659698 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.285389285 seconds)
  done (took 8.933249091 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.273739418 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.27382188 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.273738986 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.272757048 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.274125649 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.273797953 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.27176681 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.274562638 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.277508894 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.274211427 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.271005392 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.275250145 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.275764075 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.272455494 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.273716219 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.273745505 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.277061208 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.273592504 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.274709745 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.271849745 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.273013282 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.276132817 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.272920677 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.275689305 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.277384913 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.277032586 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.282738886 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.274352682 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.273560493 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.283099347 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.286805088 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.277292688 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.277362608 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.281017795 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.279811351 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.274323292 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.278396103 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.276276914 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.27351648 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.275393613 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.276483788 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.272713453 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.276006835 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.277071529 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.277703573 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.285482906 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.280245678 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.282497542 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.274825038 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.276825994 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.277334469 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.275463827 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.273373967 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.27637442 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.277179042 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.293420226 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.278759679 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.276636134 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.272544919 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.278411539 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.27723049 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.275205923 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.277692158 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.281102458 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.273715467 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.27586045 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.279169111 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.279265539 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.275738851 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.275392999 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.277751997 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.27606887 seconds)
  done (took 94.084621531 seconds)
done (took 345.964251721 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.211574178 seconds)
  done (took 4.389473047 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.293679557 seconds)
  done (took 3.473521344 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.919654976 seconds)
  done (took 23.100581305 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.286689249 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.338298566 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.291391113 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.267684934 seconds)
  done (took 10.362266083 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.569503408 seconds)
  done (took 3.75167193 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.271835254 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.269553322 seconds)
  done (took 5.722263307 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.526575161 seconds)
  done (took 3.70316557 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.598417099 seconds)
  done (took 3.777939379 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.275821316 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.287701091 seconds)
  done (took 5.752146558 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.257955585 seconds)
  done (took 3.4348412 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.239822387 seconds)
  done (took 16.420078886 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.278632605 seconds)
  done (took 3.463079417 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.294388792 seconds)
  done (took 3.474739841 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.838566735 seconds)
  done (took 6.019099663 seconds)
done (took 98.021860337 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.27166491 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.273809087 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.270308694 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.276027562 seconds)
  done (took 10.270516623 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.332972947 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.334195463 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.332597802 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.331421867 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.331188229 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.337092246 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.308251815 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.309745164 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.33370713 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.33195623 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.339179373 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.329577193 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.331094093 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.304342979 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.332713645 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.332745269 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.333145315 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.33415312 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.30530959 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.333578154 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.279442334 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.333904046 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.333341235 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.282640769 seconds)
  done (took 32.971821179 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.775589105 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.35131286 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.434992253 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.333242787 seconds)
  done (took 7.078276525 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.360413086 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.359990453 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.385187836 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.408349614 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.422430759 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.367660321 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.309762027 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.299792722 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.287975023 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.358446791 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.409133158 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.358715547 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.436361643 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.282284886 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.488580686 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.281836359 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.281905696 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.357071314 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.410011278 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.42272815 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.281089862 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.356034058 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.361944368 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.360751091 seconds)
  done (took 33.831251882 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.290130818 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.29583524 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.282961979 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.296191062 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.281250503 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.281361549 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.284072998 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.285906736 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.28036762 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.282965043 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.28164598 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.294672329 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.284151909 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.280833594 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.290903743 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.28342632 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.288646786 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.284797938 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.284143995 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.289866896 seconds)
  done (took 26.908875608 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.276748751 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.278105998 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.627044113 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.533543876 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.276830503 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.27818121 seconds)
  done (took 13.452352897 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.354169489 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.517052627 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.283593428 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.646223696 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.732994292 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.286614784 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.285300452 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.541583373 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.857189048 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.8318946 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.343261028 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.355553329 seconds)
  done (took 19.221509163 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.280387254 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.277674707 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.279129344 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.293507913 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.33995664 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.30256439 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.290262645 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.278238641 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.338889397 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.360798477 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.302962846 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.342095063 seconds)
  done (took 20.871725702 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375311221 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.277131806 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290344973 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301847872 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275092765 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122442351 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295034147 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.033302514 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.298054888 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551354585 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278295511 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378141525 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.5353061 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291615109 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.281127053 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.267063159 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507994523 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786555598 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281076148 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279564261 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314274216 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279264186 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306250233 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.496461076 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283651662 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281104377 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.544342443 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282919618 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572885415 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297659937 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293660559 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280586978 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556064945 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975869249 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398451299 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495997937 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287916344 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.294886944 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.27543131 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.295829133 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286654199 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.285669391 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29199882 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282606684 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283121 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294284593 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058919045 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.317939466 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.278744378 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.282504117 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545500418 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380960258 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.283486364 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.281384065 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35872884 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279697048 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.286047581 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37730097 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860251633 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280165755 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304772563 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.283171759 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.281535966 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307399648 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934713642 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.305729444 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.286412548 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.285496977 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28029748 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288412584 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300086963 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283376185 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.302100718 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282269572 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031845224 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306013966 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27837841 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844293242 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293555471 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.280201431 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.513137065 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279598592 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280728871 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.278092627 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278658414 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99180454 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286339403 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.266291385 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.320583818 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.033428203 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.510748132 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305107182 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3116465 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.503649638 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.26650506 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281588244 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.280668243 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283309704 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299086442 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.049256588 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298668335 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.282034376 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540474441 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.494312718 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283517649 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.26821194 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793483474 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310640251 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.2978804 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281931288 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.491420772 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.875298439 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312043297 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283557853 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295243712 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281587327 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023441026 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29098913 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.38573135 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.280036798 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548100247 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.138242553 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284167832 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351221215 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282835549 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.281592652 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293270068 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28353502 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282542744 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.479434214 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31036625 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.291891271 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.280271115 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286373601 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.274032408 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294121054 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.284654659 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.507392143 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278702421 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569956797 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278480247 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27837244 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274963227 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.500781401 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.278828649 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.61829832 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538816398 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286137866 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.285844129 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291695923 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297107196 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384365019 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301890297 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.284663326 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.538998384 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.286505952 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.286390825 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289590475 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284601907 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288184118 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.302625073 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279790358 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863668897 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274122851 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.284795723 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171783644 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.297203655 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349953996 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301735812 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484711558 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.278144014 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285732085 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.28250033 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.280844763 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50762361 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288036108 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.278543893 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356973621 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.763394122 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874697181 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311046784 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.280642059 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.277686172 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.275614705 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280528628 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282740067 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280818317 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484055987 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.296578259 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.291433987 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.863670015 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300373665 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.280211727 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.290528399 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.293761273 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.302138264 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282578491 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.281827347 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286390876 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284274157 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.293989203 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426051081 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.298710345 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282499363 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.801309775 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301612145 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.281547179 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283639092 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318488374 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283146855 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106730476 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560978247 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285384266 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529707989 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.286941622 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.301765608 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.280320058 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28161021 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282973055 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.302759411 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305839782 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.293533373 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282635634 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285499713 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856612749 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043147276 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84586116 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305131639 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.286123754 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.284759088 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011861115 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299689661 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285239099 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512323539 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025453422 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297541709 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772267165 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.297596066 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025541894 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537235896 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519548373 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288744784 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.284327117 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536874476 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497574939 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320934295 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287350059 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285694812 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.2685105 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845133674 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310219004 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366823708 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02937361 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303753624 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286118651 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.310675478 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286949285 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712925784 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.301409491 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285213642 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.281310661 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.295505797 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109609996 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307583862 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288406149 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906344636 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305918186 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.766826477 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301181237 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.491076316 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.299157818 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.294311825 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.287946608 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.296576348 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.544147724 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539624103 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292233486 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.296897405 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835589031 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.169768657 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.29403893 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289042963 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012141441 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294194556 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566918862 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.288412593 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.284978994 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292724824 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288717498 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289482539 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.286851147 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.295092365 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26651683 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762197527 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.293647015 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308257337 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304041839 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289289905 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.545803252 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.30417523 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.873791951 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534996549 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291514971 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326690563 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.29220281 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293362854 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.275845698 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.288741743 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.286587489 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336015201 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.511755437 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290835893 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.279388124 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311522731 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.501451714 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.288659839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.296424261 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525250837 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.290177601 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.290981239 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038374932 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339025733 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298109136 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293133123 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288848275 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306716531 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359081981 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495678227 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.302458388 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.302442175 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701572001 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317177949 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294125899 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.307191012 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38747169 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29393755 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.290048306 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.062579821 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878570163 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042822405 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.894355674 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558107598 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29677359 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303164754 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294025157 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449418006 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292225298 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565984787 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292097276 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.298996467 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311175647 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296446605 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309450598 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509040148 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565027555 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292462207 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295151334 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295475379 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.294271351 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304486678 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.504173577 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771641444 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839226077 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297405817 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303724404 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037059087 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582165876 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295399692 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29393778 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295169958 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.296313319 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.307740955 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.314311319 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29399804 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45643286 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54347685 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970798269 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.323585897 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.32082938 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.814100437 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296570493 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.549896708 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292662247 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.517347402 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88210477 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013654599 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558223166 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365772098 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498722468 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.29519072 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462010757 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.296625701 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.297397124 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295330155 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29663908 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.294048775 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.306675844 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886096474 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578150991 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.300312488 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.300078913 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329392633 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.307422454 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.519678851 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99169366 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.52245222 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.306730281 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307556624 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298655213 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887357286 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566784989 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296695104 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.294794116 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531201071 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296568039 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.318910623 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.81483968 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.29533266 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84084582 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.269090572 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321517515 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310745186 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.007151566 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88061655 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.313892811 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78101605 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300271757 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298628241 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574690419 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.31611692 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.30812648 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578607586 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.300890042 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307994994 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507278284 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.882041178 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047964573 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.300168905 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316459037 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.303634737 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300011945 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334873024 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310171799 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29547483 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.734726968 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323864911 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30085811 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30588036 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.301756598 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311838953 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.297239577 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301851784 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.315843267 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.292897089 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.29076063 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31741032 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387606176 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867022741 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313723811 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.970360047 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.625408532 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.55699206 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310643542 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.289333765 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.306006343 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301185464 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302509503 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296559158 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.299655762 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842221422 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.315754276 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.313001273 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.305301275 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.301801723 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513960863 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313286001 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.51219728 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314791673 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.316981735 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.287922174 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30190282 seconds)
  done (took 935.227325598 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.305498414 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.320002648 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.328348038 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.299414582 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.310223186 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41694823 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.376734352 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.308032812 seconds)
  done (took 19.872038486 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.304583958 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.314399021 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.315379463 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.310973185 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.312131853 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.956929833 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.314484192 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.312740213 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.320181432 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.303503777 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.305658046 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.28679222 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.311516694 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.314360601 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.297566177 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.314644871 seconds)
  done (took 31.803329036 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.162805399 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.397468202 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.990433187 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.373599064 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.31586143 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.303499933 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.472546819 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.316732266 seconds)
  done (took 25.539181663 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.316773111 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.318589868 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.319567958 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.315692766 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.31252967 seconds)
  done (took 7.791791367 seconds)
done (took 1186.023136384 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.310260072 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.309873001 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.307940624 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.310298541 seconds)
  done (took 6.443958694 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.294967849 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.288250295 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.292552386 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.306240902 seconds)
  done (took 9.394391975 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.96577975 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.904584265 seconds)
  done (took 5.080843062 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.781019549 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.783532307 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.776308471 seconds)
  done (took 6.5533544 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.61744668 seconds)
  done (took 2.829232419 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.199854257 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.306702297 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.974385541 seconds)
  done (took 7.691980455 seconds)
done (took 39.202018977 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.307534744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.563423623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.463384008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.307852257 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.461427675 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.462918991 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.047219588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.315312643 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.308777382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.308743315 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.301674791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.46282119 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.027125901 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.570152106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.028634847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.551164311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.466382511 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.313391245 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.312854005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.314614548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.04203503 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.310321854 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.311783124 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.308532661 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.467452628 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.454240998 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.310895424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.550818607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.308031872 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.315265959 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.449229346 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.309676643 seconds)
  done (took 80.242971216 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.312611704 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.303303419 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.316056296 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.306042863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.312189457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.316376005 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.303654639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.307654324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.318074597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.308994818 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.302478556 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.307961938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.304987657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.31147932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.308157483 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.309514136 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.305541936 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.308930819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.32396702 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.320732186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.306867283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.306379483 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.302370011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.303196013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.307190145 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.337964237 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.305628886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.31723548 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.305577335 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.307985443 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.323964755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.307234286 seconds)
  done (took 75.153522323 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.31796471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.313119227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.306645822 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.321410855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.308409099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.326879499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.309214018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.307693134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.317533358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.315602183 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.307345722 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.306675966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.320538609 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.307892553 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.321666124 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.305609838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.319360695 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.32173261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.310447563 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.317140956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.308150344 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.312055219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.309358708 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.332153685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.311666623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.308773011 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.318775493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.306993219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.307239459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.305226504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.325594189 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.312252167 seconds)
  done (took 75.25829652 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.593858449 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.316960275 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.319118605 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.313183345 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.321687305 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.321526176 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.318444779 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.598026972 seconds)
  done (took 14.32042839 seconds)
done (took 246.185800478 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.310548301 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.52277483 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.33488954 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.313839666 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.355124311 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.33946941 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.53573742 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.352019313 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.526865789 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.325952777 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.340059251 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.312697899 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.586425932 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.46929159 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.248793911 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.316239071 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.659027267 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.328634053 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.580258026 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.577492354 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.336187313 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.315222589 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.222644672 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.665101615 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.31946642 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.392861899 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.416382293 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.52834802 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.468657186 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.392174223 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.538236308 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.31374474 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.308715488 seconds)
  done (took 59.769596866 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.323664262 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.437661535 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.320801391 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.329412024 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.445177873 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.3240325 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.321898177 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.322530046 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.325034897 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.324745229 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.32600693 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.327320931 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.323860497 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.371683405 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.448775825 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.333965459 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.32235317 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.435076674 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.321672538 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.318361419 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.367584459 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.323245325 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.32501022 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.365329056 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.323587927 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.322289015 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.437711266 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.324705192 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.318869404 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.436243109 seconds)
  done (took 41.766855626 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.325016885 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.56419114 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.735217905 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.33313532 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.324514334 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.328966569 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.399017085 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.325048271 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.330233549 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.328899579 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.488525437 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.323073944 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.358276848 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.759405349 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.329889241 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.325363995 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.326431659 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.32620767 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.573796572 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.338028871 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.412364416 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.325300197 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.396709308 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.334397516 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.343076604 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.326495431 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.332805237 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.90992297 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.32562826 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.486439497 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.053439136 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.39469917 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.856710889 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.742059224 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.050591465 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.329934942 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.328503739 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.492818185 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.325313359 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.326612953 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.397961912 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.327610386 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.744878436 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.990693633 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.338944802 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.328040009 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.925787286 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.485769772 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.550440571 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.341013225 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.768998642 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.327213231 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.329137138 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.328568611 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.555534519 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.329812876 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.328470226 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.93618854 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.342123798 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.399696374 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.329806244 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.328897711 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.57635078 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.325206278 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.570241957 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.33150608 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.338430459 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.345152024 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.757560439 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.328294481 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.989984949 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.339144252 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.326761256 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.490564829 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.567649119 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.957719467 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.343768406 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.577144593 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.860812916 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.394361356 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.32885895 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.899953936 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.39714495 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.333806781 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.331509766 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.330019301 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.330782701 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.376709686 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.398175019 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.924268542 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.990177547 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.933289304 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.413385648 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.336620383 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.329305246 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.925716724 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.340586159 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.330113637 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.747714703 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.006972968 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.344489037 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.339416111 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.022062912 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.351556035 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.405370446 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.337503036 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.770269807 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.332139106 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.377039929 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.335288029 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.336636464 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.348734944 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.404568357 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.337661836 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.333694545 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.990686142 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.515993848 seconds)
  done (took 175.506518392 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.337852165 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.320378861 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.33608454 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.323163087 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.324374956 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.33580415 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.325429399 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.328533289 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.332879375 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.324169315 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.326513325 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.337573855 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.332932895 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.325250035 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.326241742 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.32074215 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.326105904 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.32468754 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.321431367 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.326226466 seconds)
  done (took 43.787030904 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.332329815 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.857445684 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.451881515 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.348611121 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.329926412 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.332964595 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.384328661 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.332530507 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.330846513 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.617016468 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.489920275 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.350299173 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.331541872 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.334213664 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.458608888 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.343459181 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.620143686 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.864901665 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.334801384 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.869320691 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.3236922 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.336978946 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.334482353 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.868756127 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.61082594 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.402244922 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.391562639 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.867528668 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.333588943 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.333721695 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.863498695 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.333124066 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.339072895 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.863059151 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.350780279 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.342873158 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.331815841 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.390431628 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.39206949 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.622057022 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.941475353 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.405535246 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.346133017 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.676319619 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.338375375 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.326628315 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.869718301 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.352638561 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.324736915 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.33392512 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.343402857 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.475372909 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.336442282 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.472755263 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.332842646 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.337680809 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.871206577 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.476861274 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.460137424 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.517408738 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.350285176 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.4060021 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.334880131 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.873017726 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.350879999 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.340195836 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.33660364 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.499836278 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.888276344 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.411029681 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.624157364 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.624110343 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.336297515 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.389824723 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.348244154 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.689662682 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.392020522 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.743957474 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.623784263 seconds)
  done (took 118.27946178 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.580291454 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.441987235 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.480542693 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.94292681 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.331919362 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.46009641 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.43718022 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.584705316 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.346067236 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.425618722 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.54099655 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.416001654 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.039343909 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.407663789 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.427389372 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.477419694 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.478649776 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.347332407 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.973763187 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.522231038 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.356085945 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.434422859 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.929075718 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.497186313 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.336967864 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.873069839 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.242347404 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.967980056 seconds)
  done (took 50.53074465 seconds)
done (took 490.857469664 seconds)
SAVING RESULT...
DONE!
