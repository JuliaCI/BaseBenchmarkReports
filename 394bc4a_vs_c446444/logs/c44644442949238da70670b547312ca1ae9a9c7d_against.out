cset: moving following pidspec: 1500
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.91545288 seconds)
loading group "string"... done (took 0.548331478 seconds)
loading group "linalg"... done (took 8.983297824 seconds)
loading group "parallel"... done (took 0.171716249 seconds)
loading group "find"... done (took 1.456210794 seconds)
loading group "tuple"... done (took 2.112590305 seconds)
loading group "dates"... done (took 1.38822232 seconds)
loading group "micro"... done (took 0.21915134 seconds)
loading group "io"... done (took 0.632898691 seconds)
loading group "scalar"... done (took 44.12085203 seconds)
loading group "sparse"... done (took 14.057809367 seconds)
loading group "broadcast"... done (took 1.133869417 seconds)
loading group "union"... done (took 12.820117627 seconds)
loading group "simd"... done (took 2.697507757 seconds)
loading group "random"... done (took 10.603471566 seconds)
loading group "problem"... done (took 1833.47214339 seconds)
loading group "array"... done (took 25.232993654 seconds)
loading group "misc"... done (took 1.113517226 seconds)
loading group "sort"... done (took 3.710745691 seconds)
loading group "collection"... done (took 18.539169209 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.634208848 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120229945 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.167658165 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.346642018 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209823872 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.150694342 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166002574 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.559193496 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.952814137 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.212487085 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.146845931 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.542678297 seconds)
done (took 5.933167726 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.285251523 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.434973758 seconds)
    (2/2) benchmarking "String"...
    done (took 0.11414792 seconds)
  done (took 1.202909127 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093718778 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.180626917 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096069532 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.11095106 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111006861 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110007725 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095327852 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111622428 seconds)
  done (took 1.472742525 seconds)
done (took 3.720506774 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.498787477 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.886839243 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.543780146 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.137960982 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160037539 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.150694624 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.31948227 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160410203 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.124037042 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088609722 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171869384 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.355833048 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.482159002 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.976113515 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.085250222 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127994439 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.084562785 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.702361869 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081980195 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.139878119 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.528407571 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.122496186 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119647584 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.143654648 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.192840515 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133114601 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165865331 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.095495067 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.672882954 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10436597 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188604593 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099899349 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162393074 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.248627107 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096013475 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09859012 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68112482 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.179887438 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.115021149 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102144671 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682202019 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082731917 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.202456176 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109643176 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110179675 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188412716 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113593585 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079359339 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102814872 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.092047154 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163968504 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.476224347 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106951811 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.147513832 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108996686 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.696542707 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096925082 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155956847 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.139991297 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105502469 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097018968 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.105598028 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160176757 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110334545 seconds)
  done (took 19.730371523 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119119376 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140511335 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094406868 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141399259 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14105283 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096937832 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084110511 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094499204 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125510431 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186633939 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.1238651 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144583418 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091536586 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080630914 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.120632467 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249510723 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108998354 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121827227 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082344861 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106653213 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140786309 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09810089 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109481476 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108975044 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169251329 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205985965 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109936988 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124100157 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094989321 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101381291 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143141303 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.162580628 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076837424 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094914648 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185286001 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121368607 seconds)
  done (took 5.170036451 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.203190173 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117148509 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.195010408 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.181538236 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14862602 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169144958 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120385268 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267335513 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.179404605 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180100209 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.118087169 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131388859 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114183012 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079801297 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099636095 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078990404 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.679409688 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182828954 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153641365 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.127384396 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104541742 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084095482 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.376936624 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101683403 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083548992 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103539727 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.114796408 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090494169 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.178244344 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103956858 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.289325434 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120011392 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091410456 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135291513 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21400642 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118221607 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14251278 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103484768 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083679185 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.231795792 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094861305 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095325832 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109897537 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135704226 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134144083 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099599938 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095793279 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.240991872 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084347189 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121133542 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.073502038 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199020281 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098017562 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099080953 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.350358785 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115677748 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085440175 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.102287995 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282057625 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132091238 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084409664 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07807378 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103864092 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.098001514 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080370756 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.402316894 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108837818 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.963092138 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082385604 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15636589 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100716031 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107090153 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086743826 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10382057 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102705929 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097915297 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07901155 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097886718 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078774345 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102190386 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114604583 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086889895 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096447712 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147230982 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116373352 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118191568 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110892854 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101260906 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079589425 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131370373 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099099221 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084133632 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147796791 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104884903 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082805 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116724635 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101604911 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143105654 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082712066 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.182547997 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082790399 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124330246 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100457199 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115006493 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.12252475 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098150302 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084735622 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096427016 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080796318 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162093547 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083282026 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081212297 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102635127 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111511719 seconds)
  done (took 23.761789844 seconds)
done (took 49.318023531 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.470645562 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098167158 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114042354 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113596934 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111668994 seconds)
  done (took 1.638146717 seconds)
done (took 2.340042654 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.351524541 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171372768 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102913082 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19716748 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08706805 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203321271 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165844594 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.116790324 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202265568 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100685226 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180714749 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100215657 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089709995 seconds)
  done (took 2.801117285 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095402334 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1193 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082216849 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110071205 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075638223 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110178096 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093494183 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.137208091 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092531637 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101945872 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076304424 seconds)
  done (took 1.789578933 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092413066 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11373882 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081643961 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107677506 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076357823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089655607 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107803059 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116432998 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091435703 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102557565 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0776024 seconds)
  done (took 1.754617348 seconds)
done (took 7.033841251 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.026059899 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.712370461 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120113063 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166762587 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343336453 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.208940051 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.511458313 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132754901 seconds)
  done (took 11.103680732 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.133664907 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100653567 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082308105 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098255288 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083319705 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100441179 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082611494 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096208617 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083626434 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099364627 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081184033 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096864064 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082316532 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096087627 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083673096 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097036648 seconds)
  done (took 2.24690439 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119415348 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118586923 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104308586 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10875062 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085428371 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102429302 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088066138 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102286173 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084018881 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100266371 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105885479 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09033716 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105017447 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082999041 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103126268 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10775557 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084129109 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103043177 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088686407 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104212276 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09085229 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101039309 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105025704 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090951014 seconds)
  done (took 3.182933555 seconds)
done (took 17.231837642 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171982474 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085673327 seconds)
  done (took 0.954487746 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103843178 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120691501 seconds)
  done (took 0.928853092 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10774998 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098070647 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135275487 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114521578 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083398091 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097994243 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11518403 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099718759 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082791175 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099757074 seconds)
  done (took 1.73986043 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086424342 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102900517 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091043721 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.119654884 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108861942 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084537654 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102916376 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086614471 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10415222 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081312269 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105266328 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116801649 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088316026 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118301264 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087173842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.104758915 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107665017 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086004795 seconds)
  done (took 2.488506044 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082073581 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084164148 seconds)
  done (took 0.872333084 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084225253 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096103856 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084352959 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101017489 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080747528 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096505843 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080921229 seconds)
  done (took 1.329134036 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.531945309 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.245619494 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339361497 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099228431 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153481743 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.37039453 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135700684 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113741671 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113009295 seconds)
  done (took 2.851716115 seconds)
done (took 11.869070348 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092782166 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.189884119 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.54684812 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11874657 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079470393 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159038731 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.264092779 seconds)
done (took 2.156201859 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355116634 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.125602815 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088454393 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080809648 seconds)
  done (took 1.354326158 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081617942 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103775826 seconds)
  done (took 0.898096781 seconds)
done (took 2.968326524 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080408395 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079740584 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.093071047 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078795733 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.093491623 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07701949 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095987664 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079139084 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130372988 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.078742365 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097230538 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079694329 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095189742 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077322751 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096845337 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077853642 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076989773 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096232643 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077579578 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095853729 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077023685 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092866087 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077789035 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079802126 seconds)
  done (took 2.833260247 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.217060794 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097281066 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085501068 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101991016 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083568642 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101831915 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102277186 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080337158 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101607588 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082099195 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100202144 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084302551 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097786432 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084499867 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100441259 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099998399 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086431945 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096776957 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083036751 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100098978 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.085192564 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096481909 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084265783 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102004254 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100216301 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084177837 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099347418 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081060542 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102824457 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084171531 seconds)
  done (took 3.621153832 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088545443 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076871441 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.095045225 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089032117 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09451323 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080904295 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093556916 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078566387 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09570697 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078212251 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095688926 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077165876 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093097154 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079543108 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078900813 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101898136 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113296557 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078164585 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077345628 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097287434 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083598644 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09490576 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081184229 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.095775537 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077524848 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094734573 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079399393 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077827659 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094978857 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078016226 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099803324 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084495878 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094127235 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091607622 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101201294 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077515928 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103257794 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077872199 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095197558 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077919312 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094631687 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078126288 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077564849 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107319939 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081164005 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096437641 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078283045 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095805494 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078916819 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09758657 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077673207 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095780746 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081061113 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096309934 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084659643 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093966306 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079595973 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07756825 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095577093 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078656774 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094732649 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077430115 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101806495 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079112761 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119494125 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089974951 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094957585 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079837236 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098824537 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086194896 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097110494 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097965663 seconds)
  done (took 7.10587668 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084249708 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105985378 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080800662 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096619284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076694964 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078242273 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101924187 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095664886 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081311149 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114345771 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079128858 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096394927 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080215406 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098140282 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079170999 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096341759 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089455834 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093117297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079426777 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097981056 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079736565 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101502302 seconds)
  done (took 2.707284849 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.224291618 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104616385 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144311544 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114477124 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098201626 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111671318 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101962271 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087588893 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103565484 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089291348 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105491278 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086383977 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116543535 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105903776 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088392945 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106000962 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102277682 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089602327 seconds)
  done (took 2.699456544 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095019636 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098310158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106617191 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099125469 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081611261 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101075149 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088095881 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114422971 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101355366 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082125648 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109127844 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083865039 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100851141 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081566997 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100762088 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081774704 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100541466 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082239222 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109194668 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10440028 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088687436 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109295551 seconds)
  done (took 2.842776631 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099094987 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101484244 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112697447 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102600751 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077086307 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097940818 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089207397 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098434522 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106883383 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083701901 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098293807 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079941583 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105651749 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082061287 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104322935 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082728875 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10094803 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082397913 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10084539 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077752909 seconds)
  done (took 2.605216412 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126163736 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1147764 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098348712 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125600518 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115114023 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099159494 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126703864 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114975634 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098812892 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128648826 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098379427 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116292231 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125856508 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105477731 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116183011 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12611038 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10946254 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126998205 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115785109 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098135768 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12814811 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115823315 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109046946 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115559791 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100562623 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11613788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115169458 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106250937 seconds)
  done (took 3.92000522 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082532334 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083028377 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096548113 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079105505 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096377411 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079156117 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09609553 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079721792 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081725575 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096570513 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081285293 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098167412 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081513736 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098840764 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081314468 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098531312 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081540179 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078813894 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096116018 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079227058 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098857783 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081586162 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.098654872 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07914139 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095154872 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082045314 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078962895 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095742304 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081688424 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096319317 seconds)
  done (took 3.362994683 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091226419 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10578685 seconds)
  done (took 0.923271593 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080352648 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115704816 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080024774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102876049 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089141196 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100076792 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092755966 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104829346 seconds)
  done (took 1.493179206 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.107891831 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.120474867 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088890006 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112745032 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102778117 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118401194 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167543165 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088940104 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107560066 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083785993 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119597093 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082237532 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111332834 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105080741 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092046057 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114731614 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080847479 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110356149 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090408988 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102616158 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088251618 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116794112 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094180944 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107641217 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085359477 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111598549 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113741647 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.095475258 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106154675 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096193221 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107595876 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076753371 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105405295 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088160209 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098677744 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.102286674 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118627535 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08751956 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111062386 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105998027 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093789149 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096324233 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.094347992 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108245806 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09794197 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105431034 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.089913094 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096070472 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08447356 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103896013 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.079107271 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104401238 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077405205 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110162711 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093850808 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119544126 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085586527 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105452157 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087763625 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103959657 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090009762 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105507479 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110766533 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087443747 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110590202 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093681591 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108669878 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079241714 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094064232 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081456099 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110996303 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108591622 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11105551 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087368048 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106222662 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08145387 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106735327 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090032467 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110189732 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11245678 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089196059 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108642421 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094898548 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105158433 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088243154 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108178898 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086269797 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103546078 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085044029 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121548444 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08666061 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098616843 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084863203 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113428031 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088671525 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104475244 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085572548 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110625988 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077375326 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.107063467 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090152575 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108160309 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114272354 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090099226 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106916502 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093575345 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.113206415 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088685127 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104623669 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080077347 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107101196 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086435065 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109189472 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07721353 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106072116 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088212927 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105967354 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094541966 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.103742952 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.088963616 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11255413 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095438702 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103854631 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080583101 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10541508 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089248179 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109877992 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096045214 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.105014315 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07896516 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097324356 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093327549 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.106260011 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090116822 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10764666 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106600968 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078568209 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081912218 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106810969 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112289616 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086990063 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107485283 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094337094 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10968406 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087441216 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11219024 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087820197 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101834162 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094009507 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10566374 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079259052 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111124395 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088649249 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103972487 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089027966 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110737053 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088226555 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108586323 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086551556 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107988111 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089465807 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102550272 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088655588 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.105076984 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.122829473 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08857272 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096935708 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081322041 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090653558 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.10325119 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087849097 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103549958 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08928252 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.108692009 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082134216 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.105465247 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08871756 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118969929 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114834938 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091278602 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109939784 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096505605 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106632766 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092086662 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.107134702 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091099623 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10814005 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094405344 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.11009816 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090413747 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107439885 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081994438 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109226594 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095917852 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103139482 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08300011 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103146149 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08970893 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114849461 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090561129 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.108334894 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087622965 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109152186 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095948087 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107763388 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.089150029 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102622593 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090074975 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.112448143 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091669547 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109473093 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096748969 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110045422 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079629457 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112369668 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086503607 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110043771 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077355869 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099951954 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082314094 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105402847 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084700662 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101223392 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075064879 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107865119 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091555011 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104993751 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08092948 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103174416 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11185682 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085720384 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105931298 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086369782 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106192739 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099304413 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098430325 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088240582 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116233749 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.090873949 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099318558 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094094003 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.106207455 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084334659 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.108517753 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089003479 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110157239 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092316856 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108887999 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080684368 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109606157 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089635273 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106680728 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081015079 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112739249 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091565964 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107203276 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117602807 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092178548 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.108816397 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092142611 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107515984 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091326963 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108421234 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092544625 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108888212 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088630179 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103399737 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089961384 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102649453 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083510771 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105928599 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090111283 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.107754923 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093216145 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.106196503 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095545865 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.108419497 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090835607 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12632686 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104597636 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085733557 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109033082 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093238081 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107312723 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089444665 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098768214 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096068974 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.107503522 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095951922 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107086166 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081676985 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108504705 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090001616 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109226407 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091483876 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.109320914 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088165553 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108660777 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090412213 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117762753 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084639952 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115211353 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092759978 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111583425 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106951243 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091902495 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107329526 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08590748 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10774827 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.09232279 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.109554193 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.089504481 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.11055288 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091370751 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106683588 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088558308 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110123824 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091137677 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.110378718 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080179951 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103226684 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086393632 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.108274022 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094295685 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108484126 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088793715 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.106116612 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092807457 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.107102941 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083235363 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112838772 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09441512 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.110075811 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101036531 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105123483 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091670188 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118863454 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079974934 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.106505897 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084664252 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.105758091 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096446276 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.109943515 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09610862 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109774138 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086840734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101366642 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091969999 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10651728 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080474351 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103106596 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09408672 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106826788 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088957195 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.109417237 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09352443 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110258295 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095012982 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107711205 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090789374 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109880936 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083064564 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104781287 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086800721 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108820794 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.093026984 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.105738395 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082910807 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.108574705 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091446617 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10900713 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.090485851 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107608456 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097097754 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108543981 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09185135 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114441162 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08059049 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109681172 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090644358 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10899186 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087742631 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110215817 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093800756 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111297774 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096601378 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.109401044 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093275872 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10944584 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08428335 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.109211336 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091122736 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.110065533 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086743081 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.111389376 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098283418 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102841052 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091503152 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109830502 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087918152 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111252183 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091919609 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110179683 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094845849 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.110888126 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092328724 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113766521 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090535782 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110511076 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110328858 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0890557 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113437987 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084686012 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114400463 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090951168 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109234627 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091328231 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.106188124 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090797347 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.108442413 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090371162 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115302508 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.09279452 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105258177 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086954669 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103093252 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091730593 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114239129 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096862705 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110243487 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09240791 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100418492 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084539348 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11150346 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087773545 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.109426318 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094682509 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115091502 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091641222 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107531019 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.090130373 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115747974 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096172531 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113883641 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10571251 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094498517 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.111936495 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09249681 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10776868 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092689284 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111745237 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095355265 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109676747 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08868165 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119844219 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097757041 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112525729 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091312067 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.113261398 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091720821 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101867322 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.093956543 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.11135907 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095075993 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112230627 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091674883 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122306991 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10510058 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091864527 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113877045 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091696087 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115534504 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083264229 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.111614606 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094395156 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112915547 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083586076 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106426057 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088798202 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11092993 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088908595 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101351015 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10254138 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116098328 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092420468 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109916858 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091415063 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102464141 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083528407 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106297676 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094459864 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110156976 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.10127188 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106903093 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088379006 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101893496 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092911505 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111548695 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095571471 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.104269949 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083463343 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10695563 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093286931 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118403984 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09035367 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.110908716 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093701382 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110697963 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084542523 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115775307 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084111879 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111800154 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104200194 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.112045752 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094098876 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.116038157 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116624796 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.094714595 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101479801 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.094752341 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110539958 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094292363 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111963268 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.097394641 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126460996 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093354991 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106230205 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.090279618 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111455397 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088160957 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119115712 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093347035 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.113642294 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094011316 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110177495 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095855267 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118702859 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109656935 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088408135 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106838089 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08686291 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108059804 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08864397 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110119707 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095251871 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.112506787 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092628026 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114784004 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088880743 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122489828 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100347676 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113659175 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08497287 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108700987 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089563213 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103709201 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095581015 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.105368199 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.091264194 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.109368381 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09177004 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113007136 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094708918 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112903986 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.094727365 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.110462165 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082692909 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.114385265 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093352457 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11383737 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.087012117 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.111606878 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.094782569 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11608684 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09824153 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.110216164 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093295882 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111186348 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095761374 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103645975 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096595623 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110826561 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092027642 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108459 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093623822 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114018819 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094749629 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11365584 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095659892 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.112893935 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097509499 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115259385 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085589627 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104817736 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096356718 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105839248 seconds)
  done (took 60.333399729 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154703566 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091089451 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102424865 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084801165 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129303384 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084743321 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10294762 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.085213081 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104712045 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098172031 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102480174 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080178167 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121155412 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128890697 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127544486 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117187402 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084099367 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104149368 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084767034 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103953694 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104914954 seconds)
  done (took 2.973987462 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110003783 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122689059 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119697481 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106209027 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11697559 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121040764 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099851464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122677421 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.125525743 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115247495 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.106018863 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121881201 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115280261 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096760964 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116061858 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117807554 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106244991 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11440422 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12236352 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1003528 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118359892 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120101074 seconds)
  done (took 3.293651098 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097171339 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.09152805 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.118022138 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.085398094 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.111205975 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.086225812 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116592142 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088505037 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.117157939 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093174249 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108508644 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092649023 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.116791655 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.086079235 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.109212201 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08900223 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.116612656 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092525106 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.113287737 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.086881622 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.132092098 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.104726718 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.087447255 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.08949636 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122203316 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.111815179 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.093135604 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.091954796 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.110958732 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091453541 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106583542 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093871479 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.115485583 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089739178 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108876738 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092904859 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.111809145 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.086596942 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.108583691 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.096223355 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.106579637 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.093418308 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.119304672 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088851115 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.107983113 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095311716 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.112160207 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.087283039 seconds)
  done (took 5.653104734 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126763413 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162749652 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097212933 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.167822424 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12498548 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115822999 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091246521 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.153865234 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109135349 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.090403785 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.130043782 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126193825 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.093099135 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.124917675 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.097897086 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.114245832 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.116638113 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10642375 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.118246765 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088117815 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114781843 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.109396817 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102366193 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12410232 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117793791 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.092567975 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.112673241 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10484724 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.124705655 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.118722477 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.099914563 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123411084 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.142136592 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090970424 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108766099 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108890018 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105189918 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.113314483 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095862599 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.111296201 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.114678876 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105073619 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116344499 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130443961 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09573437 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115506023 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096508463 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.12253649 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122292014 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.096819262 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117036275 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125466163 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099088437 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.113441837 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100277815 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134040628 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.113338055 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.092655631 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.117033773 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123476677 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.093820701 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.131520623 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109960565 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11253464 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114730489 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102360781 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112172326 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.117058756 seconds)
  done (took 8.653921988 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101941315 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.138248456 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130322711 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110500531 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119266092 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117554189 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100433621 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.118293939 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09987219 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126048816 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118289907 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.169925317 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.092724822 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123920734 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099207589 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11851916 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117514668 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099803008 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118237595 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099170727 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119320226 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129357474 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.098917237 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130121731 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130701969 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111337348 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099443333 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1180262 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106745342 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112440909 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122767083 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.110822684 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093677901 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123362407 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128857919 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096739662 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104060816 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093707797 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116766877 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117053261 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090182752 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128796774 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117544458 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089616369 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115660787 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093749778 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123750789 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124296353 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11706584 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100716868 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112391635 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122400862 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093597408 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111857398 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122017092 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.131030114 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104324643 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124206694 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116277848 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109764691 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129317403 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135619634 seconds)
  done (took 7.886206631 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091341213 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090326761 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.108834207 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.088539445 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110123826 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089082357 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109914212 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.091045655 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090130116 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.112305951 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089243326 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103654827 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082998518 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104989173 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083479981 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105851886 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086348458 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086575728 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109312022 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087982895 seconds)
  done (took 2.710379993 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099500692 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129990022 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091131451 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119128085 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092198257 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11897825 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.111350287 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091430749 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110638301 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093893904 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.123339205 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103646717 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113401759 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117599096 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098688633 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111982726 seconds)
  done (took 2.521690382 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.113115188 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12374392 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.136865773 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.096961389 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.108719098 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.097826269 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.111245285 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.086157148 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107556674 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100063406 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.117790953 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.102725358 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111957822 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089682956 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.111334827 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.098349813 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.107116591 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.095203364 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.11092459 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117127878 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.116662452 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.113162974 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.090255687 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108804425 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087974247 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.110954833 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092069942 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101407252 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083670742 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103940082 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08727062 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11275834 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080990222 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110742906 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.082652074 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.102233688 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.084695395 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104526209 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089815757 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104722431 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082721623 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106881296 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084638722 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105916263 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080945897 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106065089 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080165447 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111810565 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105451633 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089209754 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103732275 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.093850192 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111375797 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096813332 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114222805 seconds)
  done (took 6.381986171 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106946597 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114855992 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094092608 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108309838 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09316221 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114985433 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08933554 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106838569 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088072769 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100992496 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087782459 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108228346 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087149127 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107844323 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087874645 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113791622 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082526097 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107961242 seconds)
  done (took 2.594042223 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097840261 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111059235 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097247957 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110290735 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088431362 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109192584 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083465575 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088315928 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110222802 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091482067 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109050992 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088745543 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102695665 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088056357 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104056021 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086000157 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.105999519 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08324964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104368654 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081792423 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105936676 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084279341 seconds)
  done (took 2.928949231 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110819482 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.146453993 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10716666 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.156052206 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.117189885 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095487375 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.125673387 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091884317 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12693551 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.1078091 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089908885 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.107250789 seconds)
  done (took 2.184315863 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118443532 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145263344 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083320909 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10728243 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117110507 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091487418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109297873 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090340935 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121026372 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122625144 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089818805 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121279109 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121070447 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12051856 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097637024 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11913011 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109613233 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090877 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105501905 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131094061 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091496711 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121581729 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109278835 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091051662 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1096615 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120229621 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101923897 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122215448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110177633 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1023285 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118411748 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109845367 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101911232 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123460197 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107088503 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12145759 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091447162 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132388172 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116560619 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100961799 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107466432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11744825 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10258657 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117893155 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121165583 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091204281 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117814646 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109047591 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091359439 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136326913 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117830052 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120027634 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098049279 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12213275 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12214926 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136562861 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122654088 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120958548 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098889711 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122732039 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120036754 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117293119 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102332697 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123945303 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117758288 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120879835 seconds)
  done (took 8.211450842 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134268839 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107331667 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093827859 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124098121 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122654476 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10975894 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094032195 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111813871 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091232503 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107372227 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156531401 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110132531 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101763417 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121543567 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109192382 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090543178 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110228015 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120331731 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087123624 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137373842 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110126209 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120348549 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101908229 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120551834 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123405472 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117714133 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091389789 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109711348 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091127975 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110526713 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117272398 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091546897 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121791064 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103470225 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102305135 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110225494 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090447021 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11742311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10987976 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098010193 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122161395 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132130852 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110682381 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091081637 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123251064 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109875378 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090996138 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106942271 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090802558 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10785504 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122862689 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123388102 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103111402 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121641188 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110081401 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09156742 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111349018 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109778844 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092213488 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118215345 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120554265 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09145096 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137825793 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109965478 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091341252 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121651872 seconds)
  done (took 8.067072327 seconds)
done (took 159.216571539 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.112768827 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.148283185 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.104837575 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172072158 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085936397 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140842437 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119862261 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.120925925 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08574716 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105582113 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086637181 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108696977 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151955079 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106112104 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086183908 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107951589 seconds)
  done (took 2.648252897 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.189815561 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.293892684 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105344673 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.110171544 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09305099 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108494302 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089334823 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112911192 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.087488706 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.11940681 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107081846 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088960496 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118267081 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089281366 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106471909 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088595323 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118246539 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088343619 seconds)
  done (took 2.923116985 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120031836 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150897657 seconds)
  done (took 1.085813037 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130808377 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184397743 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300961287 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.160622376 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115768491 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128113104 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.162381412 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.124840692 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191886458 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127232112 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108144731 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.112892343 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135648781 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098493026 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115715298 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092831587 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139981911 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11471331 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096039034 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113207162 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11391648 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113618679 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116563272 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095606018 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181103573 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126984076 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113126383 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.094794573 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113221177 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094841579 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.118084068 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126309377 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.106443663 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.187877066 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09787277 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.18329611 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100693103 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112657768 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094582374 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113850799 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114955162 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.096365459 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127575236 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.111314909 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.094919365 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120341427 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.094489972 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.113264888 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100496972 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122462839 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12070184 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098023858 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.184574677 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121474893 seconds)
  done (took 7.587692726 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.831431544 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158954726 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112613064 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.923166565 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143614083 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125881835 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.816771452 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112863376 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.263470895 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.052132032 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130741486 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126202296 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230821428 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25672066 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.147028334 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.33689156 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.70643557 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12678842 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119698577 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154916431 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118763431 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140543392 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110471233 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437882014 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113706908 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110785824 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097329087 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123818276 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164452048 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.110861324 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095008865 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203547681 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269153106 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182259212 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112623393 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089803534 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111475146 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.172491764 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269982147 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21927637 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177102298 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087425828 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110937977 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103614319 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132717003 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107048976 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168906051 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176845252 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196450667 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095588271 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125152461 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09911107 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122924843 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164628144 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10921855 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.338560599 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.340933471 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090572919 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120354149 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108169277 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267001771 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111564209 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22518957 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118227883 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214045606 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089332784 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786961043 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168275575 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111839894 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120249965 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098580465 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116812033 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121073081 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151333958 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.384866537 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127051292 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116080459 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090300402 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.255623711 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093640057 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111018922 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168665906 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111310485 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099675309 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127383023 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125202069 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.176901953 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254157543 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125722256 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098636591 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117246676 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123711897 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09193574 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.237278071 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200767764 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.181525283 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.217846332 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124186747 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.170713413 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169698522 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123960537 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174871041 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119973722 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129507373 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104069337 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216930708 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146558595 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091193238 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116833157 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119248032 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148767721 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094923022 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119192609 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173891072 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.466119859 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.190894653 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087848681 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115310556 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100461936 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185620751 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098921854 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270276322 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121381148 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172078298 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098175292 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110356493 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118796016 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167781353 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125076527 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100029512 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124252965 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117611708 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255627735 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226281744 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116270468 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247456255 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187012649 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10244285 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197967977 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099036571 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193798739 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100562061 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123823913 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113822195 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758505413 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126141922 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118221448 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096513325 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20128881 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112074291 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092935359 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.110136116 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088775102 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813271977 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097393731 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10940923 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09236806 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121445053 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097797515 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118285706 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115918927 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166578843 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236856005 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104892304 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12018 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.110514053 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.166617697 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093182579 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.111948683 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091693638 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.112328315 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100660203 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117019068 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092502566 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198149939 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163426882 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222635346 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.530421551 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112832095 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090930704 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231931325 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112209519 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30904178 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1013333 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230111334 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175388272 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.110164896 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.339026268 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.176480958 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202449177 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094293143 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196331353 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08894222 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118334233 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167389259 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111248247 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099342447 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162938767 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129181316 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126387229 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.153938016 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092808121 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232749312 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109885448 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17286061 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113734634 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105865556 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310215199 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112636458 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111194207 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187859865 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095540918 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112653101 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.680624458 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.112121246 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102078932 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122173826 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226519971 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.170054001 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120928775 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098745547 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126393466 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16651239 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235377979 seconds)
  done (took 44.916441882 seconds)
done (took 59.969830261 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317432704 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270794938 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.304459015 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.197854603 seconds)
  done (took 2.006113994 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.187540298 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156396441 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127282794 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112086347 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157437821 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089101612 seconds)
  done (took 1.66977559 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.49269186 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.380969954 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.349005632 seconds)
  done (took 2.065032573 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.274066307 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.287830246 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356687429 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.4494377 seconds)
  done (took 2.318796705 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215743749 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126213731 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101938897 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.14080227 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.173303332 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.178093793 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144627229 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.153950246 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131056064 seconds)
  done (took 2.25805623 seconds)
done (took 11.160637869 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.236495842 seconds)
    (2/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.300272793 seconds)
    (3/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.249441106 seconds)
    (4/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.262815562 seconds)
    (5/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.221260994 seconds)
    (6/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.249576325 seconds)
    (7/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.27096353 seconds)
    (8/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.243675843 seconds)
    (9/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.146888926 seconds)
    (10/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.156782502 seconds)
    (11/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.226189068 seconds)
    (12/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.182404027 seconds)
    (13/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.244783352 seconds)
    (14/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.212633253 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116070441 seconds)
    (16/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.229581489 seconds)
    (17/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.106183947 seconds)
    (18/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.180110002 seconds)
    (19/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118583718 seconds)
    (20/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.107284703 seconds)
    (21/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.157270924 seconds)
    (22/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.206172894 seconds)
    (23/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.205629767 seconds)
    (24/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115613058 seconds)
    (25/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.266883878 seconds)
    (26/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.210695727 seconds)
    (27/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.098947185 seconds)
    (28/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.208540361 seconds)
    (29/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.131360608 seconds)
    (30/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.255593703 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115229649 seconds)
    (32/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.134756372 seconds)
    (33/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090158621 seconds)
    (34/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.149553757 seconds)
    (35/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.16563183 seconds)
    (36/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.170928568 seconds)
    (37/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.155914012 seconds)
    (38/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.140812937 seconds)
    (39/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.08726513 seconds)
    (40/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.15411374 seconds)
    (41/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.12544828 seconds)
    (42/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.215424914 seconds)
    (43/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096991881 seconds)
    (44/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.143966423 seconds)
    (45/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.10228907 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116858249 seconds)
    (47/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103771654 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.117166613 seconds)
    (49/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115849915 seconds)
    (50/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.077004203 seconds)
    (51/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096080284 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.143143444 seconds)
    (53/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.129732011 seconds)
    (54/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092795547 seconds)
    (55/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11699622 seconds)
    (56/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.104883048 seconds)
    (57/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.108394239 seconds)
    (58/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.150390275 seconds)
    (59/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.187847905 seconds)
    (60/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.117060957 seconds)
    (61/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.083600302 seconds)
    (62/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.160501403 seconds)
    (63/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.174451973 seconds)
    (64/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086361 seconds)
    (65/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.194819881 seconds)
    (66/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.136268556 seconds)
    (67/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090096543 seconds)
    (68/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.158223114 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.145742657 seconds)
    (70/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.131179443 seconds)
    (71/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.200103044 seconds)
    (72/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.203260866 seconds)
    (73/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.104753893 seconds)
    (74/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101476369 seconds)
    (75/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.098362401 seconds)
    (76/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120460822 seconds)
    (77/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.113314513 seconds)
    (78/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.136101773 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128875123 seconds)
    (80/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11319472 seconds)
    (81/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182666854 seconds)
    (82/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.223287388 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.157288395 seconds)
    (84/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138273892 seconds)
    (85/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.117335558 seconds)
    (86/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.189581207 seconds)
    (87/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126354347 seconds)
    (88/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091944817 seconds)
    (89/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.117871531 seconds)
    (90/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094996358 seconds)
    (91/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.161975369 seconds)
    (92/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.129155851 seconds)
    (93/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.107151952 seconds)
    (94/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117326092 seconds)
    (95/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.109479573 seconds)
    (96/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.098320022 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095792762 seconds)
    (98/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.207892012 seconds)
    (99/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.207158268 seconds)
    (100/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.098696728 seconds)
    (101/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.122711468 seconds)
    (102/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.099534373 seconds)
    (103/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.193830539 seconds)
    (104/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181463112 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113190319 seconds)
    (106/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094400387 seconds)
    (107/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.132870134 seconds)
    (108/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.143489078 seconds)
    (109/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.101645138 seconds)
    (110/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.154282008 seconds)
    (111/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.190514304 seconds)
    (112/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087711376 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117565429 seconds)
    (114/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.104305176 seconds)
    (115/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113223723 seconds)
    (116/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095784564 seconds)
    (117/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114361106 seconds)
    (118/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078824262 seconds)
    (119/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.09714092 seconds)
    (120/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.10967401 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.116167303 seconds)
    (122/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.205978918 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.123671698 seconds)
    (124/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.112364363 seconds)
    (125/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113072875 seconds)
    (126/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.196821356 seconds)
    (127/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.106580424 seconds)
    (128/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.080379397 seconds)
    (129/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.083909227 seconds)
    (130/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.10017375 seconds)
    (131/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.0918302 seconds)
    (132/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.131507149 seconds)
    (133/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.20376023 seconds)
    (134/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108171844 seconds)
    (135/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.106837379 seconds)
    (136/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.115602893 seconds)
    (137/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.103552073 seconds)
    (138/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.209309657 seconds)
    (139/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.111250334 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120633676 seconds)
    (141/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097947107 seconds)
    (142/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.10071042 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09496567 seconds)
    (144/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.125260511 seconds)
    (145/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.11771016 seconds)
    (146/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113633557 seconds)
    (147/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.076363562 seconds)
    (148/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.098440318 seconds)
    (149/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093761367 seconds)
    (150/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.12769791 seconds)
    (151/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096298899 seconds)
    (152/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.147250877 seconds)
    (153/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.097194018 seconds)
    (154/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078632661 seconds)
    (155/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089850027 seconds)
    (156/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109391631 seconds)
    (157/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.100515356 seconds)
    (158/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.101465368 seconds)
    (159/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.077935117 seconds)
    (160/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.09911267 seconds)
    (161/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.131569834 seconds)
    (162/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.099551654 seconds)
    (163/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.106312257 seconds)
    (164/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126000167 seconds)
    (165/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.107569228 seconds)
    (166/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.099841962 seconds)
    (167/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.077127031 seconds)
    (168/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.109308468 seconds)
    (169/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099993079 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113364378 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097307369 seconds)
    (172/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114146093 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097155149 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11827025 seconds)
    (175/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.117255893 seconds)
    (176/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.078597011 seconds)
    (177/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.122638346 seconds)
    (178/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079026204 seconds)
    (179/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.094408663 seconds)
    (180/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107696211 seconds)
    (181/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077942374 seconds)
    (182/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.099254886 seconds)
    (183/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.0902332 seconds)
    (184/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.105629693 seconds)
    (185/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078693371 seconds)
    (186/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092989837 seconds)
    (187/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.185878322 seconds)
    (188/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.098479384 seconds)
    (189/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078148766 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116867828 seconds)
    (191/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.104650442 seconds)
    (192/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116587648 seconds)
    (193/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089746854 seconds)
    (194/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115885497 seconds)
    (195/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.10664504 seconds)
    (196/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.107056288 seconds)
    (197/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.086312662 seconds)
    (198/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113817566 seconds)
    (199/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.076939141 seconds)
    (200/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078075977 seconds)
    (201/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115554059 seconds)
    (202/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.155629717 seconds)
    (203/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078092674 seconds)
    (204/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.131988052 seconds)
    (205/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.102327324 seconds)
    (206/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.155222253 seconds)
    (207/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093230515 seconds)
    (208/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.131455544 seconds)
    (209/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077702708 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129370121 seconds)
    (211/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.077617315 seconds)
    (212/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.099859852 seconds)
    (213/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.126264125 seconds)
    (214/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132126468 seconds)
    (215/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077778612 seconds)
    (216/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.107862858 seconds)
    (217/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080070653 seconds)
    (218/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.122783039 seconds)
    (219/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093357815 seconds)
    (220/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123200603 seconds)
    (221/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093756373 seconds)
    (222/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.098078285 seconds)
    (223/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.086297357 seconds)
    (224/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.077087711 seconds)
  done (took 30.161144302 seconds)
done (took 31.010139312 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.400404828 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129615646 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123840202 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100965287 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141793683 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104396165 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.12370406 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10339845 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122102855 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090735532 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.114091695 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123201209 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101536949 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.140546618 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.102836281 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115848188 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093173706 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123536825 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.122740868 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103905815 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141770776 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102775636 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.134077973 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102088187 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149657751 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103139734 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.125297665 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102475442 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121478613 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091276447 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124161019 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114701459 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.103233517 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126183434 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091757812 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.115311876 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091661378 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.106167181 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093513833 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.116331181 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100104217 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114780184 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.102317121 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116187113 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094926833 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113560964 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092120899 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125593886 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091308778 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123439766 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09374826 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128021467 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112330622 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092009177 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.113703864 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.09458419 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.123293989 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092189956 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124119875 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094133967 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115431766 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092454051 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118021713 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092219676 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115067338 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093595504 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11792536 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094617882 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113433748 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094451387 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112985069 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094133936 seconds)
done (took 9.115433674 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110135973 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185002469 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.147378795 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.151082955 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.147683398 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110876408 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125612311 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.147265287 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.101082292 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144657076 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144808935 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135967393 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.129656753 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12395266 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.132187132 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100305928 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122996892 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.13110249 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.133944222 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.144805262 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147593507 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.123297856 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120776812 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142236755 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12114936 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12883057 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.125461875 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121998948 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104810003 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128360986 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.115911805 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.126470837 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.124107272 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111654978 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.129376757 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.098810258 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.132202739 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11800671 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.100993377 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.12251799 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.134048638 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.111176774 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119033546 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.1290068 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.101453988 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.126026498 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09978959 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120757465 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100358582 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116601214 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125786875 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137682784 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121288161 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123867792 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.104064197 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122732247 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102300581 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.125744366 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.124045399 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.104133094 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.122719088 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10335225 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129242103 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.138523713 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.121731048 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.102573705 seconds)
  done (took 9.053026101 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127574851 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.154957358 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.1287861 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108188149 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.125479046 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.0891008 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111709294 seconds)
  done (took 1.735371151 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102574129 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144652512 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124341096 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.146038013 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.135216526 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127677659 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130922435 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090423566 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.1375583 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.122578206 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119534921 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169029985 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114044968 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102942203 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14791956 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.113524559 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12694745 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.113705771 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099415824 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.146475019 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118449618 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114055105 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.126826386 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091642415 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.135229458 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.092663288 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18191585 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125398251 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090982251 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120027145 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097015946 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206668647 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.113959469 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123613904 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089776402 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142120376 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.112607347 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120345749 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13909455 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096647919 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13566276 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.097329985 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121798354 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119369316 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099392595 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.128716193 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.103436186 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.122732341 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.096965747 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142920764 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.124571201 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114235308 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116707326 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096314531 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.123702894 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098220007 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129523033 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.096682239 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.142428263 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120952908 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117702083 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141213953 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135671905 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11856624 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131627289 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.113281096 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.137524348 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119462987 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099931035 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121981643 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.119158814 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118284392 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.124251684 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107275591 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122412376 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119470068 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.141947374 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096032983 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127443169 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095794347 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118097482 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095623992 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.129779077 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094896168 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116839793 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131206684 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104229332 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11958276 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.094995761 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.135834272 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117846391 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.103397442 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125189548 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095332968 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129245511 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.142190281 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.103249185 seconds)
  done (took 12.539821755 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.100239613 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.093225209 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.121511026 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115710059 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09385508 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093354027 seconds)
  done (took 1.519589946 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.132361638 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118000497 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109050731 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122082389 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158308709 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.116319102 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.139242226 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125058058 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.112913656 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129986368 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.116494787 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.141340668 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.14427438 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100599172 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.139127172 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099888823 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.139781274 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118204296 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.10757795 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119006739 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.108474278 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123122907 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097386783 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137786675 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.10005919 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.125049755 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120967277 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.108372814 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12964605 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.102266191 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122810544 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.10025089 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.124428803 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123995425 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.116618443 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123007155 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094831942 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125108863 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121691352 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.10180868 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.140616739 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096482177 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128206263 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102166932 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124602252 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122144485 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.102896316 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.120982373 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.116546081 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123916248 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.102349673 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122800943 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.100050969 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.125369444 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10031562 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125504141 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123290086 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.117707481 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123459518 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100192338 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120286622 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100109694 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126072253 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122198015 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.100408114 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12393022 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100595749 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119380467 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096960884 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122620447 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.10230169 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119693678 seconds)
  done (took 9.37446192 seconds)
done (took 35.102553481 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.101785303 seconds)
  done (took 1.993823917 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.861897485 seconds)
  done (took 1.757774756 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.181371117 seconds)
  done (took 17.108656067 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.516230284 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.59258401 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.954522495 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164869348 seconds)
  done (took 3.124326045 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943929725 seconds)
  done (took 1.85881976 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.317849374 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260315259 seconds)
  done (took 1.478209756 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.824838808 seconds)
  done (took 1.730509863 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.501931739 seconds)
  done (took 2.406743665 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.358569654 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.199096661 seconds)
  done (took 1.474865135 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.583908074 seconds)
  done (took 1.495421954 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.047469572 seconds)
  done (took 14.964160067 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241842443 seconds)
  done (took 1.167321091 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.316703016 seconds)
  done (took 1.227503242 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.394774501 seconds)
  done (took 4.309845139 seconds)
done (took 56.999917671 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11576508 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128817966 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107035835 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126303121 seconds)
  done (took 1.384374016 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.118290469 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124577424 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103858888 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123644636 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108517004 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.123405045 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099963729 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.129979731 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099727477 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126772213 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122791693 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100695255 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124154247 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099925103 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.121300192 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.102583521 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126337742 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.099919312 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124395728 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100681889 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123844565 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.125003897 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103331361 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123723586 seconds)
  done (took 3.670774011 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114207592 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097274744 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.122636442 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096343141 seconds)
  done (took 1.347867839 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.116421467 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.138267145 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115200083 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130752342 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138012245 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114422818 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119858302 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097231348 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124689824 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.107187957 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.121519184 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.116463399 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138622603 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.114169913 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110258461 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114161534 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093440041 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137786214 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.106727706 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.132648104 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09627262 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13072793 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.105014804 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13480604 seconds)
  done (took 3.778804531 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.183829462 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13576944 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.1427672 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.167258272 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.12177931 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.11871375 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.121236741 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127639126 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.124689781 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.095872361 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.119539786 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.151921134 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126065629 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121377917 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.097182937 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.125824493 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103225285 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.125209658 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.098959309 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.13436114 seconds)
  done (took 3.467434132 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.11295624 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120768556 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093115017 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119397346 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104558751 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122235879 seconds)
  done (took 1.599674255 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099883988 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.092926575 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116146198 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.09171791 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.120980642 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092323778 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.113955178 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.092536801 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091641888 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115422195 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091027631 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114572937 seconds)
  done (took 2.15449953 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.223223925 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117833303 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120769483 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097253127 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123665203 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09503398 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134336395 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095437129 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.174243881 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.120652755 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11069513 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.171816472 seconds)
  done (took 2.506973042 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224998041 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102709228 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273071391 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372460818 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1644307 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167923321 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276501346 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173002287 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.18791471 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139577053 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207700365 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15923262 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132438702 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180323631 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143918053 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.187569618 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179231268 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204332737 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152113158 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239874486 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167152495 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169422835 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192463277 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130253025 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141339314 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158932936 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120756127 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106378463 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173854123 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17058297 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198306004 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126503341 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140594501 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201522929 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242654865 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180194658 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299475046 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136135073 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19131397 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.195401371 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277389984 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142651888 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197306223 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157727407 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108238054 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206918222 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157157593 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184561467 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.112353449 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143617743 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184551685 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177859605 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.182455955 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142057028 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323593366 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136710122 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152440367 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182770739 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191053501 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227272405 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170416306 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102884315 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188657526 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192757537 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206282187 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.123350066 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16877306 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12744035 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179738055 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207172334 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179174654 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168704077 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.208146797 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135329794 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165604039 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181574565 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130833792 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182394521 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163426809 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124524149 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151515447 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115061575 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130619456 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18718689 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102124157 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214792677 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139440357 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.292372269 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233252918 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160497536 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138061079 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166972898 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194648045 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124290085 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.121554174 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149097164 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.17343084 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133321858 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135630929 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160446955 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148694765 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103453375 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154322979 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126495925 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160507829 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.111643778 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168385296 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166575833 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131676176 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167284472 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126651762 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162045755 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171487628 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222187593 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110424719 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135604071 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206134719 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160567469 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13883867 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187295575 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199481935 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176492118 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139289806 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170372955 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198718853 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145394406 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200063502 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118613904 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137621864 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.152775742 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161264926 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159638384 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156323563 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106697106 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153690546 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203022617 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.131615947 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138365353 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175033195 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103629535 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131316562 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145677127 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113730415 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.144307678 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15247935 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.115626809 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1566433 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161936016 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156708606 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161203051 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145890058 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193541709 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136166124 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.16172393 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12537383 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121300985 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.182660702 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196776974 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133136567 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189433156 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172293178 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199859265 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166838013 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133907127 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184799789 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105602592 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124216629 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167310679 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162957778 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165254908 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194400242 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195380905 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.196071329 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.129962388 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152050555 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168463935 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.187135281 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158113007 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.149280127 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164995262 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169104059 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099030756 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12697671 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128840228 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118103808 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13438629 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109386047 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209217375 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166604618 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190595981 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163967061 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142382308 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195156784 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102174059 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166384632 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.172700935 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142616765 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.19589703 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193771187 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170341747 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1450823 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172478606 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122801961 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102370192 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135604138 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169666035 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110132148 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138543217 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147237818 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194623207 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17652166 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152404837 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205318906 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19572712 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20532833 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098272938 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167295746 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182653247 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161451532 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18494629 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113463129 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.163266996 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190508603 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14786782 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195296207 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165124928 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171454377 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227378862 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.134324688 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133686793 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153149595 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171293675 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142535232 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147731965 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1496691 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138637481 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157195163 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.112494138 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12937856 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181674515 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146335179 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181492432 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.170313899 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176063148 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13299054 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146719456 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162832451 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123304334 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.12074392 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173624552 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197064974 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14728777 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16124906 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187067316 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133988849 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31537483 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202063888 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187824186 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141484396 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145832074 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163851404 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172672375 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166957218 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185486419 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12001205 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184906719 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162072041 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.147018967 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138423313 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125843339 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153482192 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.15343562 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.135607106 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15558597 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120346902 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21307861 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122137165 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164045584 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168360608 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151053126 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.131250873 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144067318 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211780432 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1627071 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179869536 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15951349 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178134911 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190596338 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12858237 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10464129 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131696197 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185469736 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13475605 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134777344 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.21162564 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199898524 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161669627 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17245247 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140779929 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.100589888 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163035696 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152179678 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201071041 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145691829 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139841737 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202802348 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.153708752 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1066092 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167264691 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285901011 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148410138 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184802608 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.125321972 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278285489 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106771124 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133382758 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173118541 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173663531 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134596944 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15980692 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164841713 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148099142 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173199536 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140308574 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192032877 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209192946 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171465443 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177539041 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146280981 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162473121 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166103963 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187361737 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149264873 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147617511 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138974655 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22093288 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198822133 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.10894052 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165561934 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165246538 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164040516 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175613224 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138011655 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190576641 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134041308 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16916559 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116679739 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127223643 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16124879 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.185514429 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136132472 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187634538 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161880801 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108432196 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130318839 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153984186 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160545162 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120363309 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133010301 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180627534 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.133002481 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165464386 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157467796 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135213995 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157782471 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149039514 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107882239 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145883247 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147182173 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112048043 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172446432 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193787925 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136362949 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1890085 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174507319 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167924329 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163162475 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147639669 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63799871 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131060907 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194705946 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15161498 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190828328 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15187351 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168248479 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136770725 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152822733 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169725489 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15241883 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223639302 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168426082 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.161060508 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106449909 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147976059 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149276749 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134377674 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128936808 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164200497 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143427219 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13888208 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.161100928 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123423273 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148832409 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141612756 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197521294 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150039223 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186508832 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188703233 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114771732 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168906253 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204012337 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106732262 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164089353 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174481549 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14736705 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152553523 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106852653 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138996289 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183249894 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100167028 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16308444 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163978125 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164871431 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164889779 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13658085 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162773881 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118333247 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1642393 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129264909 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157918405 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134140831 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133700485 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.1295299 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131445963 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160728393 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16156113 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130059195 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.149705952 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216380227 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102233637 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136474625 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279514847 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162369843 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196452649 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.156139761 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111440566 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147569361 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157845977 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.155814602 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16227618 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106927482 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138897805 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.107849161 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187743047 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167345984 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162921451 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187167901 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167233528 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191261036 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.139067224 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.267552892 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116322164 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160212875 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.133152144 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105626323 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145027429 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13639632 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1217751 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219406372 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187600756 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128507799 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.148739034 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130876326 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100894408 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135867348 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174016792 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157049912 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134464144 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145901652 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.121683909 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146849678 seconds)
  done (took 78.634534084 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158886226 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.145288846 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150669035 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202086158 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170671549 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.259511646 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209219185 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231358165 seconds)
  done (took 2.534225413 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.111218265 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138602737 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14444209 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.127660578 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.127572529 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.345271893 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.138343986 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.10336716 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.187579694 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.143477979 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.125018437 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.618010365 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.104207377 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130246834 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.1165309 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126527418 seconds)
  done (took 3.791394656 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.152973352 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.518484807 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.75498951 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.244235575 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.225409754 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.157083671 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.705020503 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.186246743 seconds)
  done (took 11.953907978 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.140440358 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148583437 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.258496554 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.17795858 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.166273088 seconds)
  done (took 1.911415748 seconds)
done (took 119.643937847 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.107048358 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128258211 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102051418 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12956816 seconds)
  done (took 1.472044791 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.119676439 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092182142 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.115909935 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084918513 seconds)
  done (took 1.424640841 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.488904166 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08556921 seconds)
  done (took 1.626482208 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.131429081 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140044447 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.122981882 seconds)
  done (took 1.419672291 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112989152 seconds)
  done (took 1.136775407 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.116598035 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.106670131 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.145460608 seconds)
  done (took 1.391297544 seconds)
done (took 9.486912249 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144306469 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.437312844 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391360641 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142755606 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725001866 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385094611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.049705962 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159239258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16691945 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096392904 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141184596 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67755679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.036693643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.342945396 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.022131318 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.433460023 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706033055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098363379 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129278287 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097587724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.026582719 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094695173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124096118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098205803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701722205 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400028071 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124459438 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.471854465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09708278 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125872026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38588785 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121563167 seconds)
  done (took 17.163778417 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146530231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18396634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130576868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098604449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125960796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099060524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.133180404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.108421978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181786814 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124977165 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11598836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123263538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100807335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123831735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11887744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122963801 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098893551 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125381288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102658626 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125433259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115349906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122480167 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09762067 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126277161 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096057469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136122992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096190073 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.134254286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095671167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127598222 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126818872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097879279 seconds)
  done (took 4.880698169 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151703352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192121465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131619284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131553101 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177436502 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124388578 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.209392694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.132696697 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187321077 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128174803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115528733 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123603165 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159777746 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098108546 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145185961 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096485549 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125394401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098845707 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130953347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098943027 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143167145 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095361236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124660376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098243793 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123660973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111115699 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123565752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.133552793 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097439605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12721005 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103738072 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123447104 seconds)
  done (took 5.194007882 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10967849 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129780592 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114214983 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143731316 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103084352 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.131065575 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105041159 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126576998 seconds)
  done (took 1.986481272 seconds)
done (took 30.246685132 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124677579 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141294417 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.11437878 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.133077675 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133759159 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122760923 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.109227777 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.097580424 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.134806226 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.113906906 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.12987294 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.097650467 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.14145537 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105431931 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.144193377 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.106364702 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.149252494 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.114729823 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.126306917 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10643191 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128617851 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.117386169 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.129928807 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098080847 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.149538099 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131685227 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.115046931 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129964608 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103681224 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101510041 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.141002506 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.102207292 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.125803934 seconds)
  done (took 5.040219839 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.130643574 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.171894034 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099804349 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.123726988 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.16307763 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.097761124 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.150666062 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.095298747 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121462982 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.096278839 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.094462992 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.150030341 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.155016976 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.128430637 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.176573512 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.164791378 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.126591752 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.162018332 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.150091365 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.133802156 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.157579524 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098842736 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.157086365 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.166574576 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.098855465 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122410319 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.138665864 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156477277 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.165552957 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.158830658 seconds)
  done (took 5.149857163 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112308099 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140036888 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123536745 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.196280034 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164840793 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.112871128 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137287028 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.115679954 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.153433267 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.096377865 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.135654126 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.155987953 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114547162 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.135285082 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103105622 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138733093 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117673814 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.126319593 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104874642 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144296562 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115130072 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.138105374 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.111942739 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134693299 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097191134 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134098548 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.102934172 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139305454 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.132253469 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107809371 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127678939 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102042287 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127369089 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.108713125 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128175407 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.106052971 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.147677365 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107778899 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.139076015 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.159115818 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.109184486 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.129065674 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.119972588 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.173608712 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099837742 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132792399 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.108175913 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.138240158 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096211141 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145455766 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111849927 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.126406515 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.139778535 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.098018305 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123115652 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106345527 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098936573 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.127715342 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.106363299 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131207512 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.144300696 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.107163235 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13296183 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.100305098 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131215551 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097934002 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123628906 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.104089725 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.149469174 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103493637 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158552588 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098874807 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.131324573 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106645105 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132234542 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107554141 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12549479 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1049717 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134368548 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104140557 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.134104131 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101184531 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.12924985 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115532209 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.140122024 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134375302 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.103896767 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132208768 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101642605 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127381521 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112845519 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127035002 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102095596 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.135781111 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.099398945 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.128688298 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104726309 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130620912 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097170768 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146177535 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104233053 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125472558 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.115465036 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.126491206 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10170341 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.135455559 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.109758464 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126494741 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.102504203 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.131743519 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097283889 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.131137968 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.101531294 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12457881 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.110254682 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.138017308 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103009816 seconds)
  done (took 15.345517103 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.251469347 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227086125 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.197819761 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.308912333 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.149209619 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.124047009 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.222582849 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.178934716 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129346343 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.165592898 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.181684003 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.187034111 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.098757142 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.159461893 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.226623806 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.31422464 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.159958971 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.167817002 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.137652791 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.149628004 seconds)
  done (took 4.791029617 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120269044 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.166553949 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.15606277 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.124228061 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.128423609 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112941057 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128637808 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.142244625 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.101050114 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.132996845 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.098239197 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.136038132 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101572578 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130309242 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.116030237 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.143760245 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103352416 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.134402508 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.142978559 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.105107241 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.128629292 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149754688 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.108523035 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.156215481 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.107201959 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.141963057 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097938421 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.134919886 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095603877 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.127777187 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.10336138 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.141716293 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.134115014 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.099976408 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132417003 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09997458 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122583485 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101113595 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128643848 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.10284286 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.143082691 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.101954448 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127764932 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.0993237 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13556835 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.09650532 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.131091972 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.106207781 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.131835302 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.108416294 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.133341256 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.104120296 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.135498791 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.11170379 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123657563 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.109036462 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.139567391 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131621279 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.105839986 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125423281 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09835674 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102624465 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.126592521 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.104036304 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132324562 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.142763147 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.107675825 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127032929 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.104417394 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.131767936 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102620953 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.144343644 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.146550294 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097387345 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.123753064 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.121544352 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123743091 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.088524147 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108194295 seconds)
  done (took 10.632864269 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133408435 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129503194 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.118948179 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.166103523 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.116539276 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.136971128 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.099462754 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.148476359 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.105838767 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.137217825 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.105797399 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142576305 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154704315 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.112803228 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.129711476 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114425404 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132711686 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.140476743 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150770937 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.158848683 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.111359956 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132968549 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.112381431 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.142729848 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.135058722 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.145422042 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.160383857 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.105079507 seconds)
  done (took 4.744057498 seconds)
done (took 46.728172717 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.17068824 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.349947392 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.118885401 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.12338816 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.133123786 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.128197628 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.123871321 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.317274369 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.782511058 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.113156748 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.125532829 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.130800795 seconds)
done (took 26.663046803 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.214549827 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.706477389 seconds)
    (2/2) benchmarking "String"...
    done (took 1.452023611 seconds)
  done (took 4.204216215 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.129241948 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.129526611 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.368300907 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.142275791 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.122419029 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.13524671 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.137724421 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.13658356 seconds)
  done (took 15.216586199 seconds)
done (took 24.811439475 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.160975799 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.312576516 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.389357568 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.15080266 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.122012096 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.13043528 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.10653987 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.152299622 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.12847916 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.113332173 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.122276735 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.407696493 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.111541137 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.50912538 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.109220481 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.128645375 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.143508345 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.358296579 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.131038779 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.160513408 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.111945817 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.108836019 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.13029559 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.160515345 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.141436527 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.124731576 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.168969185 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.109771169 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.3190265 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.127597064 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.168795596 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.125440627 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.179403592 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.125379383 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.225450067 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.159742235 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.310115083 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.117937983 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.113630794 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.125601667 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.326630083 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.516543632 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.124135461 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.120552915 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.148603812 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.190309121 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.110744815 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.828264849 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.13342522 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.133198558 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.181454673 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.511111401 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.140772098 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.129298039 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.155850154 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.372377856 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.150443401 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.149905854 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.157977534 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.139315651 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.140478869 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.127434624 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.125926406 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.125565363 seconds)
  done (took 138.390979835 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.131283635 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.130576453 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.1288324 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.189196332 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.131210815 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.131723283 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.131288479 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.134296975 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.128643258 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.154087672 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.129815769 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.124535377 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.136209352 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.083895301 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.130732758 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.15612727 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.134299313 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.132288686 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.128645469 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.135798924 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.130780772 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.12955986 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.143241247 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.125690456 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.164365682 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.212453834 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.159664756 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.146988948 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.129201574 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.133365493 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.16325612 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.145083509 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.694503679 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.98367993 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.140628273 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.130043144 seconds)
  done (took 77.466783064 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.132974832 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.136332187 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.137116437 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.166922604 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.136245069 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.663654239 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.660873308 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.856868064 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.810389362 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.368315245 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.133707517 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.376982243 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.133748027 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230821267 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.140910853 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.129395472 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.152133747 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.157094497 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.13328633 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.134078357 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.667405543 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.143799232 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.376117333 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.296838241 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.144925686 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.168889829 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.133848008 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.535325815 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.129039915 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.166998058 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.460682911 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.177395205 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.128756311 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.471803908 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.598065398 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248358929 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.130596435 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.166333307 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.131665671 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.418814471 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.129297436 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.141437239 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.140364038 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.781770356 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.132893292 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.671141058 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.134340203 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.062495593 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.133639063 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.138243839 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.203626268 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.754192934 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.151254046 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.139229131 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.141761083 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.137399094 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.137135074 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.169721609 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.225564633 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.240677062 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.140335888 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.144094049 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.16999788 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.137921218 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.14102896 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.381301815 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.136852267 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.284256811 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.195014122 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.246071577 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.674057805 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.140067374 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237236981 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248781257 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.132467332 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.139927558 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.141369684 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.142141161 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.251941273 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.132053357 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.532217652 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.298936289 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.145968597 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.371627733 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.232393016 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.13193044 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.475464119 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.137878195 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.136643632 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.888579007 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235341193 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.132545245 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.142820724 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.141370708 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.140613588 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.532916368 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.666860743 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.357902898 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.141957654 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.489628164 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.141161139 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.545269344 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.65179565 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.775544022 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.141736401 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253733837 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.302678407 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.150739345 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.143124494 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.375933941 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.138863178 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.199756664 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.133368759 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.539297989 seconds)
  done (took 357.353267095 seconds)
done (took 574.256031136 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.818619333 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.757829735 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.879714673 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.779912632 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.751997874 seconds)
  done (took 10.044111082 seconds)
done (took 11.100528452 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.329885625 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.324917507 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.194378394 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.324101307 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.171738555 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.34733492 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.30190818 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.160085391 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.238730459 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.222304474 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.238250702 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.190614433 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.1813243 seconds)
  done (took 17.283365779 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.400941722 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.13749902 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.215859295 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383040773 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.1743694 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.391154221 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434179213 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.136613682 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.279947551 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.157494241 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.157492714 seconds)
  done (took 16.929886142 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.403372907 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.134595526 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.206037544 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405983206 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.17779173 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.41263211 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.424239233 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.137301717 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.280828348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.154533075 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.162641387 seconds)
  done (took 16.958091205 seconds)
done (took 52.231193873 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.181472637 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.305679504 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.165897608 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.156792069 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.149085581 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.159971052 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.161130597 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.156213102 seconds)
  done (took 10.496680279 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.156396638 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.154171577 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.156085026 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.14712448 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.155487428 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.148231492 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.153692732 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.154249734 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.151699304 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.148574366 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.15188589 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.148888988 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.148875517 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.147971739 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.149863162 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.152576578 seconds)
  done (took 19.486992507 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.157005778 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.150107909 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.145477481 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.145974358 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.14670165 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.150411262 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.146191323 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.147996111 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.148125353 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.149842266 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.147337392 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.149596641 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.150042848 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.147505086 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.149409832 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.14837682 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.149200557 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.147606882 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.152184924 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.147405902 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.14932087 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.154051155 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.149400261 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.149687066 seconds)
  done (took 28.641587224 seconds)
done (took 59.684994005 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.163209697 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.161322505 seconds)
  done (took 5.388095126 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.215939294 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.213452387 seconds)
  done (took 3.495251823 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.159251789 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.155974712 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.157235995 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.154271236 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.154280089 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.157631397 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.152156598 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.154312716 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.155566661 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.157106028 seconds)
  done (took 12.620596411 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.159710507 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.156975963 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.153413857 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.158762245 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.156147372 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.150693752 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.15308329 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.153526215 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.15497632 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.152503418 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.157430592 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.148446913 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.151604495 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.157103027 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.152474421 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.153230741 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.153519391 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.156876039 seconds)
  done (took 21.843187331 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.169460167 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.176371671 seconds)
  done (took 3.40944061 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.297345789 seconds)
    (2/7) benchmarking "second"...
    done (took 1.192986446 seconds)
    (3/7) benchmarking "month"...
    done (took 1.268017619 seconds)
    (4/7) benchmarking "year"...
    done (took 1.262081199 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.191719448 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.171183788 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.193509103 seconds)
  done (took 9.641690781 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.159195594 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.346174657 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.445231172 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.689416456 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.155723875 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.15570175 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.989452895 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.158575125 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.158835447 seconds)
  done (took 13.323546679 seconds)
done (took 70.783567376 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.154063059 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.171526565 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.166181604 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.158022564 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.451811199 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.20288523 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.1483473 seconds)
done (took 15.517418517 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.137295795 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.138172986 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.143515149 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.159971006 seconds)
  done (took 9.644367245 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.14874692 seconds)
    (2/2) benchmarking "read"...
    done (took 1.514986136 seconds)
  done (took 4.729296092 seconds)
done (took 15.441279426 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159665525 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.154291555 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.151947176 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.155909869 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.153574138 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.153632044 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.156842806 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.156822995 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.155197573 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.153639236 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.158227015 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.160197808 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.157715911 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15130735 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.15563363 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.154959982 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.154533572 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.155632459 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.157673647 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156832791 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.150684292 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.157074776 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.157496774 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.16226939 seconds)
  done (took 28.80805865 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.163466556 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.153742853 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.158091091 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.161820057 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.159579085 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.161156508 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.159836562 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.155592011 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.163737281 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.157888191 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.16094761 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.156883899 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.159139307 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.15614792 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161619127 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.155485552 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.159539268 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157576231 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162705974 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.162879832 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.16336715 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156866393 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.164974378 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.159250733 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.158161205 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.157355233 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.159087114 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.156605524 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.159979868 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.157640702 seconds)
  done (took 35.851383276 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.17053409 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.168389442 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.163912208 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.160460563 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.161164292 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.159690444 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.160102366 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.157840876 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.159583561 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.160158918 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.161720813 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.16697977 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.161320184 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.163422638 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.165028787 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.161292923 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.159223401 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.163352141 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.163685687 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.165108121 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.163494746 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.162646568 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.167431502 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.162397235 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.160779699 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.162923164 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.163303107 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.162318457 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.157827485 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.162681633 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.160724436 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.160417732 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.166848961 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.159447825 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.16185196 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.165235307 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.169803494 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.171474382 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.160757043 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.162654722 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.162361628 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.165449867 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.160567422 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.169290252 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.165936933 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.170576614 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.169915084 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.169388262 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.167189589 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.161718288 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.165029116 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.162317938 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.165881679 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.166529552 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.162890309 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.164793393 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.166386206 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.163044549 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.16820729 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.167928702 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.163569851 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.164246091 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.169347659 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.1634256 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.169790428 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.161935818 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.165873172 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.163318852 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.166631866 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.163422136 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.163154863 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.169319173 seconds)
  done (took 84.889756009 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.171060542 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.161622768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.158923035 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.163285762 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.167189438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.168098545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.163387854 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167701286 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.163237553 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.169873453 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16450069 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.160887137 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159108251 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.167950892 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.167666475 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.161582151 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.167559354 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.16734725 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.166353297 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.165805294 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.169843461 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.163430018 seconds)
  done (took 26.712510829 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171779586 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.170486372 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.164478366 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.169290674 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.16976027 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.174647711 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.169266617 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.167251034 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172237583 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167993831 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16074819 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165854179 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.169858787 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.168699373 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.165059843 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.170567577 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170142533 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.169197524 seconds)
  done (took 22.111581539 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.170325695 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.167021117 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.167391388 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.1687195 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.16637264 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.168096397 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.170116502 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.172931276 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.172289083 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.169646791 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.172761445 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172802049 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.170341076 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166360154 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172939124 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.171068453 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.170900501 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.172565046 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17305714 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.171101735 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.170093105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.17359877 seconds)
  done (took 26.825820734 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.174019807 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.174629242 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.173533619 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.17038439 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.171775232 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.172026306 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.168856197 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.173708037 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.171318251 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.174851971 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171202084 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.170540158 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.167679126 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.170781602 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.170400987 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.166475663 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.173653729 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.172363987 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170569294 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.169312129 seconds)
  done (took 24.506044405 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.176955488 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.172442372 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.174308634 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.175703313 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.17317175 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.17543042 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176140163 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.175675426 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.17284947 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.174636289 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.174130733 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.173289738 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173458541 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.176657996 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.175326106 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.176356905 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.175741792 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.1754934 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.174340486 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.175842021 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.17454201 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.177575727 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.174065498 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.174475059 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.176654575 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.17691795 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.178010295 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.177598679 seconds)
  done (took 33.987386016 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.178133574 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.175712104 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.170368162 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.169594893 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.170262119 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.171029218 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.168354158 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.17341534 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.172874924 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.175114893 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.173662737 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.173449594 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.171984746 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.169953213 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.171777904 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.172518234 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177254148 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.171384543 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.170535175 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172131003 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.175381647 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177389346 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.176666135 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.1739569 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.169780996 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.179495129 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.175228341 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.169882644 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.1763012 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.170495573 seconds)
  done (took 36.275567106 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.224095486 seconds)
    (2/2) benchmarking "in"...
    done (took 1.225308337 seconds)
  done (took 3.531723486 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.178355961 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171630317 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.172735627 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.173625258 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.173873317 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.174040933 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.176784036 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.175828634 seconds)
  done (took 10.477639 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.182211721 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.1741572 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.177804847 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.180968472 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.180494973 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.178731021 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.182216495 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.194179016 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.181384288 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.179009436 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.189425531 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.191443477 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.179372458 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.176099033 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.178875351 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.180188867 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.174823075 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.178699377 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.179892494 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.182898194 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.179410759 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.180348812 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.181779793 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.172331157 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.183818806 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.190513179 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.181627443 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.17557215 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.175615273 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.184243777 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.175474858 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.178950524 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.174423302 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.181508464 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.175592886 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.176670069 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.192938393 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.197519591 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.188707775 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.175455805 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.185750382 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.17799661 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.181065612 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.179034121 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.183853863 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.176330141 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.180547646 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.178577113 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.181135505 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.182113286 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.19226868 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.17916689 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.178697239 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.18301623 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.184918175 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184470919 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.200555487 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.188220117 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.195375465 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.194007092 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.194711287 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.201816247 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185628237 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.180006907 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.193907938 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.208159056 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.183758951 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.196409875 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.174570652 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.185654628 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.186417402 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191705919 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.20119268 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.178539132 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.178858613 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.182491708 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.183049666 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.185060912 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.191852435 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.204142171 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.177331543 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.185152606 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.194676585 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212344035 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.180919673 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.180477828 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.18236922 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.181346367 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.182735126 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.194910087 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.19808017 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.180955849 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.182079532 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.186453155 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.185159066 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.184957609 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.187976349 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.185083218 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.180654781 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.18575975 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182391768 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.185074912 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.192743179 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.179809447 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.190209895 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.193874836 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.181816272 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182115635 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.191467596 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.181441783 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183770327 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.186374368 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.194553201 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.180975033 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.19208108 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.198706884 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.184058568 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.187217003 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.182467678 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.191325611 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.197518767 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.22237074 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.1844019 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.189841412 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.195514785 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.201984375 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.191854604 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.194162047 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.187213202 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.184150311 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.1919207 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.193427661 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.188666402 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.190550199 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.192621223 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.194794307 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.182152965 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.191427248 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.185048513 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.188736806 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.184538564 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.185668847 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.185325237 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.186364174 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.188221769 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.190295278 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.190748484 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.185226611 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.187736273 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.185680667 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.189392045 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187168334 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.191082842 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.184422012 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.192179501 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.186793642 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.192129539 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.18331537 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186952768 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.191340824 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189137663 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.188668894 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.197073878 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.187152994 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.193325235 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.187380454 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.183525232 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.186305517 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.187957439 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.188839831 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.184140225 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.187762306 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.196231514 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.203293132 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.196117689 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.187924115 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.190741791 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185382915 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.190102562 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.190988455 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.194464586 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.200622628 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.185077543 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.19877729 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.188250269 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.195638749 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.194005225 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.187842659 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.183887793 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.193452794 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.195051771 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.203388391 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.203368389 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.214151577 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.187385776 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.195296741 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.188828104 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.198130234 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.194268774 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.186017229 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.195186751 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.193740473 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195055123 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.189935432 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.19797761 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.191289987 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.190861992 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.189669271 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.193922162 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.191178545 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.197021164 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.194581795 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.195241151 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.18724151 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.191753273 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.18871189 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.194253918 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.189065474 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.196409859 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.193136095 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.191259081 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.191193963 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.201583222 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.190070919 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.194189096 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193711683 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.194378373 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.193352645 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.191734849 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.196527883 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.194252704 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.197806948 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.214852902 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.194985493 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.199941981 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.206315566 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.190890471 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.193847411 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.19391469 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.190252297 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.198680725 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.206288605 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.191940528 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.196881169 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.193797865 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196460933 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.190899624 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.197984225 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.190925778 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.196240026 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.19255576 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.195708432 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.191458649 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.192312937 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.194470622 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.191006344 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.193818056 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.189622343 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.191000211 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191799134 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.190201507 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.197627235 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.197640484 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.196338153 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.202884608 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.200786226 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.194337708 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.19375848 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.194474661 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.201720569 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.194296639 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.195349198 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.193572736 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202786585 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.222700088 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.206393283 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.210421804 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.191704194 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.201041761 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.211042625 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.201637788 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.191735779 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.191558944 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.192197114 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.190970032 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.189164961 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.196108243 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.194624133 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.19312324 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.194627508 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.204621736 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.193604384 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.192448387 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.193645467 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.199239676 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.199214124 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.196803062 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.194063945 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.19940355 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.198077311 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.191698099 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.198147834 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20341943 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.21369211 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.193583681 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.194583996 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.194621916 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.194708583 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.198636838 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.193061102 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.199399581 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.207035668 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.202576105 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.211868205 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.196418667 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.21235852 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.19673629 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.205904476 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.209471405 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.198434194 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.197613718 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.201617613 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.199475264 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206345243 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.214297499 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.203629869 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.20496008 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.199100148 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.201063048 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.197618117 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.19752038 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.202244025 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.19316045 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.208923749 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.21621243 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.208110871 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.196809359 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.19327872 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.197602554 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.200065223 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.197119376 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19873094 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.195217908 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.203238979 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.198900107 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.196426296 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.197474123 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.197945713 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.20144684 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.197681592 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.197454917 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.207695165 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.218019178 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.208924778 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.204366458 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.203811885 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.199244904 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.207712801 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.21743037 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.203431777 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.200617803 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.199666738 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.203411026 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.194403066 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.202478041 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.197021315 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.205336592 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.209280566 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.198407373 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.204155074 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.198226954 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.198797114 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.197526254 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.209563497 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.226522079 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.20075733 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.208825905 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.199158313 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.201358183 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.207444452 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.20412686 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.203038134 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.201544578 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.215402749 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.211764611 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.200045403 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.196962756 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.205227566 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198583181 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.20243646 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.200203856 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.681496677 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.202530207 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.203355933 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.201502074 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.204360614 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.199872188 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.201690896 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.201120951 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.20164621 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.210690388 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.201759929 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.207097516 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.200202978 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.203673098 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.20161434 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.198383923 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.202936068 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.202423289 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.197735869 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.202194787 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.211138586 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.212025244 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.20233364 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.200431976 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.202123865 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.206991259 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.2019531 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.200191467 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.205698316 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.203831808 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.205600362 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.203253845 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.208286317 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.199048577 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.20052718 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.202491899 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.202907884 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.202771477 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.216809836 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.201289143 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.198538771 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.204237471 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.206079721 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.203532116 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.20110238 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.209111611 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.203899383 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.220893597 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.219072964 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.21164236 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.207383477 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.205835358 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.214040042 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.206574338 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.203270107 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.201890543 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.204227106 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.204281378 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.211861815 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.203100237 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.209499585 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.203313347 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.202831379 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.213389603 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.224053342 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.204510995 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.208098885 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.21255482 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.204235053 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.200867638 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.207239262 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.202829733 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.212892559 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.223554744 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.202592627 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.211923064 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.205354564 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.208351479 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210258521 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.208176038 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.20832812 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.201263173 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.206469383 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.204184336 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.203417756 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.200865766 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.206666234 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.204065193 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.207491869 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.216401092 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.203443388 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.206226368 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.205009936 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.206569061 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.203971547 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.209341336 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.204429263 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.201876712 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.206216476 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.205599039 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.210467984 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.208236092 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.205936165 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.207271677 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.211699293 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.205914965 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.211170244 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.219582471 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.219626044 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.206282693 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.207837972 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.20623853 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.208531235 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206202889 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.207787811 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210112099 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.209077094 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.206000726 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.20722203 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.209470232 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.211688611 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.224880912 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.227999719 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.207208385 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.207053174 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.210220635 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.208940901 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.204836991 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.209554494 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.212593852 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.212013648 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.226097366 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.212564192 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2190071 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227567011 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.208443887 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.217741347 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.211935915 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.221877191 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.212637822 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.213602522 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.211198437 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.216077823 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.229805087 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.211251324 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224501098 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243312082 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.229322713 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.209610101 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.209706419 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212988303 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.210693068 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.212937816 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.208760867 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.213065156 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210166504 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.211730492 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.211357043 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.220798913 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.209887346 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.213157991 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.211131489 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.211268343 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.212565237 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.209774173 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.21190397 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.216847266 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.211100709 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.212825772 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.215282927 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.214108509 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.22340304 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.236420276 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.21201792 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.212736387 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.210941627 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.21330681 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.216290187 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231784193 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.221854677 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.212296328 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.213165231 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.216799 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211999107 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.211624593 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.213687065 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.210928149 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214278321 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.210050381 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.226266077 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236896988 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.219189929 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.211173969 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21488793 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.21299307 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.213907179 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.212427077 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219565356 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.214146049 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.214347232 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.21993961 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.214276432 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.21464326 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.215655747 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.224185644 seconds)
  done (took 716.126965902 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216079767 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212001411 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213185542 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.210829347 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209955857 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213282361 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211093899 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.209112202 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.213155774 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213297822 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.208935754 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209917959 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.210489068 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.211268166 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.210069241 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.210918561 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210225539 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.21118115 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.21201656 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212998572 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.212077251 seconds)
  done (took 26.56195053 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.222955749 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.213723153 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2154636 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.21623056 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214378618 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214533253 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213429615 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21436529 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.21360939 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215642651 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217851974 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217652622 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.21082036 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.21349955 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215909258 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214824177 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217349559 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213351182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.216965955 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214547977 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214586802 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.211989507 seconds)
  done (took 27.853065838 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.219993829 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.218176841 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.219625031 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.212980473 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.214922514 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.21459224 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.2163446 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.219149127 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.216161553 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.217093639 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.218272395 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.217593172 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.225303745 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.222752029 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.216868323 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.217080801 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.215541612 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.218438782 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.215829548 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.214840787 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.220361309 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.23130559 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.214246078 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.215551511 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.217818784 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.218126182 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.216432072 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.219014073 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.222857132 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.222567371 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.220521761 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.217980661 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.220724049 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.21703272 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.222711095 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.225249098 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.221259655 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.221522411 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.218481542 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.22954496 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.242304603 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.218272091 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.225730972 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.234738226 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.219317878 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.220408949 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.230392812 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.223308184 seconds)
  done (took 59.701480682 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.809306383 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.815049738 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.814612605 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81888927 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.822546576 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.822892481 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.832677708 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.82933466 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.810843401 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.816347368 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.821341081 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.814742682 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.823063853 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.821314703 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.824052214 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.82100234 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.820994412 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.822972776 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.837089856 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.834644408 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.818800126 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.828807617 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.819849016 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.823447252 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.829147081 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.829962481 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.828015923 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.835413285 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.826782569 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.823097793 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.830861126 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.838480735 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.836202769 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.814268884 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.82335843 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.82382791 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.830199633 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.824158651 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823432719 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.820670616 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.829239565 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.826551235 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.823402747 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.829110343 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.845784199 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.816997774 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.824435563 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.8218658 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.825252309 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.825265156 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.83357041 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.824724714 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.833759129 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.826143109 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.825812525 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.832224464 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.840214018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.832396308 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.818378898 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.82300447 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.820561952 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.832868579 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.831675131 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.823786944 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.831625629 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.827882274 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.822452499 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.829821126 seconds)
  done (took 125.267675316 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231141636 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.225462736 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230417388 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229593739 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224777004 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.225435873 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229750219 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.227089327 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.230380198 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225042457 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225680409 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.227464157 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.224004875 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.228703331 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.225746906 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227001177 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.224907743 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228229629 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.229898805 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226861241 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.229468671 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.226844406 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226067929 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.227081507 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232520053 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.233604908 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228010769 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.227260569 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227789262 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2279722 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231456635 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.23001443 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.228604863 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.228637274 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.227965439 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.230387982 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.229569578 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229521536 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.231017719 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.231931821 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.230670236 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230356246 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235227548 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.228433636 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234015987 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.23185385 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.230467723 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.234482846 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.229228924 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.226860617 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.229686946 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227022203 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231710798 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229787355 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.230521273 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.233199739 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229482155 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231788657 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230515348 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.233224596 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232662316 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.230362679 seconds)
  done (took 77.347973591 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232169 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231840614 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.226837205 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.227021068 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228343079 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227667593 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228963316 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.229622504 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230101133 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.229428109 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231595998 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231090629 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233660412 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23114272 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228442388 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228214089 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227883372 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227161886 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229680256 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229409095 seconds)
  done (took 25.722362381 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.232904116 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.230592479 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.227233599 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2265871 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.232688778 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.227507201 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.231410662 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232535374 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228468168 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230900503 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.229801208 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230445826 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226608621 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.229753257 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.230123909 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.229874571 seconds)
  done (took 20.809508811 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.233953177 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.234196247 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.233035731 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.233193157 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.231503547 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.229118127 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.234451416 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.231301443 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.231109074 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.234168543 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.233793455 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.23186968 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.232927009 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.232130878 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.2313063 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.231506162 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.22929213 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.230286735 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.232760538 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.234477535 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.233806715 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.229679815 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.232379194 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.232026976 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.230819291 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.231258104 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.229778873 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.232419791 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.229348414 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.234920244 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.231388171 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.229197464 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.229750782 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.230827474 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.236271281 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.2301209 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.235395301 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.234266174 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.233787496 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.233595777 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.23669116 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.231619538 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.234536857 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.234308892 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.230741715 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.232543314 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.231497794 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.232338105 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.230629278 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.23070356 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.231395799 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.230797943 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.237642231 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.234602484 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.236617958 seconds)
  done (took 68.918384729 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238419092 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.232976745 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.231081561 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233157228 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.235597678 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.232677064 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236420764 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.234973888 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235904696 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239705592 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234492766 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.23540558 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233814678 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2354797 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232013975 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23579172 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.232854148 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.237228915 seconds)
  done (took 23.366064419 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.238016228 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234106701 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.235273896 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.233068698 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.234501305 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237736647 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236182408 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.236484111 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235465237 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233469967 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234550427 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.236929036 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237541889 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.235463868 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233617593 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236488576 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.237999473 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238786881 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.234560346 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23475147 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.238476926 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239418853 seconds)
  done (took 28.333215883 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.236839595 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.236937453 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.242220795 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.254446439 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.260424892 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.237890026 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.239988854 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.237821021 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.261733445 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.296724282 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.290588949 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.261864236 seconds)
  done (took 16.195467904 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241407394 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238009653 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234659307 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239201894 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236691461 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235482698 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238464541 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236580616 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237602152 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237409888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236223492 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238521898 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242364842 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236967922 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24024505 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238754127 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236474695 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238699471 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241433775 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24024453 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235601328 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241063253 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238273877 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239128336 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238322314 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239808127 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240409026 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23688234 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236705446 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239756887 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239484966 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237258839 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24541007 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236834604 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241269661 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241143845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239223335 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242311151 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242278646 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237207394 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.242026844 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241911465 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243200272 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237326395 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243241265 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238745212 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239044964 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240452263 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240881102 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241069339 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244324677 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240243543 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24331642 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242319415 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240984497 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243721705 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238965442 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24211082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242834619 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240138781 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239546638 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242657444 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240612764 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239205798 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243731568 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24013911 seconds)
  done (took 82.968579433 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244171532 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238014502 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243334929 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239836892 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239523475 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24102974 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239991371 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240715265 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241586413 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239456177 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241726227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242069558 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243365441 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239084659 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242248441 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241317212 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241780482 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239412931 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239168368 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24600781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237841505 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240841241 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240487399 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242784554 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241313138 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24295846 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242078559 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241447422 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242167127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240906052 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242021564 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240671832 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243988876 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.242240105 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24221816 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240897358 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240934926 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241881314 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240802497 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243858365 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240700957 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245382296 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244662713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242343602 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243051397 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241630509 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243804934 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243570887 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240706618 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242956972 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241869999 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244203812 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244652703 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243191283 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243987013 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244688225 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244816548 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244521979 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245018326 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245584876 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242906833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243055075 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245687947 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244132122 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244296933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244101204 seconds)
  done (took 83.136475628 seconds)
done (took 1717.353535236 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.411279007 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.366178758 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.249375674 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.259218415 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.2405053 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.240481447 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.256340413 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.24000422 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.249262368 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.250665648 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.24782155 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.436029009 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.245369286 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.239404161 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.247001463 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.343229249 seconds)
  done (took 25.672306601 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.276599978 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.252680088 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.36793018 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.27335106 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.275132232 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.433589499 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.306699168 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.250460525 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.424920643 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.294672859 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.240357718 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.286695061 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.247386023 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.240305805 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.280963553 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.435795226 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.502193151 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.242506026 seconds)
  done (took 27.78025195 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.710518318 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.249804492 seconds)
  done (took 5.11076381 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.273378116 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.253524784 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.251375711 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.250094358 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.244335319 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.256662208 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.252685919 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.246948876 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.271027914 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.37147595 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.253029577 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.261428154 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.271457095 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.251914463 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.248198724 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.292007285 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.405188682 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.244931494 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.248225916 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.258010343 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.250665922 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.343168224 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.289683183 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.24903401 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.375838743 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.25690365 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.255987027 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.26042304 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.424115873 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.245810423 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.251001974 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.255061191 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.255039564 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.173982887 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.800571156 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.246552532 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.274262745 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.262435366 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.24918416 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.42614628 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.248997009 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.257671524 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.245066256 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.7782572 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.39562904 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.37780063 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.262269432 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.247846062 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.25348571 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.323472257 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.255448176 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.255752109 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.297422899 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.088089449 seconds)
  done (took 80.993296741 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.256158496 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.247288076 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427057656 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.265795841 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.245350843 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.24188916 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.242006918 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.540647891 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.27775406 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.245911396 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.580972399 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.819163858 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.262104646 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.294118016 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.090848208 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.310573566 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.249589858 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.261133355 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.252676097 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.243295834 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800884984 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.252520327 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.259694571 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.423946865 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.287219138 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780847876 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.249050152 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.25020538 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.267858259 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.247335674 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.785102605 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.267883765 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.30494314 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.24915674 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.528510114 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.643289002 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.610022372 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.249628237 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.273985735 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.24809251 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.252357484 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.768321722 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.628443291 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.252138982 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.248450497 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780752776 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.249912009 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.258017521 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.246956725 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500174185 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.244211872 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.251641581 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.264869448 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.246418057 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.250561276 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.345834939 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.330503136 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785910223 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.24885286 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.247927297 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.274207727 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.249934435 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.256430829 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.253359068 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.250840218 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625463219 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.395899313 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.253267147 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.6318916 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.780531576 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.266138517 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.837138686 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.268944493 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.277974467 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.464297859 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.252658972 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.245282986 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.799752304 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.25926956 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.246209538 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.613947996 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.255010793 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.590105962 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.283862422 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.253323597 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817595417 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.258747096 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.255871465 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.253637476 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.267317959 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.248801259 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.256426432 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.535917585 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.290429419 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.255269536 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.253963455 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.29155197 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.250830737 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.252334436 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.259491861 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.839489699 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.271546485 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.256384283 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.253915 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.25366891 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.249597794 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.255553566 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.255010263 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522367017 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.251196716 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.256164994 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.256365142 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.252236041 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.261245985 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.431568231 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.259603973 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.579497861 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.255436057 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.261262435 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.251187363 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.257882313 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.260180929 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.249542926 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.255757034 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.145703554 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.552370329 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.272266318 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.250242511 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.256827073 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.26534496 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.249534001 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.273423576 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.289542759 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.257826282 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021204129 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.273256261 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.263756458 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.254436526 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.26114053 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.260765206 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.254813893 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.257760591 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.550686418 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.529365069 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.404239226 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.252952131 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.254518266 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.026584144 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.314516089 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.435357619 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.270796103 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.255088499 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513565982 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.48613387 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.259861261 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.250409019 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.256955774 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5160713 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.253528229 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.576415267 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814094832 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.266977041 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.262265925 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.030582733 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.954948606 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.255516578 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.26336853 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.589347201 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.270975657 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.258803623 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.256044659 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.261695073 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.270244622 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.262038459 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.262383692 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.258061992 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.258796232 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.296758357 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.45146182 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.270602822 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.266654467 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774110981 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.264525322 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.256224651 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.262916687 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.257866601 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.258331593 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.323754211 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.263965667 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.265724403 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.262704671 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.265134735 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832415101 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.252969627 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.255337784 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.44984272 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.953548295 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.277204849 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.261257029 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.274895144 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.162628586 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79767313 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.31018631 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.579534909 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.255417079 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.299155015 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.262303755 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.278296716 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800991168 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.257791816 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.285366251 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927717181 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.27199272 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.725043291 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.258923443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.263750386 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882305073 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.274655791 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.262732197 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.255292989 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.262693759 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.549617259 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.260065722 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.281098998 seconds)
  done (took 480.959326066 seconds)
done (took 621.662499151 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.268147516 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.258435652 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.24808361 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.262745991 seconds)
  done (took 10.203409109 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.272812522 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.267479244 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.270788914 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.267776887 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.272125176 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.266989508 seconds)
  done (took 8.786414549 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.263730995 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.261879078 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.264377083 seconds)
  done (took 7.957513127 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.480217928 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.278685736 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.613166857 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.288909992 seconds)
  done (took 8.830308214 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.269220143 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.272682973 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.271508704 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.274311928 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.273391582 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.274357074 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.272538953 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.270824477 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.273590217 seconds)
  done (took 12.620131933 seconds)
done (took 49.56464582 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.261921676 seconds)
    (2/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.26627634 seconds)
    (3/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.356836979 seconds)
    (4/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.448846545 seconds)
    (5/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.441504309 seconds)
    (6/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.981736442 seconds)
    (7/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.304806154 seconds)
    (8/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.368596422 seconds)
    (9/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.299387271 seconds)
    (10/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.284710194 seconds)
    (11/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.388742903 seconds)
    (12/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.288885014 seconds)
    (13/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.285529122 seconds)
    (14/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.014769603 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.295982255 seconds)
    (16/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.310426691 seconds)
    (17/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.280762179 seconds)
    (18/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.574434003 seconds)
    (19/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.262744039 seconds)
    (20/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.349674806 seconds)
    (21/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.282371613 seconds)
    (22/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.416124533 seconds)
    (23/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.26384483 seconds)
    (24/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.293147764 seconds)
    (25/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.927741283 seconds)
    (26/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.454347873 seconds)
    (27/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.351498642 seconds)
    (28/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.490305286 seconds)
    (29/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.259703889 seconds)
    (30/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.671906172 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.290547964 seconds)
    (32/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.304514744 seconds)
    (33/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.401167664 seconds)
    (34/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.285937583 seconds)
    (35/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.414762977 seconds)
    (36/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.267795698 seconds)
    (37/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.361279655 seconds)
    (38/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.480848455 seconds)
    (39/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.311233511 seconds)
    (40/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.26418915 seconds)
    (41/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.270863128 seconds)
    (42/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.918918809 seconds)
    (43/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.412313654 seconds)
    (44/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.30412609 seconds)
    (45/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.251608067 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.271024646 seconds)
    (47/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.315096706 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.32446392 seconds)
    (49/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.324225503 seconds)
    (50/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.090524024 seconds)
    (51/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.342980167 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.33013638 seconds)
    (53/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.278329195 seconds)
    (54/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.27456257 seconds)
    (55/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.280362828 seconds)
    (56/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.376234471 seconds)
    (57/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.968004421 seconds)
    (58/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.295442834 seconds)
    (59/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.34096138 seconds)
    (60/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.920475358 seconds)
    (61/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.908225522 seconds)
    (62/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.253455799 seconds)
    (63/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.157795786 seconds)
    (64/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.268085089 seconds)
    (65/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.415671184 seconds)
    (66/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.473600815 seconds)
    (67/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.36235562 seconds)
    (68/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.304212539 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.375758044 seconds)
    (70/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.283448111 seconds)
    (71/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.369451071 seconds)
    (72/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.397512885 seconds)
    (73/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.483998181 seconds)
    (74/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.343861802 seconds)
    (75/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.413702028 seconds)
    (76/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.303066987 seconds)
    (77/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.348072371 seconds)
    (78/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.278008152 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.365722517 seconds)
    (80/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.324482933 seconds)
    (81/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.356198317 seconds)
    (82/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.023236689 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.396410627 seconds)
    (84/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.285364382 seconds)
    (85/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.481216911 seconds)
    (86/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.257160713 seconds)
    (87/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.295277689 seconds)
    (88/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.349715447 seconds)
    (89/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.392888787 seconds)
    (90/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.357594256 seconds)
    (91/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.41265491 seconds)
    (92/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.348401716 seconds)
    (93/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.292036903 seconds)
    (94/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.269834486 seconds)
    (95/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.359774054 seconds)
    (96/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.327869123 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.343245352 seconds)
    (98/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.254039506 seconds)
    (99/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.254571128 seconds)
    (100/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.931277167 seconds)
    (101/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.634700894 seconds)
    (102/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.345893818 seconds)
    (103/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.399439736 seconds)
    (104/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.028026374 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.379853774 seconds)
    (106/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.282697327 seconds)
    (107/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.408891725 seconds)
    (108/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.293352209 seconds)
    (109/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.282141413 seconds)
    (110/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.291502262 seconds)
    (111/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.97746938 seconds)
    (112/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.279569564 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.334033714 seconds)
    (114/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.280350358 seconds)
    (115/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.279332939 seconds)
    (116/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.281420389 seconds)
    (117/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.285186017 seconds)
    (118/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.258532863 seconds)
    (119/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.312826334 seconds)
    (120/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.487093813 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.329818861 seconds)
    (122/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.407644894 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.44155522 seconds)
    (124/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.356248406 seconds)
    (125/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.272042642 seconds)
    (126/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.395261149 seconds)
    (127/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.136108225 seconds)
    (128/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.273915143 seconds)
    (129/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.317355158 seconds)
    (130/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.151634425 seconds)
    (131/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.306149418 seconds)
    (132/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.319285914 seconds)
    (133/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.098094939 seconds)
    (134/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.268805335 seconds)
    (135/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.404216955 seconds)
    (136/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.460035589 seconds)
    (137/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.145977229 seconds)
    (138/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.473933129 seconds)
    (139/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.476639349 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.437839596 seconds)
    (141/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.285666668 seconds)
    (142/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.021529846 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.304291155 seconds)
    (144/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.281926311 seconds)
    (145/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.30093428 seconds)
    (146/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.363113853 seconds)
    (147/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.465746864 seconds)
    (148/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.033190557 seconds)
    (149/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.303322919 seconds)
    (150/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.482493102 seconds)
    (151/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.346040996 seconds)
    (152/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.293405544 seconds)
    (153/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.258593113 seconds)
    (154/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.349413861 seconds)
    (155/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.355094342 seconds)
    (156/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.431485051 seconds)
    (157/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.284205289 seconds)
    (158/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.362753735 seconds)
    (159/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.421793811 seconds)
    (160/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.461711455 seconds)
    (161/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.370703162 seconds)
    (162/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.019278762 seconds)
    (163/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.387741372 seconds)
    (164/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.297209746 seconds)
    (165/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.283428154 seconds)
    (166/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.92183682 seconds)
    (167/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.384525107 seconds)
    (168/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.523627978 seconds)
    (169/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.294887097 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.280449028 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.440727421 seconds)
    (172/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.279170009 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.297870523 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.378840124 seconds)
    (175/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.329384691 seconds)
    (176/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.274614966 seconds)
    (177/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.28307237 seconds)
    (178/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.616331146 seconds)
    (179/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.26136539 seconds)
    (180/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.425913439 seconds)
    (181/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.357970076 seconds)
    (182/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.926711054 seconds)
    (183/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.314235003 seconds)
    (184/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.319516749 seconds)
    (185/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.373244012 seconds)
    (186/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.300159069 seconds)
    (187/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.35523295 seconds)
    (188/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.928190269 seconds)
    (189/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.025044201 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.392133716 seconds)
    (191/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.312985268 seconds)
    (192/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.275577249 seconds)
    (193/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.421525879 seconds)
    (194/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.286119296 seconds)
    (195/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.483905523 seconds)
    (196/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.419512591 seconds)
    (197/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.325597243 seconds)
    (198/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.291357922 seconds)
    (199/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.34437376 seconds)
    (200/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.268899509 seconds)
    (201/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.292075149 seconds)
    (202/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.3281273 seconds)
    (203/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.023876095 seconds)
    (204/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.398483304 seconds)
    (205/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.285818291 seconds)
    (206/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.344584907 seconds)
    (207/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.297659262 seconds)
    (208/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.384927267 seconds)
    (209/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.395012071 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.466483905 seconds)
    (211/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.342917749 seconds)
    (212/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.45262353 seconds)
    (213/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.368005 seconds)
    (214/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.29209729 seconds)
    (215/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.978139805 seconds)
    (216/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.377991489 seconds)
    (217/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.281576626 seconds)
    (218/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.286153897 seconds)
    (219/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.31458458 seconds)
    (220/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.398175321 seconds)
    (221/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.3073734 seconds)
    (222/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.404375554 seconds)
    (223/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.434118066 seconds)
    (224/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.421252517 seconds)
  done (took 354.311194496 seconds)
done (took 355.480444748 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.332568482 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.462472179 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.301326678 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.304426479 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.326130996 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.276779168 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.31609908 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.304594018 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.288084596 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.286588175 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.275666735 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.28545888 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.308762587 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.321414232 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.397741453 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.292957733 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.302935515 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.286110399 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.324781342 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.343114563 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.327846246 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.329140833 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.297811258 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.304309959 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.333393044 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.330725802 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.308528771 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.281681397 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.282430692 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.327762511 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.286439691 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.300306105 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.338546796 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.334472246 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327002797 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.288827957 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328342725 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.462979345 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.319816998 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.321201019 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.290606874 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.335775006 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.300355648 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.298315135 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.33927474 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.298710571 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.332687609 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.411912729 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.288239677 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.281073791 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331075745 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.351990088 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.292738265 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.28760741 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.275786707 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.403802104 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.291639172 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335375694 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.290694556 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.333330895 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.403436968 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335042571 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.350233427 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33435601 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.29111935 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.30954743 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.289834645 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.349251346 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.289524446 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331986661 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331296616 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.295656867 seconds)
done (took 104.233045002 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.351548183 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.285591446 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.39265181 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.288093813 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.386618739 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.386019866 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.283744412 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.285637133 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.281832008 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.668313065 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.287524844 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.285410745 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.287510457 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.283863045 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.368062284 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.288748444 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.283585825 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.634887351 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.289993345 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.360324971 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.287437488 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.286602027 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.288227477 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.679485043 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.287399403 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.282934425 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.358369303 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.289158315 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.632657624 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.283952852 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.286777172 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.641317762 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.380612086 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.306634753 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.297030056 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.293541208 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.388392429 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.303056295 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.367937995 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.370892486 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.394799705 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.328735612 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.283423254 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.29023103 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.29003844 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.292308968 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.287290854 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.315759742 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.287101841 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.287109408 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.63345825 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.298853998 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.289186028 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.289030564 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.285668809 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.318615528 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.28984911 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.29020217 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.381632306 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.288856386 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.352379503 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.678290044 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.679161274 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.293362579 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.286576428 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.290444935 seconds)
  done (took 101.481887948 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.357716537 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.369077234 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.406471414 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.305297691 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.34448092 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.410045987 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.304771998 seconds)
  done (took 10.684049032 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.300761258 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.291554179 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341151734 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.345095443 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.290323471 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.510707606 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.292557836 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.301830276 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.289004362 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.36968721 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.295974307 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.294732233 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.300076787 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.286630083 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.342401806 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.304690137 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.409240933 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.296357858 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.293369136 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.450803809 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.291603189 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.300564786 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.373329061 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.306420757 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.293697085 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.300903544 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.256269075 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.29533762 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.291649461 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.293625743 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292025447 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.40319406 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.296009658 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.293135496 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290146014 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451646861 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.295687069 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.289969592 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.293661509 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.294760347 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.294958867 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.295712093 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.292674367 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.291931979 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.292841063 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.317665131 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.29609159 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.296570762 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.293920349 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.294621681 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.375338115 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.296383013 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.291846388 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.291898765 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.373690398 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.304331529 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.295421223 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.292543564 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.295561234 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.290828254 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.451660735 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346361509 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.29641466 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.345094354 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298592906 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.296916476 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.294254029 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.295487962 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38816734 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.296822981 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.344491854 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.294472575 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.52235913 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.321153155 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.298853467 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.302074175 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.301327996 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.297418201 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.296829975 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.308833439 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.292275402 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.297398393 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.30287842 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.29467771 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.293084058 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.482214779 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454852153 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.295470749 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.308799222 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.305410295 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.294544043 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.37390273 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.298451091 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.293861465 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347200495 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.41274221 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.377249285 seconds)
  done (took 134.39840432 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.303409517 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.309194526 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.301555438 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.323537476 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.301531695 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.29886092 seconds)
  done (took 9.030167422 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.304479454 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.301694313 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.297528188 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.299391078 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.296756078 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.298392759 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.300094755 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301262384 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.305277909 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.299044358 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.298557768 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.300036377 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.301197194 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.301455475 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.3023058 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.301227564 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.300028183 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.299143263 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.298659867 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.300591033 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.301318493 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.302017283 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301728204 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.303802813 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.309420653 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.301914056 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.306571382 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.301975891 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.295782862 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.308720785 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.318320875 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.302688276 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.304096926 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.306453967 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.304386599 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.303362266 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305241394 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.302471336 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.298754529 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.303714939 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.304191298 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.305473197 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.304267568 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.305299737 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.306707205 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.309252482 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.307149369 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.31176729 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.302147706 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.303476489 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.303043784 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.302482387 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.3042812 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.302846532 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.307368889 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320870602 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.30934792 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.306126167 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.304309081 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.304729041 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.304782522 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.304812488 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.306452258 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.307823975 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.302051584 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.302976828 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.303681241 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.307804138 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302935886 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.303886594 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.302971454 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.304226138 seconds)
  done (took 96.065165301 seconds)
done (took 352.840315667 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.104010164 seconds)
  done (took 4.302917851 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.408935268 seconds)
  done (took 3.610933132 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.438220722 seconds)
  done (took 22.647738535 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.377421662 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.331394261 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.319785579 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.301431134 seconds)
  done (took 10.528330646 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.564672272 seconds)
  done (took 3.763193658 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.298616518 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.295092404 seconds)
  done (took 5.795665186 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.608257235 seconds)
  done (took 3.807330289 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.657585636 seconds)
  done (took 3.866919998 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.326313657 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.311983719 seconds)
  done (took 5.848431669 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.284468416 seconds)
  done (took 3.485377628 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.142888261 seconds)
  done (took 16.345105167 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.3121751 seconds)
  done (took 3.516041286 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.357737322 seconds)
  done (took 3.560472063 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.898028924 seconds)
  done (took 6.097833904 seconds)
done (took 98.374566046 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.299221549 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.299222048 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.302307826 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.301667605 seconds)
  done (took 10.401815434 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.360193584 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.358599401 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.359127234 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.359198415 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.359725986 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.357088789 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.332159349 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.331417942 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.359125602 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.358641018 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.357813228 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.361157752 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.360406702 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.333213242 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.35760562 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.360656186 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.35942453 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.360428198 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.331968208 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.356999934 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.306774603 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.359432127 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.357152816 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.307665865 seconds)
  done (took 33.60780904 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.800842642 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.380077704 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.462892823 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.361368114 seconds)
  done (took 7.207917521 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.385722603 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.386605283 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.397672267 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.439066454 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.449322859 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.401517906 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.334674246 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.328822932 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.315730427 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.388332239 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.44035062 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.378343709 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.462739688 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.307523095 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.513348935 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.30906224 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.308549676 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.385589368 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.439921507 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.439678404 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.310542275 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.387415186 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.387592568 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.377303558 seconds)
  done (took 34.478360858 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.317274539 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.322965064 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.31040312 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.32331996 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.30749678 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.308532945 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.309172376 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.314185172 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.308579832 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.307050088 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.306163598 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.322930062 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.31316589 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.309817323 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.316699917 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.309299225 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.314828221 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.311386226 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.309348425 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.314860979 seconds)
  done (took 27.462643076 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.305551846 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.303859184 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.655871712 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.559627497 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.303205413 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.303489306 seconds)
  done (took 13.636421046 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.381112922 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.534208204 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.30797383 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.676058925 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.763094852 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.312915131 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.310668172 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.565683313 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.884622126 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.866473759 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.361013433 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.38575185 seconds)
  done (took 19.55435503 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.316811896 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.305669801 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.307521581 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.320583733 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.364882097 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.330301162 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.321127847 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.30534773 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.370045607 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.385344595 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.32775917 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.370389809 seconds)
  done (took 21.232944386 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402176358 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306438158 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307868856 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32555027 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304085421 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147298194 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331326452 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.014043959 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.323203203 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583286272 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310883374 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400289754 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.560075848 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318536045 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308525148 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.303412629 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535465599 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798383078 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304415068 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30672154 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336964005 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311160206 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308010989 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.517041973 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304972284 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307764155 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.572601099 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3090068 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600051888 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323557867 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316841162 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306845138 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584274389 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962600747 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420212171 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520822977 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310182454 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302573787 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.309165883 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.305484193 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320349469 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307120335 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320482366 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307728612 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310469746 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308540606 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027629887 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.330787257 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.306262616 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311134483 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575178511 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405479276 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.313958363 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30998682 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365213192 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308890432 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.316426189 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402972291 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890228617 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312952549 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30693162 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.312549087 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312604407 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311218382 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924593832 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.310938862 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.313563562 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.313726999 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310459304 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307727228 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323399219 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309324605 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.330048496 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31028183 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028102561 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308727376 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309687958 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863228682 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321571885 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.311698112 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548311384 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311150105 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314362962 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.310152424 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311107974 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024492119 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315731992 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.295895444 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348225276 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025085828 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.541804502 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329497867 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348199331 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.537857864 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.297571988 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316484649 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.323850122 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307942307 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329998174 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020934522 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3285551 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.315245267 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570948027 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.523816002 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324827005 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.311035315 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786489275 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336090452 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.330799239 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3253647 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.529793201 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.902279863 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325810911 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317271305 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325493149 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313360328 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066138189 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319070847 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.418271616 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315741596 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584971112 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.10934455 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31471101 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385054242 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323094998 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318207844 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326358985 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313475587 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316810926 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.522074034 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340428257 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.332436205 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.318670914 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31507913 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.32065852 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320156148 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.313726829 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.542385048 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32382184 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592636768 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31690503 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318330505 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314381201 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.533584411 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.313153905 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.654642158 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580441598 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32510879 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326017214 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.330247141 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336639263 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420373234 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339690826 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.327514548 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.573887709 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.322564209 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.320581894 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321770402 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315606808 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325031401 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.326419827 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318680676 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909677235 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292944588 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321312933 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206705493 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.335477122 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387052125 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325504594 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537418435 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.324574934 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322051362 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.322583687 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.329598689 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544603217 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329473383 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.322159272 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390877802 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.794971462 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.926114101 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333595538 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.320269044 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.318158322 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.317469186 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321286482 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321239153 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322858135 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53355294 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330868793 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328754482 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917673151 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317433334 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324345802 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.321017764 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33348306 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.325672347 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31989813 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.323138308 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326647743 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326957939 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.334053478 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465123182 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.334979257 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321087269 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.83861321 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327429814 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319431185 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318830407 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35533013 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327619379 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124546438 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5786668 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341311276 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585498298 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322503593 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.336559729 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.322287237 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321610076 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343002207 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.338083561 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332481626 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.332817922 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328245907 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322160369 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902974136 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063984322 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863918437 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321309108 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.3226432 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323076062 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041947256 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335634483 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321028536 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566994973 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048401783 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336545781 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798651957 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.346707155 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105596644 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591230285 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553897362 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320118612 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.31910572 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604605623 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530698402 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357892456 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326593861 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324028395 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.304580826 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881924232 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344466805 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396177918 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046412825 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336979823 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320961067 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.34028187 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.322375033 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747700242 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336891731 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323951764 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328440991 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326248493 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132828458 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326965904 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327477007 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948485038 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336905052 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.803602275 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338247562 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.542469387 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.332949676 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.33317465 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.323014952 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.323024328 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.59772878 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592822068 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322743918 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326788985 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877478878 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.193879644 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.332772889 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324574095 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078797147 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320905005 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621157281 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.32690461 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.33959969 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328816887 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327399332 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327931895 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.324545782 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336948246 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307131757 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823865793 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.338016864 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324358878 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326621523 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329609165 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582000392 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.340407947 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930090271 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555773039 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329462172 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364476312 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.329492106 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32981696 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.312951019 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329322204 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.329807589 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358962103 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549929403 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325802202 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.328339937 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358575929 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535613377 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327502564 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330264708 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571023892 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.323561292 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.331017727 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070501255 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356444518 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332528636 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326688374 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330524746 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361156763 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402519495 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549237837 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.337818873 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.343590117 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736738744 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345938673 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327139633 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.344348902 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427582133 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34331782 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.326503441 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.104658387 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933688417 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070110936 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928353452 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597099417 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327854766 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341551454 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331472632 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489576419 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329731423 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602548571 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33208918 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.329752302 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367722724 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334590789 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333956102 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542832195 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608018357 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333075533 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332804157 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333454138 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.332686961 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342200883 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.545541425 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836315279 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896231649 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329605266 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337144607 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054209497 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620467752 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33400158 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334111277 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335194385 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.334380847 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.335282762 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.336128791 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344165566 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474134465 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603949102 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000010046 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.358086941 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.36126129 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.85294037 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346429664 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587439987 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33720284 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.55168051 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933429106 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058792403 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603146108 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403039323 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551345662 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.328363462 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498138739 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.34045949 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332375235 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335879157 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335676153 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.331147763 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.34697121 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947173901 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600928974 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.338118747 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.339993234 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361276727 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.345515235 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.559023709 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080660202 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559836435 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347407752 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341878318 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338885891 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947197699 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612102172 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337665045 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.334093605 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58102175 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33233487 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359355519 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.85426485 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.334518571 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901995946 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.303296396 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359236523 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342627206 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.072910664 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95107036 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.349026849 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84230744 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333017192 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337219387 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612165774 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.344114998 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340284739 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613790357 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.341789156 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342593476 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561891227 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.942905377 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126966607 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.337392717 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3467599 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.339176942 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337842897 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386591968 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340414074 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336388561 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.765478161 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352088775 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340939872 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347962387 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.345051011 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340663125 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.338331059 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337991416 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.340491958 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.328876997 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.333990901 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344045863 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434373393 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905436712 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353041005 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.011004888 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.668389105 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596565432 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34852144 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.327620957 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.345167083 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341927247 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342018585 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338213834 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341362192 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909212702 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.346076433 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.352947969 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349139047 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.345480401 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552987927 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352822062 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560460966 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345859426 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358421108 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.332070476 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342853916 seconds)
  done (took 952.043956316 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.401413953 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.390303957 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.362439565 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.423124044 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.360891827 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.461859082 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.362283584 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364870497 seconds)
  done (took 20.366101719 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.353185095 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.346717571 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.348054335 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.347003775 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.350664009 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.822105556 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.363281304 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.352042916 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.360714461 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.358404994 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.344133721 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.32294972 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.349969496 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.356277904 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.342772604 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.355406394 seconds)
  done (took 32.323666375 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.324878712 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.494452897 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.299482513 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.39866302 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.350429438 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.346740314 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.584224093 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.356185577 seconds)
  done (took 26.395947033 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.358035548 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.355430481 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.356998899 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.357204894 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.35626268 seconds)
  done (took 8.028495146 seconds)
done (took 1207.943274644 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.348701256 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.352869123 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.350329509 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.3529815 seconds)
  done (took 6.646543992 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.334288089 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.325863389 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.328129131 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.343628636 seconds)
  done (took 9.575104845 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.072733731 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.999397866 seconds)
  done (took 5.31787154 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.835125492 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.829679714 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.828589692 seconds)
  done (took 6.735741241 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.662721373 seconds)
  done (took 2.905844531 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.247820023 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.346148419 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.024375235 seconds)
  done (took 7.859372772 seconds)
done (took 40.28363283 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.355312167 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.587514332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.504444793 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.34541208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.502106962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.505897363 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.078908903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.347826913 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.355882066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.350989469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.352698247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.540243219 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.059624804 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.591478682 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.060788075 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.688595448 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.508903059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.346787112 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.351866106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.352104883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.081808174 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.346175575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.376377794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.342306215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.503204096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.494727177 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.346830424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.705315448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.348525448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.341896299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.48990699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.347927811 seconds)
  done (took 81.755541068 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.346144369 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.342363395 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.362891738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361653394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.370167797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.346397562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.362149599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.347529393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.354812095 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.351253223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.343017288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.342612757 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.364665275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.347238977 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.344809403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.34394321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.346976951 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.344344187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.344455038 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.348965646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.345821025 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.347859979 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.352073117 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.350420261 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.350476004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.344912884 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.366166264 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.358435465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.344889667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.34931952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.347362478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.365234511 seconds)
  done (took 76.488130704 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.349727074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.34544293 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.346555626 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.344684264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.357487082 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.347314807 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.346909939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.347022639 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.347806462 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.345495161 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.343384938 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.354028048 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.347726665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.347121712 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.348543348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.346453054 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.34405789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.350402854 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.357422428 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.347253294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.348097326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.345299938 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.359528777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.363490248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.347360019 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.346200833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.345683062 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.363757576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360899663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.347841079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.365766017 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.357606949 seconds)
  done (took 76.465020534 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.633112229 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.360474911 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.359560468 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.350185791 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.358855275 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.357472771 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.349381929 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.636655609 seconds)
  done (took 14.653959163 seconds)
done (took 250.606125748 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.352768368 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.577916161 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.377219863 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.365492116 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.377571821 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.382325252 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.588029285 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.386454464 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.582787181 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.364328506 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.390643854 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.367606592 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.629508691 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.509120318 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.293884795 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.353647191 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.699783854 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.382415969 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.6203449 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.635622298 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.377986702 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.358470069 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.288163886 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.719124607 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.372678436 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.441344056 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.45948002 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.578098376 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.514012057 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.436375453 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.575747181 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.350368087 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.366721038 seconds)
  done (took 61.32486717 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.366346702 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.483098238 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.361821834 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.360196744 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.482331573 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.36333953 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.362442343 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.363811225 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.36379857 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.364344753 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.363073003 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.364950498 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.365849031 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.408475491 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.489812013 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.37557941 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.361946897 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.478334976 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.364857265 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.355583194 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.40511799 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.361298624 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.364927747 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.407632894 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.368017999 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.361233404 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.480725505 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.368432395 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.361626007 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.482115434 seconds)
  done (took 43.013390001 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.367744922 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.617956631 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.79122404 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.366125684 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.365217566 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.366876462 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.44610921 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.359283674 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.367407392 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.369985249 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.516906121 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.36580824 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.401534733 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.826333961 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.363973019 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.366971976 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.365218426 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.36636138 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.623210036 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.369944248 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.467458567 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.361686778 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.44588186 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.371521758 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.388767043 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.364192059 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.372718255 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.941986968 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.364230927 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.52054131 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.163195052 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.443480124 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.912257561 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.809889938 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.161822234 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.367977849 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.36674148 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.527731078 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.366113558 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.365331718 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.447125989 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.361002123 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.806539634 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.020330096 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.380629175 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.367921205 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.965775306 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.522611782 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.61130008 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.372861597 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.840291369 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.369594478 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.367030662 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.366280472 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.610566351 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.372162052 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.369029306 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.975429182 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.384454435 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.448378696 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.363714622 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.368098157 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.627200596 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.362479104 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.624048202 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.367962915 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.376665486 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.389293663 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.815598209 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.367712793 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.040644085 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.382910209 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.371911268 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.524749182 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.622335889 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.997387175 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.385218266 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.634554694 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923678653 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.442163343 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.369822471 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.938128078 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.445947174 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.369230168 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.373087662 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.373347 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.373282512 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.417434204 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.448175912 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.974892045 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.034107742 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.995272832 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.462797345 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.37567186 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.373899068 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.988894007 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.383646352 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.372340564 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.810228988 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.036888482 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.384291477 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.376975123 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.053771565 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.382814033 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.452961897 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.374176545 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.824492017 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.36938035 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.475750556 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.37364256 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.378318424 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.397310707 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.452386204 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.373103016 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.372636716 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.032721851 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.550220552 seconds)
  done (took 180.817928168 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.367317379 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.379137807 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.382139444 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.362018181 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.36802022 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.376509845 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.364762704 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.365759311 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.372317291 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.367200025 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.369019162 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.375762221 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.375173497 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.36853163 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.367856927 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.36279091 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.367054674 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.370381131 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.365694414 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.371322189 seconds)
  done (took 44.660134586 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.376535392 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.943700375 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.508291798 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.390447 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.374384697 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.375328538 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.431964464 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.368566743 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.373617219 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.682620881 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.546159713 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.390865848 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372480225 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.372544591 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.507724327 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.385828335 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.68255585 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.948762266 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.37081359 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.950125299 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.360367657 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.374634016 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.373935756 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.952425514 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.677879761 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.452112513 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.43270296 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.934471589 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.375353438 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.372129294 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.951923724 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.369436811 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.373711825 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.942744303 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.390146585 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.381111433 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.372204199 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.436822024 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.431371013 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.6820666 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.026848947 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.449418802 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.383892956 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.735166489 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.384083421 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.368878467 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.977890417 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.398773862 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.369362945 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.377771474 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.38406842 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.529205671 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.370194551 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.526987401 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.369937746 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.377792175 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.979505221 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.526968355 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.50863183 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.572435682 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.387420208 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.456264866 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.370042259 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.977065169 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.395134132 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.379637775 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.378804195 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.556051462 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.990869997 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.458881524 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.696979857 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.700214796 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.382502237 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.439865753 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.393116995 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.765489106 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.438100741 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.813279824 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.705346556 seconds)
  done (took 122.560289523 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.624126229 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.483878587 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.530300729 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.993769936 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.370729373 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.504141381 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.487550362 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.642482791 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.375632608 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.476655526 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.59378035 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.451091789 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.091993553 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.45209684 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.472781419 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.528804147 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.523269281 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.373898717 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.057769113 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.566400602 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.394475549 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.488353537 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.957882387 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.559762812 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.372122821 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.889646506 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.360317679 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.081042247 seconds)
  done (took 51.969823496 seconds)
done (took 505.593939696 seconds)
SAVING RESULT...
DONE!
