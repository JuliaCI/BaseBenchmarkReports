cset: moving following pidspec: 31353
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.368124563 seconds)
loading group "string"... done (took 0.651573 seconds)
loading group "linalg"... done (took 7.457068243 seconds)
loading group "parallel"... done (took 0.162893237 seconds)
loading group "find"... done (took 1.150415461 seconds)
loading group "tuple"... done (took 1.850212156 seconds)
loading group "dates"... done (took 1.285826453 seconds)
loading group "micro"... done (took 0.223495748 seconds)
loading group "io"... done (took 0.977812284 seconds)
loading group "scalar"... done (took 39.122965276 seconds)
loading group "sparse"... done (took 12.587808646 seconds)
loading group "broadcast"... done (took 1.014599464 seconds)
loading group "union"... done (took 12.828555246 seconds)
loading group "simd"... done (took 4.865632383 seconds)
loading group "random"... done (took 10.110041498 seconds)
loading group "problem"... done (took 1.927637109 seconds)
loading group "array"... done (took 22.827218788 seconds)
loading group "misc"... done (took 1.851794292 seconds)
loading group "sort"... done (took 3.824324081 seconds)
loading group "collection"... done (took 18.163751483 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532936184 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131119767 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124517962 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122038701 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149219283 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118127434 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.132232342 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091106135 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.863911361 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153253963 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120920039 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436106379 seconds)
done (took 5.42364789 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177993138 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085027943 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085164933 seconds)
  done (took 1.434840911 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.070109225 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126409234 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068546909 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068769993 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068333654 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068858578 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070011589 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070282211 seconds)
  done (took 1.80702831 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075109428 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071413363 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06755168 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069678976 seconds)
  done (took 1.550670757 seconds)
done (took 6.313784145 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.813842116 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213495742 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.195588328 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.432478713 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13736448 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165910445 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.655060493 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309126779 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194341714 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082919094 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114416742 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.340976826 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11423613 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650233984 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075951239 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092478818 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139809092 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441046644 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069023761 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083819189 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091117452 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129919168 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086865956 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075810768 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146579059 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069005945 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138551764 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083419752 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06816291 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.215831901 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175408237 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653185164 seconds)
  done (took 10.562173608 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098685371 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099875884 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07284947 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127097304 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101969364 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074038084 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075782706 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071304241 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091862548 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133169614 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094331556 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106367547 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06994427 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072821282 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089236885 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210465974 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085054943 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085875163 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074976756 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079570102 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110585825 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082640403 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081744833 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081331757 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133189052 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184892465 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101773211 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101248424 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068130311 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081621015 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118596727 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129804992 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069835654 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069923092 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128465702 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098292353 seconds)
  done (took 4.859679516 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.016202912 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147610904 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095043711 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141337727 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06912476 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114670812 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069542243 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086003703 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218695803 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.489039325 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.60974981 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112297218 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087081331 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105953214 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073363994 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071244482 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070583137 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.541962348 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102024866 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113634343 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086942138 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074791655 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073475336 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360532821 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073145821 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068319141 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072474613 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061095463 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.132085248 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072431412 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.974901584 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.133367155 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070647847 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105203235 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165988261 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093321657 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.284184721 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073761556 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068258496 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159982718 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097419616 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074084557 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070415579 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090005595 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107518434 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119073647 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069638351 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070637357 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170552391 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067102882 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082491984 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.666691999 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155876817 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079790687 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068422368 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.258033142 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090064901 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070751785 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066582656 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.213754491 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136229314 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072109724 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070807385 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071945347 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073502496 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378617022 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070376803 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.209555373 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069113566 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078365029 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070647127 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070885322 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074589197 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074292112 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08941608 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068086947 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077644985 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06843819 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069357724 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069819128 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087183652 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.38306323 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067872863 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069690733 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067348098 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090393565 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098211186 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068067277 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066424718 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100657979 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069586846 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067239962 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108674103 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068168685 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065190958 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084898066 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070800449 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114173801 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069305504 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.098468073 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066171668 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066718684 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100907671 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076427803 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102424397 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080595715 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069335321 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.413203082 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066029838 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065520516 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069002024 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065785869 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068401989 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06678811 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079375385 seconds)
  done (took 21.996360529 seconds)
done (took 39.698811873 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.240870124 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084442517 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080155885 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083893782 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080480939 seconds)
  done (took 1.928603036 seconds)
done (took 3.284120408 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124501845 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101760527 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066629519 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098872014 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065773901 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103792869 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102887551 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083497354 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103187752 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065839267 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099079828 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065588169 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065731095 seconds)
  done (took 2.504470391 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084985097 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085553378 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073111281 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087840967 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067686633 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086913983 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085920788 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093729121 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085585029 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076882521 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067320381 seconds)
  done (took 2.229591417 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084228124 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085517473 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072298086 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08356432 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065069623 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083603646 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083354297 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088267499 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0838335 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07561081 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065296842 seconds)
  done (took 2.201038621 seconds)
done (took 8.259777992 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079638469 seconds)
  done (took 1.401407652 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.602073334 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.133776358 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083807572 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113421948 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192357524 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124676435 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.28224239 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.092541515 seconds)
  done (took 9.130353454 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089602546 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071488848 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071078135 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070795803 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085226924 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072366486 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074363346 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075053439 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073466847 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076160103 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074754475 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073000422 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076122308 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076570242 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072286663 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075756231 seconds)
  done (took 2.600256791 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093826518 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094695814 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077750516 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078816295 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076051723 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075862316 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077549454 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077528074 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07483817 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07632262 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077376712 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076633724 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075298597 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067247179 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075721844 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077240588 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072326719 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075672483 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07664553 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077024864 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076734035 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065706996 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073114663 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075650003 seconds)
  done (took 3.278108969 seconds)
done (took 17.737195238 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116489584 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073542974 seconds)
  done (took 1.519399624 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081980445 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084396898 seconds)
  done (took 1.503020734 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08420759 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066804992 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09306299 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.08003796 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067304883 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066897914 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090050966 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067147314 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06738907 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067478624 seconds)
  done (took 2.087570584 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069373625 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078992402 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071654608 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082507956 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074912879 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065722619 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0733469 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069250585 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.0793626 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063963984 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073024675 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08440072 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072460591 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08611934 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073817998 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070378848 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072526279 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068702871 seconds)
  done (took 2.671024079 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067424054 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06788218 seconds)
  done (took 1.478579917 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068561536 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0654668 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067712652 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068105686 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064855212 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064096514 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064846569 seconds)
  done (took 1.802761994 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38881803 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118763592 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.326623115 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07479151 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08674509 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263543335 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069170298 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074930904 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074806656 seconds)
  done (took 2.867376237 seconds)
done (took 15.272159936 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081535902 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087664195 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099707831 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382356408 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092938995 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067769112 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116592038 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.196926381 seconds)
done (took 2.475006495 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214314893 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637319932 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.412889501 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214295067 seconds)
  done (took 2.60898667 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346884515 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091775381 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06171302 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070819368 seconds)
  done (took 1.923752247 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067110063 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070933445 seconds)
  done (took 1.490255323 seconds)
done (took 7.585257534 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068790897 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068010258 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065848391 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068911579 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066790908 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068145242 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069771916 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069707298 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090080655 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.069169806 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.072681932 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069419533 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069253765 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066740467 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066916879 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069181572 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066841237 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066691675 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067027814 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066686132 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066751265 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069881958 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067033111 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066923214 seconds)
  done (took 3.049855822 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085349881 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067584372 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073348542 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073139323 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073068354 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074341164 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074874415 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069796886 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075299215 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071891774 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072856017 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072889477 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071597635 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073767804 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07228001 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073093478 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074558989 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069154154 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071394816 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072802693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074900775 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069619043 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073040988 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074573035 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072848532 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074895985 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071627541 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069593523 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074979507 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073567771 seconds)
  done (took 3.553510959 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071399071 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064688839 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065219209 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072430853 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066555259 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06781515 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066918357 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067545458 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06750426 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06648863 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068123696 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066615611 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067119875 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067733947 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068135515 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070613626 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0831144 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067107268 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066656267 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067595858 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070414218 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066521772 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066984374 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06760181 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066528188 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066225394 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067154086 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066697776 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067836198 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066459599 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070276827 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070317367 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066493053 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073697115 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070700114 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.180955508 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070968895 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066452476 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067686039 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066354093 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067115018 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066705096 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066415434 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073535584 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066659011 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068374021 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067260787 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067757196 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067247176 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069611076 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066761844 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066981922 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068700378 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067960838 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070917431 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066610769 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067670956 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067142946 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06801097 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067039196 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066147152 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06652481 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069293711 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067552798 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08222115 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073685655 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067171786 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068292738 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067841508 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070010602 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068646996 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080766175 seconds)
  done (took 6.415489716 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092027788 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088294049 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066740966 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066292349 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062714438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065041854 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073134783 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067919368 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068644708 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085620414 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067483789 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068532498 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06863044 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071046296 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068016681 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068770843 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075805516 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0656565 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067695611 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071055052 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067681013 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073608765 seconds)
  done (took 2.941890646 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155359648 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071920717 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108202136 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079824485 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073814734 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079176084 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07318267 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074289978 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073434765 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070809359 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07161545 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073387269 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073187944 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070777213 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070870919 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071481109 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073170766 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070967342 seconds)
  done (took 2.801531625 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077789858 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067683514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087992136 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068274638 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069036786 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07182642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074132809 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077897866 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072205232 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069395889 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077760172 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072046461 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07154013 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069599404 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071769259 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06957599 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072169926 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069513272 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077473354 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073708493 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074022459 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077997846 seconds)
  done (took 2.980714349 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080049377 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069527535 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082894473 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07049027 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065319982 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067498021 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073615835 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069490349 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073685678 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071584072 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069050125 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068253565 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071801583 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069183339 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072709016 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069819346 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071686783 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069735211 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071213912 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065118874 seconds)
  done (took 2.791480309 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088249065 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070770864 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071279092 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079179862 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071281551 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071564269 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07968586 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071841695 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071566248 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092132905 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071526307 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071017962 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079383245 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07677098 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071069678 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078980882 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07910192 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078388908 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071125314 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071211191 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092916146 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071148098 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079007665 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071840458 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071390077 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071687197 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071724393 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076448021 seconds)
  done (took 3.491409275 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068582906 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06680388 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066436534 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066096973 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066261569 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067088908 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066890433 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066919653 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069111142 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066983363 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069132812 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070305738 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069784514 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069175478 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069490537 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069642974 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069780924 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067250901 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066470559 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067480625 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069576985 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069638328 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069778307 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066907777 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067515944 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069696196 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066791372 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066471902 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06918969 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066448125 seconds)
  done (took 3.415150217 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077442131 seconds)
    (2/2) benchmarking "in"...
    done (took 0.0754713 seconds)
  done (took 1.528639183 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064986166 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081214425 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065039791 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071249285 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070637022 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068630891 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075591319 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072811966 seconds)
  done (took 1.940416929 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083040531 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080449187 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070528102 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083589317 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081818188 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087461371 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139817901 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070722252 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076959468 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067997214 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084509384 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068810437 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076473595 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070219672 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075943433 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076576244 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067968203 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076634755 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072378185 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068805334 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071314033 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079382595 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072338133 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065450949 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071277663 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093925785 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081857496 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069228824 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073533195 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07781765 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076357924 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063533885 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070082124 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070187736 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067703278 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080778575 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085813306 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073738306 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08016973 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07147746 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080856048 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065235285 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074694702 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076958527 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080812285 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070818613 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070426918 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064705904 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06842939 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072420175 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065197317 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072990431 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064727249 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077457241 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074564257 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081192126 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06931682 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07181376 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073491671 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073560006 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077283718 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072723109 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073062546 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070352584 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079941217 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074699485 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079537212 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064842619 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064477098 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067693279 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080321855 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093724626 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076668181 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070464476 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071143918 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067665266 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073184541 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071030578 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075670847 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07670118 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070571563 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07584435 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077660142 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070321717 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072657385 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078092133 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068674157 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072914005 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068039036 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086738676 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068838959 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068009468 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067735252 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081124098 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073725439 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070564422 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067950876 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07799121 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064210818 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070660965 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07156257 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071273224 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081338762 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075774187 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0759305 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.080432048 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077555736 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070338117 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073093005 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065755481 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070288573 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069161495 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077366083 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063961613 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07305113 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.195003642 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06894624 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076655876 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06695841 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068454555 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076719284 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075010089 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06743285 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06520664 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070985344 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068441315 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07352041 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078253367 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067873666 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063141587 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06376235 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07227186 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068180636 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071690435 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072123372 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071115056 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06209748 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065716719 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073569951 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079077146 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071619221 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07170202 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077713216 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072466585 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069902667 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077585333 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072821016 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06854071 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07611575 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071416852 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064589065 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073047096 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072536029 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06779805 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072429427 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072360092 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070577919 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069225949 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067519455 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074887914 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068699745 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067463468 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068185464 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067509865 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079102822 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070438716 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063223182 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06444458 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076011949 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067905967 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069299325 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069442086 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072813325 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071366629 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067499432 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069963218 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072914789 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081406962 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074773288 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072168821 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076039754 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081482722 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070040816 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072356814 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069658751 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072135279 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070331136 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078981247 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075864523 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075553072 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072994044 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066276442 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075927952 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077374633 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069439618 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066931003 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066855741 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072152717 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0740057 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071753079 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068274497 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066299854 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069229586 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071404705 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071253826 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070074736 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068386152 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073788212 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066483314 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074350538 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068516868 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080692374 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073390939 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065176658 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072665374 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068209019 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076221136 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065189148 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068170735 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069550589 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071148328 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069723133 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073012798 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064055077 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077022938 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078276151 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070498391 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06890909 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068803464 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074338686 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069257636 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071203804 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071235476 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073888467 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.206088893 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068234715 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071645752 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079623034 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068735162 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062659854 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073962161 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067676888 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067274349 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067514266 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067317319 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072601108 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07821357 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075271512 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062642846 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071160032 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066962098 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067036681 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063230589 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072816236 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070785539 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069812787 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077629923 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07163438 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.07045384 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074481547 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070192764 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072105593 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072156394 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073935562 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071252795 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072585298 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069532306 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073173635 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068815806 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068253209 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072314784 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070601924 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070709659 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076490428 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070088005 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070349679 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072797607 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069344615 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068868813 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068952942 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068421616 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071102501 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06908973 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068166033 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071222282 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062987944 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075266186 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067599785 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076358679 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068891676 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064552972 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074996712 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071357408 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07523605 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.0709683 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071751153 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072413778 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06967303 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073665614 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077942959 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0677522 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082168016 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078535752 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070954429 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07275614 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069943542 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071692675 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06927006 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070730323 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071200432 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07026004 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069621469 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075331937 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072729846 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070548069 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07237532 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071098571 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070351756 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071788572 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064340618 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069619783 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069778413 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07009175 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080274597 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070679077 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069751364 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069588533 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071015456 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069885394 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067106097 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078077919 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079203777 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.07070725 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07753261 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069488692 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071753312 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08184239 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064447739 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068591318 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067599061 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066716421 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076318406 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071026573 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080278745 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070530775 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069499918 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067622758 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071118686 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068636287 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064759683 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066476316 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073358945 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069317797 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069433636 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06997216 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.203163354 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070008492 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077924794 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068634237 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069372183 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068843584 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064982056 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067483166 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066856756 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071845623 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069214385 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065944744 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065435087 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06780685 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068904177 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070062399 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070604678 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070095694 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074988706 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068383918 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071950349 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071788664 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062731225 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071909081 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06808185 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067850393 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067475086 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072650964 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072589296 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069567085 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077716985 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06876118 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068429888 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068213832 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.0657423 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067423452 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067636271 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067679292 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067861103 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068615228 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076008415 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066277332 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071444704 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067839246 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068457485 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075421729 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069554936 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071184118 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073903008 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068685084 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069849782 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076756149 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071847581 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071699817 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068316791 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070144064 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075051402 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068400298 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075051327 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070522361 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070857758 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072424354 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067882156 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070107944 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070320571 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069583593 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076907198 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071295158 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068686748 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06958403 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068617997 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070377011 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07327292 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077848994 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072462772 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073132385 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065336135 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066856181 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071321026 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068175965 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072094764 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07217154 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076200037 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070594683 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069108471 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067245333 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077564837 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074122418 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071716315 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066422429 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071717968 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06932403 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070136742 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069193376 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068993537 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069230209 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071609616 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070367415 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067630551 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075006452 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071841282 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069124505 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069956601 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069052586 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069073648 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063323097 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068746516 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070063707 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072990626 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07007757 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068542405 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078593656 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066219976 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071031123 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073079003 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067129116 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072027951 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062838494 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06900909 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06881838 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068343074 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062856847 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06700728 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.196667169 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071201368 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06768332 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062944573 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078488322 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077399175 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071288182 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067730729 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067426669 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063551642 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063955435 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068426172 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070010272 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070970959 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079214144 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067202113 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067373081 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063507984 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068830189 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071178628 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071467275 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065159898 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063452271 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067042106 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071101799 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073895235 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067049685 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068192106 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071537009 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070232067 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066064275 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071720855 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065082281 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072268215 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081078468 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067941665 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068641543 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074627047 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075269861 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068528066 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063129613 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068353479 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071920494 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068723408 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068451992 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.0688367 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082967076 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072068061 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066942849 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066678465 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070829018 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067299164 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076552669 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069166699 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069330099 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07507936 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072344271 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078355223 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073403621 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078180648 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07394243 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073063867 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06921599 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070505697 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06864801 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069782836 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071752021 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071047436 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07529302 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078402823 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069002141 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081629727 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079399405 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071905973 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066488965 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069417168 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069982221 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064991266 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07107597 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068030059 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068485632 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068194055 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069491943 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069579729 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074372828 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06990222 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068893623 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067909298 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0620787 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070521236 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070306067 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069103949 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06497566 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06803112 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068495763 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07265004 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071504031 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065711517 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069893685 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069705935 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068741012 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063736663 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074942532 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067277017 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069795995 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067714915 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06820473 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069091662 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07232707 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073075365 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069619568 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070355486 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071731559 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070835936 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065023682 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065026508 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073188807 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065591103 seconds)
  done (took 44.444746655 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10264916 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065189404 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063003711 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062993453 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074588206 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064341793 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063240474 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063958532 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06383128 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066287591 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063491992 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063000084 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071658803 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079151272 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07452439 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067619391 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062952717 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064174709 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062879888 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063945616 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071771502 seconds)
  done (took 2.897693353 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076184822 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079257183 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076963409 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083602396 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072466344 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071694265 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076484204 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071772192 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080486077 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074049824 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079598609 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071607781 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073425491 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07358352 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073493763 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071560508 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079288953 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071957459 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07216523 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076177123 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071914951 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076900957 seconds)
  done (took 3.091854946 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068649415 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067276744 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069687054 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062149256 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067671958 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062625523 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070770518 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065478914 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070551147 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066161336 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066700853 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066591578 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069073002 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062563107 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067759144 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065045111 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109484218 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07073755 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066962642 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068072023 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062452112 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06962677 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06289489 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062908379 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066718032 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071535493 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068175185 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065606423 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067859423 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066584841 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067238119 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064963869 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068490403 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06855625 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066716409 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06707031 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068634661 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067736102 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062992825 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066785237 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07006707 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06588348 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069638002 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070406048 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067335442 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066136635 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069602953 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067312752 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062282443 seconds)
  done (took 4.766919874 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08078761 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111449831 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068863652 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090070675 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083783044 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074232953 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070677173 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091088073 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065044281 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065733412 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083365662 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080525127 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066676564 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071456963 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070562217 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066713524 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067674834 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065631837 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07003288 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066171913 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070421975 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073494826 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080608165 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080185584 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070797277 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065368713 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066033996 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071398913 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078935841 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071286 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071713291 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072499325 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081906556 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072768737 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066598314 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069047458 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083103622 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067188569 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070082366 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064750271 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069073884 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071099077 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073614375 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083141664 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066999242 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071819571 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066745521 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064002905 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079245202 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069244192 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07424048 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080828056 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070328464 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067211224 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071842233 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081567289 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06735827 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065404324 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069744924 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078873838 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064722563 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070466279 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080474352 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068843102 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074333877 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080561971 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07144682 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070798805 seconds)
  done (took 6.563535692 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076955669 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09631503 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08557869 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08492499 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077119661 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076484341 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077277971 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077020419 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077176747 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081676163 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07724403 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117121741 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072251352 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07954144 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077097806 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077099715 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077119333 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076593853 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077038075 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077012383 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076686624 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084562561 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076967852 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084732655 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081079395 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072046906 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077028501 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076914646 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084567867 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076631292 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088824203 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077072123 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077050935 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08440178 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081219791 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076538225 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066915927 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07667068 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077252354 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077083788 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071927316 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084500405 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077294811 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072467926 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076956607 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076560169 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084553132 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080883634 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078894115 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081277189 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076575646 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084386135 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076552305 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076541652 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083951159 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087241727 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084269458 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08452811 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077179719 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083840942 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084188709 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087057725 seconds)
  done (took 6.425138316 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083713016 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076156013 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083345515 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062695863 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065438478 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073380138 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065520644 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065785873 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075638953 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075385945 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077301701 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072933497 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076364277 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078211544 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07300521 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075906898 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073403747 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073207238 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074874802 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072763649 seconds)
  done (took 2.937144277 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075321163 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084611569 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068557766 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073371924 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070343979 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072436172 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069730327 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070481719 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068681092 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070459188 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077369191 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076915286 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068374017 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07234205 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077153778 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072532564 seconds)
  done (took 2.623150688 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085225738 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074369368 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081550656 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068406684 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067870589 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063684969 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06680761 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062584211 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063272137 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079633595 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067274658 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077709891 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066927293 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066001498 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063658671 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072728747 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063508149 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064421013 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066947278 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079493151 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071037207 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06589767 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070413563 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067468565 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069942834 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071700057 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066855604 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067382815 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064279081 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067705577 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070191 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070192811 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063935659 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06499859 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06575169 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064248677 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067516805 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067530267 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072458982 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067490783 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06555798 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069509043 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06724554 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068071065 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063429203 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06764574 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063591146 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06965087 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065102414 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069345981 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067101894 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069747984 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067671291 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073739382 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07078521 seconds)
  done (took 5.23219115 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080946384 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07168238 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06309462 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065176416 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070230364 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068574962 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070246754 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068271897 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068732971 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065727791 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068596151 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069637748 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068344606 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071028276 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068349834 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070819038 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063041174 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06842634 seconds)
  done (took 2.707108675 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072406679 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067111812 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074046611 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067472512 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067474583 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069815017 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063454174 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065853357 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065599096 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06732041 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067598315 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069929326 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065599198 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069357018 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067302821 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067071921 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070228983 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065730551 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067044816 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063409369 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069417905 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066138387 seconds)
  done (took 2.949900971 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094942325 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085399357 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141509375 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079482911 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086274405 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073240495 seconds)
  done (took 2.022616824 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09203679 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101490272 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067403223 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071493597 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077577824 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071045613 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071308929 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070967063 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079720381 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077673052 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071476564 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080084214 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079964552 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078917476 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077274706 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077372821 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071739796 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071728946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067586424 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084777449 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071316622 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079786383 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071456077 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071501024 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071183568 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078933763 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079554034 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07721967 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071057567 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079587828 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077535007 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071969844 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081115306 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076931004 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070955029 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080235951 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071667454 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085068955 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077254589 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07958604 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070729282 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077762435 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080020556 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076231996 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079986382 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071964502 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076363314 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071588273 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072271431 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086969462 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078114005 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080355591 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080272277 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080200669 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08017887 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087142636 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077870912 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079236721 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077659301 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077033262 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079045811 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077679413 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07929991 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077234586 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078067649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079061025 seconds)
  done (took 6.564936398 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106002118 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068727928 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071522699 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077154406 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079244725 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071792964 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072399841 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071665576 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071898051 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06891565 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109566143 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071476249 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079644987 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07909743 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071764403 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07102656 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071529521 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079156345 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068632091 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08699185 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071786549 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079465357 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079214888 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079158847 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077441658 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077384353 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071694775 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072087833 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071825002 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071672249 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076271464 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071920219 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079160237 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068703291 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079226202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071835143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071674961 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076406461 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072372639 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077723451 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079247308 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085412188 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071878577 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071779457 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077303585 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071555085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071789012 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068663444 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071699567 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068597458 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07762741 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077367832 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077433684 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079046694 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071797457 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071854866 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072035653 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071642004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072368899 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07725708 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079269918 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071312206 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087615323 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071372945 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071888781 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079803462 seconds)
  done (took 6.473527608 seconds)
done (took 135.957720796 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.189322289 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166465303 seconds)
  done (took 1.815933889 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069902736 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099976289 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07854706 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129796606 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067952275 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101993567 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100889774 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079830087 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068327807 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067709124 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068139218 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070186835 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133391312 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06818865 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06715482 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07070816 seconds)
  done (took 2.816002536 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101176876 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.165626669 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108152906 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067729917 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101322711 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074799116 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066316037 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076912531 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072942982 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067355466 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074895538 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071942443 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06667422 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07208824 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072293958 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074515075 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066288758 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074447203 seconds)
  done (took 2.952066532 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101114525 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093262413 seconds)
  done (took 1.672468387 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159921858 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135236403 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203865907 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.355923334 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.171740631 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.150791742 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145881158 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144723824 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118814815 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140930361 seconds)
  done (took 3.201032552 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101811115 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156992246 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27132445 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11975804 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074896835 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096127422 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121118454 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080521931 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082706495 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082624017 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08200302 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078498073 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101357473 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074962042 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076289766 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078203958 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105877524 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075020483 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076434995 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078671012 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102294632 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068029329 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074797286 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075097811 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079456855 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079231978 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067653645 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067742378 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077556013 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07629389 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078077012 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094679218 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079056936 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108417887 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07252708 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110048757 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078655121 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074765879 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076174037 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07508381 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079730132 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07963869 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074602233 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078331653 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067603493 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078376669 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067276987 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067531935 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079194352 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068358147 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079831438 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078332786 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10826879 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069282042 seconds)
  done (took 6.206238543 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104962859 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108751864 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073808206 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113914625 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104809463 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074182698 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104617234 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097786423 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106671849 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072000384 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069833746 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07211951 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084363461 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084569696 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116665198 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109382626 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07536258 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073032449 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108107403 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10643179 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070397896 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099073168 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092974502 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105217704 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069070538 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072049106 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069568052 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071965688 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078467383 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080771697 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071275874 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082409854 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086353395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080184753 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068987522 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069680486 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070020631 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081501338 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081604307 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080848893 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079525219 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069549213 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069654096 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071447311 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07245115 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070063952 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08024705 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084033306 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080324314 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071778282 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071784104 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070216038 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072238722 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081978594 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079624705 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082651824 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0815114 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070246534 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070521999 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074403984 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082515254 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080917397 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081823432 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07108355 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080846157 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070063322 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082563194 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086295286 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070349588 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07210318 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070100767 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071301342 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071260421 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079412906 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079626767 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071655228 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071430618 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070112851 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081944159 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080572777 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070226562 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079020532 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068959309 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070353754 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071475669 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071879124 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07977925 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081563891 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071978902 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070312165 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071264948 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070462344 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069189503 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078589103 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082350357 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081612917 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081035358 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071370302 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081211533 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080354709 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071522667 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080950958 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070070703 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072030015 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071012432 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079741799 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078760324 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0812038 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070807028 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069928011 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079229644 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081722123 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069530102 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07938931 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081672511 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080213801 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069128616 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082416722 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06956957 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080397418 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070870127 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080475164 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069007446 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079638392 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068978039 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068615217 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069896886 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.0795672 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073386097 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069884047 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069867353 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07021618 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079622766 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081805543 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070930129 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078593097 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07856075 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071299538 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078218835 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068943099 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079188072 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070364597 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070263958 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067904802 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081451269 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069232717 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069442915 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069882757 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080201325 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069049531 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079725122 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077634293 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068479088 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08090902 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080056768 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077535817 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080299601 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071010835 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068927674 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068654839 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069678173 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077388345 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079225554 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070813506 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07001898 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077856685 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07950316 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067729498 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078772636 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078012799 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078592084 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069221322 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069863734 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080633793 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080776079 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077958552 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07806003 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078673819 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069154173 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077456288 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078379121 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069002138 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084686096 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068962165 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083231396 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078767638 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074986093 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077300525 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078527098 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078497846 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07869927 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081184684 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068700237 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068328315 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.084168943 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067442146 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068771113 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076579101 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068975103 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068726571 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080840797 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067733224 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078549141 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067754512 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077594381 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067230247 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069352307 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082224473 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068071406 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.311769322 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083430546 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073657967 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081408143 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085081722 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082136448 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072852552 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074143066 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084144337 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082549235 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071837671 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071266324 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073693951 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082465339 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080803371 seconds)
  done (took 19.04234186 seconds)
done (took 39.186406376 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215983046 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157783187 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.17780496 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122565683 seconds)
  done (took 2.275115289 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120802083 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104748814 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095839806 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067863689 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103003064 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068062772 seconds)
  done (took 2.093518459 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316806316 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216260412 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192178906 seconds)
  done (took 2.256375428 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205750718 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193157601 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.425375459 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.2670946 seconds)
  done (took 2.735647742 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147613518 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091558514 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069709752 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086305098 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136503217 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16305772 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103334161 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128001376 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080875197 seconds)
  done (took 2.594560368 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152197807 seconds)
done (took 13.646999315 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.2078232 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.210745469 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.257687773 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097810803 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.098866921 seconds)
    (6/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.180726111 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105820598 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.075184645 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.244470439 seconds)
    (10/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.191538586 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080581907 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.149408883 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109425306 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076325924 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.188343411 seconds)
    (16/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.135456224 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191101945 seconds)
    (18/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.233263338 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157239049 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.175284968 seconds)
    (21/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090624592 seconds)
    (22/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102722954 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075844051 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112345867 seconds)
    (25/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.17807687 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.20803524 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.188664269 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.219767361 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.101490711 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069138347 seconds)
    (31/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.21158998 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052642837 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.220109523 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075651835 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115652749 seconds)
    (36/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.114536139 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.109182403 seconds)
    (38/309) benchmarking ("sort", Int8, false)...
    done (took 0.145979575 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.084025087 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074317481 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159283284 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.0785219 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103458225 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093533882 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05276065 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116785664 seconds)
    (47/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.110908784 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076808335 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06523677 seconds)
    (50/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079188181 seconds)
    (51/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.167208393 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076684392 seconds)
    (53/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159846197 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067614871 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065071057 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0747058 seconds)
    (57/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077020295 seconds)
    (58/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.156995911 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080604358 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075846087 seconds)
    (61/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094508249 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075222483 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097044017 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.163503308 seconds)
    (65/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.22481287 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.202331267 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092449154 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.144315637 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078964523 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069354693 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093613934 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074662184 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.131372172 seconds)
    (74/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.165235514 seconds)
    (75/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077746365 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074637982 seconds)
    (77/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.103128814 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.185094477 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.164200248 seconds)
    (80/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071823316 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 0.282604476 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065907589 seconds)
    (83/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085070401 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076827252 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098740376 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.167899021 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053037104 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054682731 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053654559 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142744929 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075454996 seconds)
    (92/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052991683 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200647551 seconds)
    (94/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069876754 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.068962577 seconds)
    (96/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.099545574 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091070179 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077089072 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068350176 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.199829201 seconds)
    (101/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05329141 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052580993 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.326936089 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.158502192 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053603588 seconds)
    (106/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093171687 seconds)
    (107/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05521223 seconds)
    (108/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05351558 seconds)
    (109/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078598615 seconds)
    (110/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19768136 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05430073 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092126294 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096331628 seconds)
    (114/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159133902 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084257196 seconds)
    (116/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.102460512 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071717952 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075126172 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054070697 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05261297 seconds)
    (121/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.10160712 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.168006316 seconds)
    (123/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.114749592 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074299406 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146572953 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093404944 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068161158 seconds)
    (128/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093881776 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072061821 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070315313 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068413757 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096680795 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091201395 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053995568 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176611915 seconds)
    (136/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053297552 seconds)
    (137/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078565234 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094599412 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070029791 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.095815733 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067565412 seconds)
    (142/309) benchmarking ("sort", Bool, false)...
    done (took 0.139408535 seconds)
    (143/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07580782 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074753502 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151435428 seconds)
    (146/309) benchmarking ("sort", Float64, false)...
    done (took 0.132674029 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074361532 seconds)
    (148/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075616335 seconds)
    (149/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08423129 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074378722 seconds)
    (151/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066813953 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078028524 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.178901164 seconds)
    (154/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07894041 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12929148 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052769078 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074448353 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075747557 seconds)
    (159/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074674005 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074573111 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052721476 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074538958 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06739157 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074750955 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179826519 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067580927 seconds)
    (167/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116637753 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.180967447 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075618967 seconds)
    (170/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052611286 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075846728 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074300789 seconds)
    (173/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.0534286 seconds)
    (174/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062894583 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077588457 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07572197 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070166249 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078108585 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092837073 seconds)
    (180/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06638713 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089635413 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092839114 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068992252 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052676026 seconds)
    (185/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080267669 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076123082 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076194634 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078348281 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05345205 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054611337 seconds)
    (191/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074756632 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15766346 seconds)
    (193/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054221702 seconds)
    (194/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063559878 seconds)
    (195/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.217452956 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075367374 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140027547 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140947151 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077017913 seconds)
    (200/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053289789 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112470251 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074425619 seconds)
    (203/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068634276 seconds)
    (204/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07433409 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052913884 seconds)
    (206/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053737057 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095104333 seconds)
    (208/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080801535 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068500602 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054128382 seconds)
    (211/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053475379 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06634387 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.188035212 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068346895 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067673889 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.090467715 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075422128 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089676128 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149693332 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052801731 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06759131 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068561295 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054358212 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116792432 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066880473 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0730245 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069141146 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056519763 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08457515 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077960659 seconds)
    (231/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055165687 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.159364711 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066533797 seconds)
    (234/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069955449 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054937913 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05350076 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05358065 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069051844 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090355264 seconds)
    (240/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054078931 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142594514 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130964246 seconds)
    (243/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071196359 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052662395 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091502439 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113202777 seconds)
    (247/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.102182882 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08151317 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052613428 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05292326 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074442303 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.0686016 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180252138 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067548677 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068271977 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143711713 seconds)
    (257/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053222869 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.08144464 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096281405 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053088705 seconds)
    (261/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067230548 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06672869 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074096034 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067186864 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142978494 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074180625 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073890385 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052781236 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076095683 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065212805 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089175932 seconds)
    (272/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053822753 seconds)
    (273/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062993235 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068283926 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067373657 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053618621 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067339996 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068458497 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066287251 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067813935 seconds)
    (281/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198627034 seconds)
    (282/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063786927 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067542009 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070801958 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067474099 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05254289 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075154005 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065829006 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066375546 seconds)
    (290/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082887872 seconds)
    (291/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053252516 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075192507 seconds)
    (293/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189437713 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066983193 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14041441 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093394389 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056300869 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073219595 seconds)
    (299/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053311028 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067030387 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052774406 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071154936 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073194443 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090639746 seconds)
    (305/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053438917 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067840308 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053264832 seconds)
    (308/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054239572 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068074299 seconds)
  done (took 31.853774179 seconds)
done (took 33.395326142 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088965333 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096037006 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078206581 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096325488 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08411731 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079042068 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075232944 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081257091 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082097466 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084640156 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080655282 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056140782 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076242258 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077071275 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076842718 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094023092 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080793433 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075132212 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075322134 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066378987 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075325322 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067455353 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069130116 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056314986 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080659743 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073411686 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074777642 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076419238 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06722961 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06730287 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071078454 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075313156 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067521331 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.0801789 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074036296 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075155821 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076728899 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078485408 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069603594 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067349901 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07600064 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067489747 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074550798 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076379343 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074190068 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074162118 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075151858 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080226144 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092915657 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069492976 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077151078 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078355504 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077706227 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074191127 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07119608 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074894078 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072577859 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092721643 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074985885 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070123818 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075972868 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076431549 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073482209 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075213351 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075195904 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076860638 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077310404 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073045602 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076554121 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073264641 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067387919 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075122004 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070946406 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067400837 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077969867 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079592441 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065893435 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073548764 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074782339 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072754742 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066515471 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068423015 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068875099 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073626209 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068628093 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055694565 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072131376 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074145253 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066057505 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075148964 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073830572 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074474362 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068941702 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077695266 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066404138 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072612034 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067817208 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067556936 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069020271 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071213986 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067702643 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069051395 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076468747 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068927738 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073831402 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081266514 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06739341 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074310805 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06618076 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066660662 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08178192 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076313604 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067244898 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069416443 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06627426 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075122023 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066010779 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067065508 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067105747 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066888153 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073234331 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066946084 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069320688 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07455239 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079844266 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066349399 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070425207 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068510484 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066745632 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07289534 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067038578 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.205076702 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072381052 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066070051 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069414314 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067855125 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076207642 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06927527 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075189724 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069172377 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075503218 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072898831 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074754131 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073894495 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066374098 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061415763 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070381482 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069101375 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06912481 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066839655 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069221231 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066720639 seconds)
done (took 12.914710399 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067645746 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142411644 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100438387 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097554943 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087677021 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068406165 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077638398 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102060688 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069340438 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102836609 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089559176 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088128341 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116690203 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066676177 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068374878 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071232832 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068842288 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082734119 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10143874 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088443572 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117186049 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067017359 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094828402 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09087472 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090503089 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096309038 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070905897 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071626972 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071032862 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104661008 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09033964 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071422359 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067848051 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100856951 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095957068 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086047514 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067897053 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085500073 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068290536 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067539055 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069215752 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101434537 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082590268 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083162192 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071917471 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07756734 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068725116 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085826173 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092283712 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080707335 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088365693 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103626247 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070599786 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085764797 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066116907 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088165056 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079129526 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07025933 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067930196 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075925847 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067733693 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071284467 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082693298 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083179724 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071934575 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086632361 seconds)
  done (took 7.109426981 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086066391 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093048469 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086748041 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086131629 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067494162 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067931543 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067855984 seconds)
  done (took 2.186497419 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068478382 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090499073 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091998691 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091286201 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083817764 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090417483 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078573504 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067948755 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089259522 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069420647 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089876437 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102587586 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071678008 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075661171 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092442904 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068098744 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092636106 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068164426 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071980822 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092479939 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071272981 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097881395 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072074173 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068752313 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083614929 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068744113 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118799773 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072642483 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070489202 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072005679 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066281475 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109335125 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082887476 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076181505 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068500873 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083477975 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082991385 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067018795 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08512614 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077400891 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082302255 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069039436 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069425329 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066527497 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072982205 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079132761 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069832157 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071206109 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071180435 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088934058 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06957089 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082643548 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071747954 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074594209 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070273112 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074676026 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079252406 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0689292 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088436854 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069669077 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085518691 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085035591 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082767362 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084680938 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071065453 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08190228 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082922107 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071061997 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070296066 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072286666 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084869028 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066690076 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069755381 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079520214 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069770665 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091858309 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091780802 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070550696 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082228792 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06919907 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068846237 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068447429 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091701387 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073942493 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068293302 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072979278 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071782545 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067194571 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067272653 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072332781 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06663851 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069764327 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071404201 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071422897 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070792835 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08507068 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070908436 seconds)
  done (took 9.144747588 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070052932 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069755314 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071756146 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069485474 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069824928 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070274709 seconds)
  done (took 2.079196183 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095425495 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070727821 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082237517 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07409629 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107064106 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088639307 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.089015361 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0799009 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085951618 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080117233 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088915817 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089623674 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094121375 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074261157 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088418757 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072995134 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090201669 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076446175 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079743575 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074761589 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08839659 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074220086 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074073974 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083531423 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077651985 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073751916 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080456505 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080385685 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079670585 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080754095 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073882443 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077683406 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07272855 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079967543 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.089326302 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072552877 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073203677 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079010962 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074024486 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077568776 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089074146 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074436544 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076473725 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078490445 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079946267 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072633885 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07879768 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081324988 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088625861 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079302219 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078647702 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072892372 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077499701 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078638925 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072642005 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080082948 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078589757 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089698067 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07402834 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072968608 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070442132 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077485598 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080888093 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077704686 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080672234 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078386439 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072406 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074211306 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074725569 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073017507 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078680063 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070183204 seconds)
  done (took 7.36492765 seconds)
done (took 29.504097996 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536111692 seconds)
  done (took 2.158369515 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.62052387 seconds)
  done (took 2.265690935 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.438621917 seconds)
  done (took 8.084021974 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405366425 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.530840998 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.732054054 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134519382 seconds)
  done (took 3.481730185 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.695826567 seconds)
  done (took 2.348671973 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217495298 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.20491651 seconds)
  done (took 2.079776456 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.390305122 seconds)
  done (took 2.038185791 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.139596056 seconds)
  done (took 2.790731072 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260611344 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177342005 seconds)
  done (took 2.095768168 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.490960017 seconds)
  done (took 2.14682957 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.86053907 seconds)
  done (took 6.520386433 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21343312 seconds)
  done (took 1.906830838 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237683109 seconds)
  done (took 1.891112367 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.728005164 seconds)
  done (took 3.381627953 seconds)
done (took 44.838196706 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081787146 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083503923 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08263097 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080910243 seconds)
  done (took 1.969534628 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078542301 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074527297 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07784149 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074132218 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077905008 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074829339 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076629415 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077141182 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074456245 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074705936 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074258109 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074711958 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076516835 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075802286 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072637433 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076288823 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077549028 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074182523 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077033625 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074041591 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072355541 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076889643 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076950098 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073591735 seconds)
  done (took 3.469255955 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078682094 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074878797 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076933133 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07416768 seconds)
  done (took 1.967059524 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08055867 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094756494 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094584828 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079991881 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093942596 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088567426 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070529153 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071006087 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072299246 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079482195 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070642894 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.0985181 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090289201 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079520058 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08197976 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067689704 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070211606 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089237563 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079869625 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080635563 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072411039 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079306792 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069470889 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090733068 seconds)
  done (took 3.604764144 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087482176 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107447848 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083001957 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090786335 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091700114 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067552065 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089411267 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093160238 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12894491 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067196796 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072200401 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067368978 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074804354 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06692325 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082859004 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109999788 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112546298 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070398431 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098906556 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067126262 seconds)
  done (took 3.397377464 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074101763 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070924857 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067520778 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070443991 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079137357 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074932715 seconds)
  done (took 2.110045847 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069681918 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06932657 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06853231 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069239851 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074691221 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068983897 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067823584 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069441222 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069991615 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069240717 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068495636 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06732693 seconds)
  done (took 2.501424192 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.204579718 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069957296 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070802295 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067389989 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072487812 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068266385 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083169818 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069891262 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093714172 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068181077 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068362055 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070274835 seconds)
  done (took 2.673273142 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211106721 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077853885 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242569029 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153233105 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113498228 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117481945 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11438534 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115248478 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144676642 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104525216 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175451383 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173894249 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111865481 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143462413 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091589884 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102798934 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157132065 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166222091 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107745618 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16895704 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148649802 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128734347 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154396833 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104740789 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1085337 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124491448 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074383201 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081839698 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173474458 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136091804 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147436255 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11281341 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093885315 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17827951 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174109281 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143813311 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149942557 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087215209 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107590629 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.137154103 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203662781 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091266996 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165240921 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250753163 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08296274 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135879799 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120358125 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120861711 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108204478 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091461115 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148393444 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187385142 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140600369 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088755154 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125891406 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116565336 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117147141 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115291233 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183671984 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164639822 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130328513 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073784696 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110287231 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155744279 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134758895 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110463051 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128055595 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093714382 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137278284 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157378568 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122190536 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149423697 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118556256 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090894869 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120862019 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142851655 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12976307 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164017818 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125936628 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075315617 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126374469 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103963253 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082311395 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.149226411 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077487367 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178155837 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101502348 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110971499 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127559577 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110322461 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110955538 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161963117 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147607888 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105022039 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067476146 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106269003 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122019557 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146320738 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088107932 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109191819 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118333819 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079333363 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137740429 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076319818 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123587363 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078300013 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1240588 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132147482 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07720258 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121602213 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103438237 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099642245 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131218295 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157249702 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087445037 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081175413 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166915855 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120158197 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102029386 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142322496 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153360719 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099916453 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099261852 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146420104 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177289761 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088632269 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160267149 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104901328 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082613393 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087653349 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12138905 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109563709 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121404455 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080899453 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115608915 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164057322 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074629587 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094044605 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131753608 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0786131 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080182058 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103908568 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103664223 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095336955 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099174757 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102130177 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134155345 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122522297 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103944659 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118419622 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.356229801 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17672093 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09144913 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105830332 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109027711 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072994688 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.1390833 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161520421 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082579027 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167149466 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125294478 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119960306 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122696395 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086443667 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143570918 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08163875 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072438909 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148414596 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112416245 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112644142 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.154223531 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118151652 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128811732 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121660327 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135581955 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133359133 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133180642 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107403469 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090004232 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113319726 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130389959 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075527756 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092369067 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082117375 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106937671 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0987134 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084910419 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14408698 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126663524 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112120982 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113727826 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098634045 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149710905 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078288888 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130568754 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120150257 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09729957 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154679536 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155341383 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133481432 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100332896 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139943237 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072396564 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075248421 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090420609 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.276144171 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086078903 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086964264 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121034868 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150030069 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131282319 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138431548 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124892982 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12294601 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156824818 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072077105 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119457576 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149028444 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12319427 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107000008 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092322935 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101005684 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1441233 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109100273 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184863884 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117833115 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124841244 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154130507 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10328094 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08169771 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10436769 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137701404 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105934315 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146383371 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100962997 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090108728 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110208805 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076114874 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100957966 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129138304 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120555151 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136042569 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11698553 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134480229 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079120083 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11695764 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122652087 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123803325 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065968886 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120563538 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164268081 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096309715 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119593017 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154793323 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079956467 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135594046 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17754649 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.296945627 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088154029 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110683584 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121351464 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130759152 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121232067 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142845313 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10992509 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138252136 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111248381 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086490764 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088617328 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099469184 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106739841 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096481932 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108074925 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114843933 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097025767 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132684651 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105440607 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111683477 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117923785 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099501797 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092365806 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098506647 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178041437 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120420954 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173031089 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101701421 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146359602 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166419814 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076588921 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080071901 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079398119 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142074969 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086239548 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132160656 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109645923 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119111356 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1256077 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145223113 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096815249 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07028751 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109323348 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135397443 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12632624 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099788847 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105027223 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165379486 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103007935 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083356798 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115747649 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117885872 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104217118 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173695188 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062688237 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106894011 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22424096 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082978409 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130935444 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156318063 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082276798 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104949406 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119886909 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11384859 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130115953 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102267813 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110545965 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127581435 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1512042 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129882333 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091019037 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11325187 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128902063 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158015452 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106486484 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097782324 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174164064 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15369586 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161515397 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08945428 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114893221 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114677449 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110155001 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140460302 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085033215 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165643853 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083577943 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13834022 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10488937 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091099144 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131615984 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110282138 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089999835 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149930419 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119788296 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084053775 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078915553 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119569218 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121439119 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108317745 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07681788 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141816607 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074978081 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13425387 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161939141 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081879918 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106724081 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096855226 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080963387 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257790281 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104492709 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089172599 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.101773111 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175246264 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087845878 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152154577 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135148416 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113844423 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136424976 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103867624 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641459531 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079346309 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154075436 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118139198 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175525239 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101611593 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118434762 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111090051 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124401976 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146060999 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106094505 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182021091 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133852617 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117345195 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080907355 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104023153 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10561587 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089115845 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109450237 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114475278 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116491236 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094892243 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117603895 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127059859 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083468022 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097638726 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157882616 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118442144 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145698095 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142333695 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087491204 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11806472 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140468937 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081808866 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123083869 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155004432 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107377333 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101067255 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082182572 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102419823 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308666134 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075578726 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16442707 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122988891 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111556301 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115036914 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11501828 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13382207 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108570401 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123499611 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093306204 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110258062 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114820038 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082756113 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07864499 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106942966 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113019319 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098815511 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098936804 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099700711 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153074859 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073593687 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100302505 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117262101 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145809934 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176571311 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089817295 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084308429 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120334252 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115441722 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114296871 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123058303 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080464206 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083004355 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081742909 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08007481 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110634786 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114823165 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116042692 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111328813 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165546861 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084317743 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232607498 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097151707 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10704276 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070735657 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079537203 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098195811 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100100791 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108638376 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11133215 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161568886 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097313895 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092070362 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093390579 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076146244 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085415447 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130610057 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111098872 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268013071 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100993482 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064922889 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110719332 seconds)
  done (took 59.999213166 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109924242 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08424342 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096281913 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146992964 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123531873 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204172066 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155553219 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190721491 seconds)
  done (took 2.902700347 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07022129 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097423266 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106846193 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088095148 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068349418 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069871851 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233809146 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085575199 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068104458 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099686227 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079778201 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070002705 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.435376714 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070152254 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071279851 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064678138 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068744717 seconds)
  done (took 3.630556321 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388692882 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612047847 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353579413 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073596688 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.461684369 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090380109 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.152605163 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132760229 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075266879 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539208093 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.408505501 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128930627 seconds)
  done (took 18.21550022 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076368096 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071094043 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085285412 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084853537 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074312818 seconds)
  done (took 2.189134245 seconds)
done (took 110.3125994 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082142161 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.609974305 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054391478 seconds)
  done (took 2.487754742 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084728774 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086891567 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087079619 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084258055 seconds)
  done (took 2.146218018 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076309958 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078311549 seconds)
  done (took 1.951707699 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235196829 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165593119 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097519555 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084718319 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081129939 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081357611 seconds)
  done (took 2.049191083 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074126021 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077027936 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074107655 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077851143 seconds)
  done (took 2.099663078 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077799123 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053962573 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056575299 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059284917 seconds)
  done (took 2.044238259 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08776321 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081433051 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080222715 seconds)
  done (took 2.047448343 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103869301 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087368111 seconds)
  done (took 1.988824756 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083279231 seconds)
  done (took 1.880847171 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095829088 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102553648 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135022683 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11280494 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.1414092 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111456477 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086589354 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087317713 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077961277 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088332499 seconds)
  done (took 2.836391069 seconds)
done (took 23.903347725 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080064873 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.45999968 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361516763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090958615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669665575 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358337904 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98777373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094203065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118337717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069711437 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085886875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650447598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980022559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.419227218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966431802 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.414723555 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650738794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069364437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069006702 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06922023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971484899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069329245 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069064114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069993546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650076769 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373511573 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069474694 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.420956837 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069426138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071647944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356170577 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069912104 seconds)
  done (took 16.711453971 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071851088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121997551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075500913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085922856 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071841163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071167498 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073260258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070053683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12218265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06949316 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08707264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068801986 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073082161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086292029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089050542 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070048532 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070080362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070142198 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069572333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070023476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088796247 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069483086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0699599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070043327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069868684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081965377 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069623603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069640189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070438681 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072498387 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072569656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070663366 seconds)
  done (took 4.274510478 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116457084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126298292 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074911305 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105194462 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113011101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071547244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144564614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095164743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128851244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069844754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086791482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069301138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104118997 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070930366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.0899386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069976785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07059573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069895486 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069729214 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069522011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089073647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069448142 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070022891 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070232111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069922485 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08320411 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069996477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070046487 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070475443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071851065 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073202816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07006562 seconds)
  done (took 4.504680941 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073436487 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076771596 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084240195 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086468854 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071470111 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073728489 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074131747 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071068353 seconds)
  done (took 2.423451657 seconds)
done (took 29.714067448 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080490886 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071281386 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074340385 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08444115 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074346544 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081148668 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068630576 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076968396 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073811187 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075292153 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076304614 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068972345 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072708218 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069370497 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075534448 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.0690496 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080713985 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07307593 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080452446 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080690603 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07102561 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074969348 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076347043 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080847319 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080266713 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080343222 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078709161 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074432784 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070324483 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071938496 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078539074 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086010756 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070260828 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082313724 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071714566 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071794522 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075365689 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071720241 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084196789 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080993271 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073766815 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081081373 seconds)
  done (took 4.987206407 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089285628 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096096425 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088953789 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067156361 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072258332 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069426502 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092144535 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064698166 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063874358 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093653765 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059576461 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064449928 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.068416078 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057554116 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064643255 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060862597 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065153346 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057781911 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062368313 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061112904 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093159047 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055561014 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079070164 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064964896 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057773262 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.0632855 seconds)
  done (took 3.658291611 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076313272 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087445218 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092384943 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131999955 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107666508 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080770574 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080422951 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096943021 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.090100365 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068169692 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072474163 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09428332 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091056521 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075573504 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069144999 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087676855 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085134945 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071022673 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074923082 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096024276 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088331179 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087128654 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097667391 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084754281 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068117834 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071668526 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073334642 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08317758 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074228157 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078816738 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073233876 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072434802 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070644751 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080964348 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072216508 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070615489 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093675906 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07908726 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080230095 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069785576 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076686097 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069978273 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094389856 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126370835 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06875005 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075139768 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072851239 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079563691 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069297083 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089720015 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080885764 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068550132 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073063893 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069020661 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069521159 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082418307 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071584361 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071272265 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07836756 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074495929 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093486933 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073813522 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084855555 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068543475 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077011677 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068180206 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070267361 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067844837 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097708345 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071057355 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112764099 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073099506 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072701005 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080887951 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079588629 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076566925 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069854772 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084801656 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079617028 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072521343 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078385643 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072477327 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072037885 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09311854 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07154508 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070487755 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070400868 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074820935 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071663531 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070819173 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083257901 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.0686012 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072651786 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086317517 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068858593 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.0711734 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074706062 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073286839 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068669563 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080779457 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073770937 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070262466 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078762418 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068843259 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072268397 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081694719 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075573401 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067891016 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074120744 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075737611 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070452208 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070704691 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072260849 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071362795 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077618803 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075839962 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074071754 seconds)
  done (took 11.010347361 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168564572 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159152974 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072049583 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151523194 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078310751 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080985829 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153286384 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096630093 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069289843 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070353595 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070120496 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112883215 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110017544 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120926228 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080715186 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069327572 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086634415 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117210003 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154708659 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148799088 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086552236 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078483464 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071607304 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070748126 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072208403 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080022133 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087681661 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07850835 seconds)
  done (took 4.649914601 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081500922 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107455513 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07597602 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093135494 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092615951 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069131439 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071652056 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071392145 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082482016 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080160628 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068801296 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075117238 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076648385 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072899165 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070376128 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077233925 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0765229 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070722838 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073067179 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074838922 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080340165 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093839192 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073608531 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068733866 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07452876 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068800853 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065472413 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086142369 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06977573 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097974561 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067435303 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074964935 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084356209 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070884122 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069443641 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069606648 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069450727 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068936488 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071374746 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067945678 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068348222 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059018917 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068391727 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081314997 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076584744 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058040562 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074151125 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074608729 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075056685 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06680081 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072357897 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072370872 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072683715 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077322516 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073076683 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076692843 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070817748 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076155103 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078665726 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068911677 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066674222 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067795149 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073985165 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067574585 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078587174 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074253871 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067928159 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069337002 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0712291 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076066274 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069152942 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073788124 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06680893 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071259368 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074153426 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070966077 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070099431 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067859633 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069057699 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070174621 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056357405 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06964618 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054589991 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072733209 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067176664 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068480707 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069183401 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074233234 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08097543 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071108822 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075202888 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070002079 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06871699 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072566563 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061283242 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071461367 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08496371 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08423901 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06930926 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067100065 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082603629 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073704046 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068306291 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057311529 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074308696 seconds)
  done (took 9.523979493 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092930089 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072530691 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086065836 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092930785 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089103988 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07682926 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079761222 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071053102 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08468496 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07561568 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078551707 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069732759 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08005085 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078598672 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072025402 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079257587 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073382522 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086112963 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084658592 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069618722 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077730529 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082404302 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092230458 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083622526 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082506928 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083468828 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091675777 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079285602 seconds)
  done (took 4.126793668 seconds)
done (took 39.760542337 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.906847077 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.062277598 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.893656176 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.254377756 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.165856577 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.028845233 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.037946874 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.890215457 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.020282997 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.925867589 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.094905995 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.026989272 seconds)
done (took 67.137562254 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.982922555 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.030870999 seconds)
    (2/2) benchmarking "String"...
    done (took 2.117940528 seconds)
  done (took 5.976347417 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.10760918 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.455222146 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.139051771 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.881483109 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.887916313 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.226475563 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.680417783 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.392910283 seconds)
  done (took 31.491171559 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.064181011 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.108421393 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.603011387 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.627379356 seconds)
  done (took 16.27519429 seconds)
done (took 65.744008613 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.874734343 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.885978426 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.923738156 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.864851466 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.942284047 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.896221247 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.330309904 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.004204752 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.880272295 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.870694672 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.882702739 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.319730451 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.897938739 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.331186375 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.884270741 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.89234728 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.904420258 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.422456605 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.038513772 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.899765329 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.898344171 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.928502613 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.883008368 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.889321648 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.917267046 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.874748546 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.276821489 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.882358961 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.492865996 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.875681706 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.902589518 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.88785083 seconds)
  done (took 207.475594806 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.867820589 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.773131622 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.85467091 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.914119143 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.140243315 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.052931136 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.988840903 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.317884729 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.874461846 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.872096538 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.007823394 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.871497941 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.054339504 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.823039804 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.899492899 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.871815472 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.044067959 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.072568329 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.905112963 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.046628084 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.882531674 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.908038954 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.860378404 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.989314178 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.892618596 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.879290732 seconds)
    (27/36) benchmarking "syrk"...
    done (took 7.038281927 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.89220025 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.056776435 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.989851637 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.901908813 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.867597089 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.086382014 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.736027097 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.868263962 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.872691152 seconds)
  done (took 172.783138279 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.238312399 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.860777421 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.859431027 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.85960223 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.871914713 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.860244306 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.982479719 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.986777185 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.479570118 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.65855916 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.914086179 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.654377175 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.859923219 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.858599282 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.926928673 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.871675668 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.859630796 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.87360811 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.887603227 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.858606901 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.859861057 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.982856228 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.870769166 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.880735472 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.864089242 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.858097823 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.863334411 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.228267984 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.857604171 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.861826565 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.114864453 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.859019622 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.857308231 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.697911823 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.395320377 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.93916222 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.857895322 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.861685859 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.856901412 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.074123058 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.856999764 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.857416363 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.857298574 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.859766438 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.994545912 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.859582693 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.978666799 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.859836997 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.338212445 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.855838326 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.856359296 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.514236853 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.433546155 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.860066813 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.855336556 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.858717721 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.855252142 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.856264936 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.861946553 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.589439166 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.929844551 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.856802344 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.858633119 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.861544359 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.857073415 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.964939598 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.859453463 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.475356192 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.91757659 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.092988289 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.977068431 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.859269603 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.922379647 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.9496065 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.855809364 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.855103537 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.855041772 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.855166167 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.935980065 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.856979195 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.987588299 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.864545813 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.85645451 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.907919859 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.924966144 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.856151077 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.703968175 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.856044355 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.856397668 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.130370087 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.920805659 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.857163934 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.855519224 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.855479661 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.856367369 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.996472092 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.97796672 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.575967042 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.859887493 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.616532593 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.857949981 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.853091033 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.010232589 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.854359604 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.981258064 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.856166199 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.935407024 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.858845816 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.855691459 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.853671398 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.888705776 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.855720639 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.912453281 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.853713023 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.226807365 seconds)
  done (took 411.862631383 seconds)
done (took 796.233862126 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.523207511 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.476256101 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.586673423 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.504158847 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.473185156 seconds)
  done (took 14.357602243 seconds)
done (took 16.151376276 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.941477657 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.946631201 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.877274327 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.944043284 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.874889081 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.944110516 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.928293163 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.880921388 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.911873822 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.88055017 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.913153833 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.882007082 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.867915868 seconds)
  done (took 26.587604712 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.077895036 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.086741711 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.928774148 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.082414286 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.903938534 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.082449923 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.017851811 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.004415701 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.00537924 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.871997479 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.871061505 seconds)
  done (took 23.729337016 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.092385666 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.096887625 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.936196624 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.089011071 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.907707662 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.096986448 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.022086515 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.010531155 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.007925082 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.871859267 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.870856471 seconds)
  done (took 23.798427922 seconds)
done (took 75.90805801 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.865368845 seconds)
  done (took 3.661169946 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.889971729 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.047661786 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.871429408 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.869095407 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.866238051 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.865840324 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.871435182 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.866013368 seconds)
  done (took 16.944545932 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.861571007 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.863308489 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.864248381 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.863001424 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.865578103 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.862649067 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.86562647 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.865552286 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.864758498 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.866949492 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.866093781 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.863331436 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.867018066 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.867262561 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.863969082 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.867095007 seconds)
  done (took 31.635401448 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.864837825 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.864146288 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.863625615 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.863425692 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.86365115 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.864920785 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.864711484 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.864642739 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.86377615 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.864715664 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.864459787 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.863263732 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.864735539 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.863100973 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.864336218 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.865264388 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.864003325 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.865307407 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.869173215 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.864964956 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.865190526 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.864592242 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.864043326 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.867370795 seconds)
  done (took 46.552540409 seconds)
done (took 100.587140705 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.789060989 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.249357923 seconds)
  done (took 8.836412715 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.868114671 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.867604074 seconds)
  done (took 5.569009079 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.867815188 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.868024337 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.86729436 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.867671592 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.867596583 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.868118521 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.867697491 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.867069381 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.866980189 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.867185401 seconds)
  done (took 20.473989241 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.867983631 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.867632062 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.864933443 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.867654177 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.868751597 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.866092751 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.868467543 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.868247107 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.868434358 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.865695458 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.870544518 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.865515064 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.86917454 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.865928829 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.869849884 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.865425703 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.868233043 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.866604848 seconds)
  done (took 35.414231891 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.86856415 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.869506324 seconds)
  done (took 5.538125446 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.866168726 seconds)
    (2/7) benchmarking "second"...
    done (took 1.866535468 seconds)
    (3/7) benchmarking "month"...
    done (took 1.866468758 seconds)
    (4/7) benchmarking "year"...
    done (took 1.865982114 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.867726502 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.866651648 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.867787438 seconds)
  done (took 14.868151924 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.869032085 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.031554081 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.104885306 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.519684552 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.871473802 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.872379264 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.784596583 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.872389252 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.87417185 seconds)
  done (took 20.601046131 seconds)
done (took 113.097303592 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.681240514 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.864071085 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.163354961 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.915921747 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.885130355 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.206083467 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.885788396 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.170586117 seconds)
done (took 43.571100856 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.947516225 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.41438106 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.446228786 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.580755351 seconds)
  done (took 13.242789329 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.849216461 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.393764493 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.904792183 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.449689104 seconds)
  done (took 20.444296852 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.234130175 seconds)
    (2/2) benchmarking "read"...
    done (took 2.217822967 seconds)
  done (took 6.257727277 seconds)
done (took 48.693332537 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.870725658 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.870713881 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.868902364 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.870929895 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.868300251 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.86953547 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.871269729 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.871359111 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.870904613 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.870538898 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.873140514 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871531192 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.870888717 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.868573133 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868197189 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871727796 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.869444347 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868970776 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.868594013 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.870540775 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.869842991 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.871838112 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.868759296 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.869873574 seconds)
  done (took 46.688942952 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.870773225 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.871838791 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.871648689 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.871931626 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.869635008 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.872401722 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.872191754 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.869506253 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.872294063 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.872738456 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.870539325 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.870451368 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.874602299 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.869950156 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872656563 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.870851124 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.873328894 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870932866 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.873808101 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.870878621 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.872491727 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868438156 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.870132413 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.874437689 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.870584108 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.870916353 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.873309486 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.871653366 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.874476855 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.870617572 seconds)
  done (took 57.954214953 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.876655404 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.878881128 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.874347372 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.873546361 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.873789921 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.873727502 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.874065964 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.873662266 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.874205555 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.873611353 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.873621851 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.874762004 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.873907178 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.875020052 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.874091047 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.875395419 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.874528655 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.875418025 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.87711365 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.874634348 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.875200437 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.875316484 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.875221435 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.87625757 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.876675252 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.875018686 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.875315162 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.875036473 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.875678632 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.878206414 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.875889091 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.87594528 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.875104126 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.875679377 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.877299736 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.874840845 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.880375862 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.881774502 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.874919101 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.875519573 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.87640167 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.874832596 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.875715686 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.875882344 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.876363437 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.876303054 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.875986099 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.875084917 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.875306416 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.875437129 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.876078986 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.876062744 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.875784965 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.875808386 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.87648673 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.875973508 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.877946574 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.877548805 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.877695037 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.875992705 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.876914341 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.877301843 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.876714742 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.876716811 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.877939578 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.87655613 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.877978797 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.877889676 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.876468601 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.877138097 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.876934537 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.878379789 seconds)
  done (took 136.876942508 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.876820848 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.874462109 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.874064181 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.874256023 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.875715321 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.876327281 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.875008905 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.877243139 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.874262508 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.878619545 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876956087 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.875328394 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.874553246 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.87779926 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.877496098 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.876086629 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.87776791 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.874645817 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.877977087 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.878749976 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.878053601 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.875439947 seconds)
  done (took 43.08777452 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.877889681 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.877932134 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.87716859 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.877612967 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.87562829 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.87821946 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.87858915 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.877848039 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.879762147 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.875768675 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.876020304 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.878802713 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.875592649 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.876312121 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.875327438 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.876024487 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.878831326 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.875153317 seconds)
  done (took 35.597806858 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.876727362 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.87563702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.878108176 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.8765288 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.87643962 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.879908205 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.876278724 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.879072775 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.879065836 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.87578052 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.880278515 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.880711961 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.880336157 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.876804183 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.878774029 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.878697234 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.879832553 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.877497265 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.880007379 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.877836224 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.878190393 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.881718305 seconds)
  done (took 43.135956455 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.879952996 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.879613423 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.877747862 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.878476095 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.878188109 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.879875746 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.879995842 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.877229157 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.880283561 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.880660762 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.877494346 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.880201297 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.877696142 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.879159506 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.878845033 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.878094933 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.880949797 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.878248277 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.881661083 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.880404998 seconds)
  done (took 39.396332544 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.881161783 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.881568772 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.881767332 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.883246756 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.882580929 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.881473584 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.881620407 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.882954296 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.881540165 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.884353494 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.882659893 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.882625455 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.882180225 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.882574985 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.882167672 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.882696617 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.882589966 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.883122248 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.882302093 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.882886704 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.884068999 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.882558724 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.88354805 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.883627674 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.883079763 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.883613236 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.88535789 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.884942519 seconds)
  done (took 54.531825588 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.88300599 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.883979496 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.880288594 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.880356503 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.88125997 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.878988441 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.880136243 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.879868343 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.884115861 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.879768555 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.882942757 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.883470821 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.882848683 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.883515137 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.883334239 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.883089568 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.882827241 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.881979018 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.881783363 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.880472352 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.882797459 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.882849672 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.884670448 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.880894296 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880869483 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.883314753 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.880797116 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.882268435 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.883541596 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.881454927 seconds)
  done (took 58.27631715 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.90208789 seconds)
    (2/2) benchmarking "in"...
    done (took 1.90248234 seconds)
  done (took 5.618872804 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.881783221 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.884553154 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.883245108 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.881232615 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.882633102 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.884823166 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.88433932 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.881222012 seconds)
  done (took 16.879568498 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.883101669 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.884025533 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.884720236 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.884635923 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.885387956 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.883528764 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.890461922 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.884585806 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.886133197 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.884374563 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.888703285 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.89059029 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.88737568 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.884765065 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.883941298 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.885459433 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.88512708 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.885500051 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.885508918 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.885256266 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.886469115 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.88660575 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.886647043 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.883035803 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.885510463 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.89391654 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.888907564 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.885922409 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.88509267 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.888678293 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.885458259 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.883888576 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.885854973 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.886222496 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.885458281 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.886735118 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.892940089 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.885307192 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.890807514 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.886779913 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.886073972 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.88423161 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.886421896 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.887252164 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.887592315 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.886600578 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.886826678 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.883580607 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.885897213 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.88923511 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.889465769 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.885791995 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.884116285 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.890516957 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.887906211 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.893402164 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.889062702 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.888998612 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.893410668 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.896130304 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.899378391 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.892831565 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.888705271 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.888199802 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.896170073 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.905899379 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.894059432 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.885311246 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.883646156 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.887899306 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.893722717 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.899870736 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.894560859 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.888105207 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.889606198 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.88869795 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.887446062 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.887569825 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.893692787 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.89083086 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.889419111 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.888643308 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.89664502 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.905805563 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.887127997 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.888962091 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.887838717 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.888653871 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.888746071 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.897904792 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.890533328 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.889063523 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.887781698 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.888577978 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.890035484 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.88986776 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.887508075 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.888827987 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.886728856 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.890156318 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.890319366 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.89166888 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.896059952 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.889473884 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.88993586 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.894375267 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.891782511 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.888688242 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.89457457 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.889407259 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.889820341 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.890555901 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.895376675 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.886879562 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.891483713 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.897073929 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.89017643 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.891718709 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.890425801 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.890333427 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.89787062 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.910837147 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.892256792 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.890327342 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.893944026 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.899380129 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.890928663 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.894806628 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.890616944 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.88841278 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.887415369 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.892470444 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.89096235 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.890893303 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.89155739 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.890955182 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.888119026 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.890847521 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.892079315 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.892012493 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.892180716 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.890545812 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.891449079 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.893417067 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.892780725 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.892660365 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.896245404 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.891658936 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.892604439 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.892711949 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.889192201 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.891896545 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.892912632 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.892769614 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.892127255 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.892721383 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.890796018 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.892351561 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.892556849 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.893580352 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.893208776 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.892069834 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.894932754 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.89330752 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.897020694 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.89334078 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.890906401 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.892368088 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.893114827 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.892266214 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.893861034 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.892606977 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.895787217 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.899371176 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.89317314 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.895482255 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.896415174 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.894449468 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.893558313 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.893705868 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.895900884 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.89894612 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.894137968 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.899494513 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.893544258 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.894737966 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.894682141 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.893547071 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.893591623 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.894021738 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.894676775 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.900823408 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.905773566 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.900269895 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.894390272 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.896495537 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.895466236 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.897510413 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.898394419 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.894870901 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.895398966 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.895393498 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.893795628 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.894977806 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.895492562 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.89451425 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.893679305 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.895940385 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.89509491 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.894506862 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.894686009 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.895638262 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.896200525 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.892098199 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.895134541 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.896521017 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.894698038 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.893363814 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.894436438 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.894275181 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.894810367 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.896690774 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.900878323 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.892580978 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.895865952 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.896255764 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.894993988 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.893538037 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.895561117 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.897086814 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.895264154 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.902269903 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.89479586 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.896882144 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.901776381 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.895905308 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.894994531 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.898717637 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.89821709 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.895010993 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.897371811 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.902854378 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.8967763 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.896543323 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.897722 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.896537865 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.897250604 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.902540674 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.893927431 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.895764386 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.896999594 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.89776897 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.893926898 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.897519382 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.897509508 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.897216785 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.899315165 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.897464969 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.897367306 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.898196854 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.897720849 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.898127223 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.898038406 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.899707303 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.904865398 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.901982523 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.897411229 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.898664864 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.899084565 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.90091144 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.899208159 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.898738899 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.89742825 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.909874848 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.905627743 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.904358606 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.900233844 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.899344218 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.903663922 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.899127682 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.902759153 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.898590188 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.897850053 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.898345319 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.89950798 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.89564402 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.899448888 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.899808843 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.899779788 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.899063115 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.90170073 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.899352337 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.898479033 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.900013641 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.899314802 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.899624017 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.899583672 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.899820967 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.901761777 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.901410797 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.899178732 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.89871951 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.905644239 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.898625544 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.900588663 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.898700214 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.900236344 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.898820738 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.899929335 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.900063486 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.902261856 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.905627439 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.902364898 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.907308945 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.900403167 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.90868417 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.899473061 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.903014507 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.907254653 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.89867608 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.899634153 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.901276141 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.90060769 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.906637959 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.902868924 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.900166378 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.904496417 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.901564803 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.901832594 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.903446613 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.903498477 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.902609313 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.901003478 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.908923307 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.901565801 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.903838198 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.903360524 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.898685688 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.901825037 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.901942997 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.900810661 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.903427847 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.901493715 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.901789267 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.901890142 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.903957921 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.901277837 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.901372333 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.90148038 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.900813878 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.902600739 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.908446405 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.901344245 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.905847001 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.903506825 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.910054631 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.902445651 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.908392661 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.903361566 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.902272852 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.90382647 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.901421306 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.90391423 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.901405755 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.903964595 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.903711313 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.903483185 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.905880375 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.903075187 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.904803516 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.903855854 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.903619089 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.903174089 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.911251303 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.922556534 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.904211466 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.906921782 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.900826657 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.902999455 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.907320222 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.904320101 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.903282207 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.906203679 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.911569167 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.911027882 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.903985559 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.905880302 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.905730354 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.905097619 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.904723472 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.904814763 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.905119412 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.905056811 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.905211023 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.906443913 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.908474688 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.904400293 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.905104693 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.905583044 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.905347078 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.912514302 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.905264354 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.905049131 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.905905701 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.906232296 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.906424222 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.905044811 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.906614668 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.904991213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.904676862 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.908850178 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.910988107 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.910454607 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.90749247 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.904911353 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.905561877 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.906073405 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.905583292 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.90662568 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.906393082 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.907240805 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.906693131 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.906777328 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.906912824 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.905484935 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.906401099 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.906803487 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.907338425 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.910003275 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.911396513 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.906208525 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.903847175 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.906548033 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.907430664 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.90632463 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.908176802 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.916330521 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.910022608 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.915556967 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.914103809 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.912042876 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.90698064 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.909568386 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.913035423 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.905132025 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.907348856 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.907115797 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.908730175 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.907846315 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.908966008 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.908956261 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.913515777 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.906747778 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.906707306 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.916803575 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.908936187 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.908141084 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.907363744 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.911149232 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.906728722 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.905171975 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.906967631 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.907145895 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.914173149 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.909417464 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.908144052 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.910136735 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.906917011 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.907840241 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.91337053 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.909283637 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.908940103 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.905888623 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.907911272 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.909635336 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.908566815 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.905271994 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.908986194 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.90864532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.910375722 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.915304074 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.905468434 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.910380881 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.908466144 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.908667944 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.910353484 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.91065995 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.906900675 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.90584608 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.908977372 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.91001342 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.910855406 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.912670606 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.909634592 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.909716977 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.910220222 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.911808575 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.911638193 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.917789642 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.91558332 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.907413621 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.910364747 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.910077362 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.9130501 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.91022669 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.910500925 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.910173791 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.911921773 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.910769214 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.910538359 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.909401013 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.912650131 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.924871144 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.911002948 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.909721122 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.910236979 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.915845608 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.911188907 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.909518204 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.912885246 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.91353728 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.912646339 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.91727673 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.911694039 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.917190294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.911482463 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.911545193 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.914835788 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.913648426 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.916141408 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.913863266 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.912767521 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.912936227 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.916641473 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.925398725 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.911583111 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.920308472 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.936150935 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.912671324 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.913655822 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.91328901 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.911696086 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.912202261 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.913816267 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.91325637 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.911826385 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.913563399 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.913244724 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.912484498 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.917531216 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.913078031 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.912013663 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.912158707 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.912140925 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.913794443 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.90953402 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.913289361 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.913356374 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.913103294 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.913558049 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.914360257 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.913697673 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.923776322 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.921254653 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.914191584 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.913354255 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.911738118 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.916548074 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.91570378 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.9202744 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.918809932 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.913340767 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.913610196 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.914855069 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.914019056 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.910398923 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.913815405 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.912988016 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.913732765 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.910743369 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.926052831 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.920843106 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.918458965 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.913419981 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.915499712 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.914179186 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.915807213 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.915176973 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.916369569 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.915815232 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.914842202 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.917982247 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.914851185 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.914927063 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.917240113 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.920609192 seconds)
  done (took 1134.852331191 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.911693601 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.91195291 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.911935178 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.912147359 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.912238993 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.911850924 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.912292012 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.912590496 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.91191819 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.911929833 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.91198324 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.912619225 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.912625237 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.912891138 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.913403398 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.911814034 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.912175999 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.912867521 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.913251246 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.912881445 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.913171592 seconds)
  done (took 42.006753751 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.915107353 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.913248957 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.912988682 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.916709521 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.91322381 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.915819271 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.913263069 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.916300816 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.916420781 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.915423699 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.915981035 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.916366538 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.912361264 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.913657539 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.91331508 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.917045356 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.916860566 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.91346484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.916467191 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.914419963 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.916248167 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.91495496 seconds)
  done (took 43.975815524 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.91867199 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.918083319 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.915252125 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.91443479 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.917219733 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.915557318 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.919598821 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.918059402 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.91812757 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.918359496 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.916094794 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.916973637 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.923741054 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.920304377 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.91973897 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.917695371 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.060449676 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.918108961 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.91924409 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.918858234 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.915750773 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.923579412 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.915303259 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.915327257 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.917342325 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.918405065 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.918193728 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.917646841 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.92079232 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.919209459 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.923135355 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.91966845 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.919135107 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.921509533 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.916691139 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.918733426 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.922767111 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.919632879 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.916955518 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.918479938 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.92692977 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.934046366 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.920824452 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.924087493 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.919543447 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.919374367 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.921854243 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.926664153 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.916792478 seconds)
  done (took 96.041333587 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.920308996 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.91950451 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.919190023 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.920707658 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.920177615 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.92022619 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.921305371 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.919514978 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.91788482 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.917539737 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.920554564 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.917737409 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.919274369 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.920168162 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.920072848 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.917271971 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.917560399 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.917815621 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.917678653 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.916260675 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.918422947 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.91942745 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.920890108 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.918453006 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.920419678 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.917860802 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.917606138 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.920465513 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.918326034 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.917764902 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.920924828 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.92112562 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.920483629 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.918592992 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.917836142 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.920882384 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.920721701 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.918542772 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.920968697 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.918177394 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.921179786 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.923755882 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.921090278 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.92092631 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.919048965 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.91913497 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.918571239 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.918197469 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.919176363 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.921725624 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.923050975 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.919906767 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.922622917 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.920181767 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.92392134 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.922493496 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.918934859 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.921205951 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.922644917 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.920813232 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.920064927 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.924123298 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.920846207 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.92350197 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.922387492 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.9208591 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.920972797 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.924693953 seconds)
  done (took 132.416223558 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.923140423 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.923260262 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.924650306 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.922833457 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.924636508 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.923525993 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.925141169 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.924148551 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.92398601 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.92377008 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.923611283 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.924548615 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.925060204 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.925577806 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.924225883 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.92519426 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.925781587 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.924119296 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.924480132 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.925262239 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.923924485 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.924626315 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.925112904 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.926676707 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.925943925 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.925571597 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.925037201 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.924958554 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.925818555 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.925040701 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.925417471 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.925996836 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.926770865 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.925305276 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.925542594 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.925959855 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.927439275 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.925018299 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.926529755 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.926647817 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.92531595 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.925514515 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.925450199 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.925412933 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.926723264 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.927273119 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.926689151 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.925932064 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.925585918 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.926023583 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.92591992 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.926443825 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.926129325 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.926720819 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.926429018 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.92702199 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.926847679 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.926808795 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.926785769 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.926882338 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.926530307 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.926812669 seconds)
  done (took 121.234821279 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.925160042 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.925969462 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.923153643 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.923269327 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.926115951 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.923555055 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.926600697 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.925772107 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.92668031 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.925741128 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.925685513 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.923953546 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.925129372 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.926877221 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.923882625 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.925177884 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.925219475 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.925117188 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.92679375 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.925482854 seconds)
  done (took 40.36186388 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.924400436 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.927526439 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.924664966 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.925030735 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.927610698 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.924680211 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.928098987 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.927169792 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.923804753 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.926875693 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.928345651 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.927300441 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.924581959 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.92516062 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.92739757 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.925180498 seconds)
  done (took 32.674706068 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.925189221 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.927505085 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.927894401 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.927416576 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.924907649 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.924537426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.92839139 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.924488966 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.924519743 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.928324146 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.928743118 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.928299305 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.928030045 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.929106096 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.925244301 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.927874193 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.926176308 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.925635468 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.927620092 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.929865338 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.926709884 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.925662032 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.929521935 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.928280817 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.92586014 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.926575154 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.926127998 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.925894226 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.926078149 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.928204742 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.927971912 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.926741846 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.926663907 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.927272595 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.929375806 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.927176163 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.930178816 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.929770767 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.929947107 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.929390895 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.930335442 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.927467443 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.930294596 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.928373769 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.928125048 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.930168178 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.92773823 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.927679531 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.927297314 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.928192211 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.9306966 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.930848561 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.930063269 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.931400526 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.930498216 seconds)
  done (took 107.891188891 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.92972547 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.930756194 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.928031436 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.93087431 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.930241922 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.927964424 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.930542897 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.927826375 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.927581971 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.930171944 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.929204773 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.930689694 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.927322044 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.931020147 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.927819792 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.931060553 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.928192307 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.928176368 seconds)
  done (took 36.586931906 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.929088041 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.929284177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.93209654 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.92853012 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.928954878 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.931924707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.928242398 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.932674375 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.931302725 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.930486395 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.929425985 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.931917191 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.931562447 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.93282074 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.930136245 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.930731145 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.932809552 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.934033318 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.930576365 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.92994837 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.934564948 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.933181737 seconds)
  done (took 44.345492364 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.931639915 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.932960994 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.947330567 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.948459025 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.952266165 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.962582682 seconds)
  done (took 13.537193135 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.929839258 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933972718 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.931817529 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933598535 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934766755 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930647201 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.93012875 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930372482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932816791 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931420385 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.930664921 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93440374 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933622998 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932594328 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.93415327 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.933453534 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931759596 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932060586 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931616548 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.934952571 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931622037 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933288992 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931666274 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931447918 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931209868 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931636119 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934331258 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.931829375 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931743299 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.936341982 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933967505 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932821116 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934742856 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932554175 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.935988428 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.935682705 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932494757 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934918458 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.935132607 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933860715 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.936174647 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934696544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.937505175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932674733 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.936882094 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.933954671 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.934040954 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.93268222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934300569 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.936563451 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.937919524 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933734825 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.936321149 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.935875872 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.935899702 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.937135497 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933676049 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933467522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.937269329 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.934608123 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933838855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.936291754 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.933034488 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.933229772 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.936020668 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.934295439 seconds)
  done (took 129.49295345 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932727402 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.934133343 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932757385 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933568002 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.933825691 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934276082 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934219198 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.933309734 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.93394826 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93496244 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.937756093 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934647369 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.935255446 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934383046 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934475376 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934589805 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934425805 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.934419596 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934883747 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.937376095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.934928825 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.934516258 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.93416947 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935615464 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.935595176 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.937923923 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.935118083 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934761254 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935778308 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.935967852 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.936276359 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93713348 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.935278336 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.935227899 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.936178089 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93528081 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.937012766 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.93699193 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935124223 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.938899367 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934794527 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93905014 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.936007054 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935380747 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.935774428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.935944573 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.937030107 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.936015763 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.936931713 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.936665928 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.935509465 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.937299699 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.93702566 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.936063075 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.936018642 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.936342322 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.935855715 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.935467401 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.937754394 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.94049793 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.937518799 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.937051724 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.938546927 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.936593783 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.936227403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.937540767 seconds)
  done (took 129.630899313 seconds)
done (took 2644.894224953 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.960498211 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.197078477 seconds)
  done (took 16.025862773 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.109671033 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.060137873 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.945224891 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.985363325 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.946468427 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.962348282 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.964248585 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.944731008 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.944169638 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.945143821 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.945077668 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.131687099 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.96410121 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.945936755 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.945511616 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.037764294 seconds)
  done (took 53.657333202 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.948214749 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.950540542 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.960314097 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.952070907 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.949010034 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.964178493 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.988152143 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.952281286 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.010976152 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.9629814 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.075819052 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.962128915 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.949694541 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.015240409 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.964391337 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.962838804 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.042235179 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.029817775 seconds)
  done (took 37.517420752 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.02806352 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.956867484 seconds)
  done (took 10.869050057 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.971279959 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.965644795 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.957304687 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.946103768 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.950208333 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.951844956 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.952892768 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.957892608 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.967165513 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.980926703 seconds)
  done (took 71.480993312 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.954884974 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.951762095 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.950938597 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.950167588 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.942669904 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.946386746 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.949732633 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.948127303 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.625892172 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.987246935 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.958224049 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.9560604 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.949967438 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.951935831 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.94906716 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.971873847 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.072002241 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.9484428 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.94815204 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.9556168 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.9505667 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.01779836 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.965374893 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.953243716 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.982010479 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.630723051 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.959555959 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.956258893 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.071161577 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.948564239 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.949618228 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.950925528 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.951750529 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.338776896 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.243659654 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.951703902 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.965575832 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.959452299 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.948395333 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.079239806 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.951020813 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.956630815 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.898248073 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.232020781 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.064522455 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.001403092 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.309156422 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.969702238 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.951817824 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.98275929 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.956217557 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.953125677 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.963952815 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.470857003 seconds)
  done (took 137.18729277 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.946861147 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.214906121 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.104140483 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.94811064 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.237091782 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.157588246 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.949752243 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.99763873 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.950253708 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.179222842 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.16843587 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.058761973 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.948677478 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.946575004 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.948698953 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.946266988 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.108140001 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.023226203 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.950157487 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.945100037 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.980247906 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.193505847 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.078239699 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.951515985 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.969933109 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.16214824 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.075088383 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.058506588 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.354595392 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.946535731 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.014579802 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.950443742 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.949811496 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.946375885 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.106108968 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.047514814 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.039531279 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.954512083 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.947856143 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.945028634 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.624036836 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.146425483 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.046802869 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.093271064 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.198897677 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.155413909 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.738974978 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.947202187 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.685095761 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.110832073 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.18483599 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.182461169 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.076146428 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.95134747 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.217251315 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.947420679 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.946810612 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.184424272 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.199596272 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.051689255 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.952731132 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.947655874 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.947027416 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.19541367 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.950970673 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.044700776 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.954604335 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.949020837 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.046707654 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.055172579 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.202307018 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.165689313 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.985012579 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.24683812 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.429803956 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.201072096 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.01982008 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.184434687 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.95566998 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.949040549 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.035407273 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.806768793 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.149282522 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.203931813 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.205949709 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.988114047 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.669809809 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.94751878 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.178125784 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.175753012 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.204332733 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.192133302 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.105131016 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.276121816 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.94918056 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.948285275 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.203627026 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.089126649 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.952010693 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.311829397 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1869007 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.524013691 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.983032248 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.26413993 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086493848 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.952114771 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.592119384 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.949186327 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.176845723 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.995642163 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.951274684 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.95184448 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.173420969 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.935285076 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.952120592 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.676036685 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.016868535 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.955421834 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.188218862 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.953772628 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.219310353 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.954553475 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.193858798 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.349077949 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.987040355 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.126433318 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.195898249 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.95395474 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.210987502 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.20143819 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.071066711 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.227738013 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.881311583 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.952932112 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.243405216 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.955020385 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.95102304 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.127038556 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.953242314 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.175911456 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.95606947 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.242308868 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.980270279 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.112995067 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.956709653 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.212057046 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.990762618 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.006710103 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.959917901 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.087769734 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.958052279 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.825892452 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.108632057 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.957216215 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.95079928 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.492795749 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.952306903 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.111514595 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.190603751 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.97963005 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.026447787 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.62444612 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.950060027 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.038665412 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.979302801 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.299241676 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.949152442 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.167372407 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.952835283 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.488433685 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.948594337 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.192062872 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.183001181 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.949668808 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.950087808 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.853467204 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.948730409 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.94799229 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.108982554 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.76898797 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.946280999 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151890673 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.953840083 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080296674 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.948620098 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.022446197 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.300801506 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.945249238 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.945511625 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.942836985 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.942741111 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.945459529 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.156169003 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.979405902 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.477617486 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.086282229 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.218317618 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.266454248 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.19708464 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.994016344 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.946857379 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.194990323 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.94690668 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.00942424 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.946006711 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.966609756 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180687202 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.947950654 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.15651025 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.226953929 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.875975186 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.993707696 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.944541676 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.939834623 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.859015569 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.09139044 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.033579914 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.938304557 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.933165553 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.053898378 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.063662552 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.151435704 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.93281731 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.16244513 seconds)
  done (took 921.7126833 seconds)
done (took 1250.317196732 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.92320909 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.924232724 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.91614069 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.928021131 seconds)
  done (took 29.549713233 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.935473937 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.932976575 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.933903484 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.932132681 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.936047253 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.932411243 seconds)
  done (took 13.464160051 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.978570411 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.92493754 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.929067638 seconds)
  done (took 21.69439859 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.000785596 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.325245129 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.049967853 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.362786208 seconds)
  done (took 10.602164428 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.934510751 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.935254176 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.935239505 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.937830622 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.936292523 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.939781752 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.934894835 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.937808316 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.939489934 seconds)
  done (took 19.296617349 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.435630492 seconds)
done (took 100.899130824 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.203894408 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.954998267 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.197621755 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.27960448 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.075043387 seconds)
    (6/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.210265385 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.25699737 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.09251924 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.942379173 seconds)
    (10/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.647712143 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.999692181 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.931279591 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.024418796 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.979873778 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.976173163 seconds)
    (16/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.948205688 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.133470871 seconds)
    (18/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.932228536 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.262260204 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.423239696 seconds)
    (21/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.008567011 seconds)
    (22/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.08307449 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.967974343 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.956637536 seconds)
    (25/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.201132216 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.123461752 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.939773751 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.908227522 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.920847322 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.447486022 seconds)
    (31/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.416886438 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.224259258 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.106821273 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.961233826 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.738497889 seconds)
    (36/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.103476823 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.91982006 seconds)
    (38/309) benchmarking ("sort", Int8, false)...
    done (took 5.085125833 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.961190359 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.149099637 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.060023841 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.03685172 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.19621739 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.288083483 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.250636002 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.035305918 seconds)
    (47/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.131372167 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.96272841 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.275116885 seconds)
    (50/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.049262603 seconds)
    (51/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.151154926 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.285051359 seconds)
    (53/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.059826243 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.261029112 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.268312208 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.111967991 seconds)
    (57/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.04393029 seconds)
    (58/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.037967346 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.046753993 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.067812198 seconds)
    (61/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.042753788 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.2185969 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.009315359 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.053746878 seconds)
    (65/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.939637254 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.017774336 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.147513113 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.052911646 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.962635573 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.012458117 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.910675868 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.000017184 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.143126552 seconds)
    (74/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.436224005 seconds)
    (75/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.045226456 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.976235163 seconds)
    (77/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.085414207 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.298621692 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.489710087 seconds)
    (80/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.03776489 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 5.710635341 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.256784915 seconds)
    (83/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.855654197 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.965027059 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.948832035 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.586697368 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.284730612 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.942975558 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.140312824 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.957402069 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.980294607 seconds)
    (92/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.227875496 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.373151375 seconds)
    (94/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.075192635 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.673594732 seconds)
    (96/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.961658335 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.152171636 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.949253844 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.349889632 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.00497212 seconds)
    (101/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.207496867 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.296651273 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.039765111 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.944142323 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.399465889 seconds)
    (106/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.966436572 seconds)
    (107/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.060297323 seconds)
    (108/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.954604352 seconds)
    (109/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.977883244 seconds)
    (110/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.063740953 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.0815334 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.434331767 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.598655873 seconds)
    (114/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.204375122 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.154227155 seconds)
    (116/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.081837465 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.02181335 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.160002751 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.944260229 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.39690742 seconds)
    (121/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.093545133 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.136217523 seconds)
    (123/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.426593321 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.170984716 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.950184526 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.030825682 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.341261426 seconds)
    (128/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.979366026 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.013210383 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.071273392 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.288203499 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.054162445 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.877548593 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.297655785 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.186345609 seconds)
    (136/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.241317622 seconds)
    (137/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.96559454 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.046207764 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.086212836 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.618935908 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.171873551 seconds)
    (142/309) benchmarking ("sort", Bool, false)...
    done (took 2.381500969 seconds)
    (143/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.9673493 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.200264799 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.944860836 seconds)
    (146/309) benchmarking ("sort", Float64, false)...
    done (took 5.729093722 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.168181553 seconds)
    (148/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.973099293 seconds)
    (149/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.516470471 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.230379513 seconds)
    (151/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.865126182 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.076056947 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.954880322 seconds)
    (154/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.964881381 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.028117347 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.299729659 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.064870378 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.040306966 seconds)
    (159/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.980607288 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.220083387 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.12704261 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.965524032 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.185405638 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.974300642 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.947407056 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.282182288 seconds)
    (167/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.933565224 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.066172215 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.049023106 seconds)
    (170/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.2908594 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.965721071 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.32979667 seconds)
    (173/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.077711198 seconds)
    (174/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.123601063 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.949656095 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.09880234 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.021368945 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.96329971 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.749310608 seconds)
    (180/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.081271161 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.978340761 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.327774588 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.056402027 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.148841804 seconds)
    (185/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.482171299 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.969776603 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.293051652 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.98905313 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.457853708 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.952424355 seconds)
    (191/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.154787968 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.060707591 seconds)
    (193/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.076770349 seconds)
    (194/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.387489301 seconds)
    (195/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.149881361 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.001417678 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.077216669 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.99554453 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.001044687 seconds)
    (200/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.177883356 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.961360125 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.082289794 seconds)
    (203/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.357862136 seconds)
    (204/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.100888941 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.154779642 seconds)
    (206/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.114572077 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.787202498 seconds)
    (208/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.67791917 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.242328479 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.953098637 seconds)
    (211/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.218573489 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.030582645 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.961447837 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.970412504 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.02125263 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.700237025 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.197767841 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.905083532 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.9665769 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.16516668 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.966050928 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.140569806 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.002531042 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.064206633 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.125986001 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.993860433 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.583829671 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.438898206 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.673873816 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.97091241 seconds)
    (231/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.692076847 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.086529512 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.013200354 seconds)
    (234/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.963491908 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.253448493 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.276608314 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.956903039 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.571756384 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.435695033 seconds)
    (240/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.341155835 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.96854949 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.065768273 seconds)
    (243/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.092555248 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.227558149 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.967907259 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.205046182 seconds)
    (247/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.201496258 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.493362739 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.283693853 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.558665402 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.101364003 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.118006181 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.968175833 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.267236657 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.134456873 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.971612238 seconds)
    (257/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.31048708 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.972345267 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.156056767 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.039171612 seconds)
    (261/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.974072948 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.618099976 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.996692446 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.968152005 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.08615915 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.304990795 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.001356433 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.044398116 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.34612098 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.50189042 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.90538297 seconds)
    (272/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.450263229 seconds)
    (273/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.176111483 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.981361707 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.353644658 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.522480372 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.276234607 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.969790685 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.146425359 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.970353644 seconds)
    (281/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.651682526 seconds)
    (282/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.190689794 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.66162613 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.039471983 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.311549292 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.886238675 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.056856373 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.055524421 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.116711491 seconds)
    (290/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.835879692 seconds)
    (291/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.115358775 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.73008744 seconds)
    (293/309) benchmarking ("sort", BigInt, false)...
    done (took 6.973570067 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.238531682 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.977863682 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.622764217 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.990130651 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.101723016 seconds)
    (299/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.166303644 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.365283387 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.414605978 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.998160688 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.992623776 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.912100256 seconds)
    (305/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.329972828 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.364190571 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.961683066 seconds)
    (308/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.565943204 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.059864194 seconds)
  done (took 1038.568137792 seconds)
done (took 1040.511906395 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.008755915 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.001461066 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.98726529 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.00838408 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.098806034 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.016867014 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.996797615 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.989734537 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.03426924 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.033727027 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.985283635 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.0140333 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.990028627 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.987866768 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.985585526 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.002364252 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.302253302 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.018214728 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.005760055 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.994840856 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.002611331 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.986363564 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.03679316 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.019022483 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.989693484 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.990261347 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.991788054 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.007729619 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.101109356 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.991599268 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.988430453 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.9961112 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.304489836 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.018087727 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.982010837 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.00902584 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.001014637 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.995706506 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.992020976 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.021975964 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.398173537 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.031494271 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.991129929 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.989243859 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.990231298 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.990316289 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.989886008 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.99205811 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.00281592 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.002655745 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.391213651 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.049207687 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.991724802 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.990338944 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.998207069 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.989542288 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.99320981 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.004765132 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.007743733 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.007914501 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.293083295 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.025682427 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.989892618 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.00747757 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.996908481 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.432056077 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.026953482 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.993840098 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.397521252 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.035008927 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.431432107 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.041695333 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.991810682 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.005617969 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.023561359 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.303362774 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.012345821 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.989445547 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.998737181 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.990229483 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.000644504 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.003569756 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.994972436 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.991633539 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.005671566 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.02229837 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.001095014 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.991809244 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.999931878 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.008142776 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.999713944 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.003615624 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.993385839 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.984830311 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.000654449 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.993935156 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.995009461 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.995099568 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.992261021 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.997686585 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.396348778 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.050198658 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.985336781 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.986689549 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.992107215 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.007095122 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.396867554 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.034255708 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.013290782 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.037380958 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.993756442 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.294991441 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.026357301 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.009582355 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.99910619 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.996073737 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.986467871 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.295603607 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.427324722 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.051843773 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.986540165 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.986493797 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.003832126 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.986403004 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.986807824 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.749853112 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.018195467 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.997669021 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.106765951 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.996698598 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.018013959 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.985116774 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.987873021 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.018344149 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.001980061 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.01392227 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.986029606 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.000379411 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.000324852 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.980073163 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.9917317 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.990757492 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.982806655 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.986701635 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.980072254 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.011776204 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.996835046 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.997157587 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.002521058 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.103954145 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.97699232 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.284871201 seconds)
done (took 312.66394013 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.04231648 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.961899632 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.074731035 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.971051207 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.056057687 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.06244331 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.966942864 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.974057132 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.964349703 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.34278077 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.967095674 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.972014712 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.972811919 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.968133502 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.053527644 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.967351278 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.967156024 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.30493415 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.969922914 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.039177915 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.965775194 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.965076978 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.970833502 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.337238433 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.964547059 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.965271803 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.04146494 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.967005338 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.300383267 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.959616535 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.962278527 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.302259386 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.054362769 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.98069144 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.97310578 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.967306219 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.046944959 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.968847885 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.039791268 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.040748386 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.059702908 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.000659567 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.954301536 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.95820876 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.961869478 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.955195209 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.947942457 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.974289697 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.946261775 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.945613898 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.277507358 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.952017976 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.938424188 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.940685065 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.940479592 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.97495318 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.938944732 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.945295272 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.03235601 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.943279453 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.003433465 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.311099431 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.314019244 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.942665413 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.942272249 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.939855308 seconds)
  done (took 190.31197417 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.008810885 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.016446205 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.010005398 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.945619267 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.990601714 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.012467322 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.946904063 seconds)
  done (took 15.794666464 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.950727933 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.944360655 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.993715296 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.994022438 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.947339576 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.092751665 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.944609125 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.955563024 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.941107274 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.996820172 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.943689368 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.945154647 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.952537944 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.941248376 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.992774697 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.957875767 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.060988396 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.945789527 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.944469648 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.096263507 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.940116582 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.951386645 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.999312404 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.954107991 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.945016698 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.950505567 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.527852565 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946213711 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.943100741 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.946344043 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.942533176 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.987005842 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.949010841 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.940379643 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.944237877 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.060727996 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.944057422 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.944032966 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.945155744 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.946670798 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.946282918 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.946123279 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.948685245 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.941847962 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.947829805 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.96943756 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.948764734 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.946131732 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.945405636 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.9455686 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.995691036 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.948725905 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.942591098 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.94256235 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.000821814 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.953139249 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.95017376 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.945921964 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.94806548 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.94746376 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.097313259 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.995224256 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.946603645 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.996379913 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.949434715 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.951599478 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.9498511 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.949209614 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.045834049 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.953069591 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.996592422 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.949788405 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.106586353 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.971766004 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.951341162 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.95203992 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.951895612 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.949899942 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.941589668 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.959209171 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.946085982 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.95233992 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.958379887 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.949358518 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.947141523 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.065457225 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.056509965 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.950011757 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.96027216 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.960593927 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.950184094 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.001922107 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.950091466 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.949664771 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.006577333 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.065594461 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.004012548 seconds)
  done (took 213.418173561 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.953305655 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.96011018 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.95079227 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.969222671 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.947941068 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.950523003 seconds)
  done (took 13.602306802 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.953052274 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.953122426 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.953731507 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.95478952 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.953204759 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.95776791 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.953994734 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.954238237 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.956498642 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.953278434 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.953056981 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.953549159 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.954094751 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.952136019 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.956093973 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.952845296 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.954965459 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.950276448 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.950531177 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.95741933 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.113133277 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.955853903 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.954767468 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.952602729 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.957931924 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.954555895 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.958521489 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.954526851 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.953715188 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.96409497 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.958263293 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.957070589 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.959302426 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.960954718 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.958937377 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.956364296 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.959878477 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.95875471 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.949747143 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.957961959 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.953969446 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.954253426 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.953395797 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.955693295 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.953745868 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.963121313 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.959823736 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.960180888 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.953775026 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.956459725 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.953389461 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.952334517 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.95770907 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.953428277 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.960476138 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.960685457 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.961620431 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.955408619 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.957801076 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.956125017 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.954790485 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.953820232 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.958642094 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.961790762 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.953103893 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.954836004 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.956936449 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.961032243 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.951957304 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.953325009 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.953975587 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.953897661 seconds)
  done (took 143.853561418 seconds)
done (took 578.894899766 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.149682413 seconds)
  done (took 9.019865314 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.971147435 seconds)
  done (took 8.894114476 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.405399718 seconds)
  done (took 10.297692428 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.981990949 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.007481767 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.970081742 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.968553744 seconds)
  done (took 29.844514847 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.081530623 seconds)
  done (took 8.969400762 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.977748555 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.949039309 seconds)
  done (took 15.841172153 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.972350035 seconds)
  done (took 8.856881889 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.049944847 seconds)
  done (took 8.960909335 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.962118122 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.977710889 seconds)
  done (took 15.824005965 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.931788597 seconds)
  done (took 8.808754473 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.58208114 seconds)
  done (took 11.55872825 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.964391909 seconds)
  done (took 8.945812166 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.02742114 seconds)
  done (took 8.903643015 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.048697318 seconds)
  done (took 8.92658136 seconds)
done (took 165.52415606 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.950598934 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.947648044 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.944036468 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.951343537 seconds)
  done (took 29.669934769 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.987913072 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.98667189 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.989396036 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.001909815 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.98634568 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.006481216 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.981234585 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.979166989 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.995480153 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.993707037 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.989865625 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.991251162 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.987728927 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.986961876 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.993820349 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.989528524 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.001203454 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.990183487 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.980929654 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.990958528 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.953822987 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.997473095 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.99111609 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.953892001 seconds)
  done (took 49.583482259 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.152038504 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.020195109 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.102545499 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.003743654 seconds)
  done (took 10.154902923 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.000300903 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.001296195 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.014843245 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.052172862 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.076097468 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.012473936 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.974599088 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.972159057 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.958795807 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.002921324 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.076337146 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.999746513 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.090739255 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.949593137 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.136373119 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.950217221 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.949451181 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.002546008 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.053755039 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.071243073 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.949338809 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.002223361 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.007166713 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.994460867 seconds)
  done (took 50.17382153 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.947833971 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.956935777 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.95474613 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.950330437 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.947176988 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.95069635 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.957273722 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.95004308 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.970947857 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.952538273 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.950015783 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.94885881 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.948302921 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.95144279 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.948386626 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.960534018 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.96161902 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.948827155 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.951895878 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.954578718 seconds)
  done (took 40.9422574 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.945449422 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.795444394 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.298282274 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.19832617 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.939369726 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.94115512 seconds)
  done (took 31.994583909 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.962087767 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.957045213 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.944532756 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.002104745 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.08751322 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.952422855 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.947012823 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.953474787 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.994358316 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.00545789 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.966411009 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.973882141 seconds)
  done (took 25.623203226 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.940058103 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.962521276 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.941533557 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.978224496 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.9522951 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.953669579 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.947430157 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.936356622 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.959433798 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.960784062 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.954149014 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.956100685 seconds)
  done (took 45.315885608 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026950106 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.825189859 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.995449359 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.651535151 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410441218 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149211464 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.464802675 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.278315571 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.941284306 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213050807 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.0006463 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197273126 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201138332 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948187404 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.034790373 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.452124499 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256659752 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175692452 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972965456 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702253678 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124649552 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.574953352 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.785327247 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130343664 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207676749 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.128948311 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.258881082 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.955647004 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138153085 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036878081 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008181348 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.99905922 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271822156 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368493914 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093254356 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009072192 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.650782365 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.714825808 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 7.01053986 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.762758889 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.988655074 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.140747636 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007794197 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.999927071 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.934566639 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.606823481 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34461025 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.005377365 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.709866545 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.999195795 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009432254 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089187773 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.004277708 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.816064065 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.951087309 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.280895945 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.99732448 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005187338 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.572349808 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.104669127 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.693271521 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.940142546 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.195176335 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.761889786 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494880474 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.1513001 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.005901114 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.004669064 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.935354784 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.769286261 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130519197 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.14817015 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.022629711 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652066548 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319413367 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.11554899 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.092929576 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284928627 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.869760244 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.939686874 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230096458 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954950346 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.937954404 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.871459984 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.937186583 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275929099 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034497762 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.63075572 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036169302 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33809571 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.013340036 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018916241 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008555328 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.228518817 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.886766078 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.003931118 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.872443544 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302955199 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025868501 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343752609 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938713857 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.007971771 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259569007 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.216220883 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303070946 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.498196047 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167283875 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005424409 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.09311826 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.996641792 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014132819 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.283965029 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061789514 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.114684422 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142641863 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.962172329 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29828389 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.026306047 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.168873619 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.094979355 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278348285 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.331253552 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291489834 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06984927 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.004581396 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.005987006 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.775710288 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.634996348 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.271594202 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.005170262 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44078925 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124986236 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.007432055 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.940097986 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.64722109 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.054713667 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.125916128 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.231652086 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.887848224 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.391358618 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.941379346 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.152331958 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.12032788 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.229658573 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.664589226 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.091861153 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263566077 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439807627 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.30393089 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127210048 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027393441 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096221115 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030749339 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.383238999 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372327977 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.011186014 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.012333151 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.785672772 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.086484964 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.006907144 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.011755179 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.804350863 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304971551 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034045174 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.011857309 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.897409706 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.021454514 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074802221 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014503286 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.019509809 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.553609402 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.777512652 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.019465378 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.692287399 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262354405 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019318933 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.779254368 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199587353 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.090415305 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301294847 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070403751 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.944155816 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.720043878 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.702806032 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00994163 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.944540277 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.009723106 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020115599 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021240216 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.38857639 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293914131 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.053514112 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.777279259 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.132624204 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020508113 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.01555444 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.009576654 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.53451887 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.123703436 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.57937907 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131038166 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148919446 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.023726538 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.944548517 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.013834132 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.016338761 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.010225657 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.970276225 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063022759 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.880584402 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468059253 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26807478 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.657877846 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02833291 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.802479651 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.143760897 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.089963464 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.855515774 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.029653449 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.121656259 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079005544 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.022676665 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.77600275 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786317588 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.578815024 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330918975 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.339507852 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464912444 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.451162734 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.388544921 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353834334 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247211804 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.5419218 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074730513 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356770979 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.958079022 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097594366 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.670847351 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.373208917 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029359323 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240994233 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412595816 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.91979 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180798271 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223914892 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048030718 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.855998168 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.051326031 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.217691717 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155553712 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.913508067 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238526146 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348326501 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.866546388 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.1290907 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.012427889 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.708740364 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089896462 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.724762804 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.375649683 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.602288841 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.067961646 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51231144 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.017896004 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.460070461 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371087687 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39577086 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.100898081 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.94995219 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.025509764 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.024006421 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.012632132 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.999158564 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.963367537 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.307534775 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026838544 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250070033 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360869229 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.279655439 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.922177862 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.021410025 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.016081774 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31819408 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.744250241 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262372212 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.428197214 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.612624781 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.025783319 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.949689547 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.949760996 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.707506955 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.022897267 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990015594 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.252438173 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.197808514 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968002219 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455711425 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335594444 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.271773194 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.029632732 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.302858877 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293144635 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.751548334 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046274888 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.116370627 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.82960585 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.140973055 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.285719551 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253533753 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815723932 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.247784659 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.061590474 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.825040812 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.017154831 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231294733 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.286550212 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.06235904 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268479465 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.736355172 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.025671477 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391968965 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076140779 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.094884405 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.193006958 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.21300672 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027820304 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103190633 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026530102 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.028814711 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.028975341 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06428868 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102210123 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.15871102 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.031689041 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10689855 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.117573714 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.629961972 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.037060833 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309040174 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393116732 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351967814 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081721486 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.018964076 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.017224175 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.953043102 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155710245 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.464506666 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293102986 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.14984849 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.320305649 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044669596 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.837373979 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36905421 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33809361 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296403688 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.914078274 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.01961067 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.12819307 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.287567598 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030220331 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.231077094 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263555421 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34107154 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486753189 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.206548483 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468556479 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.294943173 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.389678674 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.021683004 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.612555049 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.030882369 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.781963856 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.055500346 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.075685536 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309900314 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03189612 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393305593 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.039250419 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.218412291 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.542824204 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.895725324 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389256921 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.013861337 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08188777 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313348699 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42602858 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330659539 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092503761 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032582224 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.734186117 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158978373 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 3.019047301 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.347619664 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.022185256 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234095693 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.732128248 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03135179 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308346016 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332777417 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.019868567 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.040919093 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085226894 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.032622054 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.245172877 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286516806 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.268861962 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032306929 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.029828784 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.841495787 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302603642 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08288844 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.957484977 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.025491775 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115584273 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267521417 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042321342 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.710991062 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.734353539 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315464445 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.939948372 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043776224 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460441635 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473828921 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355910671 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.573674633 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260637428 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.579469811 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.915473842 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.402941116 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.029258033 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.471407345 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.4056319 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.027065767 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.581260064 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140749022 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.308054907 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.346287391 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.03872313 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876929043 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.071127603 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247776017 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689456368 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.966959664 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.025435472 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.082385788 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.025204503 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.153767818 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036195688 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.034296105 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966016344 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.850749501 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51986852 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.02938122 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.019541237 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.861299141 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.655297904 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137943056 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168905234 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.032398562 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.747438081 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.317275242 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.280420103 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.579501006 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.099767817 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.029622158 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.026503547 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.954766181 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2245565 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.407786723 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331338982 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.43109802 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.143920435 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030360782 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.241608407 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239169347 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.031766785 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195458511 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472706803 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144321517 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.75607271 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.708113064 seconds)
  done (took 1759.896644285 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.034949961 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.065027822 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.066732834 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.078325619 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.146055272 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.115059948 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.104946369 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.121860357 seconds)
  done (took 58.689518026 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.026319685 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.254875934 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.034954205 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.026547675 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.065580623 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.030260987 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.228482756 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.038967463 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.062575718 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.042769975 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.028837233 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.026723253 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.777638966 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.054539805 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.029392229 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.02338732 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.06027548 seconds)
  done (took 77.811970339 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.03110399 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.40561787 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.060339113 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.050076406 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.028180546 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.035972073 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.149091113 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.058432723 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.034972183 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.267153894 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.372999339 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.048321231 seconds)
  done (took 92.501277875 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.044878975 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.035705218 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.035393627 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.036204955 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.033330381 seconds)
  done (took 12.149375617 seconds)
done (took 2286.397283156 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.455425375 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.257642391 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.266084206 seconds)
  done (took 6.479701567 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.182011166 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.22944905 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.349174428 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.356244949 seconds)
  done (took 11.083042041 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.327694841 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.405659 seconds)
  done (took 6.696333287 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.409808394 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.059072425 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.434197122 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.037335247 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.0377016 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.037069752 seconds)
  done (took 23.081062518 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.037449299 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.044254033 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.03932053 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.04317736 seconds)
  done (took 10.122234352 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.016460009 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.862552902 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.016666779 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.034365302 seconds)
  done (took 21.887700178 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.787274723 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.438372231 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.780580605 seconds)
  done (took 9.969541801 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.55050409 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.878331473 seconds)
  done (took 9.389633416 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.29571586 seconds)
  done (took 4.25334348 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.070402994 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.313354328 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.558499798 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.552650141 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.63070679 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.883664248 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.36464896 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.275769829 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.492549766 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.49500116 seconds)
  done (took 26.601517875 seconds)
done (took 145.879991279 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.416239756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.417180438 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.239659444 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.425660032 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.275424134 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.237195329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.24759237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.40954855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.892047611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.879511881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.429858691 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.269742753 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.196850401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.407481418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.205738158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.405733499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.264496333 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.438072273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.077487004 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.277101702 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.260185006 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.008592311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.261712348 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.026435273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.269064111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.186409462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.583800046 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.41210797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.224915052 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.597305948 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.1939758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.432248191 seconds)
  done (took 174.833520068 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.038881217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.044537913 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.045313354 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.036717484 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.453046527 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.050631009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.040684239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.036451355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.393873696 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.383610962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.057401286 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.477800222 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.061737188 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.036200386 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.065356495 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.03818157 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.60312138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.062487825 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.058883421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.063696508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.061772899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.298837806 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.058730854 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.341837919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.546713417 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.058807207 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.037570557 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.062471332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.064441813 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.063912633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.068010588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.040711264 seconds)
  done (took 214.725572414 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.039471434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.044430504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.048134421 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.040269176 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.044952728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.040233099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.038270342 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.0398583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.650367648 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.689333053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.056628205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.045834249 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.046644275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.039319899 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.049875881 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.038683795 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.052500983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.051081027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.051863784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.05501674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.05926572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.709823887 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.05630097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.666830321 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.043160206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.046241498 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.0382476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.050540514 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.050040155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.044106337 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.045677944 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.042573797 seconds)
  done (took 226.014775751 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.248272447 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.049448494 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.051184151 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.990986855 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.051369652 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.04877526 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.998229414 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.24119815 seconds)
  done (took 20.660396817 seconds)
done (took 638.206065302 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.532743257 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.376145525 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.224753127 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.074321628 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.322846525 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.10597208 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.069535042 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.142121057 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.807480507 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.142736428 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.764951755 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.090670864 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.849381642 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.098429153 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.193020058 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.130902991 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.618827115 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.705132056 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.249746511 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.138986572 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.24843371 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.010584169 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.156044147 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.829039962 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.872282364 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.057901383 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.238840186 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.625207804 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.08299623 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.23669878 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.877117311 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.475264676 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.084287239 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.070922352 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.126813529 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.105408949 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.424113292 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.079038194 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.193238486 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.810895577 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.148418228 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.685309275 seconds)
  done (took 111.045251045 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.041492633 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.040465327 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.037914982 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.036710145 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.040703501 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.039713074 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.035932482 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.039315507 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.040088913 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.038535454 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.034795767 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.040734584 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.037939972 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.038777969 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.038330185 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.036193346 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.037764524 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.041508096 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.039941034 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.040291201 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.037545529 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.038171238 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.054254536 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.037894917 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.037679648 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.040435675 seconds)
  done (took 55.002675492 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.053615643 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.205148396 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.320729391 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.072059309 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.050162373 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.055829944 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.069339472 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.059514265 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.054948005 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.054323943 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.14392635 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.061244503 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.070102032 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.316530083 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.065547714 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.053247878 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.051627217 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.054952254 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.21184977 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.071892222 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.072706633 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.060710265 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.074409886 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.070499984 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.052545821 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.052932893 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.05982325 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.527138518 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.065540179 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.147405862 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.097000327 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.079431642 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.474588303 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.329677499 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.109821415 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.067806902 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.056818375 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.150034517 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.06166718 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.053498511 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.071279975 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.053812428 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.318215325 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.549009552 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.068542429 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.056114064 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.537668897 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.160759474 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.097404443 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.064772385 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.316309947 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.070082889 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.058002586 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.05690821 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.093375958 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.061212981 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.055447059 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.382280962 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.064445162 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.072283661 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.062695881 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.051103454 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.217629426 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.063371952 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.210074608 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.065614409 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.060366592 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.053470157 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.318509899 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.071561403 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.557847824 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.06247186 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.049856248 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.144459472 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.206273497 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.557403754 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.0608153 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.211173653 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.482300084 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.077457994 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.056224186 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.511689967 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.080405209 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.058578051 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.051738864 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.053846513 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.053140436 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.098329993 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.06738556 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.479973534 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.557909436 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.394319383 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.078624379 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.067177133 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.050440746 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.376309622 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.061047662 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.051965082 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.310664487 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.565710721 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.063440786 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.05798827 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.53968789 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.067920883 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.071691648 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.060570306 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.317782475 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.067637212 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.096199419 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.054168877 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.060728812 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.053212259 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.071179958 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.059729641 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.05337181 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.529784414 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.164652546 seconds)
  done (took 253.942896572 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.048699035 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.055976584 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.046544457 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.058322767 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.047296454 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.051404041 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.045465757 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.044706934 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.053768682 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.04607517 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.046844745 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.046715446 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.046549068 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.050295916 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.161786627 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.053770438 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.706147269 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.04881956 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.04596487 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.054029324 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.695326918 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.055972336 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.048424626 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.045109495 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.051201624 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.050248852 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.051760021 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.152374446 seconds)
  done (took 172.885193191 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.054942297 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.170004386 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.071726095 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.081708092 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.066105659 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.053950339 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.078088509 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.066973196 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.059609334 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.05270008 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.053091721 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.116069748 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.063672452 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.154364457 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.083838598 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.087337558 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.155447025 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.062304928 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.050798515 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.051765414 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.081811075 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.04959827 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.115997414 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.178690814 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.073739934 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.173773059 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.061534362 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.05672412 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.057191335 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.172947979 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.06876326 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.115005197 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.080745178 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.073012394 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.179567771 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.174046333 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.160480314 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.08607029 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.05665677 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.054376779 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.054088867 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.042454347 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.172891738 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.072540151 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.057450761 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.164256793 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.077533091 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.05758708 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.065710624 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.054870665 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.070942662 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.074451688 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.126325405 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.187108612 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.089736667 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.083309687 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.081522561 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.347629659 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.064599369 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.156800246 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.047960499 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.174558551 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.079159747 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.044688943 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.056249779 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.063896805 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.086246206 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.088802112 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.158971156 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.062875085 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.15591125 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.092383759 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.065151786 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.056274571 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.062569445 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.174170844 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.174597874 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.091826812 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.0938474 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.086299865 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.050105383 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.056285208 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.046674239 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.076149871 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.063483982 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.177323476 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.17789202 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.065833936 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.058904345 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.060291128 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.058673728 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.082049189 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.180895191 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.091559461 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.153961172 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.124672511 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.132258966 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.07154014 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.070922167 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.061822459 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.121392694 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.071404082 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.069431559 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.403258325 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.123776152 seconds)
  done (took 222.352071548 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.505874721 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.107275718 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.116147174 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.38147408 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.480817334 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.94138402 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.102460884 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.110116229 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.133163424 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.30169096 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.182573894 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.127561302 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.094525626 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.080608377 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.111294914 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.128121383 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.125742315 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.434197378 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.231618248 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.164101254 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.084680362 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.383646417 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.428795055 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.532102651 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.143098199 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.464381976 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.774234925 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.244497882 seconds)
  done (took 66.903106589 seconds)
done (took 884.09709511 seconds)
SAVING RESULT...
DONE!
