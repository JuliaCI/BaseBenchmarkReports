cset: moving following pidspec: 12660
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.567181629 seconds)
loading group "string"... done (took 0.528540553 seconds)
loading group "linalg"... done (took 9.634317013 seconds)
loading group "parallel"... done (took 0.171900339 seconds)
loading group "find"... done (took 4.5104127 seconds)
loading group "tuple"... done (took 2.09001153 seconds)
loading group "dates"... done (took 1.404188268 seconds)
loading group "micro"... done (took 0.19883172 seconds)
loading group "io"... done (took 0.521574131 seconds)
loading group "scalar"... done (took 57.183835884 seconds)
loading group "sparse"... done (took 14.073359507 seconds)
loading group "broadcast"... done (took 1.736202512 seconds)
loading group "union"... done (took 11.138984099 seconds)
loading group "simd"... done (took 3.789501847 seconds)
loading group "random"... done (took 13.611143698 seconds)
loading group "problem"... done (took 2.250594007 seconds)
loading group "array"... done (took 24.264738387 seconds)
loading group "misc"... done (took 1.145681296 seconds)
loading group "sort"... done (took 3.802497884 seconds)
loading group "collection"... done (took 22.232674306 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.688577858 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148368422 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.196771154 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.206472685 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.278048913 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.169071249 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159502355 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170474159 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.713260401 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207017082 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137335714 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.43675254 seconds)
done (took 6.341611954 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.264806854 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.239125113 seconds)
    (2/2) benchmarking "String"...
    done (took 0.186029944 seconds)
  done (took 1.13904938 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077947065 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159920062 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111362102 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096483768 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095433356 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111689519 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094276648 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111829143 seconds)
  done (took 1.500012338 seconds)
done (took 3.697642546 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.510746609 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.889383598 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.514770887 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.180503782 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.318099218 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.3074844 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265831713 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.222207082 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094711017 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085678668 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179880806 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.435245528 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.388775916 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.972428342 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069156892 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096235704 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.153165779 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.785895441 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08068701 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109389017 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.52823905 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213128691 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117605953 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.10592144 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187777654 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136093904 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140185428 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103253082 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.663510731 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133479608 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215812678 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08579294 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137830649 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166103767 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.218400751 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111086314 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67904484 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202681876 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097690658 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102556712 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68317247 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117805897 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206803737 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107669451 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068136761 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.163460066 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114733017 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080195293 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09577618 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102833375 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160766471 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.447471749 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109102063 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19368995 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094696632 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.700829871 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098262342 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275387736 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127203215 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094208323 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093145677 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088454739 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159488336 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095921655 seconds)
  done (took 20.237090025 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.167876219 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.186509556 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080162075 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159269886 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12137032 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100254043 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0854426 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08042364 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128301218 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182981359 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139826177 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192419773 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078176358 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091160991 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172966076 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231810055 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.129358978 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104959155 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091338182 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110071365 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123305747 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113915691 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093631938 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093066643 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17323018 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206411146 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109162481 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125021242 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090430401 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099224626 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144344189 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147337015 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094146842 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088964837 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188325026 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108743703 seconds)
  done (took 5.372256509 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243938092 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104669734 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248886741 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.200614717 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154789047 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186445131 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178001186 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.29707462 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.236424414 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.189030318 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183233667 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130863526 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097612758 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080689487 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081366819 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097609415 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.351959305 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149395028 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.19459628 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185424585 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098768801 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100225747 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.38194711 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103669836 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087610815 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112474422 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086571855 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064391539 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223107311 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115188696 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.04562972 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.107153725 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101781568 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134222669 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200559883 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126650892 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138688904 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096779202 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.106228784 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.206825152 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121940647 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079553278 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132812506 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117792508 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131754821 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10978516 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111354218 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223009889 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088688199 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131446775 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.016967455 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199666189 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.161927013 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086147876 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293124748 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.130057907 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102970911 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112213062 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.787727066 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131387739 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083131652 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079434309 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114638049 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080022674 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.453841719 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127296975 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.177045259 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084475878 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156057166 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099116704 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.122745476 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087692174 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102883345 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112421138 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087475975 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098291645 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088273278 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081270118 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109430304 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085808069 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.128686294 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087647837 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081689034 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159990338 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101678813 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108942091 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128380554 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092220511 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.105977039 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113667444 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099616026 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089840658 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.188397847 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098954524 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131376797 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11538513 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129174342 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.108452527 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.261819578 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086169906 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122745616 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102773402 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131386792 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102110142 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083937108 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09893392 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086557678 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080633855 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099934283 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148774632 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091323762 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098859475 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.090896232 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093851216 seconds)
  done (took 28.63966522 seconds)
done (took 54.964387715 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.421509554 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081889521 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081277504 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104397757 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082247631 seconds)
  done (took 1.563809473 seconds)
done (took 2.335543285 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314131546 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200041902 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088733566 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189901686 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087980345 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196950973 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183877181 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10269817 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.210710104 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085839258 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196031412 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0865456 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109111435 seconds)
  done (took 2.845908253 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104733468 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107772045 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103463353 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122793532 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086690631 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103017936 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121384857 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109458255 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10189255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114300211 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087432972 seconds)
  done (took 1.932391999 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101311634 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10451457 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093659246 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118942651 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086800734 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09979071 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11763364 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107335083 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099405546 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114794729 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087063677 seconds)
  done (took 1.904756258 seconds)
done (took 7.451047515 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.210515384 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.882638031 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191452724 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.244657786 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.356392412 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.296263169 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.610776132 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.201429385 seconds)
  done (took 15.897032499 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.207218849 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.115839095 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092942206 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09685496 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.112445285 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09865754 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097732492 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112286843 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09717587 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091825659 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.107324069 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093657028 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092141796 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092329735 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.113372797 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097173073 seconds)
  done (took 2.552375299 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146058498 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124782831 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117527863 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099731331 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.116344639 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100828814 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103056466 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117652114 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095405754 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096497364 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.121475112 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099582283 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098544705 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.111808735 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100203947 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.122695682 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.112314812 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100925267 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117909691 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118369128 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100634933 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097481594 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116921769 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100986699 seconds)
  done (took 3.493553706 seconds)
done (took 22.718496958 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147377861 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104016629 seconds)
  done (took 1.02893946 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.164130059 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.185425367 seconds)
  done (took 1.129427954 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114131235 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092104929 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138809854 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104603156 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092301668 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108572215 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11785263 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110204971 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093560704 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09387029 seconds)
  done (took 1.85210879 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09587656 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097715106 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123239949 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.168394436 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119512012 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094683051 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095814387 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113034264 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098189801 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092849612 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115991208 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110021941 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096695987 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129640114 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097292874 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.11449934 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101348234 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096243158 seconds)
  done (took 2.746057721 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092084414 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09379951 seconds)
  done (took 0.971629418 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095729336 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091753706 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094543003 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111066268 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092012971 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091978354 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109093293 seconds)
  done (took 1.47138651 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.524895756 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.235627678 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.371631737 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073949853 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125489309 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.446588883 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.104355825 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072602201 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09191799 seconds)
  done (took 2.867189529 seconds)
done (took 12.851788205 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092611176 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241436035 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.636957297 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114945062 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092273277 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165037034 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.315188751 seconds)
done (took 2.451529576 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349028816 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164410153 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08438662 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094086952 seconds)
  done (took 1.478803864 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0842141 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100874386 seconds)
  done (took 0.978323834 seconds)
done (took 3.253986429 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091103646 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.123564202 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.110234174 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091659059 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.09154028 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089566763 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.11042783 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090872413 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090730855 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.110168154 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.091005657 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090958279 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090204274 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106920276 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091306089 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090872995 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.107386688 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090736999 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090628011 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090434502 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107421737 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090563508 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089768743 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.107741792 seconds)
  done (took 3.16157778 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111219978 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091575381 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112258087 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095062204 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095566648 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112759823 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095739588 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0931271 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113041863 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09291868 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095140593 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.113431857 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094006727 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095697625 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109950291 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095997942 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095545711 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092532969 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112643906 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096014869 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093995993 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110778907 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095697719 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094862745 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113622815 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095047663 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093687056 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.112016474 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097168694 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095398943 seconds)
  done (took 3.807574542 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09902324 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088061355 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091102798 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118098813 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089809566 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09228185 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10651256 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093767192 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09232055 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090231076 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110880293 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091291397 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090871201 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110719173 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092847022 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094535783 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11898681 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.09159254 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091581556 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092510722 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112009032 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091193313 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091222695 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109692302 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091312156 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087895526 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090973366 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108847388 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091722118 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091175071 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112906308 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09545157 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091303903 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119331669 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094894204 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091776643 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.115873833 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088713241 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091891578 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08823614 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.107172457 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090704445 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09119689 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.115296306 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092416538 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092274593 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090527859 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110426926 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092036489 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092778845 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.10517273 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093248748 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093451106 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092312721 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.112352591 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090080921 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092224878 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106525788 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093616653 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090636656 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106125075 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088471951 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098706203 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090645733 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124822431 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097140359 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091271161 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111350759 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093860718 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09674158 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.112235694 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102590955 seconds)
  done (took 7.85915528 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115367752 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100986286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110471388 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093564301 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091558895 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09070366 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114809464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092414663 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092483835 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116067072 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092820942 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092478202 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111540379 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095595324 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091295202 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110463528 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099177644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091852615 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090491042 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112452198 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092732483 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096362769 seconds)
  done (took 2.999636279 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240975072 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099336384 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142060234 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124986513 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110250186 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12463398 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097508399 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09791798 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114102275 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102258116 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10188941 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114927898 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109512524 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11849915 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101908772 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101937632 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1138562 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103811449 seconds)
  done (took 2.925149236 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107317841 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093873339 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155203281 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094050447 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094657246 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113651563 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098669734 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112665813 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.114220257 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095720361 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099839066 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11208104 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094908464 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092963768 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112344015 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094875591 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093696144 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111619673 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101161312 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099405225 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116328298 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100706336 seconds)
  done (took 3.11664106 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107228228 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09392459 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129633582 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099091564 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092562757 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111094491 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099398012 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096048236 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.121390268 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095195748 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094895081 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092777483 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126736311 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095263323 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09809405 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112805153 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09449747 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094790914 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112128493 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093977258 seconds)
  done (took 2.869041691 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194713571 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129018377 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110413015 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117284177 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130560324 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109556813 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135588283 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110251047 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108749618 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138817279 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112738745 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109923297 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135334429 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115197848 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128077124 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117786205 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137231757 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118734752 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109930455 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128122247 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120190814 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109285884 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138137238 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111994844 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127369271 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109923733 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109932903 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133364018 seconds)
  done (took 4.267513663 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093404257 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094596299 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092147214 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.11044545 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092495816 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093089852 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091347433 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.113180726 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094198442 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091851273 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111654614 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09321364 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092370083 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091189686 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111921277 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093461952 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091456396 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110755335 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093187192 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094195205 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091503352 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112008596 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093356501 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091228674 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111706166 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094099439 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092508659 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09195472 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111216373 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093205467 seconds)
  done (took 3.742423341 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106882103 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103316547 seconds)
  done (took 1.023478308 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101016829 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107545298 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09261449 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112129558 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099955794 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092853875 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120358853 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099592623 seconds)
  done (took 1.639599835 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.166832942 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.192232927 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097551772 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12538542 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171299189 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182369224 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131164897 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.119520175 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093882667 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085912543 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.183999825 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084765583 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112445449 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091445626 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093127431 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120401025 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095625814 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101591897 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.120111613 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095668425 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09800628 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117332566 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096336996 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103789508 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107362061 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.098074279 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095479591 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.125139627 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090337014 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094238661 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112308563 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094496365 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096284403 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.118089078 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095900397 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.190842548 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101824175 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089381388 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115678918 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098762122 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126972789 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.114170815 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095778443 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092670544 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116095192 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0982365 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098291352 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.112477955 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088175003 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090431077 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.112784933 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090737818 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094727666 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093572702 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113518244 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100599349 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095814087 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110038151 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0903611 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089293754 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111943004 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091069459 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095315678 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116914251 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095912527 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095800836 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113998705 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094924589 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096123512 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.11482499 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094274782 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108536272 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114996578 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099647929 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098614777 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.11377144 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091742621 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099370143 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113626848 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095377048 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097906229 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142439383 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097417765 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088889837 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108442165 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101489439 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095348077 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115398671 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08910279 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102214905 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.114367954 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097140433 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089244277 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0908973 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.109136579 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097698782 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087345105 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114027858 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094731777 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098806996 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118993823 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094844774 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095847417 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11815595 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101442677 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093155446 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.179186385 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091674835 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.111414999 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098575191 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098948773 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087812096 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114515629 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093235028 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091378345 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.109487901 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099495595 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093776529 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.115149971 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09874462 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096512775 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.116155475 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09736215 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093941433 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109145067 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100302296 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102515317 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11401457 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097110134 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095482257 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095476431 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113860766 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099050352 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09147145 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118543529 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092161571 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094023515 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.114928556 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100995554 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094240231 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.110213983 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094103932 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095117957 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.112982898 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098560376 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095449508 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110196265 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088365185 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095179065 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110524788 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096850683 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103456431 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109435004 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097773032 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092167205 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122431776 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093412239 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099255753 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098338858 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.118956622 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101096844 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08662497 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.1115426 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098027813 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096416304 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110047438 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096872998 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09472363 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.12031194 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090283283 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098108951 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086712119 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.112525554 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099783945 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095683157 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.117089339 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090306327 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1312587 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124997432 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099849832 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093493236 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114364755 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099648575 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09326414 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.117830584 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100978193 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099128763 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111922294 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095672847 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099500376 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109878781 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098517697 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093645418 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114519655 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089159475 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096764678 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087158873 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.119276524 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097085606 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10002953 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.11943426 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097403217 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093346238 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123067086 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092187278 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09842367 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.107385377 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100385709 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104790483 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.119870861 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101807533 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096712144 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112213112 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097391704 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103140151 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095908985 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11655776 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097246294 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087872375 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108787348 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100193704 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097132553 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110694551 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095244667 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098284545 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115721664 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093683446 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088720825 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.125724193 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100889278 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09004793 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11444265 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092525122 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093357782 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120565307 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089013604 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091359492 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115489188 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10104251 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094894976 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094801396 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117947064 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100705283 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097392664 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116766338 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093598086 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102780558 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113304166 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097238708 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091399198 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.11718271 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090326279 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097292277 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095119456 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.112298735 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092123806 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0984344 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121750093 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101013496 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09342428 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.119754449 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.111125708 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100995609 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113811772 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102288985 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091869107 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.109073296 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093296991 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087995555 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.116753563 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092577222 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099723759 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094098216 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116328691 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099884757 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096513044 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113755012 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101055949 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124763657 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.091441938 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089044168 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111965157 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096981035 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091849484 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091688526 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.11765945 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097160675 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099205504 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118295083 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092502173 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096544277 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120412059 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.094432109 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101718006 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.121084169 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102438616 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092240755 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.119118195 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094584675 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098546307 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109194078 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095311409 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09442928 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11417739 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094290909 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094734832 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091444644 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.109496453 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092694866 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10066157 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114336911 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10073198 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094561818 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.114648322 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093647098 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091357246 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122084913 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095163818 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101197146 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.115220639 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08990193 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089558355 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102626256 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116882616 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100694918 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091870329 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119213173 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103507174 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099115837 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.116305867 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105737778 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103866827 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122489932 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101511223 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089496031 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113547692 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100843118 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096227265 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117857235 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099557854 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090503722 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116880459 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102926269 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097085891 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09397502 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.110988168 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097843768 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10132049 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118526085 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100890042 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098102838 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117517514 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092901532 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100352406 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.121551616 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09782927 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102884948 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114731504 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103008998 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092725144 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100977668 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.118217553 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090986038 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089476271 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113374634 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102706725 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090271677 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.119810554 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102554075 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092556524 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113955622 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10250611 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093073965 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098800486 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122303357 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093984601 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104746448 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.118053582 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094836707 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100324887 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120781674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091549668 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094503931 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114780943 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103026344 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09420815 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.119958823 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097767049 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100820847 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.119677384 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103269121 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102135505 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101829493 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110743783 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103286464 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098882571 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.120014075 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0932127 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093873263 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.11134723 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096310885 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102178463 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113737675 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105807922 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10250089 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.113757691 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09487489 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101958894 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113969207 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10510801 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093756554 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097333616 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.111682377 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098643471 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094201014 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.123486256 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092519249 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090622048 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122042134 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101859024 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100391619 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118404874 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104142787 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089788327 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.109313159 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100486614 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.09400923 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12612258 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100531157 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094969715 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114143608 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099545958 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098195253 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102280066 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.111797112 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093738172 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096540579 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117773874 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095567387 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091532441 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.121806565 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096244 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097272866 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115385313 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09268183 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094597272 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123509532 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.096434055 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092516355 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.114392866 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105247689 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096248924 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093858691 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.112101061 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10250085 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.120412343 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105970412 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094367213 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096711019 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.115942862 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099885273 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102762627 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.115243855 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098296151 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094546461 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1230131 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102484531 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089382115 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.114133385 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107335363 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101380768 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11812205 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099645523 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095783124 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122909654 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107373047 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099149099 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089324862 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111642254 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095454745 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090103276 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.120119104 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102161632 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095182232 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.115184536 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102083545 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100334534 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.121328474 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100730369 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090930243 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122375704 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095383864 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099165451 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0909379 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.112742266 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099693677 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100907875 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11630197 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097740845 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098102229 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.120653046 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092625094 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093788476 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119916603 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102069978 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102488948 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11561455 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.097133101 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102319419 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106328407 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.119937067 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096310138 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103550253 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.124043557 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097898312 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095909961 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121730299 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10274658 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098997984 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.124612469 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094976154 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095758706 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.125892293 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104657069 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105147325 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11822648 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.092600067 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100877798 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.115882117 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092460111 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099840324 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124376998 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105485922 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096629234 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.113053275 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10672534 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102475108 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116318809 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095959142 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095938476 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.121010209 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097699746 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101287812 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093099219 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.125407153 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103976629 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102094223 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.127143104 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092910838 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101938381 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.123157552 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105228957 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099139641 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.113158542 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092909035 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100562186 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103343779 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.125582144 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101585628 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100883538 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.121937248 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098945524 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097211223 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.115699095 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105502508 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102841604 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11859511 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100017935 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09561495 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117309839 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099805029 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103737132 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103709044 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11921222 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107498436 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103371211 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.117151194 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094969469 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097751424 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.122002616 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098814059 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101787058 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115338567 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093026679 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104128605 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124039693 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098979619 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104619911 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124715396 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.097354604 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099460228 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104460756 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.124173289 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099942683 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098445844 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.122492522 seconds)
  done (took 63.071969297 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148124653 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105359421 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120364838 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099780124 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116390696 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122697705 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100091257 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100577229 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121236233 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109860673 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099110859 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120715355 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115802274 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139225524 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118211604 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1101869 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119776458 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101802247 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09985602 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120934663 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115724329 seconds)
  done (took 3.267703739 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117551305 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111792254 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131275007 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113279106 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107030132 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132036191 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110066464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132639504 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115940679 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107706375 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135821715 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111703914 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127373895 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108654562 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107497817 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130103971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114475075 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10704796 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133747796 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110776141 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128980581 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111900272 seconds)
  done (took 3.472157511 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129795091 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10243561 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097459874 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121555132 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103818345 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09921354 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124625279 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101509112 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108848111 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115591605 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092756433 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095852906 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098632515 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121874727 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095760985 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099824586 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130579522 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103689654 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104931912 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.119965316 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.093349199 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.10034619 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101458158 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112828097 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106128786 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104917357 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120989152 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103807791 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091340118 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.123208705 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.10207253 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094177257 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09076201 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112525332 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092030709 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102534032 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123170921 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101565877 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101348957 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091977271 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.123507415 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10446805 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091151457 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.122302692 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101453886 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094324289 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.12567481 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102742297 seconds)
  done (took 5.971390321 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130076882 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166162729 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104479296 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136808561 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137697744 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109698422 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101918736 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138809765 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101666534 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.127292768 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116623661 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113112032 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.129653392 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108598775 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102130595 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12920381 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105801121 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102176805 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129478985 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104111272 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.128452585 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107380304 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11316481 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133164148 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106826344 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103370298 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124420017 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107773787 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11146031 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130688228 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10844788 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107317083 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.136520668 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10296014 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123778317 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105365693 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115340788 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124583059 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106762931 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101577853 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124131304 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10916474 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10588987 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137094885 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106361521 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105831999 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126455983 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102152476 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111996737 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.126453955 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111815287 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.136114255 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107543547 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105449474 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127550621 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115450653 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104042047 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124082397 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107030688 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111843375 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.122985996 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106746696 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113804075 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.126171787 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109986954 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133374507 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107292219 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106866933 seconds)
  done (took 9.163013383 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135993942 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108407404 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137912706 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115024027 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107282494 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130429805 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109007231 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.128540358 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109626971 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113394482 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128688259 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.226065403 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.128558595 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113085516 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129655751 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109424682 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107521971 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129706114 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110130454 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108191527 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128853345 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115962169 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108367497 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137031121 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118866692 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124954259 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109303416 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107855553 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137009743 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109602336 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118230045 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129805408 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108048735 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135236875 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123328178 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108685879 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123748156 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10867901 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108034818 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.131043409 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105408948 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115094828 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130389184 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106377025 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107106136 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130792941 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115822776 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140193776 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114244743 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113669023 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.13117501 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117953572 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1296561 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109617236 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115292488 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143981897 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117051875 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138024732 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11079795 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115875469 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138322301 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123981498 seconds)
  done (took 8.425648237 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102425942 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102702376 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100032505 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121885795 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102735507 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100280997 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122642847 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103420208 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10141616 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100981721 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12270521 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102934941 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100630881 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100598344 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123797306 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101816432 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101040486 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.12233273 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102089739 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10103066 seconds)
  done (took 3.016134906 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112423488 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118514142 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122838921 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109787762 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104126025 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12897685 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103632173 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103320353 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103383939 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126345025 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112077243 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130681224 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105064615 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108715713 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132949666 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109504908 seconds)
  done (took 2.712323334 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122387048 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118458928 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.210640247 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104853908 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127709492 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110587765 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102902988 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129027537 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10298165 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109377301 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129576035 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108230525 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103831534 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.125952337 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105089455 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10699967 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101782963 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12930129 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10373259 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.216909017 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107492031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105101668 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128100141 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106717706 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104715363 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132262193 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109689406 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103535332 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127701145 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106219569 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104950305 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132543028 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104506171 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107972591 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.12619712 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105162646 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104194165 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125244633 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107997473 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104255355 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.127005721 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106190808 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104524945 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106286573 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.124067124 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106324391 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101973132 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131066774 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104770386 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10499573 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.127061721 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110733063 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107587027 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.133321001 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110848436 seconds)
  done (took 7.314238551 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114839176 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10605856 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136250246 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104764548 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104977108 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105215817 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128415955 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107652993 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10526037 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125089783 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107930296 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10539835 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127068731 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107149374 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105305766 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126946871 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103371384 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104842127 seconds)
  done (took 2.912150328 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110053482 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104215346 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10805733 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126265049 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104982278 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103558015 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124234816 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103739765 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102963324 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124133161 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104860096 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104428649 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102534394 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126060098 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104350348 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104081392 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125981395 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104621024 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104257261 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124200285 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105790819 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103679485 seconds)
  done (took 3.31456552 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114981326 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21420157 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110430129 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.221864378 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101110685 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122971157 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111659949 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.102536856 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140311809 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101602205 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100169788 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122377842 seconds)
  done (took 2.452929568 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133636923 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140417513 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127366624 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105942714 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113128357 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130926253 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10938853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108344211 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139616191 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119621185 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131437194 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117663622 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116361905 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139527384 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114496495 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135073806 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109680572 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109105943 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127182941 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126471587 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108444853 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138388628 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109555426 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130981208 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110649926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117633293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138696306 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119686704 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129776496 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119940717 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113303566 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130600923 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118721168 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118656963 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127786321 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117178163 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130111181 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125011885 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113504633 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140342185 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106309024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134427809 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118657011 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113772654 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140400093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109782361 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114081208 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131240458 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109375519 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153999936 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113917533 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115878493 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136931663 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117661382 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140414921 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129862391 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141924734 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118807711 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11349161 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141472697 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11851352 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135608301 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118191544 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141566752 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11679529 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1171255 seconds)
  done (took 9.053900949 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144742034 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106063008 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132074576 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121890156 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138271406 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111736922 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110305014 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13180974 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111476845 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106361117 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17456539 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110776046 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137983447 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118830462 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109131464 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131940905 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111045078 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116993628 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129407496 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129612813 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131757069 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117582867 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116810099 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139773261 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122647518 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135905755 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111160284 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109855936 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132814538 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110178288 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115034598 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132411507 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117776941 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12708317 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119459786 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109745937 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130546236 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117007384 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109652644 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137045612 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118720932 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146774361 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110810035 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109900225 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144811961 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111511489 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109900178 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132671583 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109280872 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105979029 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143156537 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120715074 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144129735 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118324036 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130998216 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111513924 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109633136 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132452522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110828862 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115014838 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140600715 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110628416 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152103266 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112358159 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109375951 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139456502 seconds)
  done (took 9.030009282 seconds)
done (took 171.384529919 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175539408 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215796103 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.19820786 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159189209 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095962128 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.154209815 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129338377 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.198904972 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.098197121 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096869098 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094807852 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121829371 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163094191 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096143051 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.12008035 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099552589 seconds)
  done (took 3.108749472 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184272037 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.334325094 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11156322 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122952506 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102835632 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100956082 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123739614 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104188712 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100346653 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131623011 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101315249 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098151968 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129781056 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098581216 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100622722 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123220145 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109284108 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100542658 seconds)
  done (took 3.181497385 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121573018 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145889343 seconds)
  done (took 1.177132892 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132657974 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216937097 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.284401147 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171648494 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121612517 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142348683 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150909229 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135771432 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192363232 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13564999 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113924252 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098604976 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149937225 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107227435 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139369227 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100530295 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12913336 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137562693 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117444248 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101695409 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147106432 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106013314 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107122455 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138041559 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180522284 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136434241 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10555396 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103813482 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126969682 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115170647 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106547608 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141412043 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113098437 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179625606 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10427927 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17711944 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129541602 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102607371 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114673477 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.12316295 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10605249 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105438447 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137420882 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101493561 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103891504 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130588102 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104974614 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103869595 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132602867 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109939088 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130451886 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109694018 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176123014 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109123132 seconds)
  done (took 8.003387445 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.868824934 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142368132 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100671711 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.015331214 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146466778 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114905188 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.85729437 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148858414 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251479827 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.885247748 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116976453 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108463803 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260278607 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256734946 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.286223133 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358949377 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.728118798 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114171333 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13003402 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164360424 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108761228 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146606099 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12104754 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.521853184 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10186724 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100571022 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132126705 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109644565 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17796956 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102434295 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128419077 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172705665 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291543144 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208491864 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101159445 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123018602 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101182104 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185323628 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271596934 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218368431 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.192878692 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099933191 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102122924 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129429886 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121499393 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099374948 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177725268 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190771488 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186426247 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107727891 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110072828 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133931547 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108427519 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178017708 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098992289 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357412531 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.379822155 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103889214 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110140204 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135439082 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266540945 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103578603 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233209696 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149021567 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214995965 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103081223 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.853207832 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184405061 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102155676 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106088422 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132070143 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108617446 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108072661 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191193755 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.50354836 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114162091 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106070773 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124132948 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235019057 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102342784 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101278383 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181765336 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101849099 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131693127 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113168704 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132005189 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16650586 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269667582 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111566725 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133409485 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107008081 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136116694 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.105003201 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233726517 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227705123 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151801832 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22990741 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130560109 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.15760086 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184695156 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106381714 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188155845 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131690521 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11450002 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108568387 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.244101483 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134628608 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103992317 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129642181 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110618301 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158244133 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106179369 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110553397 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186973818 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.557887308 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184834452 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099597796 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10671141 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133189587 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156999578 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131825295 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263985301 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111945933 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185995653 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108683739 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.12201837 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111094543 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181052573 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110545623 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132556957 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110245008 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111525066 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278916657 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219606303 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131597055 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252362388 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177613061 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107192952 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191789182 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132862659 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16494945 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134018642 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10995068 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102805522 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82864441 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138379555 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109914268 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129847186 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186441781 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101470517 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127634029 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103228625 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098482824 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817500292 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130816871 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100778376 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103729617 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129289385 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111539757 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110226262 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130497002 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.154709109 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26514686 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111972303 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109590154 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125924202 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176033231 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.105124224 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10245146 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102508117 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126413027 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111615721 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106777792 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12957991 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188228105 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155755103 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226621499 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.636809343 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.126154845 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103167117 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238625303 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125525606 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326702891 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112294973 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233618843 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182822522 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099353116 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.380275671 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162268719 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20780949 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106871739 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189216395 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101073927 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132166829 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155088502 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.126905361 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110023747 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176416389 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115711896 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133347477 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.276802167 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103437321 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251340651 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10163525 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190132573 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104851128 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129775081 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328667467 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103753582 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117027639 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179110703 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106851452 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126894143 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.676039404 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104120435 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113988045 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131228874 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233855278 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184250497 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112415579 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111962102 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134637759 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178725107 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210146932 seconds)
  done (took 47.880238498 seconds)
done (took 64.249525196 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270026368 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178789174 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.281419044 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180074957 seconds)
  done (took 1.90959621 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.27367608 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163455247 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.257899912 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10056884 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.263445651 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100353996 seconds)
  done (took 2.090536204 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.18047736 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172975514 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149132637 seconds)
  done (took 1.437568575 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203198929 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2178927 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.330807527 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236237109 seconds)
  done (took 2.007010852 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.297792254 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121524055 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127301442 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.238312748 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.25374069 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.213063536 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126298276 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180720324 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131391173 seconds)
  done (took 2.665999717 seconds)
done (took 11.04470315 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.427325379 seconds)
    (2/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.256966232 seconds)
    (3/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.243000442 seconds)
    (4/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.40191425 seconds)
    (5/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.235316481 seconds)
    (6/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.400121963 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.221412298 seconds)
    (8/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.291387845 seconds)
    (9/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.211907438 seconds)
    (10/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.176248405 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112747574 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.356872257 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.139040934 seconds)
    (14/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.232625644 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.227439922 seconds)
    (16/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.113732413 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.199207497 seconds)
    (18/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.174345006 seconds)
    (19/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117274689 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.215160776 seconds)
    (21/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.25796037 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.143042224 seconds)
    (23/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.130150433 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130497774 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.14521222 seconds)
    (26/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.106566112 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122324866 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.144309996 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111877173 seconds)
    (30/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.324305135 seconds)
    (31/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.140124925 seconds)
    (32/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07810414 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.144650873 seconds)
    (34/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.282238126 seconds)
    (35/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.087523037 seconds)
    (36/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.309181813 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134470853 seconds)
    (38/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.374786164 seconds)
    (39/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.198950792 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.103866444 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.130214553 seconds)
    (42/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.177847439 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.138767137 seconds)
    (44/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.113376376 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123940784 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.249998048 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108324922 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.197251747 seconds)
    (49/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087290779 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108751525 seconds)
    (51/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.352724162 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.1112747 seconds)
    (53/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.092877954 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.133216018 seconds)
    (55/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079381822 seconds)
    (56/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.171725834 seconds)
    (57/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.103018076 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12353657 seconds)
    (59/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.286075847 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105221581 seconds)
    (61/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.139226704 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.129470564 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.195102801 seconds)
    (64/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.084170525 seconds)
    (65/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.134218823 seconds)
    (66/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103819719 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103451632 seconds)
    (68/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155944254 seconds)
    (69/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112868497 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105853317 seconds)
    (71/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.099458853 seconds)
    (72/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158004665 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.113221687 seconds)
    (74/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118232059 seconds)
    (75/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.163675576 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.106593878 seconds)
    (77/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078758537 seconds)
    (78/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148398388 seconds)
    (79/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.291532762 seconds)
    (80/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.196746828 seconds)
    (81/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109619045 seconds)
    (82/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085719267 seconds)
    (83/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.147847712 seconds)
    (84/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.164003544 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.121846135 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148461905 seconds)
    (87/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.138784414 seconds)
    (88/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.15211779 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10680193 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.150010698 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106199888 seconds)
    (92/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079425724 seconds)
    (93/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080299276 seconds)
    (94/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.134190122 seconds)
    (95/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136028164 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.113145588 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203041954 seconds)
    (98/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079824989 seconds)
    (99/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.17673844 seconds)
    (100/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.135296807 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102149058 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11214741 seconds)
    (103/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.164933418 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080557129 seconds)
    (105/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081718105 seconds)
    (106/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.0852945 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.151931943 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079481692 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104443625 seconds)
    (110/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.085507899 seconds)
    (111/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.172906554 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.142791107 seconds)
    (113/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.08140091 seconds)
    (114/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.086316312 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.218115368 seconds)
    (116/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081850364 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111634066 seconds)
    (118/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.103102306 seconds)
    (119/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.147113791 seconds)
    (120/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087118854 seconds)
    (121/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085896788 seconds)
    (122/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.166558832 seconds)
    (123/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.08246812 seconds)
    (124/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112097072 seconds)
    (125/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079430563 seconds)
    (126/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078580197 seconds)
    (127/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.110609241 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.103357082 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105752852 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.129493959 seconds)
    (131/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.167391036 seconds)
    (132/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079384633 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104486213 seconds)
    (134/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.160436943 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125914083 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12544963 seconds)
    (137/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155246023 seconds)
    (138/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087395098 seconds)
    (139/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.081761206 seconds)
    (140/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079486273 seconds)
    (141/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129978827 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113899848 seconds)
    (143/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082856744 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.130001561 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083362314 seconds)
    (146/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080949645 seconds)
    (147/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079600603 seconds)
    (148/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130497775 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.106094675 seconds)
    (150/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.08300206 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105450608 seconds)
    (152/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.086049841 seconds)
    (153/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.109812651 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.107012647 seconds)
    (155/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086868777 seconds)
    (156/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115188722 seconds)
    (157/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.103602109 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104285883 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080183716 seconds)
    (160/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.088320517 seconds)
    (161/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085491261 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.127420661 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087054346 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112684599 seconds)
    (165/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157294116 seconds)
    (166/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081550026 seconds)
    (167/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083371581 seconds)
    (168/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.106133066 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.127836909 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128188775 seconds)
    (171/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083016405 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105610457 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.136327052 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.088051896 seconds)
    (175/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.134385945 seconds)
    (176/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.138423777 seconds)
    (177/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112991417 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08619887 seconds)
    (179/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086896543 seconds)
    (180/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.108313194 seconds)
    (181/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116497582 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125975497 seconds)
    (183/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082672733 seconds)
    (184/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.106238321 seconds)
    (185/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088108301 seconds)
    (186/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.086685251 seconds)
    (187/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104021655 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.130476454 seconds)
    (189/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.087903994 seconds)
    (190/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080054345 seconds)
    (191/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082202721 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.087151565 seconds)
  done (took 27.524511456 seconds)
done (took 28.462981379 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.231423775 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131580632 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113275046 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112309237 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.2346505 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120246514 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155219771 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114858903 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122992153 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138878515 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103774299 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126075467 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138861244 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206445172 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142832524 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105159296 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104249175 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148870557 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128799139 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129031742 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.23707778 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105640442 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.149776383 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104548322 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236372518 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106291384 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.13706527 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115771283 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127203634 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113258231 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139199749 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10523033 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128173481 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.155420433 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105156663 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113493133 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129611885 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086992805 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115016881 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.137522198 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127891088 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113908431 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.136947906 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106974316 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114100907 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.136963457 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105094528 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118687002 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101816431 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.139695361 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10690288 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129345149 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136591987 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104326558 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102893754 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129728723 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125984222 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105096263 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.151310178 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106060521 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105618116 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12760927 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116960894 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105188478 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.137039715 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.105735762 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114935378 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115968393 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.135943342 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107878068 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104872033 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136310633 seconds)
done (took 10.251205347 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110082865 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14919446 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.235512621 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.236680151 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132882947 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146719307 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120096668 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128180699 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143545743 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123717748 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141258113 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162232594 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.240839399 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122111884 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120874081 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.14252584 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116818891 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113664648 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.237585623 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128132483 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156467167 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120097859 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15624722 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122843362 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.109068608 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.158023759 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112209854 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117087271 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132491446 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127561548 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.15310087 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109904038 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112647191 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.151010737 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127077641 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11935648 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.14548266 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117755649 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109186153 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.132293998 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11816911 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126122152 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.133657657 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.122007435 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117152223 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.148391667 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117778747 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120759998 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.13432313 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117511388 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109663311 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157720277 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.122153492 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124733295 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.145397723 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121930493 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121662051 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.145114378 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11291481 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121021452 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.13324442 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109837104 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109763424 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154736368 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.113575096 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120837596 seconds)
  done (took 9.895989759 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127679375 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138720356 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143459151 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.121230397 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114008272 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127015716 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10301465 seconds)
  done (took 1.864162128 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10430956 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.245392164 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218835137 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.243728998 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.243186279 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.256587393 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128629176 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103793981 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166449974 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116230022 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247633398 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.273639809 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114976819 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.147059537 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.22348365 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130594011 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.22261864 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130431828 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120075765 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.24807856 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122483511 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.163033803 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118467799 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10536673 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.241454537 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105774696 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.293786401 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.150048326 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114896775 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119745998 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146033577 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186171263 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.242991436 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118193089 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139577967 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.244145703 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.216410637 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.145686737 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.231466671 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.1356147 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.241418097 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119500107 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120749948 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.146188137 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121062929 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.233941497 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124642836 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.121165992 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.145572936 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.224351215 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.143729325 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.244228958 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118709234 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119526709 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.142022874 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123359028 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.1264507 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.14571485 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.226697123 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148155588 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.219722067 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.247808516 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.245208481 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.248263914 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128892684 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.249176653 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.233206611 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119757224 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114277635 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.147442655 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248866946 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11974363 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117010951 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.239649618 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122867955 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.251095867 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.251234309 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116609697 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.145233272 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.109862535 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117360007 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.106151977 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.239437655 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.147283933 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119781026 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123143101 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145059171 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120381091 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110634973 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.156980447 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120035345 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117095794 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.149183414 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120042167 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145048492 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.225791013 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.143367771 seconds)
  done (took 17.240379143 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108511228 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107244188 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.11118799 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132185242 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106907709 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10739423 seconds)
  done (took 1.686772139 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14438568 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120981556 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153462579 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121536993 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.170161741 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.252043693 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260469028 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11340204 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166292306 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132093175 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254509335 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.258169163 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256275819 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124127784 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258348996 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122427934 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.263630896 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11789428 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.15514564 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119549142 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11974694 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150062727 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11984567 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.247492167 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121932014 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121741174 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.141664351 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130336064 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127009165 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.160345672 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124066459 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145320901 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.113951815 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115633744 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.259785697 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112593547 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143812686 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123789765 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123104713 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147631614 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.258850116 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120163519 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126856961 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150268848 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11607767 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112144686 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.1494429 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114423317 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.261240248 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12342573 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149823719 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122708522 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121632685 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149611331 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113639883 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114756752 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.149463704 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.23503029 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.152864956 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112587412 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120881374 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.147655982 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115177035 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.151222223 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121770711 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122031265 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.138409899 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122609357 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117902585 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.145842928 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124077284 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121112228 seconds)
  done (took 11.934964278 seconds)
done (took 43.602264707 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.721722682 seconds)
  done (took 2.731448784 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.948408078 seconds)
  done (took 1.961786588 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.513282151 seconds)
  done (took 18.559327873 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.438582618 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.488625887 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.129534782 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15437046 seconds)
  done (took 3.22514365 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.828931296 seconds)
  done (took 1.864421716 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.326546082 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.241569684 seconds)
  done (took 1.586968296 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714335847 seconds)
  done (took 1.745499027 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.525771851 seconds)
  done (took 2.542758278 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.290219285 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.243763634 seconds)
  done (took 1.56701942 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.649006365 seconds)
  done (took 1.683012872 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.249227397 seconds)
  done (took 20.285695349 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26239344 seconds)
  done (took 1.2962998 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287244518 seconds)
  done (took 1.325214357 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.489472765 seconds)
  done (took 4.526071754 seconds)
done (took 65.925626034 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117283543 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.120612632 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.119019293 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143216456 seconds)
  done (took 1.523928652 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125857668 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121175603 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149846598 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120117805 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127610877 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.145983779 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121308683 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122940227 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119641344 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147965511 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121356811 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119369628 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148477232 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121287889 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117014716 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149001141 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125134442 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121197196 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146483585 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121337685 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120817134 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.1473986 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123991301 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123166966 seconds)
  done (took 4.144223363 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117053982 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111592264 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113667647 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134443209 seconds)
  done (took 1.515748327 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128861222 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133195547 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15500917 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128016705 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133049581 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156579937 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119567247 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117817172 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14590443 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128627435 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135751418 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158383263 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133004919 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.147369293 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13170637 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115682733 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.12165539 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157546814 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127284633 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.153991476 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122996047 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126469092 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150639012 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129708559 seconds)
  done (took 4.294109372 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194589411 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131282381 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176362827 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164245513 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.179624818 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118503774 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147398771 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151874173 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127616474 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.148027831 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.124003433 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166443759 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152643778 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123718096 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119636932 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152042769 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131853244 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.150412874 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.167956333 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125883679 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152111856 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132046883 seconds)
  done (took 4.282149389 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124433953 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11216088 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131725264 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112013789 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124167793 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.139714911 seconds)
  done (took 1.790536519 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111020887 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105483894 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10653969 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130178731 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11014997 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105477206 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129914629 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106902088 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105697601 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105652063 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131736565 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10532062 seconds)
  done (took 2.393343188 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206495985 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148511592 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257222562 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.429775327 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165615442 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189775819 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281656425 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190822801 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205707152 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138928856 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215605204 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164700839 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182809505 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187862837 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169356092 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160276357 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195386366 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208697782 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174282232 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244383659 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158779081 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206969521 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190905122 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178660121 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141225115 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191852509 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121450857 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157496591 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170793054 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195812185 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203547414 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152963826 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142133941 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219825809 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262016138 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206921239 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270994981 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135159787 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197952094 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191590558 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260488575 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168965826 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222328076 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155804234 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129892443 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214007164 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183022495 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183855587 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160842516 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145959024 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214171804 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180623754 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199696208 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137762352 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323734523 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163036528 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1456821 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20749003 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19032615 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231335455 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20658762 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125068767 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203649769 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21744785 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217130524 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170123267 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165679559 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15468882 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166178949 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233171467 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211833542 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161569765 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237591333 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161873771 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173261656 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198170168 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157455568 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233294735 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199266364 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121761949 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152727754 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165072331 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12778696 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.216385966 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123464103 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244044035 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133256518 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342475519 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208129663 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156647139 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190077076 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161759134 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191652047 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149189573 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129582025 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144708531 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.189201705 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161577613 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156293585 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159719949 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140046238 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.15331953 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154650085 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.15176951 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170315475 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160703328 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165544459 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198527033 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132525094 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209181944 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150922978 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.191664989 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169937563 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221652198 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131384601 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161591835 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249424254 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172235036 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.162826674 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176331967 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224390533 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150332671 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163768699 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165088223 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221858612 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14404264 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228331982 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167193044 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136795651 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.166891783 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174083976 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18843905 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161849029 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155286965 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16742891 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220191199 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127807833 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166777347 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183860693 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161897391 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12646866 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137350999 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163669436 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.144185311 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.176886454 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140054289 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181798124 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169581681 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192793249 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161352378 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163191624 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174193192 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159471278 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169991381 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177231703 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122701304 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204814267 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198865718 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158475612 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181492352 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190328425 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210686322 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174469812 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157706104 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183900325 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155134464 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.1233919 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162850116 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197468426 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19379811 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.188960839 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208456257 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194152583 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.164126974 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178942311 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198547558 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185870053 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185747054 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.146618684 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200962979 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171628967 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.149849142 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.126488002 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128758259 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165190756 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134442673 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137930094 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209980409 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194658227 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204592644 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168112365 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165371912 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193180097 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152555386 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163569889 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202828874 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140316682 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217296214 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190775733 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209228177 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141760118 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191219402 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121630993 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155356671 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136489027 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190013958 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139161846 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136954182 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170267217 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218609453 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174979389 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178280977 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218270114 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16832394 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23258074 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122809109 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190512866 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171457242 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197410372 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185324816 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136533674 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.188029309 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221969054 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144168742 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220858614 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169121492 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20833751 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225121886 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165355147 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15854106 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150419923 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188956854 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13926874 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191125103 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147504616 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131849226 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182193645 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139204515 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169525191 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215323507 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148124132 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206919634 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.1596984 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201047401 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126110789 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170637101 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175253738 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176352881 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106253004 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171407657 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223406926 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178693433 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159037589 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202968015 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131116143 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.344020468 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187743209 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207817261 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136431698 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167778496 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172396643 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189511867 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190598868 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186340289 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170442663 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209063499 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198633406 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.14395252 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160885007 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149799696 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18096937 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.140354263 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.186009051 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162260355 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.173192311 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189835298 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169455712 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169679864 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205511221 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146283857 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.180793305 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139867781 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255696012 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195719809 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175887386 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.192386874 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.167593299 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212975478 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125594216 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154616213 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135997161 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185476363 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160369734 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17782092 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196156536 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212794629 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20370307 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165232611 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169705695 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.130064705 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168289864 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178505081 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214106058 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137634043 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165625351 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193181724 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.156894646 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132479286 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188096714 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288515385 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177102938 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174946733 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.133816885 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282378307 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157098521 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134322587 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18778085 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173175013 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161448431 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184242056 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175565908 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169809706 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16491464 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165368701 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206695356 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184086905 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196735364 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178338521 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.174876755 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162090902 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190753589 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205305747 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150568467 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175689843 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161998004 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223739531 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178531393 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.161059354 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170669178 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19727815 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171763689 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206110671 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139700169 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214078624 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128544174 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195407357 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14083151 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153256664 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162943015 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194270248 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132695721 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205279361 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172002066 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161089501 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130145359 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176536073 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166709324 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168034382 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132107344 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216922287 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.13036934 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210431039 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209094584 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159034541 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16985315 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174190672 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132103434 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139234082 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174276958 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132745373 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.199857314 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18314913 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.157971378 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178559399 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196196761 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166190602 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186743074 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143900259 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.294589455 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128684806 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22144598 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151975124 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227259059 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150563226 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205953444 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197318517 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153253327 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196172696 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149823041 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.24844843 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166772939 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.197069075 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132457351 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172636416 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140418095 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134757955 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183416443 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169361566 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171495283 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138038606 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.196656519 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146010635 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.1751385 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143799995 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22956429 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152604644 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218437234 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215495857 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139679373 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20257432 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179133301 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157722254 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.166755476 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203389844 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144848745 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181444729 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135454031 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138174972 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243958865 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126258692 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189770486 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202448958 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171026387 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200298092 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.137660593 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209022807 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143457471 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205776646 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128580612 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152418657 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198297653 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135973053 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155980139 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173110248 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191498946 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165441464 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171692617 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176014019 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223343541 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125390667 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135246027 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314288846 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191608465 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195651455 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165355566 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138490467 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176047492 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162017934 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.193468283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175455154 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.157724959 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131429381 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146613643 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183285197 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142863753 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198213525 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182125661 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190890723 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213860467 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13803862 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253592787 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172298927 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171730753 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.145949292 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131027594 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142452991 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164577602 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14406778 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209927534 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245084288 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163581258 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.178213366 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136283785 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.154285095 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133626774 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.648518267 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180874205 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168696359 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176652389 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104598941 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168803455 seconds)
  done (took 86.712451456 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162366493 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152743616 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16915217 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222970214 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195897389 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291404142 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229952042 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246964886 seconds)
  done (took 2.793079159 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121235188 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160045926 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143352016 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144794086 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111853548 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.482680053 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160612784 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123397302 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162810879 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152896992 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136846353 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.571530041 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119357596 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145949818 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123935551 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136077164 seconds)
  done (took 4.115796797 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.649130708 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523974091 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.875417491 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.277600834 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.260492168 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.205490794 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.744583275 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.20225811 seconds)
  done (took 11.864603244 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.168245466 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.16503806 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.44913185 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.308777156 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185328553 seconds)
  done (took 2.409896539 seconds)
done (took 128.866552645 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125809139 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125211391 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126202765 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15643852 seconds)
  done (took 1.650429855 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196061137 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09219455 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094707961 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119625862 seconds)
  done (took 1.633136789 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.475484992 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093236338 seconds)
  done (took 1.72402801 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154545477 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139017381 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.170523415 seconds)
  done (took 1.608166859 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13789438 seconds)
  done (took 1.272478492 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128072698 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12711231 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.271883559 seconds)
  done (took 1.66363092 seconds)
done (took 10.689011842 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123043895 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.927064322 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434969912 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136110493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713954174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429088334 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.397801668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177157153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176246693 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138590013 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13452647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691122726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.414102341 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.876028928 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.371755541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.905844367 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698684907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114995458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147282405 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115284605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.377200257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139414267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114756467 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114141492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718002592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425278909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111895586 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.915277486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113076105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116542341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.429743406 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113894397 seconds)
  done (took 20.939145209 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11538469 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170284737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148225657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114997936 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115324023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.14073416 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126356363 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125003868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205965176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111791828 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162511309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112007368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117754809 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140986388 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137930315 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112937086 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.142428706 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115879811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121593145 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141265571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135328887 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112487627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141421108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115231613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112113864 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160571652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113582104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124925846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140576086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118525947 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11755502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140300311 seconds)
  done (took 5.353688148 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161858458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180225386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149053626 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152660273 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190873521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115374307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22781353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152914459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207803928 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113897988 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134914136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139320733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154723459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113228773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166625149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113413912 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115448726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14328534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122230604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11452335 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164123006 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112743233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11425041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143016505 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112781068 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161365643 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114740881 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125782197 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139331278 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118876095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119125998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139635064 seconds)
  done (took 5.672632186 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128455292 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128621821 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135035654 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163877612 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12287501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126269619 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155880491 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12348941 seconds)
  done (took 2.220687677 seconds)
done (took 35.327892908 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138235336 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132925037 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133670184 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155386752 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.256575577 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.121099026 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130056233 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.120656172 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.157596662 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133741573 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112894323 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.150192167 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133775997 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123827593 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.258416421 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.129540264 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.263962534 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.260728147 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121370352 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.130373363 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.152688669 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233115494 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.156281799 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121901254 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.249920836 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117301703 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.252327667 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124155194 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124814724 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14362169 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.231065645 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.158159762 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121810639 seconds)
  done (took 6.483851889 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.242923082 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.152457274 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122547034 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122816336 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122787352 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151795043 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.249375711 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154468422 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121152073 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120427827 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151677386 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229007668 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159407093 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.119585287 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.125164109 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112068827 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.279487294 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.153219431 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.114987218 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095785184 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116857693 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.150860825 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262142331 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.147864293 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123297542 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121987378 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.153859716 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.128429683 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124383085 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123111268 seconds)
  done (took 5.712203777 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127636892 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135361176 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.167244214 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191310676 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15119577 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163872123 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142543775 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13783238 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173111364 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116185408 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.13080063 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180926678 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132173359 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126495075 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144977504 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133647878 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136721206 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145842691 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124914498 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132930737 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16585253 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132234534 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138245735 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152639501 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115531876 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123434924 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154798719 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126797287 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124618382 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.159692594 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118619788 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119276142 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145709994 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.152070553 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.118382126 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159103229 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142740251 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128699026 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159284117 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149224328 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118842802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147836801 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142910795 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170652722 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.146817775 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129434935 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127804672 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.160389489 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115070016 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133460191 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.187169878 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116119574 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136567153 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143454711 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.115448953 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123721346 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.145433013 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120368462 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13051508 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.146074022 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141376507 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122748241 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15497295 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119101613 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127310651 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115376287 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.145598467 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120565201 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141556939 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153229819 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152676014 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115513331 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.156438511 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12875191 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12710747 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157329282 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116039066 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12720051 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155982812 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122600065 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128878447 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147786222 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119987775 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.133382877 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.164262691 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131470445 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127725817 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156757484 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119930826 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11816006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161487217 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118369389 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120828836 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129399456 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.146087022 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119907754 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129148101 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.156100567 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113647792 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141299571 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14923675 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116093914 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141774622 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148654867 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121730722 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125882418 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186751734 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117169316 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126692079 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157878508 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117276804 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124723993 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.147348822 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117253595 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135585637 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160591705 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12542047 seconds)
  done (took 17.312023982 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.359257302 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.343492863 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189475252 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.430925971 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130028872 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.276561514 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.343855177 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.346910344 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116689615 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180080369 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178024378 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.313087588 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147811541 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147219174 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.348078883 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.4049542 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17863917 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152326338 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183850109 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130764803 seconds)
  done (took 6.073165904 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.1362088 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151607346 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167442793 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144864702 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126889194 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164273863 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116729285 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137638661 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157908923 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126473481 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11907883 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161311737 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130858621 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132669215 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162205843 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14882797 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122994324 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151662132 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139525438 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121055906 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131912964 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142102487 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125039878 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16695113 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135233308 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127435059 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144863898 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123022303 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123203056 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154020014 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121964448 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133540741 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153436484 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10698791 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128188633 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159284107 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.12477187 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120091509 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121057388 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149095023 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131729948 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12968744 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.154004755 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102665031 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135668952 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111325734 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.160023249 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129820832 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107420099 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.164232622 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129394817 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130701676 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.151155451 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.141260269 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122963832 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160454187 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129082529 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.13125009 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149491732 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116234093 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114592855 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119425027 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.154107771 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.13181867 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128442559 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165104548 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133053876 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11613739 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.149341336 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121005097 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120566023 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.160071314 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137124388 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125844942 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.152400986 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129533495 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124254221 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096354356 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.155124901 seconds)
  done (took 11.920341649 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141940268 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127982532 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161642375 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.152877971 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129658558 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.150250099 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.129339926 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137123698 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130449057 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165022195 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132688312 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130036602 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16704724 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127553727 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126178002 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162275975 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13044427 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.182870644 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138556235 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144038603 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160111144 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122355277 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12974445 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.157053649 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147019134 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128079479 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173610055 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.131783938 seconds)
  done (took 5.199613853 seconds)
done (took 53.847798253 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.299365263 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.494704409 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.282210345 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.278063134 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.295172915 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.296111316 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.279144091 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.28026428 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.658811288 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.251113134 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.279768178 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.288372996 seconds)
done (took 29.162569842 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.363262651 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.260303451 seconds)
    (2/2) benchmarking "String"...
    done (took 1.57463503 seconds)
  done (took 5.004396798 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.283852349 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.27143936 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.520655942 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.26999948 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.273994721 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.27444089 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.279077475 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.274223728 seconds)
  done (took 16.332735579 seconds)
done (took 27.15597461 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.3087932 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.453333348 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.511014963 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.254647134 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.274500503 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.271299085 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.280769649 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.290296243 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.285123251 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.252622282 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.667912029 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.533173175 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.275034127 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.643197548 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.251288176 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.30083675 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.271230329 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.516156497 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.277376935 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.315895554 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.250973841 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.261378549 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.282002417 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.274245775 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.275290062 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.279201093 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.263305348 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.27392061 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.463037215 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.287699294 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.305792837 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.276833081 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.26183127 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.274620651 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.274073123 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.291107431 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.466699431 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.278171635 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.256620167 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.302016903 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.469198499 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.287493488 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.282994302 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.278766221 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.255308998 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.311336964 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.269671443 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.379173849 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.295792277 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.288933588 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.320818608 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.652479187 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.289082339 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.300431528 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.277726175 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.503819712 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.279248359 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.3228429 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.296588306 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.298342177 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.27997303 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.271161134 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.327793952 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.285972359 seconds)
  done (took 148.129761645 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.27097967 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.274872005 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.275708951 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.337086412 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.274597905 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.275908424 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.272633077 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.271196012 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.275863963 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.278014891 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.275251843 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.277176698 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.287328223 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.216250569 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.279552734 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.295090852 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.275614886 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.28450856 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.279644075 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.271638332 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.270835131 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.274553574 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.289535005 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.275730655 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.305470897 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.332499854 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.279549205 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.290462011 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.282136604 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.270398833 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.304187655 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.320477238 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.83564679 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.141334759 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.280786713 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.274776365 seconds)
  done (took 82.748587619 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.271262182 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.27309516 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272908594 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.302418855 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.274032232 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.788813186 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790722657 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.233176334 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.349233059 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.273876583 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.437029265 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.475208436 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.273263747 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.358516425 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.283690453 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.272854841 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.285764348 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.296536767 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.274674314 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.272685088 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780882183 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.287067495 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.429830602 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.435344678 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.28437009 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29949866 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.271254727 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.659666351 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.270456635 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298928975 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.593536416 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.313842945 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.271669896 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.553085422 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.715236815 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.383514141 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.272190956 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299030094 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.270546295 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.544526706 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.270180339 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.271462268 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.277208497 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.846599454 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.272925748 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.774630532 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.274593297 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.167446818 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.27367408 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.268115592 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.212070096 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.836631006 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.272136398 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.270447017 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.271600306 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.270489048 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269052933 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.297755919 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.202248645 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.361763206 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.271714792 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.273167296 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298136081 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.271456655 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.480867266 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.274284691 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.203158769 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.324316992 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.371823889 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766490588 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.27299002 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360225758 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383733728 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.268571837 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.270590061 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.269948391 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.269530412 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.377438878 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.270695282 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.269220142 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.903184565 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.434408991 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.285538101 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.381800124 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.364370258 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.269736413 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545690672 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.272285754 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.271608956 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898630931 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362059093 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.272145491 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.270601206 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.271389178 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.905712576 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.766188806 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.422997288 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.273797772 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.82057286 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.273580364 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.091305287 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758619014 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.857999286 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.275910611 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.271606592 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378199249 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.435104562 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.289354253 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.271904622 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.385429817 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.275074366 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.331352215 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.272523756 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.668988879 seconds)
  done (took 379.806781175 seconds)
done (took 611.856153944 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.125701964 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.075947976 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.218377567 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.090377871 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.064278195 seconds)
  done (took 11.743710332 seconds)
done (took 12.913800258 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.44852662 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.451616123 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.329385137 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.452540148 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.306678811 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.462828083 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435030834 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.292342665 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.380275585 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.346016742 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.379396859 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.320505577 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.304448798 seconds)
  done (took 19.078868679 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.564564046 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.282141786 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338385009 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.53199852 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.31611314 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5632504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.582094699 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.283271231 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.454166088 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.316725942 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.292763924 seconds)
  done (took 18.696078867 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54706494 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.286650507 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341775164 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528618669 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317853634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551179825 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.592085728 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.286420234 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.437172094 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.296370461 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294889789 seconds)
  done (took 18.653330797 seconds)
done (took 57.600016928 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.312141862 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.365818878 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.307361115 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.291503651 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.290331972 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.290448058 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.29164506 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.291994036 seconds)
  done (took 11.613749594 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.288929513 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.288776581 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.288986639 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.288222388 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.290936682 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.288204952 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.288179447 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.289261363 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.290410643 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.289714835 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.288667696 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.289505925 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.289434954 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.28970061 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.290322524 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.290297807 seconds)
  done (took 21.803436195 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.293291432 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.289022649 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.289156288 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.290061963 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.29033426 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.2921823 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.289998485 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.290479082 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.290309297 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.290783342 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.292451801 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.291147339 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.290214998 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.290651719 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.292372314 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.29271162 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.290261338 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.290555434 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.295716315 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.291950149 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.29354682 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.291812353 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.291682487 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.29216907 seconds)
  done (took 32.166379648 seconds)
done (took 66.755501787 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.278359061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.288625656 seconds)
  done (took 5.74087114 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.352321862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.348630363 seconds)
  done (took 3.876142297 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.293111001 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.291618476 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.292279913 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.290438971 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.291715484 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.292934399 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.291940987 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.291366887 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.291334193 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.293408524 seconds)
  done (took 14.093645081 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.291484341 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.292681729 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.292147009 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.291305188 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.293050351 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.292052045 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.293213541 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.292566806 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.291917594 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.292045633 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.29251721 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.292028071 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.293289732 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.292616722 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.293011675 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.291619392 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.29325321 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.293464994 seconds)
  done (took 24.438902504 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.304838986 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.312436472 seconds)
  done (took 3.79224859 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.421079607 seconds)
    (2/7) benchmarking "second"...
    done (took 1.333773753 seconds)
    (3/7) benchmarking "month"...
    done (took 1.396734221 seconds)
    (4/7) benchmarking "year"...
    done (took 1.390865733 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.335270149 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.312888934 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.334986699 seconds)
  done (took 10.701517762 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.281979793 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.56449468 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.740095614 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.434899818 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.272940761 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.291594043 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.259364672 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.295904076 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.296318118 seconds)
  done (took 14.613899627 seconds)
done (took 78.43259435 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.283459268 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.320843057 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.297974685 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.312689029 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.633289547 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.312881588 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.283367806 seconds)
done (took 16.623542948 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.268114404 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.277047973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.265355516 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.274365909 seconds)
  done (took 10.261019889 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.281407549 seconds)
    (2/2) benchmarking "read"...
    done (took 1.605885961 seconds)
  done (took 5.063833286 seconds)
done (took 16.503144125 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296848161 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.295845621 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.295033571 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.294729689 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.296115146 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.29467315 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.29603305 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.295859938 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.295785243 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.295660452 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.288812048 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.288583703 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288350298 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288680451 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288122739 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28818724 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.287999464 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.282984381 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278321091 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.279728974 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279125439 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280492638 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.279413245 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.280241837 seconds)
  done (took 32.112658987 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.277289464 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.27558177 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.277487329 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.275043667 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.276371062 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.276624892 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.276455685 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.276194471 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.272914562 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.275509406 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273522341 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.274380039 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.275488458 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.274834268 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276196232 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.275037476 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.273997905 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27502696 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276495674 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.274372238 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.274402896 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274538272 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.273892114 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273535648 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.276877837 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275203327 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.275214931 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.274277535 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275684981 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.275182754 seconds)
  done (took 39.422540787 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.279088164 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.279337424 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.275139748 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.276515375 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.276876286 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.276921686 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.275630314 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.276383119 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.276755884 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.277249586 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.275511941 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.277974417 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.278147731 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.275991051 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.277227721 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.276759271 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.276750409 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.276287074 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.27768181 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.277287907 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.277588631 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.276678081 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.276223052 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.276433497 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.27767184 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.276939769 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.277179985 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.276955849 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.277632905 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.277828291 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.277516286 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.277405469 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.277439828 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.278356489 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.278345556 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.277855766 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.280553889 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.28113673 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.278219793 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.277132377 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.277644785 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.277045319 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.277603983 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.278886439 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.277373211 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.277198223 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.27954336 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.278280467 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.279337316 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.278898965 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.280266853 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.277872797 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.278224588 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.278318123 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.278919387 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.27883024 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.278368588 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.279273239 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.27932914 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.279168437 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.278262524 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.27984477 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.280771396 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.278969284 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.279215235 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.280256386 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.279918109 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.280299997 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.279862104 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.279490229 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.27982668 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.280869687 seconds)
  done (took 93.186380572 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.28030659 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280003662 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.278955446 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.280231334 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280014459 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282332156 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280714968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279834055 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280584334 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281672789 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281554294 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281667751 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28017597 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280431088 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279958312 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.280093344 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28195898 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281682419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.280706013 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28262393 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280686498 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281380797 seconds)
  done (took 29.34315799 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282094439 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282573245 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.280529243 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282357094 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282713602 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281558932 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.281829181 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283460671 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280601751 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28098369 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281636811 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281412609 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283320524 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280891328 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282039452 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.284300522 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282005736 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28322171 seconds)
  done (took 24.24236554 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.283228865 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.281411481 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.281514071 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.281247186 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.280254993 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.283205628 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281063007 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.281961326 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.282143536 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.282769445 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.283274926 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281646296 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.283293008 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284469873 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282494687 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282181629 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.281258481 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2824556 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283949775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282704347 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.28286806 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282731092 seconds)
  done (took 29.378997403 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28407382 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284113296 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.283404674 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283543728 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.28429134 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.282903765 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.283421694 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.285107184 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.286034109 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.28465025 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283952416 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28483582 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.286875817 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284046608 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.285095674 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284161071 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284404989 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28390837 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286127288 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281528046 seconds)
  done (took 26.855054959 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282013557 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282696261 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282104217 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282392872 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283145535 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.283826576 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274820465 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.274036655 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274707086 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275458021 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274421915 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274112967 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275159413 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276140413 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270586171 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269563206 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27107649 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.272054431 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271113792 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269086416 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271218386 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270100881 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267304453 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266056054 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266678743 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26694977 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266774777 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267755755 seconds)
  done (took 36.828386399 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267240273 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26439848 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.262433792 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.264209989 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.26332514 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.263095565 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.262766238 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.263554285 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263381427 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259693108 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.259638962 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.258437207 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259367019 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.259555074 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261343361 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.261714083 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259528934 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.256930002 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256678765 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255506633 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.257038294 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257106764 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.256270233 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256099459 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256223476 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.252992019 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252705591 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252295517 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253103377 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253160599 seconds)
  done (took 38.924784003 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.272159299 seconds)
    (2/2) benchmarking "in"...
    done (took 1.271587679 seconds)
  done (took 3.686699785 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.253875262 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251848123 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.253208676 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.251871703 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252196999 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253048205 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252556139 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252391166 seconds)
  done (took 11.163675472 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.245063529 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.253424909 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.253572762 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.252328094 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.25239798 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.244938463 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253922859 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259559734 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.245443349 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247228006 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.249322614 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250652832 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.249576858 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249780637 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.248717526 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250092544 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.257989024 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256017484 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.254025275 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.255693298 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254969317 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250661376 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249677733 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.255378272 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.244434439 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.253002446 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.253419445 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.25541188 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244996221 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.251482256 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243838733 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251282988 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.249311126 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.250134985 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.247525516 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.250540824 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25040785 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25016198 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.250095205 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252991706 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246335991 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.24820259 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.243493448 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.245656017 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24567594 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.252046164 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.247437198 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.244703042 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238062275 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.241351645 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.249610751 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237535088 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.246256615 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24261516 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.243999074 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2496403 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.252662387 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.239620323 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.242488349 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.247451871 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254843823 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.251274102 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244579826 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250502353 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246572263 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.255100399 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250072671 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.251922209 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.246821346 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.247810986 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246456457 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255746544 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.256784213 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.251225946 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246988138 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.246809788 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241088611 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250516648 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248597556 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.251241315 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.253981485 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247760807 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246986215 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252669876 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.241507588 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251942952 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.247802268 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.246918821 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.240298274 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250489298 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.25582608 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.249431677 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.240334344 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.243474036 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244431227 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.251096262 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240648084 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24477676 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.250949655 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247233696 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249412034 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244143626 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.249923254 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253832878 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249001749 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251448067 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.25521398 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242263314 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.251347444 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.256766094 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249744261 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243141682 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.247470168 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.25232284 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244108045 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.249085397 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.253919674 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.245362287 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.254364386 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.250506095 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247862561 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.260075716 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.256154677 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.249709783 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245058316 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.256254621 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249447985 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246670277 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.255109228 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.250367809 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.24971009 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.246542092 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.25619766 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245297473 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254723325 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245036559 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.253881316 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.25029348 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.251373843 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247336097 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.251223843 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.248995256 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.249838107 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.251731221 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256654258 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249012738 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.257051841 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.251979128 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.250162697 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.252524685 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.255862493 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252369672 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.246531432 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.255109529 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244469652 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253094434 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.245064361 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.255472858 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252086407 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.252483996 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252933352 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245052446 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248521663 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.256129796 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.2508384 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252619493 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.255630657 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.25148784 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.253011251 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244756393 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.254185512 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.245169132 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249322764 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.257228078 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.253749459 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.252384961 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.25172098 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259117367 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252588881 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254200624 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247726088 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.252481835 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.258745055 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.255899168 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.261590597 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254544943 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255052051 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.248158705 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250364293 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256125258 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248330725 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259228284 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259120084 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263490629 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249222701 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.256501057 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.247321378 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.256357185 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.251502463 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.257728133 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253090475 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252506305 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245726642 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256312364 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.248974068 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255646441 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240811527 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.248861105 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.249272729 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.249225266 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248492178 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.242229148 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245820124 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.250604511 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245699789 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244127048 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.23866206 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.247706509 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238286617 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240899756 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.247657638 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.24505764 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.244782363 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.249729461 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2412843 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247263802 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.243563722 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.239427389 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.245229801 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241219587 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.244085828 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248416794 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245999591 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.239761197 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249162756 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.246353564 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.237931433 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.243813456 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.251320433 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.243920181 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.238336737 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.24833929 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.246240401 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.243185605 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.244833981 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239451346 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250316976 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.246930577 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254506427 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.238015342 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.24835678 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.240394981 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.248771766 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.243098451 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.246314658 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.245326296 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2487353 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254026114 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.246045129 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24017319 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.249900619 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.246698452 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24659191 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240054278 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.249859801 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.247591251 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.246794912 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.244088343 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243069767 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.249508067 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.238233932 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.248546212 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.241030749 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256919934 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.261737541 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248547661 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.250537516 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.249998345 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247507318 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.248716106 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.241597672 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24287155 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243612072 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242998153 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.242273953 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.251257214 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241685699 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.250311352 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245662312 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.249444689 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.249240344 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248118925 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.241280603 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.251217575 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.248554173 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247567436 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240747638 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.249803695 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.242942336 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249332653 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248411642 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.24366029 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254221033 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252654269 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.244921037 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.245152894 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.244927767 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.242593229 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.245701677 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.252375835 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.243102717 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.252752132 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.243461606 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.247228526 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.245524997 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253370043 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.258834516 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.243532876 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.253446969 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.248056705 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.241547894 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.243502374 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.251382541 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253220434 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.258979621 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.243344644 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253199794 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249180418 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.249403165 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.249763236 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250181846 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250259706 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.249423498 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255890162 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.255113803 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.24651564 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251248426 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259947585 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.250418526 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.250947953 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.242346335 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253206791 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260139336 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.245275721 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.248468218 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.246731547 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.25203213 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.251716386 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.250629282 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.250727238 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.250986381 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255058645 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.255029412 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253691095 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252838211 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.256537584 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262891305 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255721594 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.264200047 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.246570034 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256994585 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.252661441 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.246232594 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248031314 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.247738803 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.256631766 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.246172849 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.254844171 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.253233256 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247408652 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.253814059 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.258908143 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24345523 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254454153 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266084734 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.245531722 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254548974 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.251620173 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.245309972 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.254996573 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.253570873 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.245194764 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.248230704 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251528487 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255983982 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.246780365 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.256783216 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249474548 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256469989 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.254331388 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.253995231 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.253954462 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.254363666 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.246976131 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.257248558 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253829728 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.262216057 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.248674726 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254153834 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250087699 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.260126964 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.264739414 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.250785858 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259508384 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.255639877 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.249275765 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.253733585 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.25894087 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249808912 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257013858 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.248427507 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251801151 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.251412017 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.256665863 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.259522131 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.258502534 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.2484798 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.2506693 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256601807 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.256799496 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255103571 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.251459622 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261963375 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.24878309 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250399737 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.257331636 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.252250813 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260109035 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248653823 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.2537145 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253478975 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.258948669 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.255754637 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257375156 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.249202434 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.250563421 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.262259112 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260889565 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.255945787 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.254228748 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.258328867 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.249976252 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254806321 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.254925318 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.253198715 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.252840473 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.26077033 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.252357211 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252838826 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.252403177 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259261755 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.261587803 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.260693614 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.251524833 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26491088 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.268189133 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264642619 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.250759313 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25265285 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254084233 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.260055636 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257858352 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.252118941 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265636512 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.263838111 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261576552 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257786496 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.259453835 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25035683 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26138305 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258509933 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.255208751 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.264224314 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.25428442 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265752725 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260260581 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.258590305 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.252216963 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.252952164 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.254023348 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.255421242 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.259935286 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258385745 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.262070844 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.257873961 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264156987 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258864684 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.259339193 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.259767971 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.252137442 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261203506 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.252409934 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.260362108 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.261203369 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.254814461 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.262528705 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260676662 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254016223 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.258689699 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.264460015 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.260773618 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.254541826 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.258874822 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.265296894 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27016016 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.260928791 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254980152 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.257617393 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.263472194 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262269769 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261416673 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.254485416 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271338452 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.274669046 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256663928 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.258181506 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264229551 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270905203 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.261854099 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.261501519 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.258903175 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.260593022 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.266082376 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.264268041 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2657976 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269002726 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.258499078 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.262626167 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25655069 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.259411746 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264248386 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272662966 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.262570412 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.259227679 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.270320829 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274233462 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263097895 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27923049 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.268620773 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.261984834 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.268647576 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255949484 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26675494 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260563677 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.267983925 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264384649 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263411307 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.264675796 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.255436593 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264863321 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.270549157 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.273277999 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.263987558 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.255976392 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.259226041 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.264651149 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.263421325 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265182493 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.264370068 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.264305643 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.265538601 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.25943558 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274116536 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.279075172 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.26908557 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.265012851 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.264360361 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.26326364 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.267822452 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261730565 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.269200527 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.265025092 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26661581 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.26349291 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272575226 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.267141548 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.260296108 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26069029 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26064001 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.268086374 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27332847 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283903379 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.27043822 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.268788189 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266924538 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.266282086 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260693739 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269480311 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266970585 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.261430181 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.261278419 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268402438 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.267212611 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265924757 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.261118154 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.270050987 seconds)
  done (took 748.073384788 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266123278 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266017283 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2671195 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266899523 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266035213 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268412622 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266056248 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265937789 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265785672 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266753649 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266419094 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265836456 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266565241 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267466661 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267893887 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26767272 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267720766 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265960502 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267386918 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268800545 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267391182 seconds)
  done (took 27.75905826 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267358465 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.269155393 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267692133 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269403467 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268552741 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268093316 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.26813448 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26811834 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267594478 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267114788 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267007208 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268474214 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.268591228 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.267815352 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267657697 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268329978 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2689959 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26778514 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268199882 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268467761 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269241294 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268738154 seconds)
  done (took 29.056435568 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.268577864 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.269036569 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.263330619 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.272397139 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.270457226 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.268769786 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.269170891 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.269521163 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.269155408 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.263979693 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.26374265 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.263981131 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.266568178 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.274275478 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.265911724 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.274374178 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.270522784 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.269287408 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.271496311 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.270509279 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272845654 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.28161888 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.270726195 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.262329752 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.272341841 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.270542792 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.270614552 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.270397801 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.263656901 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273766852 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.271618195 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.265592571 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.273066476 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.274353467 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.265691252 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273057276 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.270648332 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.270628833 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.271555603 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.271541586 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.286267576 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.272238109 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.275963157 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.282540078 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.271690047 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.265910156 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.274754762 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.271824511 seconds)
  done (took 62.150871965 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.272636109 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.271571401 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.272345152 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272924407 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.271152924 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.272129983 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.271537875 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272952629 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.273400095 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.271790584 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.271768538 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.2727962 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271207775 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.272301694 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.272328836 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273150915 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27418953 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2724707 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.272514884 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273078919 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.273525546 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.274466183 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273041411 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.272925084 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271674194 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.275108108 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273070458 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.273715228 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.27417967 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.273743242 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.27297774 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273580804 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.274057015 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.274250244 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273122433 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.274027106 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.274355452 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.272520581 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.273915864 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.274042825 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.274559665 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273549518 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.274718518 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.276182952 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274726991 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.275166968 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275245004 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.275275093 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27574516 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275540109 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.275696747 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.275512795 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.27589295 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.275594403 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275953543 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.276579384 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.276149582 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.275106985 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.27688675 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.276666321 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.276661078 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275936735 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.276806455 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.276799688 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.275893366 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.277433469 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.276842786 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276605735 seconds)
  done (took 87.805082036 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277731568 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.278486151 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276799781 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277626522 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278046366 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.277954884 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278265412 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.278121866 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278344895 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277708476 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278284975 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278400921 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278056721 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278417035 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277715054 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277953521 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278944493 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2776432 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27827277 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278494593 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.27873579 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277650488 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279059336 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279225444 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279105267 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279298761 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278910985 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27930724 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279658249 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278180167 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279158182 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.280468747 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279451187 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279855231 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.280344686 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.278882015 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280757551 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280404463 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279666216 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279840996 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.279335963 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281148406 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279338824 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.27998714 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281621239 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280408115 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280528048 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.281907992 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280279003 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279836389 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281750301 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279640746 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281271976 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281153865 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.27908387 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280731885 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280735389 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281075209 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281047029 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280955148 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280457216 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281823159 seconds)
  done (took 80.488008414 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281033747 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.280529721 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.281580086 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.282090027 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280642864 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28105904 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281657944 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281677377 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282784086 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.280464772 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282578746 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28202263 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282544207 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281435702 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.282287144 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281809111 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283215248 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.28100815 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282957874 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282902561 seconds)
  done (took 26.802753471 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282718754 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281655995 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.28252092 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282239476 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.281049723 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28341981 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282308748 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282262471 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280720447 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283074866 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284604872 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283389068 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282383392 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282943415 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283026211 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282296629 seconds)
  done (took 21.687693303 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282072865 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283141615 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.283372468 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284469784 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282095005 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28291251 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283299816 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.283975469 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.283162645 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283737812 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.284455887 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.283401028 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284057023 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284886298 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.283859203 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.283742205 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.283086881 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282844188 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.284315449 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.284172167 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.286037036 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.283778463 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285103924 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.284347644 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.284031949 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.285306241 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.285803313 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.285209905 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.284954788 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.285038144 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.285042716 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.286328428 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.286064972 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.284411777 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.28580813 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.286273703 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.284529724 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.285220305 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.285892394 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.28461403 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.286720479 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.285555748 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.285989718 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287192126 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.284857288 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.286024432 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.286923653 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286725668 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.285853892 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.286223031 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.286443152 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.286855569 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.28582753 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.286679191 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.286175372 seconds)
  done (took 71.837813299 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286009888 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285729111 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.28661048 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285975554 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28749614 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.286483932 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287458778 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289303558 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286456608 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286669919 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287651642 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288487512 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287824134 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287039787 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286582398 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286423158 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.287986252 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287839003 seconds)
  done (took 24.339134164 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287987175 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288213178 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289528042 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.286913174 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.287570769 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28668774 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287194428 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.288614022 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28805977 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.287953759 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28736385 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287541806 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288077633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.288438311 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288773213 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287595969 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.289276519 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289354048 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.289347116 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288309339 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288919694 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28902635 seconds)
  done (took 29.512468812 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.279485725 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.279062311 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.280075811 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.295666616 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.291830395 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.280641647 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.281586701 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.279582231 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.298459705 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.312431025 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.308228042 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.292250057 seconds)
  done (took 16.652299234 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290252615 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291375748 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290098027 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289720174 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28981026 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289286254 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290570964 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290568405 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290637514 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29087909 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290548036 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291097621 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290567577 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290545421 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290763633 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291370477 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29182795 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290594251 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289447824 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290360084 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289201094 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291459659 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29067736 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290965498 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290530925 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291846083 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292510443 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291843244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291764089 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291817199 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291408213 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291341331 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292187502 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291633606 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292126929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291873734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291136342 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294509668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290971523 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291520159 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292504359 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292322834 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290415738 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291469351 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292481658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29203157 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291785776 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292669703 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292134022 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294815773 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292852619 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292869254 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291652986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292559729 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29376089 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294063417 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291546536 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293446495 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294168902 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293836669 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292616447 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293063467 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29331084 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293459764 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292017529 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294144719 seconds)
  done (took 86.429302778 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294300805 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292104476 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294368068 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294527645 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293227509 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294047112 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293765194 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294749009 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293306673 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293596902 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294055298 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293154971 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29509624 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294898163 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294027275 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294106374 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294029953 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294572748 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294502263 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295185109 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294658836 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294854043 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296018372 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295115894 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29418995 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294934105 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294740548 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293867761 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295873723 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294305812 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294891674 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294995016 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293923949 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295212718 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295417738 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295616042 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295016305 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295291642 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294795804 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295569862 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295433246 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29638901 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295075339 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296581648 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296279921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295995819 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295310739 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296200477 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296567582 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295648505 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297336972 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297246089 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303610281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296254036 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296051922 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295676882 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297447333 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297430106 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296758868 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297188755 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296421232 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296806299 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297593668 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297769874 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295698061 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297395778 seconds)
  done (took 86.676804136 seconds)
done (took 1765.594298543 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452396829 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.410747284 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.288162185 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.296672253 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.288093051 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.290249252 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.301230569 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288392403 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.288630257 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.28879426 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.288549667 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.479696314 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.336129373 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.290329031 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.28867574 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.38265947 seconds)
  done (took 26.440088958 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.310674139 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.302681263 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.405250032 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.306802114 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326444578 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.476497556 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.36352271 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.307675051 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.462408641 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.327050575 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.298091233 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.328355191 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.304547866 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.297902321 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326013304 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.479374745 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.542735561 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.308867724 seconds)
  done (took 28.657399684 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.714865282 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.310047113 seconds)
  done (took 5.214911248 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.323901753 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.304549874 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.306150307 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.304111134 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.304864747 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.297137657 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.304135626 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.309141426 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.306487928 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.422959247 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.310862931 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.319558338 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.304635513 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.306107983 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.311358013 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.347886071 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.458878899 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.315838601 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.312458408 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.310625629 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305073147 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.393643686 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.34538386 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.316119929 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.422502056 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.298941317 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.313044691 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.311698342 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.421102879 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.317582283 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.306368144 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.306407516 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.3076591 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.228698357 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.835674528 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.300267457 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330517571 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316837525 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.314077503 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.437764545 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.309503934 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.315245054 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.300773983 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.831576292 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.412701295 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.420553234 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.313702052 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.310405082 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.309654702 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.370390767 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.309094736 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307978218 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.365477548 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.100173053 seconds)
  done (took 83.783176953 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.299805893 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.300795594 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482756595 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.324676902 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304872037 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301164988 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.303212292 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.570160857 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.323449153 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301876347 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.610335849 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.907066199 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.306836757 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.365977689 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.343757657 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.354501096 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.301942609 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.316232219 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.300926104 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.303814989 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86010862 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.303986372 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.301579399 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.394026061 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.344503022 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.823328132 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.302530797 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.303769904 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.318406602 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.304633063 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.876915507 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.308300167 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.356141572 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.304965176 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.582184042 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.67488416 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.636153523 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.309876903 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.346372815 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.305359216 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.333858377 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.813905187 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.657393833 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.305477929 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.304572275 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814968657 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.304231 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.304636439 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.312672802 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.571962482 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.302616312 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.304837034 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.304581339 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.307757149 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.305047106 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.36778257 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.383522229 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827643536 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30511169 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.304382723 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.31351694 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.306596224 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.314507357 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309771885 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.307384661 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.661443569 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.570150202 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.308123953 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.65944514 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.869145406 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.316383022 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946757584 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.305878771 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.32537226 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.35198572 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.305670043 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.320382731 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.824099989 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.331668599 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.30653371 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.640989126 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.310564607 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.603550619 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326309161 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30849286 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880487152 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.31121431 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.355477534 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.307678879 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.305342477 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.325170587 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309352216 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.591091587 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.366156553 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.30724183 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.307697967 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.355332132 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307741121 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.32391072 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316085362 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948076235 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.307645269 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.307804061 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325731026 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305776373 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.308780328 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.309094188 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.309673501 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.589929919 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.307152368 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.323640267 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.30950649 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.307908059 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.308702366 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.400726981 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.316481587 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.603103941 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.31209138 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.308865519 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.314228301 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312000985 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325856011 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309773823 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.329428532 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.275958126 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.606542838 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.326006328 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.323704292 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309178223 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309782404 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.32455494 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.311245447 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.369222456 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.313898929 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.103381013 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.313432502 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.323469392 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.308713229 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.325697833 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310538029 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.32449405 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310484264 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610116729 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.591187248 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.562874777 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.31393485 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.31052362 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.115961962 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.324802917 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492622666 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327910669 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.311668506 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.590580575 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.544370541 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.313668741 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.311667312 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.314095016 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588227683 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.318475336 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63235737 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903409361 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.311097307 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.310355206 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.107831972 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.116360107 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.314946746 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.317239079 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.603129059 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.331769077 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.311648542 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.312394434 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.313516233 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.310572241 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.317625671 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.322762209 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.314396782 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.313188382 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.602565376 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506057821 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.328306677 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.314752284 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.83232927 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.333828918 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313168149 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.320009428 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312714144 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.310830098 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.364726953 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.315731303 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.314189452 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.311110271 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.320311816 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856458406 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.312800623 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.314650345 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506837977 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047769675 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.31396151 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.313001048 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.314493864 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.367075225 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.862583594 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.361080458 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.609002447 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.313834602 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.353710391 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.314028531 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.326711552 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.865692891 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321094339 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.313510185 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.042703082 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.313648746 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.795661922 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.313633005 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.317430682 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976762321 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.314508447 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.314726241 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.316489264 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.315676153 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.635446098 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.315792622 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.332758327 seconds)
  done (took 493.131058438 seconds)
done (took 638.406547306 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.315454221 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.318802467 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.319033887 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.319369633 seconds)
  done (took 10.481560614 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.332281745 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.32091893 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.331397091 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.321165463 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.330583386 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.321255158 seconds)
  done (took 9.16535945 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.314234804 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.319605946 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.320512772 seconds)
  done (took 8.161905744 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.518149959 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.341488085 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.66177556 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.321137687 seconds)
  done (took 9.050249389 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.332470512 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.331452567 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.332709958 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.332084722 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.3334387 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.3334143 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.332294764 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.332001568 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332476433 seconds)
  done (took 13.199467501 seconds)
done (took 51.266431082 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.654398547 seconds)
    (2/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.388344685 seconds)
    (3/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.297334943 seconds)
    (4/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.46483376 seconds)
    (5/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.394387886 seconds)
    (6/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.295151375 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.398241986 seconds)
    (8/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.49686829 seconds)
    (9/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.296419314 seconds)
    (10/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.441376878 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.3537222 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.323475767 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.323372719 seconds)
    (14/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.607343159 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.433020749 seconds)
    (16/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.38504039 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.297355439 seconds)
    (18/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.538187822 seconds)
    (19/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.361754989 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.297779368 seconds)
    (21/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.519795948 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.35453438 seconds)
    (23/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.403001459 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.418994659 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.416084107 seconds)
    (26/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.472745443 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.477274482 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.479523574 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.349463609 seconds)
    (30/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.480728043 seconds)
    (31/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.350241774 seconds)
    (32/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.298103825 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.333488499 seconds)
    (34/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.610636889 seconds)
    (35/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.321266125 seconds)
    (36/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.35366334 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.40282478 seconds)
    (38/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.630220468 seconds)
    (39/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.529214982 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.530100707 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.478912514 seconds)
    (42/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.301519045 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.410169658 seconds)
    (44/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.357639734 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.342586257 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.468282096 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.428593691 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.538125533 seconds)
    (49/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.602223778 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.442356764 seconds)
    (51/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.299359162 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.375502771 seconds)
    (53/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.634242255 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.345570608 seconds)
    (55/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.304151606 seconds)
    (56/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.415290355 seconds)
    (57/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.299985014 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.434609467 seconds)
    (59/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.30429693 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.449826503 seconds)
    (61/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.398536019 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.474879367 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.561348807 seconds)
    (64/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.529622254 seconds)
    (65/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.506923184 seconds)
    (66/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.382554332 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.438722368 seconds)
    (68/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.416718113 seconds)
    (69/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.35681122 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.352828834 seconds)
    (71/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.438469897 seconds)
    (72/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.468134206 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.361389835 seconds)
    (74/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.33132192 seconds)
    (75/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.378035826 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.429080101 seconds)
    (77/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.300956117 seconds)
    (78/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.412384925 seconds)
    (79/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.494121404 seconds)
    (80/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.416711958 seconds)
    (81/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.411105575 seconds)
    (82/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.566073777 seconds)
    (83/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.416472474 seconds)
    (84/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.736610982 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.573673463 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.405212567 seconds)
    (87/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.395590053 seconds)
    (88/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.451008539 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.433291006 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.409986734 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.479888465 seconds)
    (92/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.402040362 seconds)
    (93/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.302897085 seconds)
    (94/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.357155232 seconds)
    (95/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.475003654 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.428374201 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.617778823 seconds)
    (98/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.407169098 seconds)
    (99/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.304170328 seconds)
    (100/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.360817628 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.437949368 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.35630411 seconds)
    (103/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.335077389 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.306920656 seconds)
    (105/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.576640585 seconds)
    (106/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.479550941 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.401477911 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.302446056 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.491915927 seconds)
    (110/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.438571209 seconds)
    (111/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.332332785 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.311221694 seconds)
    (113/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.478407035 seconds)
    (114/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.81707273 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.67267834 seconds)
    (116/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.507330419 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.366397387 seconds)
    (118/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.39049645 seconds)
    (119/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.489959088 seconds)
    (120/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.31368634 seconds)
    (121/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.541476049 seconds)
    (122/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.51572214 seconds)
    (123/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.421222026 seconds)
    (124/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362810331 seconds)
    (125/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.304761703 seconds)
    (126/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.312939878 seconds)
    (127/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.332490808 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.449126608 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.432303657 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.326460758 seconds)
    (131/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.317435687 seconds)
    (132/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.388101452 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.431752999 seconds)
    (134/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.332132727 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.46359304 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.417924536 seconds)
    (137/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.472239533 seconds)
    (138/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.30505334 seconds)
    (139/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.42781317 seconds)
    (140/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.305220797 seconds)
    (141/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.371653523 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.396760537 seconds)
    (143/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.305189303 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.581063967 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.503939867 seconds)
    (146/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.304937204 seconds)
    (147/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.32422507 seconds)
    (148/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.413495037 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.607381766 seconds)
    (150/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.624802759 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.452940352 seconds)
    (152/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.444591622 seconds)
    (153/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.824225142 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.328391133 seconds)
    (155/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.67238254 seconds)
    (156/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.500530152 seconds)
    (157/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.358832179 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.389804008 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.307106829 seconds)
    (160/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.328197285 seconds)
    (161/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.578597717 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.411161687 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.33239518 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.369925602 seconds)
    (165/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.425789107 seconds)
    (166/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.307525096 seconds)
    (167/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.411851616 seconds)
    (168/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.32636037 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.458098422 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.441802774 seconds)
    (171/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.306397328 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.452591434 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.36066533 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.507924426 seconds)
    (175/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.540853832 seconds)
    (176/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.399574246 seconds)
    (177/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.359282325 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.671563648 seconds)
    (179/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.570230851 seconds)
    (180/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.535783223 seconds)
    (181/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.399371141 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.523008819 seconds)
    (183/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.601128911 seconds)
    (184/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.44355465 seconds)
    (185/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.569849539 seconds)
    (186/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.448354658 seconds)
    (187/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.510611285 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.569878484 seconds)
    (189/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.481711624 seconds)
    (190/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.309635062 seconds)
    (191/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.598893791 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.683182822 seconds)
  done (took 324.234195907 seconds)
done (took 325.444160943 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357000951 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.423779543 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.337900073 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.339513632 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338239189 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.330669138 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.359640581 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.337898299 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.35234166 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.352613345 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.330731221 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346495504 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.353846636 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.348949183 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.371738849 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.338090579 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.338967359 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.347793803 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.35553158 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.356314257 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339804525 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340281089 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.366691171 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.338929033 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346788359 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347317798 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.344491258 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.342619709 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.34791696 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.355892092 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.341529769 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.346457043 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.355870379 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.351345045 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.340840375 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349863445 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34068387 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.425410725 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.36107564 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.350421221 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.348600126 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.356191859 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.345799982 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.345470348 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.351735232 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.369145335 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348454211 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.355830021 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.342958066 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.342255009 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361191778 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.35235834 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349188068 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.343140959 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.337444721 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.356600373 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.351258229 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360883749 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.34826259 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342794399 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.376242059 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360957937 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.353157073 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350281433 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.349393906 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357825633 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.35217761 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.357557141 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.349662297 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344152832 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344041764 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.351744572 seconds)
done (took 106.531169392 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.466178721 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.339289104 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.500778199 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.348561511 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.510876498 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.470001366 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350749637 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.349928163 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.350136543 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.141329473 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.349881625 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.349587401 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.340820475 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.351979455 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.467579 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350848422 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.350460774 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.042193716 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.351243083 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.478363578 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.337721046 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.350236717 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.353015053 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.154264714 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.339920192 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.33703234 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.478501601 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.351009601 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.052337361 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.335510392 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.338616872 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.053266774 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.480880515 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.370258146 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.361183157 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.361373606 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.511456246 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.355077208 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.468167459 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.468043135 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.503324042 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.389807615 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.339563462 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.341936263 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.355587849 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.353934026 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.350930522 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.380876673 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.34172327 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.352142607 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.044566843 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.362357426 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.353532692 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.353961686 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.35335081 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.382470322 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.355235278 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.354922014 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.481497816 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.355181859 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.470014632 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.156308902 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.145636618 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.355194153 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.342192842 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.355308323 seconds)
  done (took 109.27674836 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.414566552 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.421714053 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.457122508 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.34730313 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.3943783 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.455382775 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.346578474 seconds)
  done (took 11.065316653 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.352261764 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355900414 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.393936207 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.392735189 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.354987811 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.517915313 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354001732 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.358480221 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.35471709 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.39631473 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.355094953 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355489687 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.364292749 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.346306676 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.394038457 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.35853458 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465370429 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.346970796 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.355546636 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502799126 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354160109 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364974154 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.398668852 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.358225927 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.356861222 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.354450687 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.130911583 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356427647 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355634177 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.356518911 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355404899 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.412634546 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355845441 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.347200565 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356821053 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.462033712 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.356723492 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356530223 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.357227986 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.348468474 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.357882897 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.357573094 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.355873 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.356630018 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.35834859 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.372664147 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.356381335 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.356743035 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.357047288 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.35737719 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.398218325 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357437254 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.357642394 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.356883594 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.401843432 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366937889 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.357491014 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.356422393 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.358027196 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358120328 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.50526259 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.397776515 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.358446155 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.396768836 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358898686 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357744039 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.358245298 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.358999552 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441634608 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.358005137 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39778444 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.357930399 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.531945358 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.374821514 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359417854 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.353330411 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.355368254 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360427271 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.348488545 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.35707445 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.359725593 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.352676815 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.357127102 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360719981 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35862632 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.510178822 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459425074 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.358559797 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.367006807 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.359004836 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.359941919 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.402546236 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.360287978 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361087623 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.40106735 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.471345259 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.403636525 seconds)
  done (took 139.550892776 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.364700375 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.364094963 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.355960969 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.380371737 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.352801353 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.353590318 seconds)
  done (took 9.405767793 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.355000756 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.364491719 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.359802321 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.361459523 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361283552 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.361752734 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.362274213 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353908764 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363729013 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.363305565 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.362822004 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.362449118 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.362521202 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.362080764 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.362198028 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.361820402 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.363519047 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361868821 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.362191564 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362689897 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.354291571 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.363826974 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364492411 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.354905363 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.365893093 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.364355581 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379158797 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.362659683 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.363049356 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.360602956 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.368240499 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.3634895 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.355512526 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.359590319 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.365463225 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.358504738 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366420398 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.363564148 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363698406 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.363796692 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.363941618 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365466842 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.364270355 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.364171349 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.356343145 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.359919179 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.366137733 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380537207 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.363835401 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.366496949 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.368246704 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.365397888 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.365020851 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365028879 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.357798235 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360028272 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.367173746 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.363436717 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.36495972 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.357565662 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.366352273 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.364300338 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357955051 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.368458004 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.365776318 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.365882402 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.358787702 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369411432 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365990366 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.365621535 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.36630319 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365969538 seconds)
  done (took 100.396717149 seconds)
done (took 370.919767168 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.635978644 seconds)
  done (took 3.875937098 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.354943314 seconds)
  done (took 3.595253139 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.272284122 seconds)
  done (took 22.514016343 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.387601384 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.386989607 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.372117404 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.360029287 seconds)
  done (took 10.74643654 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.638706179 seconds)
  done (took 3.878148379 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.375969179 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.362770013 seconds)
  done (took 5.981222545 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.548919983 seconds)
  done (took 3.790195746 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.575587534 seconds)
  done (took 3.816904061 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.390437199 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.384178031 seconds)
  done (took 6.024166448 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.351834758 seconds)
  done (took 3.592896506 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.855742291 seconds)
  done (took 21.097953193 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.383893562 seconds)
  done (took 3.627441211 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.405952848 seconds)
  done (took 3.647304883 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.850276028 seconds)
  done (took 6.092157024 seconds)
done (took 103.519540085 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.352856348 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.361192012 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.360413715 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.359970033 seconds)
  done (took 10.675884199 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.433521779 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.432753808 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.441137356 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.428005561 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.427732669 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.436307591 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.394686275 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.396258 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.425599074 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.421965767 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.43699778 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.427498962 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.436181642 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.395606646 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.421343362 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.437810081 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.42520892 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.442127151 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396089697 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.428279815 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.372552597 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.428445735 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.423371843 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.372793235 seconds)
  done (took 35.324783627 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.880475247 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.433194031 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.51607677 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.41397406 seconds)
  done (took 7.486753799 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.475702152 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.476130286 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.493139919 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.531459719 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.57811139 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.490280476 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.397641916 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.393032686 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379339356 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.477191308 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.561644945 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.476519221 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.691199659 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.371966901 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.689580305 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372523965 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.371861049 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.475549991 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.524094464 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.553959161 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.373637755 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.476029913 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.481966744 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.474994619 seconds)
  done (took 36.832060208 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.381192226 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.389356319 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.374690718 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.387443735 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.373181729 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.374281347 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.376443902 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.381297233 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.373819544 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.373268809 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.374241072 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.388512486 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.373169269 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.374326107 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.381096506 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.375908695 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.376804926 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.380722928 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.383032118 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.374554731 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.374277936 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.381812639 seconds)
  done (took 31.567585444 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.358892635 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.360068267 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.710207833 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.615464321 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.359833665 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.364652934 seconds)
  done (took 14.014961018 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.433618492 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.573954564 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.369275685 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.708824561 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.793625069 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.3722564 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.368805836 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.607332798 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.89664719 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.894339535 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.428166666 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437647865 seconds)
  done (took 20.130271432 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451770909 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369631519 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370903738 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434668333 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369738362 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3704013 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.430209052 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.055405805 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.377079555 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646531786 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375455277 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453805476 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616608342 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371705309 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376736925 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341476942 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595985922 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849807675 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377271361 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3731252 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421970125 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371643974 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384764906 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.576259079 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377649246 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371186679 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.634891099 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372386699 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651380209 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628954231 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629732421 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378738998 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649757723 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02498257 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478176095 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574428527 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375722559 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374537543 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.352346655 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.398621954 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380805985 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376698388 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.626197783 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380192374 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373491573 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381736181 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071691398 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381472144 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.3734266 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375637625 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626588146 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466374935 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.378130432 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3735327 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404383354 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374612766 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.379995733 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49887339 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010390035 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374095335 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387306016 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.379121283 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374887937 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378046853 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012878866 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.387479648 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.379884835 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380003798 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374818721 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375542945 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399540265 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374750874 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.395310849 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375717145 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124513737 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387785394 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375369264 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907739507 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379660524 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.396221744 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599652724 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376722133 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374679679 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.375081837 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376479596 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087970736 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388381488 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.345765525 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419339084 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.063005934 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.576750943 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402042129 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405491232 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595770568 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.345940023 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37666991 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.37775429 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378035015 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397578811 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.069605988 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375935496 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.382941544 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624516733 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.588182361 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384057045 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.33807479 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837232202 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377269647 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.420378067 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381106219 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582595994 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.986434995 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644184278 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395537061 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416629912 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379813782 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146241464 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398288826 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.388987343 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382104888 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658029357 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.178025882 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385197811 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450684497 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38105207 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380126069 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379242328 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385128729 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379906337 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.560708372 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389671571 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638407651 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.386947618 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380503564 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.379894712 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394406477 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.381538702 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601535521 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394442352 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660261103 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381978819 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379382565 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38022981 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.59865272 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.382053897 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.392113159 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.719578928 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388428935 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392738466 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639070977 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418121943 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493699539 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413297509 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.387950219 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631917399 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.387957313 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.388784037 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382607753 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383001199 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389005759 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389137047 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383324817 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991023011 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363887121 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388028183 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383617421 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.397626645 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456274792 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390095463 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584570505 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.390785397 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395134147 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390817788 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.386031279 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607933388 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635569498 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.400542371 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554614674 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.842877268 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987656696 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402672511 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.38278984 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.382889091 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.383430384 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385003873 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382810862 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383736333 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587495266 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648227677 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384812006 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995110841 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390541489 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386642339 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.407582212 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638200064 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.398236799 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385757746 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.38469719 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404209523 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392440931 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644540491 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61062863 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.402528402 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385536397 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904118389 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395545224 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387602845 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385809196 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413191959 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385182923 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218890301 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726366803 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394143786 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642600179 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391390351 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.426657729 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.385399072 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39983445 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391981918 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.394148642 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413215299 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.590040006 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392702001 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38875136 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024688371 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146125381 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943004793 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396743654 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.391385474 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390736719 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.090982973 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386895819 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388096074 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633267211 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086491103 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387948234 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849339219 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.397553906 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141780413 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646103518 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618405566 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393926376 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.387683887 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646574669 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603742724 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414293411 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388909406 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394545655 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.359224922 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923295128 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388062182 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567395799 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08596442 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389288178 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391827745 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.441817599 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388006632 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781389441 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392239238 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389513441 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39434383 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392659857 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224320879 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394687933 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38927138 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025812712 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402437349 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.858298716 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389088422 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.593862117 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649362524 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.627129516 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.396472577 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.400567758 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.637316354 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644947536 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395773719 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395663224 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949571838 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.254385419 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.398218073 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393941588 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170009356 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410178585 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678997967 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.402905539 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.396444214 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39855243 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390974014 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392673091 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.391975354 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397518458 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366280333 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86982874 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.397624262 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404953233 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395120315 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39668845 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639242403 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.408427495 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997837989 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625607004 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386740479 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424163397 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.397271181 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39155215 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.367570959 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392485797 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39288232 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389346443 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611554984 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397369941 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.36235017 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426842334 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60184573 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391783872 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395576138 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610612165 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.399250383 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.400914066 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153584813 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428828257 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392145306 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399364076 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384802247 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430857158 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467140979 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595790831 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.654747877 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656769133 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788462265 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401256867 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399178763 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.409378528 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473684757 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405868298 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.400603686 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.396178324 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995050819 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151237634 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010196715 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656638875 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403452508 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403829714 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391863928 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635354017 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392227654 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669791621 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393448473 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.38540316 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43353924 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392200779 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411177583 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60889303 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667809482 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3949923 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398445139 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399207988 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.394504284 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655038039 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.61096419 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869597813 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932302424 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401423071 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40079041 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095518674 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670370933 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394608835 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394791005 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394635622 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.408283239 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401131583 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.406794133 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400690526 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620086565 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64836525 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047359493 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.648892415 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.428570837 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.393836149 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397682081 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645942362 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.226522771 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596946263 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009442273 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104231035 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651475294 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468640527 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598289911 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.4011865 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633565849 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.408788558 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401672447 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398502789 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395855785 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.39603593 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.651345908 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009096207 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656260982 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.402381824 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.407703907 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431496573 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.599399646 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622612391 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115721978 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618839461 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657666833 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410167354 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396246076 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011317065 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655478838 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40383632 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.404356382 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612662386 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402821717 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435610726 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.271838579 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.39700562 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930173553 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.613963305 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418299769 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405353976 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107253308 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014660702 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.400773781 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875384864 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404303757 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413510086 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678429447 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.404317449 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397087089 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684179769 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.405137813 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403223032 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606960048 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.004633106 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154220582 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.411978974 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405161775 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.406026131 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400178776 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45219499 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397841522 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400177579 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.791473198 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400159918 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40043813 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413904312 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.403773548 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402643535 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.406005734 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401726011 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.40837341 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.384454043 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.396851407 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410089964 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525601927 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93869367 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40222777 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.014180426 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.734261671 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646530836 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403864759 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.375822257 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.405845254 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402048036 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402345225 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402206171 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407294597 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937503324 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.415804164 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.660569194 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414190547 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.61420054 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612210301 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401071331 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609657392 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414132959 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426700559 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.372352408 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400594841 seconds)
  done (took 987.240130626 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41020678 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.407538011 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.401799838 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.469204907 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417770471 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411240156 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.4167445 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.476787334 seconds)
  done (took 20.686588307 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.402329785 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.40746376 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.403530149 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.407006944 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.397070036 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.875767634 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.395363671 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.402552044 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.416972748 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.399693435 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.402292273 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.0190823 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.403246479 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.398506859 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.40359633 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.409729011 seconds)
  done (took 32.820538183 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.113991312 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.413685066 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.957347914 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.428141009 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.420144678 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.388966833 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.53007898 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.40139801 seconds)
  done (took 25.9305664 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.402130773 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.402802938 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.400829908 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.403479293 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.403474889 seconds)
  done (took 8.283955236 seconds)
done (took 1232.236514518 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405889433 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.404408464 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.404368992 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.40353831 seconds)
  done (took 6.890334685 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.370104799 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.370350594 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.369281647 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.389426441 seconds)
  done (took 9.771150989 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.067071524 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.906196033 seconds)
  done (took 5.246159747 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.917758504 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.908177948 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.906282642 seconds)
  done (took 7.005348155 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.682792337 seconds)
  done (took 2.956189232 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.344346231 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.392800637 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.391380026 seconds)
  done (took 8.402205063 seconds)
done (took 41.543072999 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.391863157 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.154759996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.547351648 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.391661969 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.553294034 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.549507368 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.639068977 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39139569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.399682506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.396612697 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.390774085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.553577612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.628755168 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.154351778 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.630310797 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.153804404 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.554478512 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.402368245 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.406346511 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.3996867 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.64174002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.393536882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.392041954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410523218 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.553836866 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.540066829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.407216374 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.155250375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.405933508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.392603275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.554996719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.39814935 seconds)
  done (took 83.210084787 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.393457598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.404032302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.402991877 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39369404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.40986819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.402020649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.394979018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.393505528 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.392952156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394505159 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394935568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.40903161 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.397167356 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.395954197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.410685478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396526134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417318952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.396220397 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395829833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395468234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.394778998 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.401408682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.405682895 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.404006613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.395111831 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395085636 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.413792501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.393731772 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.396174463 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.395222039 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.394803515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412684585 seconds)
  done (took 78.068498609 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39569675 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411671257 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.415756575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.391258912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.39119662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.396995279 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.393266456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.3868867 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.401408656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.385458695 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.391259971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.381106168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.384297204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.398844716 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.385505011 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396937815 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.381397504 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.382865786 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.382915107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.384034867 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.384138378 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.382311705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.383229749 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.382166643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.385675934 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.397499107 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.381807168 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.39861297 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.381351955 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.381996205 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.387106246 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.382685116 seconds)
  done (took 77.745543454 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.619249033 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.395485813 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.399959488 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.391145858 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.398959986 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.397196782 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.390880773 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.626906656 seconds)
  done (took 14.886623036 seconds)
done (took 255.184364346 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.390936447 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.871004214 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.424494748 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.391058847 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.409640706 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.421810415 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.596425945 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.419693081 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.583299305 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.395515153 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.409241594 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.4070408 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.179528618 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.53307851 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.191767168 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.321004032 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.257685057 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.394993856 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.941406384 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.613836428 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.422903767 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.400923596 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.204088291 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.270759357 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.365280753 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.453680131 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.454516644 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.547204122 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.510692029 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.455754749 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.870394251 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.399873564 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.396182891 seconds)
  done (took 64.173602143 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.392846057 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.401285872 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.403569319 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.40234765 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.401812326 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.401540029 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.393013388 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.402224514 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.401786243 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.401247968 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.401696634 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.403470066 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.403864192 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.402444524 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.402380959 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.375669864 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.392888577 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.4021724 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.393409494 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.37516474 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.402942372 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.402409076 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.402517742 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.402092189 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.403121112 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.403184439 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.404466426 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.403392976 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.402810866 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.40323575 seconds)
  done (took 43.256344867 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.402433982 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.957541276 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.123584643 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.402001352 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.39661552 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.401325731 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.675708105 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.411304409 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.400240872 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.401196178 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.862736828 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.41238537 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.427279405 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.141993327 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.411106465 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.419050256 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.417001806 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.409948721 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.983079404 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422649085 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.687178965 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.417880373 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.688837533 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.417847737 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.41288428 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41234059 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.415946372 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.197722103 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.429478137 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.872265055 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.1608767 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.685555375 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.156985017 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.196083384 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.161884824 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.423872953 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.418958091 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.877643663 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.417839277 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.410404656 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.686022925 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.409898943 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.15004307 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.087102763 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.428778023 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420124153 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.227959468 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.875881223 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.646160202 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.4168429 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.189105985 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.415722911 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.421877868 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.41376088 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.647707871 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.414156964 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.412212286 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.255775775 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.416815012 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.688072537 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.420561189 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.411245954 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.980580683 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.411805355 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.977622775 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.413310836 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.422528057 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.413818878 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.154099361 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.416794953 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.10341419 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.429391784 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.42036403 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.878533135 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.978025101 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.27477677 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.415882399 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.983682126 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.168466957 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.706715116 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.418065854 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.175847392 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.708553824 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.417116705 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.423969565 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.424364738 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.421808015 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.500223527 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.68969392 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.024676418 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10130841 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.260279853 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.692004054 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.420918075 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.415380363 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.256534924 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.423368024 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.423763165 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.149435456 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.108520639 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.432189935 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.421642069 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.094036103 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.434173496 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.69280661 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.421959526 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.194181193 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.415819171 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.502098559 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.424732601 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.421481669 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.419841338 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.693360249 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.42010887 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.424671273 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.097786613 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.910938815 seconds)
  done (took 196.50087875 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.411125432 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.409678271 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.410538539 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.410789122 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.411161165 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.418359205 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.410525432 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.411991875 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.416600571 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.412741982 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.410937094 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.417887928 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.416422324 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.410984427 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.419626769 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.412901696 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.412203462 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.426154232 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.411382667 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.413220131 seconds)
  done (took 45.564924584 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.426044055 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.957426846 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.930251918 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.427429526 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.425397172 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.419020698 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.471118151 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.426174735 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.426972267 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.706452365 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.585473256 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.431827543 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.426531645 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.425944784 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.931204261 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.401126659 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.706182749 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.957387971 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.428578142 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.957690378 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.401215185 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.427324033 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.417638572 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.957042107 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.715182456 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.69381337 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.475457213 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.958687239 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.427778271 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.4271421 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.958831171 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.429647321 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.418538741 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.943970548 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.429661319 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.441451623 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.42820287 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.476018072 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.476592229 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.707766165 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.965485608 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.703901897 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.440083474 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.585267417 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.432251259 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.401282033 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.969184188 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.42944268 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.402847013 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.43101301 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.434734135 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.945391303 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.422886465 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.944646865 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.429231428 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.429589126 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.961907845 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.946082806 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.936302044 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.587459473 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.420572729 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.697688781 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.428938594 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.971157333 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.430856747 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.430145395 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.429503653 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.589354911 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.961798226 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.699090249 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.710546297 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.710449286 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.430628944 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.487267716 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.429840214 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.711018553 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.485253888 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.814148616 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.713857665 seconds)
  done (took 128.125048135 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.687785781 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.533138284 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.793640742 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.982842693 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.911616654 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.558413838 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.533865339 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.664381488 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.438767622 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.534181484 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.053249872 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.512833436 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.160423063 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.485883757 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.526989551 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.544381755 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.806230103 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.370112876 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.039035272 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.028299255 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.437086583 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.526976806 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.947469268 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.624859703 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.421464432 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.98715061 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.334941976 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.92451706 seconds)
  done (took 53.666529195 seconds)
done (took 532.555228703 seconds)
SAVING RESULT...
DONE!
