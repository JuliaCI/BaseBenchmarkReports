cset: moving following pidspec: 8139
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.648020978 seconds)
loading group "string"... done (took 0.54365674 seconds)
loading group "linalg"... done (took 9.966687257 seconds)
loading group "parallel"... done (took 0.179719119 seconds)
loading group "find"... done (took 4.454085347 seconds)
loading group "tuple"... done (took 2.167693626 seconds)
loading group "dates"... done (took 1.460274538 seconds)
loading group "micro"... done (took 0.206513371 seconds)
loading group "io"... done (took 0.53814081 seconds)
loading group "scalar"... done (took 60.158665308 seconds)
loading group "sparse"... done (took 14.407764787 seconds)
loading group "broadcast"... done (took 1.787029338 seconds)
loading group "union"... done (took 11.585512838 seconds)
loading group "simd"... done (took 4.014054061 seconds)
loading group "random"... done (took 14.63116208 seconds)
loading group "problem"... done (took 2.275575238 seconds)
loading group "array"... done (took 24.690507861 seconds)
loading group "misc"... done (took 1.182064279 seconds)
loading group "sort"... done (took 3.868362995 seconds)
loading group "collection"... done (took 22.366061022 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.705935239 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146427981 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.197489089 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.208703162 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.280465088 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164541396 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157358103 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.172022579 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.721874849 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.215416726 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13529641 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.40529879 seconds)
done (took 6.345281695 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260541001 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.244832298 seconds)
    (2/2) benchmarking "String"...
    done (took 0.195336552 seconds)
  done (took 1.15781615 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07619257 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155873944 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108643711 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094398833 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093962216 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108316318 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093405339 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110208417 seconds)
  done (took 1.483118709 seconds)
done (took 3.696947598 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.519307238 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.87143572 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.520735746 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.184939561 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.310411865 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.298337792 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.268520394 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.222332048 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089750642 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088101866 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17786906 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.420241801 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.399819958 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.953258619 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.071715531 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093127566 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.153055095 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.770190875 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078364937 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111924244 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.542382623 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.22022891 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114720287 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.109072064 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184888788 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135227787 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.143776518 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101650236 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.659471442 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131253978 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.221728868 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083115594 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.142221658 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.162540044 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215759675 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11001068 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665734073 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200190011 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099251519 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099399179 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670725322 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119204472 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.205320993 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104514254 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.07185621 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.163649599 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101482761 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092509047 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09361033 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084858808 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163823816 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.460462131 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105716158 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19215954 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093412408 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691179731 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09636501 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273864794 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125890487 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096447549 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090557583 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085810782 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158018657 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092228974 seconds)
  done (took 20.13102455 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.167924974 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.186086844 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077450868 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157643195 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.119015875 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097702939 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083975285 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077286407 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125506537 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178887135 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138653358 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.191308688 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076252876 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08889078 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.169383057 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228767817 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125009873 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103368909 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089417574 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108065283 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122227526 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094920341 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107557763 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090442104 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170119365 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205555352 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107158499 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122119114 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089794782 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09767778 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142639735 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144214252 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092182715 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088030416 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.16956849 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122355465 seconds)
  done (took 5.295287766 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.24417345 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104719498 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249149486 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.194035066 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151225767 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.178114793 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174942362 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.303487102 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.231112331 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160411109 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128500944 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094598434 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078462033 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07923307 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094581468 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.380394847 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.140044528 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.192855194 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185212453 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097062135 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098856407 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370615247 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10056743 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086253629 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110830734 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067927576 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.22451296 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093882996 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.043588318 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083040261 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.120984878 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114603209 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215233522 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113375459 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118752586 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115684932 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085309207 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.214988017 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.210294534 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100697481 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098947183 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106072335 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082142072 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136671237 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129466326 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.092956492 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126185516 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.216728971 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087099013 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128955801 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 3.56908769 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195706436 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.145319886 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.103036563 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.266500823 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126529504 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100136765 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110136836 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.378246091 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131234229 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083236751 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079309346 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115744196 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078166043 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.455136291 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125423374 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.734815756 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080416821 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155309422 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09617177 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119368516 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084664428 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084120621 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122718795 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084815584 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095741475 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086414376 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07862429 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106944097 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109287663 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082035635 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101305709 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079851792 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146629295 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113131472 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107005852 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123284115 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091288777 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085496 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128381177 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082134116 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.106222324 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166812961 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.100620979 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098711087 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.125666235 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097527842 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144183975 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087409817 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.120979984 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083905682 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120202639 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100311458 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127110021 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099385652 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078991357 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100614662 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080023918 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080193577 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159027538 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089321507 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079546095 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104396971 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092229948 seconds)
  done (took 26.908273891 seconds)
done (took 53.04898333 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.430849549 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083856365 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083990175 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104213941 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088545142 seconds)
  done (took 1.583795156 seconds)
done (took 2.35493794 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318632193 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.205066504 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087275435 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193892132 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086738708 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201471775 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188981427 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100017806 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215089926 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085658391 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.201134973 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084368612 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105437042 seconds)
  done (took 2.868720191 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1005747 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105337427 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102733942 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118781467 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084361281 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100246971 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11811742 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105903086 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10051829 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112442904 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08394978 seconds)
  done (took 1.90249655 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099304477 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103672792 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091300829 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116848845 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083892476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097975703 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116801823 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106476343 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0986691 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111383064 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085181714 seconds)
  done (took 1.884653186 seconds)
done (took 7.424537666 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.222361525 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.950117037 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191611183 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.242869668 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.357027263 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.298171211 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.604524654 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.199890975 seconds)
  done (took 15.970266989 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.127157293 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.197637159 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093734701 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097941982 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109797418 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090951084 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09209963 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.116119241 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097259431 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099407295 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097877849 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108023551 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091211724 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090140692 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.107181782 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091863904 seconds)
  done (took 2.543282169 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140893462 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.126232088 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115404186 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099699788 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094349028 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.115831901 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100441873 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096361332 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113266806 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095231924 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100943597 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114659652 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096369972 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092338857 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.118177022 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112930307 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092484459 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113378262 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.112597078 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115297506 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098131255 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096267352 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113419482 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098152842 seconds)
  done (took 3.432348114 seconds)
done (took 22.720299757 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148767477 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102373382 seconds)
  done (took 1.030586183 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163376897 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184016835 seconds)
  done (took 1.129103868 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112975469 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089102398 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137945331 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102085732 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090302886 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107413388 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116085167 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107826139 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091367217 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091838419 seconds)
  done (took 1.834071571 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09358969 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095489837 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124078019 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.168497499 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116755584 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093715493 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0944864 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.111622178 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095718038 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089980864 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.113396324 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108967116 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093955082 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128034832 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094760933 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095790068 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116670929 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09412885 seconds)
  done (took 2.717315567 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090446124 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092150143 seconds)
  done (took 0.971015215 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093184375 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090450171 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092475068 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110656336 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089809551 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089185319 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10868956 seconds)
  done (took 1.463120231 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.541205138 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241989198 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.385534197 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076329047 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128854335 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.458102723 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.109253287 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075950001 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.095091849 seconds)
  done (took 2.936265099 seconds)
done (took 12.867753794 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091657141 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.235127628 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.620072196 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112553938 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089977723 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161141503 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.32314684 seconds)
done (took 2.428372013 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35652675 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.17204822 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088148426 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089099524 seconds)
  done (took 1.495539633 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080952891 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098340723 seconds)
  done (took 0.977636755 seconds)
done (took 3.273620222 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087880372 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.122406125 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.108927027 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087153909 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.088226558 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088446262 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.107658597 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087924485 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088756661 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088075229 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.108174608 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087970681 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.087252709 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.105704907 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088390303 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087763645 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087539232 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105232989 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089876335 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087332551 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10430593 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088191518 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087971891 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087240614 seconds)
  done (took 3.088622137 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111527491 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090517948 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109859606 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092488712 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092752178 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10945658 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093279301 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090415721 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110305344 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089805662 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093137959 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091971099 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108411832 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093023572 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089539729 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111869623 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093505862 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090582111 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108232408 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093488604 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091905885 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107748059 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093249587 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092905431 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111027823 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093582562 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089933419 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108450931 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092720064 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093620672 seconds)
  done (took 3.738266294 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.094843016 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086843859 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088855352 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11743813 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086499696 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090591407 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105927273 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090619623 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090701116 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088452804 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110222007 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088025575 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088851561 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108439392 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09192328 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09260617 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097958108 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107066058 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088697972 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089803282 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110569813 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088235256 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088841672 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088401086 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108391599 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086284209 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088668923 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107044923 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090361745 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088990748 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091801829 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110840684 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.08883167 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09877923 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109850067 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090138142 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095013084 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103042118 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09123023 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086946399 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085991571 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107544372 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089667871 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095360584 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107091965 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091568479 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09005978 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090880902 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107187114 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092188897 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086346173 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.108805866 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092307458 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091166236 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110120237 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087896462 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090157764 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086170574 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108625097 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089045146 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086649839 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087154463 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.112198726 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09109538 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104594579 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11370379 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089334705 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09123293 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.108515656 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095512624 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092356779 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117596316 seconds)
  done (took 7.717825069 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114345177 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098698865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109856756 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090821744 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089521381 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088353578 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11264128 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090715465 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091418732 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112747034 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090012405 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090499391 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108106819 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092063451 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089661166 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089477951 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114675859 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089728967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090128368 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109187012 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090809347 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093849187 seconds)
  done (took 2.955759299 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235817246 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096159409 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141144511 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120530243 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106676024 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119894657 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094480937 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095810486 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111394662 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099901016 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099417042 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112051693 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107146323 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0989017 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118062696 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099901536 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111570613 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101564184 seconds)
  done (took 2.882114612 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103547591 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092023373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156193152 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091335039 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091520096 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.110906284 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097119093 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112097204 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111347884 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092238417 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098713058 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109483169 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092828389 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090836938 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109948456 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092079672 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092984355 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092891509 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118712891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096985312 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09618634 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118395086 seconds)
  done (took 3.081265412 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106214829 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092961435 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128206633 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095306326 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090231298 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091392637 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.118049889 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092366883 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.100345708 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.114002889 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092835681 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092362131 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.129131387 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095984467 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099843581 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115301211 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095348943 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094363195 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112444734 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092151035 seconds)
  done (took 2.861473558 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194808704 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126524324 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109178369 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114049809 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12705853 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108240128 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135630398 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108715065 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107847913 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138967589 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111029641 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108546948 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134350651 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113245058 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125481555 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116630312 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114191424 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133596039 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108114749 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125485115 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119112754 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106608599 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13374656 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108328 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109073396 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126021961 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10799469 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13133514 seconds)
  done (took 4.217793807 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091261919 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090653522 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089139255 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10837966 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090951762 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090063305 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092233403 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112640844 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094550459 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089605541 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107783241 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091359176 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091255263 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08862026 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108025076 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091343194 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089809647 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108570441 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091070556 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0908575 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089043108 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108603473 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091878606 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090409543 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08868045 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108828204 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090804249 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090133029 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108674017 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091116048 seconds)
  done (took 3.681231534 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102352541 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100653693 seconds)
  done (took 1.020403282 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09901989 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10456073 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089676464 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11051633 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097336155 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090571478 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117527992 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098236741 seconds)
  done (took 1.627413208 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.166331733 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.190165339 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096104402 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.121481058 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170117472 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182089161 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130945193 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.11714205 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092796774 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08405911 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.18497145 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083922029 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111153043 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089424768 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091241719 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118950613 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092996856 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10159811 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.117840763 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095120881 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097538762 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116069911 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095614451 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102275339 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105246893 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095595439 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094663749 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120934894 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088896738 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094588972 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111124763 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091947191 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095817425 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095915283 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110215387 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.170907438 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119830316 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089837547 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091714491 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117790094 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127036542 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092261863 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114070362 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092382879 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095540071 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.115319796 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098772393 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091807489 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104029673 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088490913 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09183994 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105810866 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092824791 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093878907 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110194405 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100110921 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095465697 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088457433 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107697744 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088502739 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090625232 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106652786 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095557431 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094538102 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113517337 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093017579 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09065753 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111167572 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094464787 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092773763 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110126927 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109016536 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093041287 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115920559 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098351966 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093207439 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108248257 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099130734 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09189278 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113104501 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09733083 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121461044 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11260457 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088722934 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08763084 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098757445 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113895367 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095427254 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084321145 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12081584 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095515796 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092190994 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103688708 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091386995 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088451064 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114709363 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085687945 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093212674 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090732374 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.116305444 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097432773 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089959709 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113188906 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098986379 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096525023 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110852096 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.155816461 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109287855 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088245363 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094259638 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11638431 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086899876 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092762381 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091034083 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109739713 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087613904 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096200219 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111653573 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095082435 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096320736 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114236668 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095278391 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094391048 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109702498 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089999957 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096946235 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118451523 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096159905 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096146366 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09194501 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.112527997 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094904997 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097126939 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110117252 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099662954 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08940655 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.111394845 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093585999 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098754607 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112837473 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089896333 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09101659 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111303892 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092324864 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095765775 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111623337 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08956398 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085549302 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093474135 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108068367 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094284054 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101365807 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109057536 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096125774 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090007803 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120837275 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091036634 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097367884 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117870455 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100294149 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099071252 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084938465 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10959453 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095344415 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093840005 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109363543 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093552609 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091696209 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119410918 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0866928 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097321424 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104446159 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092358799 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098797381 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.092669558 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.115861466 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090382585 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132715728 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126823297 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099560088 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092333521 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112715097 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096924536 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092406738 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.115952157 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100760962 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100160606 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109759731 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093165598 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097928488 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10932872 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096590758 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092088183 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094467858 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.106207512 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095227435 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085263781 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.117213604 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095729469 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096916819 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.118159483 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096210713 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092346644 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12289961 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092250275 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096808999 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086873188 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.118441182 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103493318 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099206721 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118958138 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09623809 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090856271 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.114067298 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103301591 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095056208 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113751312 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095445167 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08725373 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10558101 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100595577 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09772903 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088807192 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.113391654 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098726794 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096205802 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110374216 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087899311 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098614902 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117604166 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09041048 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093099947 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109348976 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09240118 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101022512 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105205114 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091253225 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096167313 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.1177157 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094397707 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09350946 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095860968 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.119273328 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097091227 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094774304 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111257613 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102365061 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09157426 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.12148841 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090810467 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096942637 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086315693 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.11504665 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094220938 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090478704 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.118976777 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098006733 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100167167 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.119074049 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094054573 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096903891 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.117699811 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100367304 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091488684 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.11851214 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090510449 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087457095 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089185006 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.106696948 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094828625 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088530367 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.118408247 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093554202 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092136734 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117653807 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097282942 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091260634 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.118916791 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10579014 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088083436 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106875489 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093561928 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093258519 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109653907 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091039417 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095115465 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1144638 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099439797 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09624307 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090442983 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.113515563 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100480398 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090215597 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.120701236 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100211287 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099471235 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108898066 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100325526 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091123634 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11801061 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088376085 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092842021 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112408989 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094759758 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090552148 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090764651 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109752405 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087366876 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089038998 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.120021661 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093875722 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098036144 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113517282 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092815697 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090087227 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108452087 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101005376 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091926533 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.119502212 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095893461 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088252548 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087299489 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119808334 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094216547 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099555558 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109133173 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098323554 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100293421 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117899949 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094418056 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102268518 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10226811 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121036147 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100588284 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086168706 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111912524 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098993162 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092892924 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117384322 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096879116 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08776515 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116356771 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100974493 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096112189 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111885978 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088847309 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094371929 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100063708 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118300862 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097591325 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095469671 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115079711 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090865398 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09699917 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119617467 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097028882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099903197 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112814533 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099588422 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090300457 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09941776 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.11517688 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089357685 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087818694 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112120859 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101055544 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088000706 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.117671379 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101043929 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090540163 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091507719 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.121137207 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091462101 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097484736 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120138447 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093048615 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104001334 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114524705 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093617792 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098941342 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120168873 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089197943 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092976909 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092566079 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122186757 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093556634 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097534038 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114164667 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099527884 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096889537 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120118529 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100125101 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099926356 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107675706 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.1018885 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09802715 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095722008 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112735838 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092269618 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088581758 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113956078 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101648312 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090803438 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122706418 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102300219 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092529412 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112610308 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100248949 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093172843 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12080491 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091508504 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095661975 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088260294 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118521775 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093811607 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100032378 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112683983 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089042907 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100087975 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.11943653 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099247825 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096706148 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.121457773 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08955338 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0886101 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09670291 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.11203048 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105961961 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096866832 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.114460224 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094584052 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094909152 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.115522559 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102622765 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088997362 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110866173 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097179628 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09735612 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112501443 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090494456 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097561496 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092117924 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117585682 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093521508 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087780923 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114359428 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102014331 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0925971 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111541527 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092628573 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101167089 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113531354 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093294443 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088851129 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120014516 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098486968 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10164954 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111576456 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096445399 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092590535 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095405064 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.123455539 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093032505 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094077859 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113698836 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099965382 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099686329 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10910257 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092353275 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104841981 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12107614 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097356847 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097234084 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113978985 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103356228 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101972037 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117062426 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091060816 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089933812 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092183482 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110149484 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098245063 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100903417 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114790797 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092866387 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098251398 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11970296 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098569837 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097265032 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088640901 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123611313 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092746192 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09739942 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.11019484 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089596321 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097170497 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12137862 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095646676 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094481555 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116172883 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099154468 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089752346 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092092249 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120938287 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0990736 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099795455 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114102269 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094549489 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100495409 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125611431 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096643984 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094451133 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122745756 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103771151 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095571546 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115184603 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099775976 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101919883 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096195998 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123293023 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092388672 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093384459 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.122932801 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10255661 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10446176 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114954406 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088970414 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099486632 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114612648 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090093842 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098230143 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123100461 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103092035 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095078747 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111642621 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105846214 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100433496 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114725193 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094303651 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092980808 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099105905 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114340339 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100421283 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091572226 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.122423006 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103106688 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101332942 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124415548 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091124506 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100945502 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11808738 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104659651 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095367242 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089125415 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.110840798 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098745592 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102371126 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.121766772 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101113416 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098040983 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120936613 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097032406 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095283865 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091739816 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124136198 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100762271 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095703207 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118084088 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095756927 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095624805 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.118269025 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101729568 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102047516 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116494479 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107295567 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102553615 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113736013 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094807088 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097341938 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096502684 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118658879 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101027617 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091844168 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109911639 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10168695 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102574232 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115378058 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10428898 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103445605 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113824881 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10026137 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102808597 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099630198 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.118407085 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097965401 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098136819 seconds)
  done (took 61.922625756 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149215724 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104514506 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119497525 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097820019 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114853149 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120069922 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098378314 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099163163 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120055405 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108622217 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097140315 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116627223 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113648707 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117566751 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135641906 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107869964 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11739296 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100411794 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097710099 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097928052 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133746497 seconds)
  done (took 3.239673721 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117398875 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111929185 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130629526 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112241867 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103842319 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131338236 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108840083 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128063933 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112451542 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105445654 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132747635 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108033001 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125900948 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106416978 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105124214 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126681494 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112660598 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104030836 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130277854 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109987896 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106463295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130733139 seconds)
  done (took 3.431207569 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129679305 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101258937 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096171062 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120531285 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102205846 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096855181 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122870909 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098234044 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107922152 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093019189 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110968083 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09481196 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09644299 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118475538 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092841133 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097650416 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127397463 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102873627 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103086568 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097768946 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110626292 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099464114 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098398091 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109355504 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106298012 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103403361 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097916203 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.1237587 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08935185 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100671304 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11998814 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092249599 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089060272 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088792749 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111068553 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101499727 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100491164 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.120274262 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098859232 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090245688 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098067136 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.124724913 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090023577 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098015791 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.120631287 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092994876 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101345994 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.118588957 seconds)
  done (took 5.879247873 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.373247948 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166990743 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102348099 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137460512 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134996039 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107646862 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100194066 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138085735 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098272743 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123979555 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114269933 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111029505 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126368658 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104784378 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102514357 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125768824 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103506857 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100979023 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12787306 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101290197 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106064324 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12518145 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111312723 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13024012 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104605034 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100069483 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120502361 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106109308 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109719746 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127018059 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105567279 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104819679 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133424304 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105016592 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100232133 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123784707 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113051801 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102188325 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124427822 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101322077 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101592837 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125542307 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10378415 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133726397 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104907574 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102960985 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.1224383 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10023201 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109330148 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.12202415 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109649741 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113114077 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124067794 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103902722 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104558303 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133494519 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102946618 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101472591 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124959216 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111083597 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098963678 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125986472 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111672846 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101846052 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130662412 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112374912 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123433445 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104296827 seconds)
  done (took 9.031128063 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.137575129 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105918836 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136244743 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115362871 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104800515 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127736677 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10672714 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105840513 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12884787 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113060438 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126530372 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227476025 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126459305 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112173678 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104964302 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129066509 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106119529 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105730707 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128256427 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107264555 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126248981 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115345605 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105664669 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13556327 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118608023 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102960728 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127143079 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106775816 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135859799 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108309714 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116991208 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127910466 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107629195 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114295191 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141866759 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106092466 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100783587 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127921989 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105955788 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105640582 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.124617286 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115020422 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127892657 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105012489 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105828242 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126827564 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114988203 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116456117 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133656937 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111557533 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12659106 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11549985 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106015141 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127585705 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115919036 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.120693863 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137227479 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113371838 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128430419 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116003915 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113365985 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.144374753 seconds)
  done (took 8.327827661 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105169108 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099402332 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099206344 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120061153 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099348312 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09901025 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099101743 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122067592 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09999038 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099175908 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1201395 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100925534 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100470498 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098885557 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121909157 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099287055 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098844821 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118992765 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100976895 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100201552 seconds)
  done (took 2.988556514 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.113072511 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116692727 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122075185 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108913138 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101963992 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127440484 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102801367 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101195985 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101250149 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1254328 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108644876 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109105969 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124174704 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107984583 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130243458 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108892565 seconds)
  done (took 2.698593139 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123290163 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117678241 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.210772615 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102778091 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12624983 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108362038 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100803129 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126315379 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101325877 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107520268 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.127584656 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10531919 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101473964 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10248952 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12500152 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106204875 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099302784 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127681963 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103403462 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.215903194 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105829045 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103020762 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126253265 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105527837 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102538863 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129245514 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109016522 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10100181 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125229754 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103926906 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103591883 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130372006 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102718033 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106625044 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102647842 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125301788 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103026528 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101738122 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126014899 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102729241 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104162356 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125447132 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104092091 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105459155 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.120780732 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104639756 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100428198 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108361412 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125500382 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103583513 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101416378 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129850419 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107561093 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110753283 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129897635 seconds)
  done (took 7.228505299 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118515907 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102623701 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136011546 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102177347 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102896322 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103418179 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126652613 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10431618 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10364205 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123038758 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103567336 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103209079 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123295847 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105728485 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104159893 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12426564 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101493798 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103999931 seconds)
  done (took 2.8829019 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112982051 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102050975 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106084989 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123884931 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101346321 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101057385 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123078751 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101596718 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101409494 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100790262 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125125068 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101480832 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100825169 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124067907 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10238751 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102060429 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123291619 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103263364 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103232282 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100681363 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124703931 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100876538 seconds)
  done (took 3.282587489 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.118646246 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213354248 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108108656 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223148366 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099034342 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098348682 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.132930234 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100523828 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138840933 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099588166 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09736661 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.119094283 seconds)
  done (took 2.444761776 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136914357 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141202929 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125746061 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104317808 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1114091 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129826614 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107195061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107475265 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137717702 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117881996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126781244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115655972 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115257431 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137051407 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111349623 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130853197 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109396499 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106515002 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125758214 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12491854 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106743276 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137316148 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107826703 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107514305 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129314927 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114934946 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136549101 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120333088 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106802967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137884996 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111687203 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106089515 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138592004 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118316821 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125139731 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116733201 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107262189 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143643763 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111127318 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137809868 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105204735 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111975364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137790395 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113638583 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113961477 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129947952 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112992537 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127651117 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108543643 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127370641 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133643876 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115472002 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133678431 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116407272 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1146493 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150243279 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117393686 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13752422 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111585034 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139274767 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116012851 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111710463 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13818585 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118854411 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133307119 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116210351 seconds)
  done (took 8.934704474 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148154471 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103261826 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12941049 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1191883 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11481984 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130039224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108598781 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127953508 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11065481 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104386128 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173634209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109363764 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115136224 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137884283 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107717902 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12846587 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108506493 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116491771 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125611817 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129315974 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107339623 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137989293 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115365901 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138080109 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119632287 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134036172 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108024783 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108528557 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129341086 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10874032 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112376116 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129734406 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117266276 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103599569 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13810006 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10867841 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10713763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135088449 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108014319 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133487242 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116842675 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123375485 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129725416 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108602456 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139854482 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109178121 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10751171 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127757893 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109277159 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105323379 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141255801 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119715851 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13921818 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116621745 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107723776 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129280461 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110667375 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106451083 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12988285 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112690952 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116595138 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131736522 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128504912 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129674447 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109224146 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115608968 seconds)
  done (took 8.876796208 seconds)
done (took 168.838247326 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.179225805 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.214758937 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196388732 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155642606 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093529338 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.150871979 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127650318 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.198956225 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095336116 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094187313 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093414069 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.12045885 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161205574 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094382325 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.11711839 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097657259 seconds)
  done (took 3.086643336 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183281207 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.333542692 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109061932 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120771368 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101518846 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099666301 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121291379 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102288834 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098999279 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129678706 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100678915 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095501623 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128929521 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095699273 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099313391 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121582951 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107513761 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099896938 seconds)
  done (took 3.157141618 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123124961 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143728482 seconds)
  done (took 1.178724885 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.135398161 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.217173187 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273776854 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172216392 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119854462 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140172404 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152600782 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131880698 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.181088575 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134934444 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112090451 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096813724 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14850362 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105915578 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114384056 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11947204 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126947131 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135224982 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115257946 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100939303 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143481138 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103448979 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105252583 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135727218 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.170973873 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133410503 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103261363 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102359403 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12449438 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114045703 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105454058 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140437025 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112743362 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179941792 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10278243 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175895268 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106643309 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121660826 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11407079 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098954856 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125798531 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10423176 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112808365 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119975631 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103375347 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106003531 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125441088 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103511787 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128469318 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109014064 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107594413 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.129016279 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151553247 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129065791 seconds)
  done (took 7.893267039 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.858673295 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140468763 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099726124 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.005559365 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145189444 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114149673 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.853866759 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145901729 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248816477 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.869764459 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115175473 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107957259 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.256646522 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.232599772 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.037503112 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.327785077 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.682173732 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134909763 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126793529 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161684904 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107909776 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144493372 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120956285 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.417609612 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099644557 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099081541 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12974439 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108361516 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177538978 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10108528 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103391891 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190094974 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.263022359 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207821262 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099261105 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120954394 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099520441 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18096435 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270556878 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219444266 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15925729 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118226821 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100225154 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105583017 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141966837 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096973998 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176627895 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.184569378 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.161845362 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125618355 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108621653 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108510724 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128825325 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172760777 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098557191 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328095816 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322119861 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119918813 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109404248 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111500562 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262428586 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122106252 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232838597 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125800868 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213708603 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120561498 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809669607 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.157781753 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122018172 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104453829 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106159056 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129541685 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105898854 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177041075 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371516075 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13068638 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10644037 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098245864 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242637111 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.120335806 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100463375 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177694961 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101654923 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10733997 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132537105 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109068045 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.184141768 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.242078442 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11100054 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108696937 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12681509 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111954068 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09930037 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23133598 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225953189 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175371568 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230606244 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107463866 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.177179584 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.179124137 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105762321 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.183295573 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108089595 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110322486 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128303173 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224117149 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152015885 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101676136 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103767625 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128324552 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137219644 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102266901 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131060011 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.181083317 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.435977962 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180861697 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096325553 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125460429 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108848012 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180207098 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105993733 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262788853 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129886551 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.158586237 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129917758 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097917934 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107711167 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177438488 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106629912 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132388046 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106141836 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129417358 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.230650505 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220371933 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131505922 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242235731 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164212021 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127489083 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163220122 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1312027 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183107484 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110889051 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106142851 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123431686 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793225129 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114706163 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107404674 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128214386 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179319319 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122660782 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101128627 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099366865 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119088167 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800886836 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105384741 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096708491 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099752072 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127802256 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107289021 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129626211 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106837531 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175605921 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240048055 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108029232 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12915163 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100788957 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178542756 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103215068 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099672374 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121561105 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101949125 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108316349 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125844172 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101905113 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186336862 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152466258 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.249015247 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.523447037 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100889773 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100542113 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234641727 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122262032 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30126623 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109355492 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231995751 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182122615 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096701179 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34192334 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16226384 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204227894 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103084641 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.186813215 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097771242 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13032872 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155229903 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122236011 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107071436 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174569348 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112309531 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109135564 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.080631798 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101588939 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245751168 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098935094 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.183921549 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101507887 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105471242 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32468618 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102586408 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113869698 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.176758994 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104937425 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123944938 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.599980744 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102580721 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11176095 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127232834 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232640472 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182045201 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110957028 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109049682 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132515053 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154157749 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231222758 seconds)
  done (took 44.919605204 seconds)
done (took 61.144925432 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275112537 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17942505 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.276001768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178612757 seconds)
  done (took 1.909684786 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.27869653 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160502209 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.258143294 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097199257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.263640836 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096840379 seconds)
  done (took 2.088168713 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.176338218 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170001932 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14768652 seconds)
  done (took 1.429605968 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199699222 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.220234707 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349046248 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.240392235 seconds)
  done (took 2.0323258 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.302490961 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118197632 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127759974 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.23626239 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254419794 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211951673 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12537322 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180142188 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.1301043 seconds)
  done (took 2.667588007 seconds)
done (took 11.063866368 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.34056107 seconds)
    (2/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.429200472 seconds)
    (3/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.192705021 seconds)
    (4/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.345916773 seconds)
    (5/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.162801614 seconds)
    (6/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.175173489 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.106173363 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.21670435 seconds)
    (9/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.400666494 seconds)
    (10/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.202212233 seconds)
    (11/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.340512786 seconds)
    (12/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110257785 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109464367 seconds)
    (14/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.284325756 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.25352926 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.32564599 seconds)
    (17/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106685197 seconds)
    (18/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.29240929 seconds)
    (19/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.255053216 seconds)
    (20/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.145019347 seconds)
    (21/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.304611836 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119203382 seconds)
    (23/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.235142011 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.145954847 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129541517 seconds)
    (26/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081508251 seconds)
    (27/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.08706025 seconds)
    (28/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.214946505 seconds)
    (29/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.148228039 seconds)
    (30/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.139835862 seconds)
    (31/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.141795667 seconds)
    (32/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195240569 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.146719535 seconds)
    (34/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.144883467 seconds)
    (35/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.210379938 seconds)
    (36/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.282444065 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158060848 seconds)
    (38/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106596763 seconds)
    (39/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111011086 seconds)
    (40/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.228061709 seconds)
    (41/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.367238177 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110513688 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.162405277 seconds)
    (44/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.125333421 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205844188 seconds)
    (46/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110055234 seconds)
    (47/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.106187683 seconds)
    (48/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.181515939 seconds)
    (49/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.154758035 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133387852 seconds)
    (51/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.290257758 seconds)
    (52/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.182856703 seconds)
    (53/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.186259474 seconds)
    (54/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.08179078 seconds)
    (55/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.139538932 seconds)
    (56/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14683822 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.119870654 seconds)
    (58/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.277041739 seconds)
    (59/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111661482 seconds)
    (60/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.205618017 seconds)
    (61/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.081722673 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.103350175 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081655095 seconds)
    (64/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.120493021 seconds)
    (65/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130360104 seconds)
    (66/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084169198 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102833967 seconds)
    (68/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.225274597 seconds)
    (69/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.279969465 seconds)
    (70/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.08924364 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131304393 seconds)
    (72/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105836815 seconds)
    (73/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.107453594 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113395811 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103403772 seconds)
    (76/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.109133479 seconds)
    (77/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.153018993 seconds)
    (78/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.188714847 seconds)
    (79/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.141842606 seconds)
    (80/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.108921986 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114026321 seconds)
    (82/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.08958198 seconds)
    (83/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133180303 seconds)
    (84/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.088998931 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.1273023 seconds)
    (86/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.082820519 seconds)
    (87/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133317534 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10737637 seconds)
    (89/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084629634 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.13091853 seconds)
    (91/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.177831964 seconds)
    (92/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.204429051 seconds)
    (93/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.082332569 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.126806269 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101387569 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109732803 seconds)
    (97/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.131509916 seconds)
    (98/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.085663162 seconds)
    (99/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.192995513 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.114688773 seconds)
    (101/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110964148 seconds)
    (102/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.08196219 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102491378 seconds)
    (104/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.210037478 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103091779 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125794856 seconds)
    (107/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.109578455 seconds)
    (108/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08926985 seconds)
    (109/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088622158 seconds)
    (110/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134206939 seconds)
    (111/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.112834203 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103368046 seconds)
    (113/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.089373804 seconds)
    (114/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.082159755 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.123983548 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.1045543 seconds)
    (117/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.082556508 seconds)
    (118/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.151107822 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.112624461 seconds)
    (120/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.144798757 seconds)
    (121/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.20349445 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.131451043 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110471952 seconds)
    (124/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110918698 seconds)
    (125/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.106527792 seconds)
    (126/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.082469006 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103927603 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101276674 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.127152904 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.210655937 seconds)
    (131/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.16899563 seconds)
    (132/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.249979369 seconds)
    (133/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.109630499 seconds)
    (134/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104134689 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124584289 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123189849 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.236859502 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089000938 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.12736809 seconds)
    (140/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105186086 seconds)
    (141/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.082683417 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112136471 seconds)
    (143/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.108890867 seconds)
    (144/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.083181225 seconds)
    (145/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.086198048 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.089883319 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110872983 seconds)
    (148/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.134561089 seconds)
    (149/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090695101 seconds)
    (150/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109819562 seconds)
    (151/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.13244632 seconds)
    (152/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102010106 seconds)
    (153/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085141075 seconds)
    (154/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.089076073 seconds)
    (155/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.08494417 seconds)
    (156/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.113939593 seconds)
    (157/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.082963699 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103550775 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10041023 seconds)
    (160/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.105947497 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111300815 seconds)
    (162/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.143102905 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.149266968 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105218727 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09056613 seconds)
    (166/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.089171178 seconds)
    (167/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.13739656 seconds)
    (168/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.086361023 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107869429 seconds)
    (170/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.085526222 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.112745949 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106264831 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11005159 seconds)
    (174/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122004794 seconds)
    (175/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.109697565 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.087561605 seconds)
    (177/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.090302669 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100743006 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.125049398 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104555323 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100675291 seconds)
    (182/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.109171467 seconds)
    (183/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083339361 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.085724126 seconds)
    (185/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089423464 seconds)
    (186/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109345043 seconds)
    (187/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.113239159 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.086341623 seconds)
    (189/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090437774 seconds)
    (190/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090501304 seconds)
    (191/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137430562 seconds)
    (192/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.084425674 seconds)
  done (took 28.055251304 seconds)
done (took 28.996727157 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225581077 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130083074 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111220771 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109920025 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.231640684 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116481343 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14942111 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112948528 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119736723 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135994021 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101578547 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.11995398 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133797339 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.200099799 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138349485 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104737308 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102799033 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.143501009 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.124271411 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122530195 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.231954786 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103667435 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.144571881 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103301006 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.232366619 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105076908 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.10923015 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.1356288 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121586372 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112729474 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.135060852 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103289586 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.123494803 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.146616609 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10314136 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112997413 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10174449 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.113830036 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112744241 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113336751 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.143874464 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113671987 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111300868 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127215158 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114812157 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111300414 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101968199 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138485409 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101780651 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11009114 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128863067 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.123720988 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110343256 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.12478292 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102779423 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103979348 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.141684908 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104056644 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122139088 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125872146 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104195854 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102702788 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113275878 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126689732 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11259266 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102847761 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134988187 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114340001 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111347881 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127956942 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103509568 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110707137 seconds)
done (took 10.00767816 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108051069 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149005868 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.233792585 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.235208654 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130755386 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144588194 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118094129 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126637445 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.14036717 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121655304 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140209049 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160108947 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.238518325 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118938784 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118262328 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139780192 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114844598 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111101819 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.236968336 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126286097 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155545183 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118626739 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155357852 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120296356 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106067095 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154063233 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111267531 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114467187 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129995432 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125927608 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126984446 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130286787 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111023169 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126032254 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148688606 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118286631 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11944624 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139171081 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107979523 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105930808 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138825253 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125859438 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107017771 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142760938 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115886322 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120908777 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138234663 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121770953 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107326787 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137548181 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109461347 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133846059 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143069455 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125144161 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118355892 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.144494646 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121488948 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119444125 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133801 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120948253 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106677962 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130521989 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109741666 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128621372 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.134727113 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120626503 seconds)
  done (took 9.768457804 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128260921 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138264141 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141305234 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117539976 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112491801 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124661001 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10110503 seconds)
  done (took 1.851686175 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102410541 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.243515649 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21690516 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242308002 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.240738499 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.252344266 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127469936 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101495016 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164987229 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112898876 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.244646854 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.273245786 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113432734 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118161139 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.247375077 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126427812 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.221217478 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.127804883 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118376075 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.247058127 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120031881 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.16008651 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11661285 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.1032598 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.237231912 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104057325 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.292362573 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14654982 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113263345 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117220117 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117275265 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.209734115 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.240542211 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117114905 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136502121 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.215912662 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.240821602 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116766598 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.257021138 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.132672448 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.213878032 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.14224957 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120189987 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117943044 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.144276727 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.203717418 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148424054 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118125174 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116850798 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.25200921 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138889087 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219128727 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.140617018 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116494719 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113508177 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145737887 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125669473 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118314792 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250827441 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119376963 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.243166674 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.244573918 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.242692025 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.243188167 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12983816 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245470147 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205153317 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144078834 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112489904 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119707248 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246012266 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116283685 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141321861 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.234201799 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121216998 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.2479716 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.220773887 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142309804 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116722482 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106772427 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.142897589 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104985853 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.237396593 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116838032 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115494669 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148870865 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116475232 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117985573 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.135460071 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126442469 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.141642483 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116009566 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123330379 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141981263 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12016441 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.250855762 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11393771 seconds)
  done (took 16.991399806 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10649524 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104191073 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108901615 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129767886 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10579594 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10470026 seconds)
  done (took 1.675144153 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144140545 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119384894 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154765213 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118477381 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.170373766 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.249679026 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.25871051 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112772677 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166366125 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131101714 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.25287093 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256267097 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.225829505 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.151023562 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.255930738 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122642968 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.260842226 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116504906 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127667913 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143310977 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119255256 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121313821 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144316205 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.243168941 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120819676 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120918984 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138056393 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129927101 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125979908 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.138647078 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122432204 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118094603 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.135759249 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112875121 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.257373987 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109678872 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141781643 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123073479 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121317393 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146011411 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.231608259 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143538374 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126382383 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120989095 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.138924033 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111352566 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12196274 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138993699 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.25827959 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.141051292 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122485194 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146370432 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120144528 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121135803 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136150705 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113578512 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121033461 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.258976412 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12220339 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.137144574 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118694985 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.117939113 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.139955545 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122134129 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146196163 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122263824 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110490251 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145698422 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118066502 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119655006 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.144905454 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121416188 seconds)
  done (took 11.806735913 seconds)
done (took 43.074782491 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.60448608 seconds)
  done (took 2.61461438 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.954292448 seconds)
  done (took 1.967953833 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.681377786 seconds)
  done (took 18.723900581 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.436311066 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472928096 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.107386556 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148808006 seconds)
  done (took 3.176378797 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.752973302 seconds)
  done (took 1.790275709 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.323301428 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234477032 seconds)
  done (took 1.573816705 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.709260377 seconds)
  done (took 1.741753235 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.535425879 seconds)
  done (took 2.551652729 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.285493987 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.24088614 seconds)
  done (took 1.560009579 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.655868945 seconds)
  done (took 1.687444792 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.166500031 seconds)
  done (took 20.202112016 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244864635 seconds)
  done (took 1.28160167 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.279647958 seconds)
  done (took 1.316703057 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.492513368 seconds)
  done (took 4.52930786 seconds)
done (took 65.740828915 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115609013 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119464226 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117140414 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140530045 seconds)
  done (took 1.518868847 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124578842 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119082091 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147991189 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119535608 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125810703 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118780956 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14396443 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122395283 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117568962 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146021947 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118474667 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117723367 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147423299 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.11844231 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115424259 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146867006 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124105507 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118906803 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146971125 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121222282 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118442897 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.14523955 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122673986 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121865363 seconds)
  done (took 4.108081116 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11480392 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109385355 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110628941 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132547531 seconds)
  done (took 1.509729053 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127857925 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131009118 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153859153 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127056268 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130634735 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155019144 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117235694 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114006123 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143262602 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127523529 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135151063 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.1558187 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131605854 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120204227 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155033093 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111836175 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120007441 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156343912 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125602671 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128039436 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144910012 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125158786 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123553403 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.154613775 seconds)
  done (took 4.254141536 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194600552 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.13002751 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.170254924 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163178245 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.172817422 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117417182 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.140240977 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150351979 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124427753 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.120215845 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147484585 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163415691 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149930486 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120592398 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117899752 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149753257 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130577627 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122882046 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.185938097 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122645482 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151320594 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130191447 seconds)
  done (took 4.218327211 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121736522 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10936979 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.105191433 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.135369778 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120671769 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111672445 seconds)
  done (took 1.751598213 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10925987 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10303432 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10351777 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128258371 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107903585 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102948351 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101751652 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130832328 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103428026 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103581733 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129167525 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103193791 seconds)
  done (took 2.374090578 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212025663 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147497555 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263882299 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.440398816 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16858436 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188337363 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287424516 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190677862 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208485626 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138248074 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213015478 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157952218 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178865271 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18522266 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16471597 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162251555 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195867341 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205083923 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172060757 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237559444 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156946878 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204639296 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185021364 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17763544 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137859033 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191672194 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119239213 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127615817 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195293215 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19452224 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175352377 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173715947 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142136918 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2203296 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271675212 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205694733 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269073552 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134890484 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196279725 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.187166607 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262067529 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165616495 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192748951 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178015786 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12991426 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210077189 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15344487 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.211219668 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130262055 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170880082 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213639185 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175148129 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200841226 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137574945 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327469035 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158844547 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142619637 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181136759 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213394621 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225096626 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200017056 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122904618 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201246435 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188006806 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238498169 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164890599 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170504818 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149923067 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164228733 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228030613 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184529136 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182303251 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.241343061 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129803464 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197122997 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166718686 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184936001 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227686192 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166438039 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.145677456 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152160927 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15950088 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126262792 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197735665 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146996635 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210123188 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158042289 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343638406 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180474276 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18500717 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162443011 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186100414 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184973378 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146171224 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.1068933 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171808951 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161933299 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183870128 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127721048 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182541691 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136886025 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124934426 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177919361 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121816652 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192852816 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135228367 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191652812 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166052715 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.158666626 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176638011 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175640132 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.157223631 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195685628 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187440933 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157271643 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133507408 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240820617 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190445389 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133081168 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200518376 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194234784 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.177217483 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135203118 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195823117 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188870175 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168886651 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219452107 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139340818 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134473318 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.173302131 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193668857 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161662498 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.185324898 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127615794 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16401154 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218468662 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152671305 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137158348 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204358131 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133541549 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123483164 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161081077 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13735689 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166605341 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145699173 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134158442 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179881991 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161963313 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188175222 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185138003 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133782924 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202345876 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131008494 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.190320413 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146205087 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117511993 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.203642762 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217851335 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12915622 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202001918 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163657261 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209242034 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168895496 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154917882 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177800416 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154455295 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120659943 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192961298 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169304422 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192169918 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186082932 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207219224 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195677626 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.188912621 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147480762 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196644373 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.179132801 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184267216 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144325587 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193613261 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168195353 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.148268787 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124227665 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127298987 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161170568 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13211292 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13309023 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210427748 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192902898 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203994655 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16325591 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1627339 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187347232 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151233562 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160820574 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.200691451 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137093401 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217508929 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185281507 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203727597 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139009614 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189358767 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119299327 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151383831 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133091434 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189594323 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135082825 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136212997 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169605493 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185089929 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202253073 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174439967 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218433224 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165014638 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224204998 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119255317 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164051475 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194625361 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192046128 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179476401 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132841149 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.18711032 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214667029 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142596605 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215975272 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163955079 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202576583 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221155231 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.161936473 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129467074 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174583671 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156546385 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166920205 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163441518 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17533325 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130668802 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180846185 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135767062 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138675894 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216720892 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169856205 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178975445 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186020869 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199191916 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124749655 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142627311 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196924042 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143253761 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.137036699 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172750266 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22298675 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148482989 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183861665 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199200978 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131213283 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313817789 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214005913 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20641513 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135974858 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165642303 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167969518 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185343904 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163693457 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206918118 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14136142 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231559913 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191724889 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142504151 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129016549 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176191132 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151711347 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.172851771 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152243964 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.19003544 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140482342 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21794006 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133006092 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192766743 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198463239 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147329561 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145138268 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164951269 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245143092 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164834382 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202752531 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.158787167 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193183801 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177829892 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150808585 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124911489 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133208015 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207684478 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127512898 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200690726 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192522934 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207559791 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170837272 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186808197 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13854632 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125183442 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191047687 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146266603 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212635076 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160079554 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137089345 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218683016 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132229129 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129565686 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186060469 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313289344 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145215169 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201984882 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.11110456 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305796151 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12768187 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132269914 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187966743 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170975524 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159592678 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181866992 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196177792 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138129641 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189521657 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135223655 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20778921 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183371939 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196222945 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205456795 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147175174 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188949747 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161013776 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20422153 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142070391 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.174868283 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16195467 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218476545 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201363402 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13198519 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163990045 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192724388 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165788805 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202948813 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163715179 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178483796 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125777419 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193290993 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137536655 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153339819 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160137722 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194424722 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129036871 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203387218 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193811593 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12973112 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126641656 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176344356 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160904758 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167933 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129330295 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217483628 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127617283 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205150455 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230908208 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129138348 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164098153 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173806767 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130584907 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16613441 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142622665 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129277714 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.195926061 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181630254 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.15707665 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177162227 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192674348 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163241623 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186428075 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140629919 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.303050387 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126524684 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214198366 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147043313 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221594772 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149562706 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198483212 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191461741 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148483085 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196311434 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148789347 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.264779201 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163876759 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195698891 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130400999 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169868807 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137129876 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133035167 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180004328 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162359339 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171059436 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134504008 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.193877959 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141633804 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173131238 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140404338 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22316394 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148362799 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21865477 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181087741 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167404912 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170242822 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204988408 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126734532 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196020826 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202103244 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139679154 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152069457 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.16283986 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137067696 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232172376 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121658662 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187196877 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171532314 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194815779 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167078198 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.162988785 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173593448 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169371667 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168994599 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154838431 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151629095 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194003529 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13360852 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125030869 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193962054 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187397377 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.15966621 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167996342 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169773369 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190537008 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.14989579 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133277583 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315755828 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159762299 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218129327 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.140424702 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163558666 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146040556 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187487839 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163545982 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197850693 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128631087 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156223151 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145607023 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.182097997 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.146572545 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164022137 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211609672 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190348701 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181217372 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13350321 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.317404887 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139458107 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194612924 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.12191962 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156836398 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139250228 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133956573 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171586629 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208589001 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204700248 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.187433899 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14762978 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166355034 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123828948 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129652552 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.692306301 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150350213 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193189993 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146518064 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.136117304 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140202904 seconds)
  done (took 85.456399667 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160017279 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149661758 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167997714 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224885829 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195776866 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.298582107 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234575205 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263668836 seconds)
  done (took 2.823515055 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117717781 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158105308 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141108292 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142509298 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109465611 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.470157844 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.15863895 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119996529 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162132947 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150942497 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134168291 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.570375562 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117979187 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144628072 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120719553 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134440792 seconds)
  done (took 4.072660201 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.978455714 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.575050376 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.28726986 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.2827994 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.266793964 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.205349476 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.80296613 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.202101323 seconds)
  done (took 12.72528327 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.167379682 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.164215237 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.449963378 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.307625407 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184223822 seconds)
  done (took 2.406456929 seconds)
done (took 128.247192401 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123215672 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122732059 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122902619 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153019176 seconds)
  done (took 1.644143478 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.199733151 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095934278 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096906497 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122643619 seconds)
  done (took 1.646543196 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.479140283 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095174582 seconds)
  done (took 1.73483981 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.156012748 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141512766 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165475202 seconds)
  done (took 1.612714961 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135739812 seconds)
  done (took 1.271949192 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125708157 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124793112 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.268978451 seconds)
  done (took 1.659950251 seconds)
done (took 10.710589147 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120153788 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.409809847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433528745 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132834297 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710827869 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425173316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.027743929 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173066959 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173920308 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13514257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130362857 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688830854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.042064463 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.365600305 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.997622552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.390516315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695453641 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110658428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144379172 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112154191 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.0070754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135333149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112364715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112207885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.719525631 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423538747 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108795406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.402670486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110409036 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11387415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424944827 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1114117 seconds)
  done (took 17.329283766 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112647462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168776612 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145166315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111342292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113147658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137442722 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121937077 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122446402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204352185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109987314 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158252402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110017755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114817 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135714481 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134860267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110143083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112122354 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141223448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119228926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111019884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.157979475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108842531 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111355694 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140067945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11007901 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132716565 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.13694097 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122408132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10933226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141540997 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11575333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110854332 seconds)
  done (took 5.235874848 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157540073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176406946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146694027 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146660237 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186401763 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112172093 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222423167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147353385 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203826376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111914928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131587318 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136406816 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152138873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11152153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161783724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110474287 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113577666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139680093 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118600886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111938927 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159067448 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109977371 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11136646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139694395 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112071664 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133639529 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137568565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123333346 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110117746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143061478 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117123825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111287719 seconds)
  done (took 5.55518378 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126264249 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126263632 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133172237 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163048265 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120829273 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123975279 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153250798 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122853545 seconds)
  done (took 2.218142243 seconds)
done (took 31.47882115 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136315365 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130301612 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130782703 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152326031 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.223066474 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.148063817 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128783494 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11800009 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.15460757 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131933818 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110391203 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.146686733 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132277075 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121601842 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.254544295 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125822255 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.260073845 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.25691393 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.117703457 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126914566 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.14716406 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.230695919 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.153077171 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118740296 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.252010229 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114859655 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.249336296 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121811182 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121753174 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111323888 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.257551717 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121284868 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.150248172 seconds)
  done (took 6.392578134 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.241880516 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.15175711 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121898645 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120121788 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.150309107 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.120354801 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.276713928 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.11916397 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119524039 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118144227 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.148883304 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.254853706 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.126894207 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.114844867 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122789634 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.145117125 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.247620603 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.151978742 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.11215769 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.098227663 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.11387682 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.149441051 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.257014324 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.147004061 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118926803 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119983788 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.152449522 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.125740141 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123154664 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123085426 seconds)
  done (took 5.649847624 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127119921 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135024261 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137126574 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.218687024 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149245745 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163183992 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139220436 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135582836 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171438878 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114592901 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128332336 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181390279 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131740751 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124025881 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142004333 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13363106 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.1369918 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142345895 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122293693 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131431726 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162774053 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132781782 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137866595 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150582674 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113592863 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122327553 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15147354 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.123979774 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122337455 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127649463 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144409135 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118295097 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.1154105 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177033395 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114795462 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155572109 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14245317 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125959766 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157707927 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146406344 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117290802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114351566 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.171352325 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171072872 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142652472 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129593203 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124389996 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127002198 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.141898824 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132524275 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155519445 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141802472 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134749259 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111496464 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140717874 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122949632 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114156454 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.145758217 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128878284 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117248958 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.170557859 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122666421 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125129067 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.143539839 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126023406 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112439136 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111418841 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.146664312 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140807398 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120212439 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178848418 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113319929 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125617585 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.154226582 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126313327 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124845068 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.140872787 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125780364 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123986632 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.146976114 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128005051 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.116831274 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116684319 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.159906858 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136354904 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127805063 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.153588029 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12656537 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11644203 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143919395 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131611907 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113647328 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.147734695 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.12729118 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.113666377 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.145312795 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127668355 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124851933 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110307085 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.169916213 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116871924 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111990378 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.167246947 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118236045 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119054937 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.153358146 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.156071252 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115115884 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154593194 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12805037 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113498173 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.149536406 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120449327 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112180416 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.161148672 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130190412 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120535121 seconds)
  done (took 17.028434101 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.356527275 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.344301597 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188685224 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.429507974 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127404725 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.272263189 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.342345879 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.345975155 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113118461 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.176913625 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175658215 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.31358381 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11348337 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.17533342 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.346916487 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.400363119 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17596929 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150183991 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179317643 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129308049 seconds)
  done (took 6.029579195 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133691545 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150291315 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16709647 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144553233 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124739506 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158146075 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11404725 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135629023 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154052221 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125360305 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117138574 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159482841 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128160017 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130235244 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158630784 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.155254087 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122542658 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147590875 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138779212 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118066747 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134392572 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142443815 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121925637 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166437066 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134025708 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127171994 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141423573 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120945484 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120638886 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122916795 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.147437411 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132685948 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12109746 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.138613196 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127346346 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130416065 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149423294 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117603791 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119472115 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118664578 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.156737187 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126429456 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122071993 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132751018 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134100841 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116193614 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126341562 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156480984 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110461524 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132988686 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155661376 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129318148 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121475201 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164101651 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122138546 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13120909 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.15213095 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12928707 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120024516 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139623474 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114367268 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119133164 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122250958 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.156391496 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128249725 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135279106 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.1599207 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11422104 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118226956 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146810332 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119700207 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128701868 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163961733 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124516497 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121469082 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155397653 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122360827 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.100193325 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123581696 seconds)
  done (took 11.75781563 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14119952 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122414975 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133241693 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179275551 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127735575 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119629691 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.152440745 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135509314 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126781925 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161920799 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128818613 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128875764 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166561207 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125959112 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122304653 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159700925 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128437008 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153503429 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164672685 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142794283 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127308737 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149550287 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127620128 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126355715 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174714958 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126034867 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14188145 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.157170663 seconds)
  done (took 5.140997256 seconds)
done (took 53.150521987 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.293980873 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.501415848 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.275401106 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.274251403 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.304876595 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.30896311 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.273978052 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.274066411 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.667019629 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.248348303 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.274735129 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.273418105 seconds)
done (took 29.151239999 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.349121839 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.249977169 seconds)
    (2/2) benchmarking "String"...
    done (took 1.55355473 seconds)
  done (took 4.968991055 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.265707683 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.26360124 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.491812816 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.264229005 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.26920892 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.265443391 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.273908287 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.272570795 seconds)
  done (took 16.265913023 seconds)
done (took 27.018512454 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.29401762 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.455836185 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.525151194 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.25048057 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.265550812 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.265281067 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.266688141 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.28500291 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.269244142 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.251583929 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.659360991 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.52875631 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.268676772 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.637813258 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.248564261 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.292971936 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.265459549 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.511183482 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.267641881 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.309524759 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.245730553 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.250543638 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.293319069 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.265270261 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.2694665 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.274907611 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.269079523 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.279024407 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.45757096 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.27500294 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.298838293 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.266552074 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.273234133 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.269909408 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.266594987 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.282518516 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.472242166 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.269801181 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.254864145 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.267746062 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.464011184 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.283489418 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.266203078 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.269041435 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.253957156 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.284277091 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.253517739 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.377449498 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.286383304 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.278463839 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.276948833 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.651304477 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.267655126 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.279277318 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.274410774 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.489328993 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.273260087 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.325727198 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.291137834 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.272579218 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.267963378 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.26896127 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.277743547 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.269075093 seconds)
  done (took 147.590694799 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.267193634 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.270330546 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.265605876 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.329094619 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.271761047 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.271001365 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.266968907 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.267146769 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.266764411 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.271174437 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.271773307 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.26622235 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.269507612 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.260154069 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.27675505 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.288285788 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.26973389 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.276764324 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.27625063 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.26677477 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.295095993 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.27255508 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.283657991 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.267799818 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.307912842 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.335074744 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.279126697 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.293313204 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.27998883 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.267595405 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.304947566 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.270950669 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.853115081 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.136599476 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.27624236 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.276949506 seconds)
  done (took 82.640916032 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.267113605 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.266920903 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.264613529 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.296558063 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.265777577 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.801392502 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.804876974 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.802398488 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.790065025 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.514740625 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.523394684 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.268916805 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.356402387 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.278637423 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.265977713 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.280626296 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.290696369 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.270692597 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.265301534 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792281987 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.283007025 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.285097356 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.432414834 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.279391333 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295151329 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.655790789 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.264816898 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294160258 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.586961803 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.30893366 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.264344301 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.60992617 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.88645621 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37742777 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.266619595 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294535813 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.265178906 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.540271629 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.26554298 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.264502331 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.265817277 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.26808735 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.26579682 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907176249 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.26851681 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.77998304 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.267976826 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.167422258 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.265171439 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.267054059 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.004895891 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.877498879 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.268484976 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.264854616 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.266924349 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.266173356 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.263768053 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.295339263 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.996511841 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.359598133 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.26212553 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.266529755 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293493963 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.2638661 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.495791626 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.265502713 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.262935391 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.325379586 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.387017642 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.768711561 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.267982147 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.35909598 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.38132636 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.263824633 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.264883728 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.263544766 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.264508719 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.371864175 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.265466498 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.225519833 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.263195648 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.429164794 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.280283646 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.418289319 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.36236218 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.270418899 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.571350889 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.268628607 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.264579738 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950099716 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.357823269 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.265308673 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.264274627 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.264176254 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.264990128 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.223649868 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.766659416 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.440540859 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.26896627 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.124367339 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.266927795 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.831256996 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758050899 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.884478962 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.266780535 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.374011914 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.42696126 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.280530514 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.262744132 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.417812212 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.268240215 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.323420847 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.264713641 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.66125452 seconds)
  done (took 379.273408225 seconds)
done (took 610.672706934 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.089753948 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.042621143 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.180474429 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.051463702 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.034578459 seconds)
  done (took 11.565233495 seconds)
done (took 12.732034683 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.442062811 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.443946585 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321647654 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.443290551 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.299782294 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.458159869 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429781955 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.289736245 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.373727033 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.340931156 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.374657975 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.317075239 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.300028582 seconds)
  done (took 19.000174346 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535190318 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.276153531 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338159209 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.527941578 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.313260519 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545046887 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.580568711 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.277388809 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429464695 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.287986649 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.289039106 seconds)
  done (took 18.566556368 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539139565 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.276498811 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.329995467 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.518735031 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.310972233 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.554264086 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.579999461 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.277798595 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434392303 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.287642587 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.287914415 seconds)
  done (took 18.565898653 seconds)
done (took 57.300099504 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.303344144 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.361934121 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.298586135 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.288982162 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.282933221 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.286285759 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.289387427 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.284829948 seconds)
  done (took 11.562940382 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.283225198 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.282594115 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.284478713 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.282943521 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.282803771 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.281953367 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.283139979 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.283439692 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.283416253 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.283919956 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.284481567 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.285344094 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.284135593 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.284219625 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.284118367 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.28544356 seconds)
  done (took 21.707741395 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.28547277 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.28411529 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.28503389 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.28477615 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.28378502 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.2846922 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.285810529 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.283579694 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.284541156 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.284274161 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.28508634 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.284059323 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.286651734 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.285485539 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.284960995 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.286663431 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.2844278 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.284400849 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.28952862 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.284807534 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.286617251 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.284970544 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.285683393 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.285717261 seconds)
  done (took 32.014159339 seconds)
done (took 66.453984074 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.271572816 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.287439818 seconds)
  done (took 5.728329381 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.344612312 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.346015455 seconds)
  done (took 3.86078889 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.287245704 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.284297503 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.287187643 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.285512584 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.285689965 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.287397888 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.289156588 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.286233071 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.286101747 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.286190614 seconds)
  done (took 14.033496402 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.286721748 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.287028529 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.285978897 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.284933327 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.28831125 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.286562316 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.287839777 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.286236138 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.285248611 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.285552268 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.287479205 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.28663938 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.286475209 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.288100001 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.287851242 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.287836615 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.28782304 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.286683841 seconds)
  done (took 24.334301341 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.301596291 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.308221703 seconds)
  done (took 3.780943388 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.429398245 seconds)
    (2/7) benchmarking "second"...
    done (took 1.329537898 seconds)
    (3/7) benchmarking "month"...
    done (took 1.401959978 seconds)
    (4/7) benchmarking "year"...
    done (took 1.39553746 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.332945235 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.308583185 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.328572472 seconds)
  done (took 10.696936194 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.277669523 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.586632114 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.748997808 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.432594847 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.268512238 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.294794123 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.25520626 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.293883268 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.30091944 seconds)
  done (took 14.631771113 seconds)
done (took 78.23954555 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.274858653 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.320791949 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.311874024 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.301105128 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.585136416 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.310584292 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.281749782 seconds)
done (took 16.56121844 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.259042537 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.267322839 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.267679567 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.279342432 seconds)
  done (took 10.247140217 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.273780264 seconds)
    (2/2) benchmarking "read"...
    done (took 1.581788403 seconds)
  done (took 5.028697765 seconds)
done (took 16.452135603 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290566297 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.290225594 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.29105671 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.289585076 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.289350825 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.291805613 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.290578694 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.29062718 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.289877429 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.290896994 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.291810258 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.291230362 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.29123876 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.290994542 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289443136 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289471367 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293168926 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29101344 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.291637712 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289114863 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29019177 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289986211 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.290144733 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.290804104 seconds)
  done (took 32.149008765 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.29184616 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.291450041 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.290364067 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.289768785 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.293847731 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.294458326 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.29145619 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.291400609 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.293041171 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.291281994 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291977231 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.290806581 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.292775355 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.29159776 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292327957 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.291797777 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.293619806 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29062564 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293028034 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.291351156 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.290880535 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292655192 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.292255535 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292827831 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.292714382 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290510352 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.294393328 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.292364154 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292650975 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.29294556 seconds)
  done (took 39.93852039 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.29528729 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.297485965 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.292488898 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.293529456 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.293611635 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.292996395 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.292892706 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.29264222 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.292879811 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.293098665 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.293678471 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.293287534 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.293014503 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.292610538 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.293288178 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.294608527 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.293807282 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.292651131 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.294507661 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.293804857 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.295568233 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.2923386 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.293098944 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.293423006 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.292408942 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.295624163 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.294034459 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.29502268 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.295422425 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.294863375 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.293750518 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.293378462 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.293689741 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.294916186 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.294751274 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.296639365 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.295830398 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.296734787 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.295603975 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.295767173 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.295061807 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.294511738 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.29505544 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.294381511 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.293982748 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.293112461 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.295913676 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.294791991 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.296888501 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.2967045 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.295229711 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.293434641 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.296044754 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.294644389 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.295713076 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.296200279 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.295834797 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.29543991 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.295127785 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.296595992 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.294897939 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.295101544 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.296386299 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.296940858 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.296950323 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.295309034 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.296212017 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.297544222 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.299328707 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.289953753 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.288857296 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.290483029 seconds)
  done (took 94.386170294 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.291436209 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290936348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.28996752 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291381774 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282323146 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281072201 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.28251854 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283736207 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282017577 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282225298 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28117099 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282733917 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278208124 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27856637 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279270443 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279673593 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27920044 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279032603 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.281236802 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279401558 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27681005 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.277470087 seconds)
  done (took 29.383442301 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277117344 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28126322 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.277481608 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278883023 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.278267195 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279501686 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.277310722 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27886532 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276565327 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277969398 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279311841 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277918134 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279791213 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278317425 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27667174 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.279849156 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27956737 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280146543 seconds)
  done (took 24.178891899 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.279059518 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.279075987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.279418223 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.27956581 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.279419892 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.280683395 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278504862 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.278780918 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.277943362 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.279371502 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.278667646 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278500224 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.279563895 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277525474 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279541704 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.279061996 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.279898307 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282368165 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27942546 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28103173 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.281152377 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277945892 seconds)
  done (took 29.311105395 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278832224 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279444767 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.280188976 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279215922 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280108611 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280580247 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.279969324 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.277906049 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.282023679 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.280750455 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281082798 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.280770843 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.283166459 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280746957 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.280443664 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279193614 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280095422 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281420435 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279554946 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281858882 seconds)
  done (took 26.77257388 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281573034 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279516856 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279923029 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281974621 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281481142 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28366674 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282283369 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28078656 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282357687 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282779328 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281281948 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282349728 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283632515 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282690301 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282458379 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282665285 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28235836 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281247116 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282288528 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284910244 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28314504 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28222028 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282253542 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283540065 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282093965 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283852824 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283704979 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28343178 seconds)
  done (took 37.072823206 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281851044 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282766957 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.281974875 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.283435611 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.28303325 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.283790497 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.283529969 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.282964048 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.284671579 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282999489 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.284757331 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.284422587 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28495087 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.283548007 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283715795 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.285430943 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282986701 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.283651187 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284949253 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284876959 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.284145423 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282732247 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.285302515 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284017122 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284409237 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.284613503 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287308921 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285502223 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284282237 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28423997 seconds)
  done (took 39.689701852 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.307096717 seconds)
    (2/2) benchmarking "in"...
    done (took 1.305720703 seconds)
  done (took 3.781612119 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.284747869 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28573265 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.285679697 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.287870686 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.286475797 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.28744638 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.286123656 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286672566 seconds)
  done (took 11.460168806 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.277515502 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.286446662 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.285635075 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.284783948 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.285973078 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.278772096 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285169983 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.289794431 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.279067094 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.280995026 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.283261065 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.281300566 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.283164447 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27963866 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.27950939 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284119074 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.289539956 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.286022798 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.287531486 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.286785734 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287426413 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281800966 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283978656 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.292194738 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.280889543 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.288916388 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.287181913 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.289361918 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280327001 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.285174419 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.281411341 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.288264118 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.287074155 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.289491517 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.288518715 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.289437996 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.291529099 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286700442 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.288587015 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291180912 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288878057 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.286972057 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.280689295 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.281761244 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28292147 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.289183823 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.285250424 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.286430552 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.278870744 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.279180294 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.284764015 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271635032 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.280922077 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276443273 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.277794069 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282401637 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.288321594 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.272363399 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.273860066 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.277452087 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.283754598 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.278908203 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273221774 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.277991275 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278914701 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.281568586 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274997387 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.27767686 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.276048787 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.274301163 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.274596881 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280652858 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278508857 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.273754179 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271166528 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.271248852 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264844613 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271858702 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271968526 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.270668404 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.275238498 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266217269 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267143755 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271955182 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.259224205 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.266731784 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.268060645 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.26686356 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.259771873 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261888673 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.266289541 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262214651 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.252169614 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.254310901 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.256075368 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.26136746 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.250581592 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250451623 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.259915986 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.257572188 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258379 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252640475 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.254016785 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258678867 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257113633 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.253550043 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.256854552 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248372702 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.255669565 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.258314762 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255940047 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.249541169 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.250967364 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.254959279 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249038788 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251401741 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.255651023 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.248027034 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.257003031 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.256244606 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256206657 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.265176373 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.258242221 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.255442611 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.25177038 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262343771 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257058796 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.251055572 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.258115843 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.256835241 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.255038428 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.250988544 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.256745778 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.249947435 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25776574 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250378979 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.257845452 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.254344357 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.254861726 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247912579 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.249785509 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.248107447 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24937193 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.250887142 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.255865559 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.246669219 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.253795997 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.24720226 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246990335 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.248548325 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.254128934 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253480534 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.246565497 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252581295 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244042261 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251758066 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.243168645 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.251369463 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250993689 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249508054 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24997193 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.240020467 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24387238 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.24890591 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.245163978 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.241900454 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.248751683 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.248029769 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.247532118 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239970287 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.248293441 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.240336935 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.242568801 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.254834452 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.249339265 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248072689 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.244243181 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250656091 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250585518 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250111118 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242900246 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.245557274 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.250507483 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.248659113 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.251102229 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249596029 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.248634286 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.241458559 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.24210105 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250035942 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.24443057 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255510766 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253248165 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252408665 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.243156335 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25090341 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.241776559 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.251253732 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.247328854 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.251361974 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.250533916 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249440222 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243196326 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25065818 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.245095945 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.248714591 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.24175354 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.250834282 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251697405 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.250435927 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251947112 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.244251571 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244205407 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.251377064 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250112182 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251262992 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.242896132 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251585465 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.243452482 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.243153754 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.254276378 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.252345046 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.249369978 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.251993714 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244911977 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248040816 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.246243619 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.242864196 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25124551 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245654595 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.24516821 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251956522 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.248515482 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247343666 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253170471 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.249083774 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.245246428 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.248039911 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.254565723 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.251212947 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.246862941 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.25618107 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.252765453 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.252007773 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.251763915 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246225778 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254298289 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.251094299 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254487137 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243785363 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.253094325 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.247615381 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.254333455 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.245309551 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.24663954 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.248009821 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249160367 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25455664 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.25401288 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246140864 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.252968987 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.253740567 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253785143 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247988397 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.258013171 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.250752825 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248373059 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.248114281 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.249350718 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256005582 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.245544769 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.253690971 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.246555552 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257407033 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.264071437 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252370331 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.249988818 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257370901 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255301853 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.250369762 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.250081947 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249198625 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248857339 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247991884 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.246922871 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254647846 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247654662 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.255154325 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24916486 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.251604499 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.257277178 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.253379608 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.246508541 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.255285301 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.254717465 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.254277397 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.247294582 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.255255652 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.250664281 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250500742 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248416689 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.249715179 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257007095 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254172153 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.248968963 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.249160849 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.250098956 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.249130623 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.250797525 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.260137194 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.249906402 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260072217 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251768922 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.252411267 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.249690023 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25410694 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.257329607 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249889824 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.259241858 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.255170042 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245152021 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.2438774 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.251002359 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25039402 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.255226374 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.244140261 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252369887 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252592366 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.250990032 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.249510833 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.251096585 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250366746 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.249766905 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251913872 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.247513287 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.244537478 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246136296 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.251612926 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.249377037 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.249546633 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.241058418 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24622511 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.251687003 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.243801468 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.243532042 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.243719882 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250683419 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.25017628 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.250381829 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.250765567 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.249344956 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249315588 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.247679361 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253519594 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252103383 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.250739683 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254311423 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252432526 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.255093979 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.244289634 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.252627078 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.249162059 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.245077433 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.244892858 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.245318473 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.25274357 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.245359479 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.254096409 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.251365238 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247065716 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.246039082 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252623721 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.243630289 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251985345 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264870888 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.24484975 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254716458 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.251542305 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.245155083 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.253619697 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.251824207 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.24335872 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.246441016 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250691478 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254885369 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.245250537 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.25289227 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245021125 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253004571 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.251771028 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.251999515 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.252516319 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.252508751 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.245468624 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.252993034 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248953837 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.255180562 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.247623476 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247940173 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.248046747 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.255513458 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.256098656 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.246270194 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255745857 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253608188 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.248771523 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.249754735 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.255192492 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247707271 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255085079 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.246390142 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250200588 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.249335047 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.250725809 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.249044463 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.256613485 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.247704118 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.250291674 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256517225 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.254349079 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255776866 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.248344315 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.255960202 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.247392197 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.249107159 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.254958192 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.247255078 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256219205 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250218054 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.251321038 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249669114 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.256001005 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.255797813 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255500868 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.246433683 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.250664683 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.256751531 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254474915 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.254508945 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.25311559 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257359551 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.249061577 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251917434 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.253310826 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.248994515 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.250750918 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.256854305 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.250154008 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.250290418 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.251053758 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256892582 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.25839145 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.252651497 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.249380883 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259765073 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.255578335 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257807969 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.250495435 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25296248 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.250636284 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.257119525 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.256927803 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.249590654 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258080095 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.256638627 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259423879 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252850384 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.25165022 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.251105354 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25992184 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259755018 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.252806745 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.258373117 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.251523225 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25993181 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262386723 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.261289282 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.250180019 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.250003853 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.253130961 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.254305283 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.258668139 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252559904 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.253115012 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.253885158 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259753384 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257701245 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.25858751 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.260020435 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.250679426 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258530881 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.252425101 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.254729315 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.254585006 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.252822758 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260674279 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260225042 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252639704 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.258061289 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.262351333 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.25879789 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.251214666 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25296458 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.25699943 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262995067 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.259144308 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252617149 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.253405729 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259691801 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260364174 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.260952414 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.255253666 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2665021 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.266027508 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253184296 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.254561129 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258109488 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.263728324 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.260486159 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.261745496 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.258238759 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.256413841 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.26441412 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.262388847 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260832702 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257745856 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.255215152 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.264632135 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.255608551 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.25774382 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.258052854 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263250691 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.262749401 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.257168265 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.264861623 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264907767 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262425906 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275345816 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.260379795 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.256434102 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.262623868 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2545257 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.263271261 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.256765398 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.264080091 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.26294779 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263107692 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263362556 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.255809334 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259966507 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.258883969 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.266419537 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.265556903 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.255063045 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.257605912 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.265809043 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.262989031 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265334769 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.26400683 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263978458 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.26425144 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.256736117 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26819245 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.26948017 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.26697586 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.265032421 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.264330042 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.261478319 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.262249067 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263488923 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.268778072 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.264676211 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.263864294 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259791113 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265264525 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.267895388 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.258347868 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.25858723 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257320472 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.266467664 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.267767212 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276334243 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.263385096 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.260684738 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26572624 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267217486 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258970444 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265862328 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266814172 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.258507673 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.259951226 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268231988 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.266844778 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.266530247 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.260903186 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.270797786 seconds)
  done (took 750.622558619 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266338118 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266739779 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268744889 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269077265 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266551554 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265666437 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266272428 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266655027 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267389338 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268794912 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.267208623 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264427618 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268202682 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266205646 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264530188 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269586023 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264222566 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266294275 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266257018 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265611445 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264351758 seconds)
  done (took 27.755279381 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267755749 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.268359765 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264639812 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266369867 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265773341 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266809067 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.267109191 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265629578 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26839383 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266840822 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.265369636 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268703804 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.268944225 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.268057582 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270364669 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268278378 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268196469 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270698319 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268044863 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270944204 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267571887 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.269591462 seconds)
  done (took 29.048642794 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.268961901 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.270847873 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.261813553 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.270084949 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.268134171 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.268096137 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.269571283 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.269066133 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267872916 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.262300904 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.261207677 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.262793235 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.265637061 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.273365271 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.264538594 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.27084832 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.270107695 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.271562486 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.270045722 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.269291271 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.269915661 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.276600302 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.270070622 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.260053414 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.270571747 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.271809371 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.271365953 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.269706188 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.262431436 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.271596504 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.270268125 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.261751181 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.265310405 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.265664922 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.263778858 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.272825642 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.2711844 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.270589982 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.27035283 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.272177832 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.284939757 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.271803292 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.271833598 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.27546058 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.270476082 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.265313545 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.278855255 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.270995108 seconds)
  done (took 62.085737388 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.276154405 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.271456221 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27058482 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271130863 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.272289207 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.271141182 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.274278553 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.27180527 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.272076208 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.272920234 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.272397199 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.271318396 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.274025125 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.275575706 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.274143814 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271010077 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273287319 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271369975 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.271728302 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.272788051 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.273150629 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.272713177 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.271625342 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.272934627 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272231868 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271790979 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.272197245 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.273546616 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.274282745 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.274568065 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.272607934 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273562675 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.274000403 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.273700471 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27404458 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.275297205 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.274152771 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.272592598 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.273300621 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.272849344 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.274514643 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273771212 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.27461529 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274671148 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275599672 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273409496 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275275055 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.274736051 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27507792 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.274573967 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.275970579 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.275214665 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273517489 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.274359159 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274085905 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.274268984 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.274637018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.275807857 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.276026968 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.275657097 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.274470096 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275845308 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.274731328 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.275557958 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.275948644 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.276421563 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.275015558 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276633599 seconds)
  done (took 87.783122287 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276340494 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.275679924 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276180443 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276448035 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276922244 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.277706824 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276793104 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.277087544 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.276741643 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276591392 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275771642 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27677866 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275517121 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276881194 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277913008 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276214199 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277365951 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277905473 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278025598 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28020444 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.278104849 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278172664 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277273394 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278469149 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279098999 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277245778 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276948 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280700361 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277915552 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277067976 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279197658 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.278294145 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280316919 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277614039 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.279029219 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279372818 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278040171 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278330161 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278556616 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.278829656 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278775735 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279340857 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278758953 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.278465047 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279960249 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279825678 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278871196 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280626501 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277614528 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278796298 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279146529 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279114538 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279379219 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280428457 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280016479 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280591374 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280560663 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281133967 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28046041 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279498199 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279924476 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.282035421 seconds)
  done (took 80.424031167 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280242876 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281109985 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280925797 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.279455739 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280810577 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279134082 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280761885 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.280856797 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281095184 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.281633489 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280330347 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280687954 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28385352 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281895484 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.282546875 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283778413 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281338666 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280924572 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282280915 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281075965 seconds)
  done (took 26.791278101 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.2818973 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282044571 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.282726624 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282906354 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283766566 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283794668 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283980701 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284563524 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282714198 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281868056 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283315081 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283633752 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284523841 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285757968 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283426758 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281576611 seconds)
  done (took 21.708679021 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.286866892 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283579286 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.282273059 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284806217 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282054624 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.282059335 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.284543031 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.281713573 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.284632192 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.284612936 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.284646519 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.285418033 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284416853 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.286215572 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28536795 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.284315613 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.286256624 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.287435847 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.284500736 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.286451192 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.285477531 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.285650232 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.286431147 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.288639291 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.287864036 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.287290812 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.286895861 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.284484156 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.284517562 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.288478805 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.285205624 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287468422 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.284177303 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.287106858 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.286968498 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.285783768 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286759539 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.286958063 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.285267731 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.28626275 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.28617589 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.288048664 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286079941 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.285863643 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.286100038 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.285208965 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.288437585 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.287038104 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.287723663 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.288113742 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.289167712 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.287576531 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285894141 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.28627206 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.284862713 seconds)
  done (took 71.89790452 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285493296 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286851583 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285425874 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.286317925 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287607274 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.286229822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.286468304 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287957603 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284599031 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.287362613 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288398341 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286269029 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285594703 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286802814 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286816818 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286614086 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286862568 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286518519 seconds)
  done (took 24.334288855 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.286759551 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286372133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.287445811 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.287761081 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.288931691 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287995344 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286864174 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286941554 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286852207 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.287483693 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288971915 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287812522 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288466081 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.290633255 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291549847 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288464426 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.289079496 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290031113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.288237982 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288972163 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288293283 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291141872 seconds)
  done (took 29.517268826 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.282221897 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.282384811 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.28192189 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.297073004 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.294917237 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.284475188 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.28088906 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.281308149 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.302710831 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.320772403 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.314454321 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.294334792 seconds)
  done (took 16.698114599 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291597715 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290767064 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289517663 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29206308 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289202779 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290045171 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289493785 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290418092 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291115098 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2900901 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289005838 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292136099 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293237417 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291574435 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292149319 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291946888 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292716357 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293811721 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291473764 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294261447 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294484327 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29330535 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291547093 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293012179 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295881845 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292745852 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293107153 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294508684 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29375499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293360945 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292912582 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293216572 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291198652 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294737511 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295199604 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292935037 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290932531 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294744042 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293423628 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294514777 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291584999 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295384862 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29294982 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291564219 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290881015 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294013691 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292440087 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292759101 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291746917 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293737265 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295427107 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294267999 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293417922 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294476633 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294540127 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294049773 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293128932 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292465605 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296285773 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294980425 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294781201 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292802139 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294084061 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293606397 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295775465 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291818653 seconds)
  done (took 86.511604009 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297064374 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294107591 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294176238 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29528852 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293821017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293834822 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294914726 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293481552 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294309111 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296402509 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295148497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295431199 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294578107 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294162291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294897911 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296095769 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296086209 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296618754 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295583515 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295979404 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29752029 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294521152 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297973888 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297300614 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299832202 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297396211 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295128678 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29470734 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29592744 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295690366 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296910387 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29581896 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296933123 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295352055 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297859931 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297572101 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300084535 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298455254 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298736944 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296941714 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296727356 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295927285 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296341996 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299027952 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301280775 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300130373 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298140494 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298110857 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299989495 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298244068 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299181743 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302328377 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307576023 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299168731 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301136631 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29912634 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298210758 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298955249 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300786034 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301075383 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299119164 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302122831 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302605903 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303583249 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299936811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303543652 seconds)
  done (took 86.827190034 seconds)
done (took 1771.30466908 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45784671 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.417321258 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.291814865 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.303951217 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.296238751 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.288728651 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.306789347 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.290734354 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.291941322 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.292439877 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.292328319 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.487604539 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.325900835 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.292789305 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.293086307 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.388838487 seconds)
  done (took 26.496869259 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.315812901 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304588363 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.404960623 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.307578291 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.325564335 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.478911176 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.358512723 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.305442097 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.460459925 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.32105598 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.297785848 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.320818922 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.300913973 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.299962475 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.319150008 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.475985173 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.538514632 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.297717165 seconds)
  done (took 28.614862413 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.723860403 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.30649669 seconds)
  done (took 5.223254895 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.320852632 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.302322925 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.303554641 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.299482638 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.291470088 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.292571283 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.30039412 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.298393243 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.303482424 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.424944594 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.304134178 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.315813925 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.318647631 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.303490768 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309336712 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.343103083 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.44498307 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.307588139 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.309560243 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.306655819 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.300740049 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.395905324 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.343608427 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.312220812 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.416202289 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.298468523 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.309887018 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.308755441 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.431739665 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.309659744 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.301191059 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302916747 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.305690084 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.296363507 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.739431603 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.303012772 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.327456507 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.310672441 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311018218 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.446623665 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.306391097 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.308243701 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.300738582 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.740571138 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.45649371 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.421606345 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.316933972 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.319244733 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.306521299 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372379525 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.312754539 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307290892 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.365215191 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.13294963 seconds)
  done (took 83.634806753 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.342226515 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.301857555 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469506753 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.315218255 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.299926407 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.303936182 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.305837372 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.56788304 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.340391745 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305931989 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.582384674 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.785749412 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.307359871 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.340746776 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.943898322 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.3849636 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.303619671 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.309068192 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.30444874 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.303167123 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800365454 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30875614 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.312585802 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.353543055 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341518362 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.763879014 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.299912936 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.304495952 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.30859217 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.302502776 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.759238349 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.306459578 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.363376089 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.300548408 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.571800105 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659653028 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629435175 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.30572125 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.351200842 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.299633398 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.3056873 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758584111 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.641478215 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.299952674 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.319275287 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760493431 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.304725896 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.311064295 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.298413157 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519705763 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.305651809 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.304539494 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.303741024 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.305863238 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.300948083 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.351828719 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.324215356 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79807524 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305530071 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.307410585 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323965624 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.302130701 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.307768026 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306792805 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.308692619 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.652120282 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.498886469 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.307397671 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.65120832 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.757859568 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.315239673 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.83512003 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.311314151 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.32286404 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.506834594 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.301718562 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.303312164 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.797166829 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.336570105 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.302277671 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.626863387 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.307511359 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.599083386 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.321100608 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.31392788 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804522121 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.312515674 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.338062101 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.304955377 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.305996776 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.307124397 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308827604 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.577503198 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.334096418 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.304198424 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.305873788 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.327459317 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.306696883 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.324369997 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.315847999 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.824382151 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.312602753 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.304220359 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309319849 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316254321 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.305853744 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.311427047 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.306793299 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538364606 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.311661016 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.332651513 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.307123468 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.309586783 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.311681919 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.353621234 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.305137828 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.596264646 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.308945472 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310212708 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.308802609 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.307705765 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.361070891 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307557559 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.305635026 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.171377132 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.548321113 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.324708833 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.310463587 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307075866 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.30688191 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.305333138 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.3146341 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.335297442 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.309781736 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945181613 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333371656 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.333883779 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.307264199 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.311842073 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.306761443 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.319563499 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.311960903 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60111131 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.583276871 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.509271397 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.311327808 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.314005488 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.995941652 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.352900807 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.449228201 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.328959026 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.308881754 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528516846 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.512799912 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.312573033 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.315054871 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.3089963 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.541812516 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.314551432 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621348162 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.789603816 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.316182136 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315779657 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.951008895 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.018830216 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.314930984 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.312882274 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.595550831 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.329060931 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.30986272 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.309026094 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.307797309 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.312925116 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.322714702 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.317025409 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.312740746 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.310416687 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.581715766 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.487057695 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.326350511 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.313539884 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773632199 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349667224 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311465625 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.319185513 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.31467277 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.310843006 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.335110028 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.314950284 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.351979623 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.315507741 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.314209786 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.796969952 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.317745831 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.31829033 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.466057788 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907902591 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.315177898 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.31100399 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.310815945 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.924422527 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.838408805 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.380654733 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.607386172 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.318292743 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350774545 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313840412 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.36662527 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79917341 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314994197 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314945762 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924771042 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.316027764 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.720500425 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.313171877 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.314569313 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.835546196 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.318846467 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.31518393 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.311053351 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.31053483 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576625729 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.313106292 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.373006661 seconds)
  done (took 490.046018611 seconds)
done (took 635.19810791 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.317914985 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.318899867 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.316548674 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.31928339 seconds)
  done (took 10.485549136 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.338304567 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319751473 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.330029209 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.31852528 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.33100733 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.31771611 seconds)
  done (took 9.163843086 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.316010587 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.320486973 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.32004307 seconds)
  done (took 8.161694942 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.524454894 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.328399696 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.663080318 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.321867099 seconds)
  done (took 9.045254961 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330965424 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.332801952 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.331147422 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.333264358 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.3387739 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.338725833 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333386888 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.333528774 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.340019264 seconds)
  done (took 13.220037042 seconds)
done (took 51.288210238 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.438800561 seconds)
    (2/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.526402392 seconds)
    (3/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.486926968 seconds)
    (4/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.564911906 seconds)
    (5/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.410562787 seconds)
    (6/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.43668272 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.387730341 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.308305324 seconds)
    (9/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.323872047 seconds)
    (10/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.398960225 seconds)
    (11/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.639092552 seconds)
    (12/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.361617341 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.353880462 seconds)
    (14/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.608836126 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.481153514 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.321742694 seconds)
    (17/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.490927877 seconds)
    (18/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.46220284 seconds)
    (19/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.502828477 seconds)
    (20/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.396285694 seconds)
    (21/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.591933958 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.4798313 seconds)
    (23/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.384190969 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.334409034 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.394166455 seconds)
    (26/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.298512225 seconds)
    (27/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.536915939 seconds)
    (28/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.351520483 seconds)
    (29/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.393885773 seconds)
    (30/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.467155784 seconds)
    (31/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.336631914 seconds)
    (32/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.497591506 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.344629919 seconds)
    (34/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.30548119 seconds)
    (35/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.31546813 seconds)
    (36/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.800019545 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.410960059 seconds)
    (38/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.43645907 seconds)
    (39/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.355833658 seconds)
    (40/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.527577085 seconds)
    (41/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.304198535 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.389833094 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.435685469 seconds)
    (44/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.488616726 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.493780417 seconds)
    (46/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.353524302 seconds)
    (47/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.328482277 seconds)
    (48/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.300648852 seconds)
    (49/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.306592495 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.362201602 seconds)
    (51/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.485714805 seconds)
    (52/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.44198392 seconds)
    (53/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.306553199 seconds)
    (54/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.32574005 seconds)
    (55/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.32579673 seconds)
    (56/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.491894621 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.557359031 seconds)
    (58/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.508423486 seconds)
    (59/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.398992724 seconds)
    (60/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.420207986 seconds)
    (61/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.305009295 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.330711191 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.305516645 seconds)
    (64/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.653097411 seconds)
    (65/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.415318137 seconds)
    (66/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.300048703 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.545980626 seconds)
    (68/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.660856805 seconds)
    (69/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.5218417 seconds)
    (70/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.599507472 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.435814885 seconds)
    (72/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.38563877 seconds)
    (73/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.307477374 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.445574832 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.552219403 seconds)
    (76/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.707661834 seconds)
    (77/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.492158073 seconds)
    (78/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.305456002 seconds)
    (79/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.408600431 seconds)
    (80/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.626748689 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.440419162 seconds)
    (82/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.601379467 seconds)
    (83/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.365440633 seconds)
    (84/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.536789767 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.42271907 seconds)
    (86/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.310841382 seconds)
    (87/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.353837056 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.431843068 seconds)
    (89/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.308389762 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.408403969 seconds)
    (91/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.465611604 seconds)
    (92/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.54259353 seconds)
    (93/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.434327892 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.487429108 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.450831118 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.369665726 seconds)
    (97/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.441105455 seconds)
    (98/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.329066016 seconds)
    (99/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.328902888 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.597270073 seconds)
    (101/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.38196631 seconds)
    (102/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.304098035 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.443953753 seconds)
    (104/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.302541632 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.343061789 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.398283512 seconds)
    (107/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.592088192 seconds)
    (108/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.486678492 seconds)
    (109/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.579372055 seconds)
    (110/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.500575325 seconds)
    (111/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.680338535 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.429034248 seconds)
    (113/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.675529499 seconds)
    (114/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.358065912 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.436006909 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.496127641 seconds)
    (117/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.391322256 seconds)
    (118/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.445864651 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.805282987 seconds)
    (120/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.479258448 seconds)
    (121/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.577252734 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.411637716 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368574188 seconds)
    (124/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.397841525 seconds)
    (125/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.310295061 seconds)
    (126/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.313838882 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.327876609 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.499878622 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.45297856 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.304924993 seconds)
    (131/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.331401797 seconds)
    (132/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.40736573 seconds)
    (133/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.430070245 seconds)
    (134/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.331872522 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.52816846 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.423597539 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.304520174 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.670273296 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.482311832 seconds)
    (140/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.327826013 seconds)
    (141/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.396108103 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.388906381 seconds)
    (143/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.303926987 seconds)
    (144/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.357520168 seconds)
    (145/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.305249314 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.311291289 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.442769771 seconds)
    (148/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.368777118 seconds)
    (149/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.573217753 seconds)
    (150/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366731425 seconds)
    (151/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.373452679 seconds)
    (152/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.396019651 seconds)
    (153/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.309616184 seconds)
    (154/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.529135644 seconds)
    (155/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.425059938 seconds)
    (156/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.57699414 seconds)
    (157/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.312033335 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.437351507 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.391079548 seconds)
    (160/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.365476327 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.36482287 seconds)
    (162/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.51268918 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.438170547 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.437784039 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.314747985 seconds)
    (166/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.491004463 seconds)
    (167/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.403972836 seconds)
    (168/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.535691459 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.441012205 seconds)
    (170/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.477887736 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.484670556 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.329374998 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.36386305 seconds)
    (174/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.530461564 seconds)
    (175/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.60253379 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.426798335 seconds)
    (177/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.30932253 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.434772107 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.405540538 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.431539075 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.433259455 seconds)
    (182/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.426355869 seconds)
    (183/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.311186176 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.409899914 seconds)
    (185/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.536233956 seconds)
    (186/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.360258938 seconds)
    (187/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.546988594 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.598408415 seconds)
    (189/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.327127378 seconds)
    (190/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.31452157 seconds)
    (191/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.551760267 seconds)
    (192/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.469867837 seconds)
  done (took 324.329660421 seconds)
done (took 325.536816195 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352738238 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.413205323 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.335860265 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.335999997 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338604905 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.335369191 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.355190656 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.336142349 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.351360528 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.351367652 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.332850216 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.342768834 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.349388063 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.348467663 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.370317468 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.339153761 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.337585287 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.345505588 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350942878 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.35075213 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340872039 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339619783 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.360997877 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.338632383 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347971021 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346874939 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.341283938 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.328185013 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.348956711 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353675377 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.339907248 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.348137713 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.354822519 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.349756034 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341743432 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349697746 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340409144 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.412794197 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.358795566 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.345281206 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.345536856 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.355744724 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.343838172 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.343724807 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347925652 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.361662646 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347366968 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.355684707 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.342689333 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.345974435 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361217935 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.351536398 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.346673222 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.338921876 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.346835448 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.357507149 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.349761392 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356754025 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.346824676 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341721254 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.376053206 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358749305 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.351787326 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348957349 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348946133 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.351880853 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.350040708 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.357140412 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.34736662 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343725778 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342549807 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.347321583 seconds)
done (took 106.39344695 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.466420275 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.336698423 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.477186605 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.347194503 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.49977048 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.489046175 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.346504972 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.344276398 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.347733724 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.131254274 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.350009369 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.344960617 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.340248032 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.348358975 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.468102907 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350693543 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.347916612 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.032460894 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352194887 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.47853734 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.331837871 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.342995828 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.344955068 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.134804825 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.335131658 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.329562963 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.471309234 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.338757368 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.028633062 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.324947257 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.328945188 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.029931363 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.472507622 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.359404548 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.348420668 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.349808762 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.49216488 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.342941327 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.455740482 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.454498516 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.468942086 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.378362813 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.326568168 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.331592884 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.341751253 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.341056859 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.340794289 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.37019674 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.329660024 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.341862786 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.027527325 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.351417917 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.341481292 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.340779753 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.342907531 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.370656318 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.342968757 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.343341435 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.474663201 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.342603885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.459262608 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.132813719 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.127425938 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.341655019 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.330661615 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.342742294 seconds)
  done (took 108.620482817 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.402457043 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.409096881 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.441455209 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.335670752 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.387822119 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.444972869 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.33517676 seconds)
  done (took 10.976983834 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.34271087 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.343593302 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385949019 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391276689 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.34320764 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.492403144 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345404255 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.347006092 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.343058562 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.388484855 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.344899327 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.345387949 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.352860202 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.334445873 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.384752658 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.348893008 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.452343281 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.337768119 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.344430678 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.489147336 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344762879 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.353935348 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.389908151 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.34850825 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.345387667 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.343596304 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.106619448 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344603554 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345489614 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.345128288 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344209525 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.391835364 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.344534595 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.336406596 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345872989 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453355959 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.346666307 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345772553 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346787808 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.337298574 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.346310148 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.345938728 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.347169524 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.347570712 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.345345395 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.362042587 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.346206881 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.347342174 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.346360698 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346168314 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.390689592 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.345766493 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.346375803 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.34631012 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.395108322 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354619174 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.346288026 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.348501859 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.347979954 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348313041 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.491274922 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.388079145 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.345904616 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.387939094 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346800897 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.347354208 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.348195149 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.348309665 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394830117 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.347779644 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.38786604 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.347660225 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.523715327 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.36482909 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348221418 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.345454298 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.343550397 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348913263 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.337622358 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.346883558 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.348501357 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.342167743 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.346545009 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348517114 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34844319 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.501604031 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450746647 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.349467859 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.353993998 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.349432459 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.348744417 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.395418089 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.349688167 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.349137299 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393095189 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.456014883 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.397347035 seconds)
  done (took 138.464223934 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.352828165 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.353343992 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.345392958 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.367923229 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.343777693 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.34178964 seconds)
  done (took 9.332104726 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.344484863 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.353403732 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.351041858 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.353025424 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.348932603 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.349343409 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.352307859 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342822098 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.353509393 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.349021623 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.349017608 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.346332702 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.348336193 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.347588875 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.347074204 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.349538424 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.346860254 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.347246293 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.346132107 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34888125 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.337684151 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.345482524 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350252465 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.343563504 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.350285674 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.346829472 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362895686 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.346150285 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.346225397 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.347379517 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.349353408 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.349702332 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.342826355 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.344389549 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.352465927 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.342140975 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349931203 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.350962571 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.348086485 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.348693015 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.351788857 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351257049 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.347852729 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.350234083 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.341703537 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.343662084 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.354640115 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368546215 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.349967987 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.350230646 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.351429692 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.349834149 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.349651257 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.352694042 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.343593623 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346948954 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.353253104 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.350988994 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.3511662 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.345457394 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.352720148 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.352185458 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.347086234 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.354141906 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.351316413 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.35157437 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.345394154 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353533931 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352847592 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.353136903 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.352872731 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.353574669 seconds)
  done (took 99.384975559 seconds)
done (took 367.998918892 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.68051249 seconds)
  done (took 3.905936738 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.353157066 seconds)
  done (took 3.585590371 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.168800276 seconds)
  done (took 22.404293669 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.391162158 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.462733416 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.380436144 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.352006506 seconds)
  done (took 10.817395692 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.408598246 seconds)
  done (took 3.640080931 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.355173577 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.358324348 seconds)
  done (took 5.949043801 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.542955422 seconds)
  done (took 3.779538764 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.62118828 seconds)
  done (took 3.85290138 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.367585665 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.371079295 seconds)
  done (took 5.982638331 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.331290601 seconds)
  done (took 3.562658506 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.729929814 seconds)
  done (took 20.963495082 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.374041701 seconds)
  done (took 3.612881401 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.422076629 seconds)
  done (took 3.6516937 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.814288639 seconds)
  done (took 6.046974603 seconds)
done (took 102.986019129 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.346893288 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.353776467 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.350890201 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.351835402 seconds)
  done (took 10.628940199 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.416524784 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.411607355 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.424652452 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.418115539 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415476226 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.41566265 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.390646581 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.389425276 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.414913425 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.415180658 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.420200828 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.415257276 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.416818336 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.389591514 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41173016 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.423016489 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41529115 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.421545226 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.389193381 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.415751064 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.362360924 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.416457056 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.415487473 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.366633866 seconds)
  done (took 35.02462606 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.922720132 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.425142655 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.511446186 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.408099073 seconds)
  done (took 7.498752387 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.443901973 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.448341949 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.46131983 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.501414694 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.537109745 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.462732164 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.3899877 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388996068 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.37297338 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.447978248 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.500374778 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.428014162 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.531942803 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.36626525 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.658219589 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.360887925 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.365458056 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445639905 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.5000321 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.526929358 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.365105125 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.442618534 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.450461969 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.429966702 seconds)
  done (took 36.06083818 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.374696391 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.389583499 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.366271579 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.378323067 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.365883806 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.3643675 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.369808201 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.37182179 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.366579114 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.364277326 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.36906269 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.381711555 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.369914712 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.367953232 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.377254566 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.366200829 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.36937755 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.376001029 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.376859765 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.370136188 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.370616134 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.374529387 seconds)
  done (took 31.415429602 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.350523167 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.350157444 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.706648007 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.606221574 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.358624528 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.355352452 seconds)
  done (took 13.962589579 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.425421178 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.566346371 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.365097938 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.700489348 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.787874652 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.365262343 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.361930698 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.596168248 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.889014717 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.879738432 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.418878554 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.433853061 seconds)
  done (took 20.02812021 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4504887 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360802364 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367859338 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434388209 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360850821 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204053351 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42128326 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.070488691 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.373209671 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64097133 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363606644 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452517224 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.618148208 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367335671 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367429389 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.347523789 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592096741 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834728197 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366615165 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365068763 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399194606 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364362153 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369841969 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561910687 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212403943 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362775326 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.627265249 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362058979 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640698219 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619475936 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615824125 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369806083 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63998624 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002686295 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465437934 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561733231 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361644881 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38401901 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.359094174 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.383752901 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366954583 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365563605 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615774868 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368548663 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363165874 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375780953 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09105302 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.378492156 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.364331385 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366444526 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616271817 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463531107 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.371639311 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363685103 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377264911 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365715323 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.370821793 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491600665 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930740583 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363969341 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378232317 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.370908438 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364814283 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38055858 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984870226 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.371681716 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.371651436 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367686115 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366294544 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37635278 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391187096 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362688359 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.388578805 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365925194 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113902205 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372323296 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366230096 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898242398 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368670626 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.368476479 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598553574 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363977862 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365067085 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.364619826 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365675612 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078895436 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377756913 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.34022426 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430874251 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078102414 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.571636163 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391711457 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399605012 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587401638 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.339326912 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368085557 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.368345893 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375214175 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389870964 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086227003 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37191822 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.374435817 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62421657 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.575700363 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368869264 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.343842627 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849559897 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372153758 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.398244994 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368324305 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.573139812 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.975056527 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626918034 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37006137 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407152708 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368690012 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136486149 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373109009 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.378427527 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368648706 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642999616 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.179703375 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369704826 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435643531 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373591999 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369258941 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381271986 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371586803 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370414405 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.551124601 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382538811 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62544768 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.37854816 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367409955 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.380441978 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371261106 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.378817135 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594683962 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371424112 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654533766 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371213478 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370521678 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371786078 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.59476868 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.370810886 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.395218437 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63551325 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376120915 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374633772 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627761597 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408985864 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481107502 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400408418 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.376609464 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632295405 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.377980736 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.375965849 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385044235 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378668614 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380700675 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.379928013 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362356335 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974224773 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355726955 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373639977 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370423188 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.387823024 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443264534 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38214373 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571350923 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.388196142 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378785297 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.379192618 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.384330986 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59895234 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621897598 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.377879251 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456234743 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.837349499 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978560722 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396131272 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.371435928 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.373435118 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.373546994 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372535532 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372835098 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373638027 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572767439 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636048445 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381369598 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991005593 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381432268 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381404752 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.386075851 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626042095 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.388398966 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3783047 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.385768064 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374166897 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398728628 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634941204 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518628902 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.391656608 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376045833 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.894459005 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383032646 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374502561 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374793861 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407461551 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386935268 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2690213 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642949079 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376842156 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627516532 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381846175 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.399915941 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.375439047 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385806371 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387018193 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.401399941 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403844543 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.57559701 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380307589 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396564429 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936172754 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123854986 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924459053 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38792713 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.385127847 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381498075 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099427332 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380985903 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377995248 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607597398 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104600241 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383867093 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843557754 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.383449922 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117449274 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63374078 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616439861 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378996624 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.392191874 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637235999 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594735331 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410168675 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385609964 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383059804 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.351622792 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913462384 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389326069 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459116925 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098626749 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392790772 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385092952 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.440282088 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387847352 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768327553 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380412898 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377800917 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382516978 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38226534 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219396512 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380201279 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378013934 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001402956 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383288596 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.847197278 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376542934 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.581789111 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637304651 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.611396181 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.386040476 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.388389012 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638274013 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635052371 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380418938 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379987859 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929267995 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.258653084 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.3871448 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378934695 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148849178 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386290737 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667626633 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.387716566 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.396277376 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38648583 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381905178 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379262255 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.378927622 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386183358 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355224076 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851836027 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.381298689 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376882357 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389751492 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386308146 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.638132396 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.396967193 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.988138025 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612588515 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381512855 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413269455 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.386495461 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395488875 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.354228515 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382682555 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381946121 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388623398 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604974242 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394956187 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.35953145 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.450694571 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591238697 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381250534 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38101337 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595589979 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.388366869 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.3849564 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158456143 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420163542 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380612655 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382727999 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373763952 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422513258 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450675692 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583187397 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.645113884 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641081111 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777457459 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387544848 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384432396 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.398948126 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478844067 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381389006 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.400228651 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.162102143 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986883167 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135772071 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997772945 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644548452 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392373505 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38874612 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381332457 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521779668 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382628255 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658692411 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384639118 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.400575012 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406733506 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38280872 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417204971 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600019852 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660746542 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383148017 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390672974 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389248361 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.384092091 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641218078 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.601800074 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859292482 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919771143 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38713057 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392110545 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.10455394 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663526221 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383533578 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38504812 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384259415 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.390406477 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41366653 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.397236742 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384347165 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520208424 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637800447 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036255764 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647278057 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.421135333 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.905635368 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385002748 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647572897 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155862814 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58896716 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001791187 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105908569 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652319172 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45578283 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588986285 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.390216264 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523621544 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.385172664 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392710424 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388110035 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38711737 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.387512458 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.641470557 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003239606 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659552241 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.39434589 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.387982845 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423600081 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.591016303 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618082644 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103919626 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615994177 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647503614 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399119128 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387797907 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999122405 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651981695 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395482664 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.395098433 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602921586 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394720102 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416550556 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.907111856 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.388987601 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922700815 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.278593792 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408684245 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386653836 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126326152 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998043757 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.397108067 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868716715 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389555665 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398192554 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670481268 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.395890063 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400536013 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681542047 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.394700684 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401690552 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599100511 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.004513495 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138833761 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.398952092 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424736024 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.398485842 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390962661 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455094475 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391187597 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398422902 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.786703307 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395617637 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390136955 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405205151 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.39342389 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409406389 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.399207201 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392628599 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.400754493 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.372032902 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.370581219 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408036223 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523892304 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927659733 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397845715 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.072529567 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.740388781 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64725222 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39692964 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.370206944 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.39778194 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3916493 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391694596 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393699986 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388995206 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924729156 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.402791671 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.655578086 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405941547 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.604294992 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6050999 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39419458 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598618579 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410274414 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421077474 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.36470124 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392191336 seconds)
  done (took 981.534457495 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.401495057 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.39445313 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.396190105 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.406768623 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.416144475 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.44639015 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.445768558 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.477320217 seconds)
  done (took 20.654099107 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.39617775 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.401128665 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.396562952 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.39907658 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.390161199 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.873285803 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.402832972 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.399281972 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.407414749 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.397279763 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.400418432 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.013507613 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.402491826 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.394685627 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.398753747 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.403014188 seconds)
  done (took 32.746509848 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.440465725 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.543005657 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.275542056 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.418104764 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.417166566 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.408926187 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.622424319 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.387759418 seconds)
  done (took 26.78500564 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.402943837 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.40047853 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.401461844 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.401398929 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.401196295 seconds)
  done (took 8.285341862 seconds)
done (took 1225.857644185 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.402217891 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.400530469 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.402392868 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.40293519 seconds)
  done (took 6.881006183 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.369712461 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.370667707 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.371212181 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.386911089 seconds)
  done (took 9.770618507 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.063189185 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.907496657 seconds)
  done (took 5.242822498 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.853043356 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.854960975 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.847888539 seconds)
  done (took 6.832569516 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.684515363 seconds)
  done (took 2.96657366 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.271559703 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.375698308 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.393420089 seconds)
  done (took 8.313887686 seconds)
done (took 41.280499383 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.387525444 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.649993019 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.544182145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.388729262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.565016184 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.544237699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.131790904 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.389726083 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396333723 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.404831188 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.38963854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.56612626 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.109887027 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.636400131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.109868093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.637449106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.55090229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392799104 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.390824734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.392018033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.13172437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.394882357 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.400768054 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.390480552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.572479499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.533052331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.39162348 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.637646294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.402422231 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403316965 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.53889293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.398655799 seconds)
  done (took 83.049454096 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.390820806 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.410389506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.40376078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.394071591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.39069455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.423864887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.393093807 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.390947506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.395901406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.391137293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.400087455 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.400608619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.39206496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.392725597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.409333024 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.391113765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411088002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.396788646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.391633492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.390734651 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.392258119 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.390935885 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.392854713 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.390315854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.396502921 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.408665737 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.407999084 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.391444547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.390971418 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.401834515 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.399809899 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416298607 seconds)
  done (took 78.016699973 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.40639023 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.402654412 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.398370013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.397378526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.397527752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.39925791 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.398694585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406518461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411100061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.397995596 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.398207274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.414784526 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.401905188 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.395835409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.413474369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.393785499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.406669625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.400343371 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.398764103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.396615782 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39617711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.393472073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.40256169 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.40080393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.398951436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.416361852 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.395291918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.399014501 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.40083919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.4139401 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.400452116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.399934829 seconds)
  done (took 78.132782858 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.632562918 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.407455297 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.411365722 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.40600911 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.412598706 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.409979207 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.405033617 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.644233184 seconds)
  done (took 15.007242094 seconds)
done (took 255.479762359 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.402601077 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.886916533 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436477988 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.402953444 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.43754915 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.42999815 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.605068918 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.4329454 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.592738056 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.409519 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.443500896 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.406846583 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.185066706 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.543675519 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.251247681 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.380939559 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.262560743 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.402534079 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.955036858 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.627696406 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.438689961 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.39961458 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.253166957 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.277060668 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.384455266 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.464992297 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.470833666 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.558033407 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.52063015 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.466163787 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.894048512 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.413054723 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.407345182 seconds)
  done (took 64.725270164 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.403423578 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.413434209 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.41454723 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.413233505 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.41187356 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.413874875 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.403159803 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.413422728 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.411977229 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.414800457 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.413695903 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.414015965 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.414077329 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.414308024 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.410865286 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.390126056 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.404850319 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.413712076 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.40331417 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.389663676 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.413614913 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.412527287 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.414075394 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.415153802 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.415437844 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.414579065 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.414117858 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.413253833 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.414173277 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.413170547 seconds)
  done (took 43.603513831 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.414166162 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.982136747 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.127510682 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.419206058 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.407176072 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.411117363 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.687992796 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.422152472 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.410340336 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.411408497 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.878198906 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.423353674 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43922546 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.130557663 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414937579 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.416600907 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.417097294 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.406316196 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.987666783 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423027456 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.687029606 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.423186107 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.688072211 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.425274283 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.411168732 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41018865 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.412931125 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.229424241 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.432144359 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.878737793 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.160830941 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.687617978 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.161685323 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.184168717 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.168302785 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.423381543 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.418416429 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.883621957 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.417704634 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.410175398 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.686297246 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.41471341 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.134198898 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.092654658 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.430762799 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.417962037 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.26698877 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.889271943 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.648979559 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.421099267 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.166407101 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.419973153 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.421644072 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.409751343 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.644918562 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.418253415 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.409145587 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.285895682 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.420277412 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.687572335 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.426405581 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.410702099 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.985950805 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.415990276 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.981561992 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.416899748 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.41951964 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.41336655 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.145311813 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.419779736 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.098756666 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.434344492 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.41619576 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.880597063 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.989040391 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.31257426 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.416262897 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.986915595 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.182689136 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.709762664 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.421276345 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.210247734 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.712655637 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.420944166 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.424445316 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.421392481 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.421805762 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.486678965 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.685950252 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.037795528 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.099943646 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.301104471 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.697645898 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.424300695 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.412739609 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.292231843 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.427998955 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.422828799 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.136603389 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.112544154 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.434851559 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.420983806 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.089970291 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.437414421 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.692935055 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.424993239 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.179000516 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.421036347 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.490281655 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.422551193 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.421875386 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.418230269 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.69289078 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.423712355 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.423679731 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.087911564 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.913178967 seconds)
  done (took 196.947532673 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.408724432 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.40852634 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.410086169 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.422354553 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.408013636 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.415747022 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.40728913 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.408969704 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.413736302 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.409201814 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.408494024 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.41739433 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.414950084 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.408252342 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.40874558 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.410868212 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.408643556 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.433338872 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.409209647 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.409922476 seconds)
  done (took 45.535249599 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.425050871 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.962238694 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.930875575 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.429207464 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.42329616 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.416143666 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.470587701 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.425867778 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.425148997 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.710408363 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.589550255 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.431863828 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.426140691 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.423706455 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.927585649 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.408210459 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.709085215 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.97038198 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.43184847 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.964348711 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.407377497 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.424831514 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.415819181 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.964080335 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.725466264 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.698602136 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.478940093 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.96840405 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.430461649 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.426467723 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.964429422 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.433099931 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.417720372 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.953397934 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.431725459 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.439649912 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.426001888 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.473475834 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.480793736 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.717941964 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.975771548 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.710421196 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.44359523 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.597732315 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.428248944 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.400275676 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.974896726 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.432577597 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.401636038 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.427042704 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.430967053 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.941824181 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.424956873 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.94191212 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.431864592 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.428144805 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.967776732 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.947297826 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.937480352 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.590160334 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.423996246 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.695769592 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.434345236 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.979147834 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.434609561 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.427787665 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.428113312 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.588582576 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.975693449 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.702997978 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.719882249 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.71949294 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.435461971 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.48520337 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.436592804 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.717379514 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.488591021 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.847776261 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.716063192 seconds)
  done (took 128.365633435 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.679320591 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.536678085 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.789432745 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.013633129 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.926723731 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.565391753 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.535421554 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.66061245 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.42793825 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.519209868 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.056293442 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.524888885 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.185922573 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.488297409 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.532420175 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.552241947 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.816029911 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.422178791 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.08328583 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.031743692 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.438934372 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.535039068 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.933332661 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.605141732 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.41596073 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.999152591 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.374371528 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.945595075 seconds)
  done (took 53.894098407 seconds)
done (took 534.35173856 seconds)
SAVING RESULT...
DONE!
