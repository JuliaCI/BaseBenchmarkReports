cset: moving following pidspec: 23823
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.334064798 seconds)
loading group "string"... done (took 0.567608329 seconds)
loading group "linalg"... done (took 7.507829156 seconds)
loading group "parallel"... done (took 0.157329498 seconds)
loading group "find"... done (took 1.110205768 seconds)
loading group "tuple"... done (took 1.809286287 seconds)
loading group "dates"... done (took 1.209280183 seconds)
loading group "micro"... done (took 0.228933088 seconds)
loading group "io"... done (took 0.901403834 seconds)
loading group "scalar"... done (took 36.472024989 seconds)
loading group "sparse"... done (took 11.435506821 seconds)
loading group "broadcast"... done (took 0.913601452 seconds)
loading group "union"... done (took 12.214159281 seconds)
loading group "simd"... done (took 4.520666729 seconds)
loading group "random"... done (took 8.582539953 seconds)
loading group "problem"... done (took 1.798492482 seconds)
loading group "array"... done (took 19.842019324 seconds)
loading group "misc"... done (took 1.749741431 seconds)
loading group "sort"... done (took 3.101473833 seconds)
loading group "collection"... done (took 16.495749831 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528680237 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131415976 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136901014 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123409869 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152319051 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123575538 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130443711 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08963319 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.8978177 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151609778 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119442632 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407230189 seconds)
done (took 5.414330617 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178210824 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086884191 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088297068 seconds)
  done (took 1.278728018 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07037302 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13088703 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072438817 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073448039 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072489459 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071923394 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072082486 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071888281 seconds)
  done (took 1.670643915 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078201416 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074677887 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071697989 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073306878 seconds)
  done (took 1.403992084 seconds)
done (took 5.715392202 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.773684907 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212253846 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190643047 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394630384 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132132342 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.175752153 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639056412 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317397612 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18972919 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080265586 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112240613 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.349158289 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124903408 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639283154 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079539064 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095004919 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143558496 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444097388 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073051964 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087648877 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094494972 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134261532 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090082701 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078752408 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151960626 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073023241 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138710221 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085730377 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071193866 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.216850464 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177851726 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.673648315 seconds)
  done (took 10.377374563 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104744861 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102701954 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073752348 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12971489 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103681027 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075568684 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080233554 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072894495 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094760538 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134499577 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095595657 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109708946 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071356627 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074170527 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087919949 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213335117 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085700113 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086192765 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075280845 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083167302 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112067343 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083226639 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084049905 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084647471 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133953265 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188507406 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103316091 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102226044 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072487969 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086495311 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11941325 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134592683 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072122409 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070543612 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130153686 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102743354 seconds)
  done (took 4.781402483 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.978195469 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145438725 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093055881 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136922588 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070346028 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11255308 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070654527 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085135329 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210051478 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.437367635 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.579646493 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.134647145 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115094372 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107199153 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072708643 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073593505 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072594064 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.484358702 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103872567 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111604635 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085120625 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074871899 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073831853 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070590871 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072278908 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068982308 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074169361 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118415393 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079202106 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.305964898 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124964313 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076291086 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.942894863 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171557938 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071481724 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.241944577 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169357955 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099785931 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144557935 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074798712 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071808426 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16368517 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07090794 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075608099 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072308796 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090023011 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108826502 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125194864 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073840242 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071689966 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171694151 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070225844 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084490748 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.124122095 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158438294 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073062139 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291864503 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094914925 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075648236 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071289384 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.169300024 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126031416 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072823551 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072341773 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073783675 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07369713 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364591375 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071128966 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.974117962 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075921098 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08244345 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075509938 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077502742 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077648146 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077457601 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.070105927 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093525677 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071159693 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077853173 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071069901 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071251261 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071145376 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087255339 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09603776 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.362501018 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.175446744 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073454681 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070551658 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095800043 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10094404 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075131224 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071748375 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103626818 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073126452 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071494097 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072136045 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087787502 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074906837 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117896236 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.072808708 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.087013377 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102687872 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073902973 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103192945 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08315539 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069787694 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072558948 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.414920682 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070128769 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07051419 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072577571 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070622821 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073191478 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07190175 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083414012 seconds)
  done (took 22.14895991 seconds)
done (took 39.392489334 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244167681 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074300824 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074632042 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074929931 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074476179 seconds)
  done (took 1.731576956 seconds)
done (took 2.90740584 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123941462 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102039255 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069780042 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100475963 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069596329 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106317185 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103664569 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081258715 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103311797 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069617286 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102439013 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070109421 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069570356 seconds)
  done (took 2.357320055 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088945101 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088350137 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075198423 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087247309 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069979645 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087213006 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086734038 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093237738 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088705986 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078137557 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069528113 seconds)
  done (took 2.079365649 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087448592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088501019 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075789084 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087919129 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068924151 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086700734 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086639964 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090196589 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086461285 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079016146 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068992682 seconds)
  done (took 2.068871851 seconds)
done (took 7.66838818 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080485976 seconds)
  done (took 1.234343436 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.528559717 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.677885089 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084221994 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.10827585 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190822328 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113952557 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.243147463 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088700384 seconds)
  done (took 8.345304801 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094318889 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085826665 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077175917 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074701597 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077119422 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073932323 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073558922 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075564761 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075254209 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07685251 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076840474 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074479345 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073686976 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07607715 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074219461 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076475106 seconds)
  done (took 2.464632935 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095761048 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094743025 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077939673 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079702092 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077317217 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076588999 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078909336 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078493426 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07524887 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077234923 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07965668 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077876209 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076533062 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068410885 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078690896 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082351839 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07551458 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078301428 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079687031 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07999649 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079505763 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069009002 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076144865 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.0785592 seconds)
  done (took 3.142511198 seconds)
done (took 16.349695102 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110587843 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072646985 seconds)
  done (took 1.343780671 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083283184 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084413609 seconds)
  done (took 1.337373505 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083832559 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069500739 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091049981 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080934031 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070564478 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069752611 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088705648 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070385287 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069795821 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070433356 seconds)
  done (took 1.934436781 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071981416 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078925244 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073269139 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083478531 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076522138 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068376479 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074856151 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071534603 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079579677 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067110642 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074459796 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08758403 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074651335 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088476979 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075021183 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072218582 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074388509 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071039012 seconds)
  done (took 2.535487772 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069647286 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070521252 seconds)
  done (took 1.316838878 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070764928 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067143639 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070289292 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070065209 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067652019 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066750738 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067993149 seconds)
  done (took 1.65171458 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.359252699 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120471645 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.304960375 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077015611 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08586346 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257651131 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07250199 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076584405 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076148508 seconds)
  done (took 2.638633229 seconds)
done (took 13.935924086 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08540738 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090816544 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100475241 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.379650548 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097317384 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072742671 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118904721 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185259158 seconds)
done (took 2.317307296 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212924758 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.657132168 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401273899 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20654422 seconds)
  done (took 2.443704992 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333130253 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092981575 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065423282 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.072923829 seconds)
  done (took 1.749403556 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071604402 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075100417 seconds)
  done (took 1.327717275 seconds)
done (took 6.91735425 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071959118 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090854814 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071251362 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.179116638 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071125553 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.069440517 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068926444 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071539896 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071808667 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.071202287 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.071102694 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071688151 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.068916848 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068796389 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068840998 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071365535 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068836909 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069410563 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071449324 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069097376 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068860898 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070842747 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069781189 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.068683454 seconds)
  done (took 3.023490552 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087342402 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071549143 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074846318 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074809443 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072561582 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074977659 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075477638 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071320053 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075335404 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073119317 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075195382 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072708377 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073128568 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073242031 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073722946 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073102217 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075641815 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071847693 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073568 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07313112 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074950828 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071380772 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07366696 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07555571 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073891636 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073522255 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07338898 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071611164 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075540276 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073395552 seconds)
  done (took 3.4153257 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074688463 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06815294 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068602207 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075366242 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067750737 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068785948 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067858044 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06915443 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069062174 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067880508 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069276105 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067884249 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067987328 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06874648 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068858762 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072664515 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08447915 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0684528 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067932958 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068326933 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.072263629 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070329541 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068056442 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067921453 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067945131 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06807083 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06886364 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068359978 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068880915 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067746683 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071497276 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072849507 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067603963 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075951531 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071991254 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068565368 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073054647 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06765078 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068392791 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067796474 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067621104 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068192662 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068330958 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076055649 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068029449 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069719913 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068004249 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069428635 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068723527 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070237813 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067895552 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068023965 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070312122 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069755971 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073178369 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06822482 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068862144 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068285476 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068632128 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068030941 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067816275 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067683889 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071517443 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069644384 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084678895 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076382173 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068080959 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069623333 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06911508 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071764967 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069594507 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084137484 seconds)
  done (took 6.244829508 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090852006 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091609001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070552078 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070432529 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066140976 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068344477 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074211676 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068791982 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071087799 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087486394 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068631298 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071056718 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070842894 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072744443 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070037271 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070878215 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076571226 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066246282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068586013 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072623303 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069059142 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073944756 seconds)
  done (took 2.820373018 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15247191 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075118039 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109438481 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079219445 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074752971 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079887915 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074325272 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075136247 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075026487 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072440729 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07229944 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074870475 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075445611 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072430153 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072550002 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072851028 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074764818 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072856773 seconds)
  done (took 2.655552355 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081091158 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071002677 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092779266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071573663 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071389492 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073469153 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07503027 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078197791 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073293272 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071493612 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078419851 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073508357 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073693264 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071226818 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073191929 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071365649 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07393217 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071709652 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078422327 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074955938 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07583271 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078831101 seconds)
  done (took 2.854314255 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084568563 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072439532 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085655269 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072480376 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066697324 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06864737 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075244921 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071193202 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07507826 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073121356 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070785962 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069207763 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073689517 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071171696 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073458733 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071383922 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073258987 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071025343 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073392564 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066608876 seconds)
  done (took 2.662221552 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089054686 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072811538 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071803727 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07796357 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072450385 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072536425 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078460634 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072233983 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072602518 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093015017 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072702008 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072863003 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078346442 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079341435 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072196114 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078856472 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078521225 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078869478 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072356508 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072833251 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093097965 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072092379 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078144329 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072160949 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072219665 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072030902 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072306261 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076504881 seconds)
  done (took 3.341715484 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072246149 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071454306 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069272119 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068891698 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069372757 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069382004 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069399604 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069340539 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071432776 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069535175 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070991333 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071347127 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07135536 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071359591 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071057597 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071609538 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071577729 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069995434 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0691786 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069620284 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072020678 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071406531 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071841162 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069375137 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069503543 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071232336 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069226629 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069230336 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071733913 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069319881 seconds)
  done (took 3.320779482 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07948248 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077332167 seconds)
  done (took 1.365147578 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067660192 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085226817 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067734492 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077049757 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074003204 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072268008 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078377256 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074442603 seconds)
  done (took 1.80047791 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086106985 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080366661 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071011661 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079926457 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079796446 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087572892 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128088752 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071113057 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078081412 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070203428 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083879375 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071057045 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078242241 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072145807 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077759386 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079429997 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.069085722 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075637636 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072114579 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069441606 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071433042 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080307263 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075063721 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066464337 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073524999 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094057453 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081858755 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070077767 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07434763 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079176529 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.078333838 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06546629 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070611869 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071289667 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069273588 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079514595 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085345642 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074792606 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079788082 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071126978 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078856537 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06594469 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076748071 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078583847 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082446045 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070625633 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070819733 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066052564 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070289951 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074274896 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066340823 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071757075 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065950932 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078914171 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074786034 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081845246 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070088734 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073622674 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074180165 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.0746938 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078280148 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073706683 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075004528 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069961318 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082042264 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076712942 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078612467 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066328838 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065401361 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068756687 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080743381 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09493377 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076956787 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071004122 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071601101 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069193112 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074675356 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071045887 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076588259 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078717735 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070179531 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074285337 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078586227 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072580572 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073579937 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076090695 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068935471 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072943631 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069528905 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086623944 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071409534 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06830242 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069491662 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081371877 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075155575 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070232366 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069749949 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078596525 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064938372 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070039461 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070754146 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072135234 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080624163 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073640659 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074219934 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079118979 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076714336 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071885153 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073562508 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067235921 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.195172821 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072917952 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080851357 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066327014 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075727543 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073561666 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.07110597 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080114957 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069605137 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071110052 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079180608 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07802862 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069519307 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067766387 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074555711 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06997913 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072431412 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079784079 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069414147 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066258116 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065818347 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075047282 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070025114 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074529962 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073861025 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075183403 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.0654046 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068459389 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07439653 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079268657 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071972874 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072499477 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076915643 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0730383 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069535562 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077996841 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074360361 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071053501 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076783963 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.073263123 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065949894 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073144584 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073810895 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069260948 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075334014 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073037023 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073617353 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070431855 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068971322 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076281383 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071070156 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070695396 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072500713 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069541768 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081507391 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073523039 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065924282 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068206484 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077284011 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070008438 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06998483 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070957326 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073929859 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070489318 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068612563 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.0698013 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073573335 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07894729 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073465815 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071791316 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07675135 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083689665 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070097078 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07376621 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069956587 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071335597 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070915486 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080766909 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077508483 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074687996 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074327325 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06909848 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076666969 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079677099 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071056788 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068864363 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070818125 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073639587 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077011783 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07338695 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070277701 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068748926 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072032366 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072462029 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073439761 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069484577 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070838638 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074528615 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069098223 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075550256 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070595019 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08140033 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075185193 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066586306 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072357224 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068432562 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.078103005 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065496901 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069063464 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.07063759 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070728806 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069118735 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073398303 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065042424 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.205333113 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081627362 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.074138099 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07187205 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071179314 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079594366 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073749773 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075462043 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076651481 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077950866 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082775789 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071521342 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075866258 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08403507 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070248047 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065004453 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077028315 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069305412 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070188534 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06947093 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068507766 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074873376 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077066054 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07744508 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065269892 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074165336 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069041325 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070772994 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066137874 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.0761303 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074327431 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07259457 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078822853 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070682809 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070437732 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07505126 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069824133 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070457103 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070864329 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073894081 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07053923 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073140614 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071118226 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074477497 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070320147 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.069268833 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072739172 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070339967 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072133343 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0759225 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069783651 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07169635 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073796809 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070627642 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072330241 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072651845 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.07114004 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07473149 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072481279 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072376701 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073914328 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066882001 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079170592 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069559465 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079241378 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072299365 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067928618 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075736691 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074230524 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074870938 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071215235 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071100384 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073184283 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069958106 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074178857 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078679255 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069343236 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081930603 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077977727 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072961013 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074005778 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072186609 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073414382 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071332467 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072944276 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070828437 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072081534 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070226697 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075439121 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073885528 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07155825 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07286037 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07114344 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072081136 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071106957 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065539158 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.071022559 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070867516 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070389197 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079405386 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070237318 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071578761 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069468129 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070511877 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069755637 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067636056 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07652572 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076996863 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070126251 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077265388 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.071316909 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07253418 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08108825 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064638978 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068141341 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.198388518 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071584194 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080512752 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071394513 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08198442 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072830696 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072090887 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068754654 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071848531 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069905083 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065723484 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068709742 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074571461 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071105309 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069728513 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070821863 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073959724 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07077335 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079947755 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070431537 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07283946 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070920769 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068318124 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071339836 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071121752 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074415667 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07110962 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070278075 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067886508 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069589516 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07260377 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07273762 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070769948 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073072484 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078362245 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070760152 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074574543 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072217106 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065417623 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074656886 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069836599 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0698574 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070960813 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074691976 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076406086 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071210977 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080191249 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069878998 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072319621 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070216851 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068349458 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069711956 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069634258 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07038678 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070854118 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071498709 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079304149 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069498382 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074811329 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072642321 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072336958 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077457781 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071597751 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074967047 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076534191 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07229179 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073778102 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080223822 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074971263 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075126487 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07126271 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072893749 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077196872 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070899166 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07795152 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072193805 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070988806 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073867211 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070418402 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070430034 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070420338 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069860623 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077056427 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071004404 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071531598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070660395 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068839745 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072902138 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072852982 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079178243 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073977909 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074242283 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065513257 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068321517 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070835206 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069944724 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072859178 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073603979 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076790815 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073204063 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07167284 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069786336 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080364228 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076514268 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074767131 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069447587 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074867719 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070399158 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073603841 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073259413 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07163754 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071134615 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075509812 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072977113 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.07067625 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076833697 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074057661 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.200486813 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074950326 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074827278 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073846806 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067179891 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072017414 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074064185 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076701569 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074446395 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071413134 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082676324 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070353685 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072115882 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072238205 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069813867 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076740698 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065870144 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073692015 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070878311 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071084357 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066372195 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071134641 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070698107 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073772834 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071815032 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065923069 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082243972 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081074373 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074835527 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069547577 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06920832 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065925754 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06630425 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071121334 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070928683 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073245034 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081682475 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070689499 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070868314 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065875595 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070302339 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073926413 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07468611 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068157799 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065772451 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071677655 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074389775 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077455877 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069958217 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069471493 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074901778 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073655259 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068836375 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072969223 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067853175 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074939292 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083752542 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071785668 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072855749 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077777402 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079124062 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071077444 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066661961 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07114882 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07438026 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072298026 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070814581 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071577429 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086061766 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074953616 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071022112 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069410587 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074710183 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073106115 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079605194 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07131025 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070437491 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076366932 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073568721 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077665735 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075490434 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077780369 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074350881 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074951751 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069983354 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0726932 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.070452925 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071546833 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070920401 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071210235 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075261073 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07660786 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071320031 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081486514 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080546256 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073125316 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067782743 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071127351 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070882901 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066821682 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070937259 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068978975 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068911712 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068954474 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069706897 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072707775 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076065283 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073262965 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070893563 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070120722 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065482986 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074746176 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073429425 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072073294 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067647329 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069924774 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.20079399 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077834453 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074723134 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071067781 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074259533 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074008911 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073573186 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067012682 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078784422 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070274525 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073848873 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.07157449 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07105036 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070832467 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075479095 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074025894 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071372333 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073822884 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075367052 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072103564 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068658788 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068369637 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076926225 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068682142 seconds)
  done (took 45.438752714 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103533613 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067690502 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066680276 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066408116 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075578076 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067560589 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06643974 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06753062 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067350386 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069227799 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066398586 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066103747 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074055986 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081127144 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075998687 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070630471 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066533484 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067694931 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066480024 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068142725 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074084054 seconds)
  done (took 2.767353644 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076190708 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080785671 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078360167 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085512414 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075500343 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074296102 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078497157 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073882437 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082225235 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076620236 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081789747 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073773338 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076816761 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077021074 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076846455 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074262096 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081736179 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075669168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074183262 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078978549 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074579715 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078732932 seconds)
  done (took 2.97063881 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071449987 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070103512 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07286861 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066319625 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069766982 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066270069 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072923487 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068375578 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073409715 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070404785 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070554425 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070924534 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073316991 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06654267 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071976448 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068500443 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.118618918 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07305076 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070541661 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070882287 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066046509 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072680834 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066249116 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066483602 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070564849 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073060891 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070954326 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068379629 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069953739 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070601859 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070053793 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069056116 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073252831 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071186837 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070661907 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070020663 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070766278 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072418004 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066476641 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069258316 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071450598 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067128862 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070542822 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072293852 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068622941 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068913879 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073351954 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070311228 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066667193 seconds)
  done (took 4.752653104 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080776634 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11167142 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071862501 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091905487 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083813155 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076309043 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075981042 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092888669 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067564208 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06851199 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084273326 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082105732 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06949957 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07440164 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076748501 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069857281 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071156653 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069075451 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072934757 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069821039 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072696398 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076447551 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083421486 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081585048 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073594416 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069246429 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069270044 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073797374 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081193445 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073318479 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074761864 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075191759 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.09943286 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074506042 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06916209 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072058806 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083933326 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069930323 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072283356 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068176619 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072007075 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073334254 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076364286 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084079479 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069589673 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074770352 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06934267 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067007485 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081144092 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072046119 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076510281 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082023223 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073691085 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069895625 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075747051 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083240719 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069506173 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068677559 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072445247 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080394896 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067548501 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07269771 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081616007 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.0713248 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075338215 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082000488 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074897587 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072867767 seconds)
  done (took 6.549088847 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078850939 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100086613 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085945577 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085381715 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079285221 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079678822 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079772994 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079410083 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079451653 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083425493 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079945474 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11851897 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083331366 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081161546 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079973797 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079669765 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079900223 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079741691 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079834966 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080103824 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079593709 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085803665 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079802403 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085179814 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082530729 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075164852 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079250131 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079741065 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085393005 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079336206 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082593413 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079554227 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079718424 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085896312 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082386882 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078993872 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069549425 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079520692 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080475519 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079477577 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075289714 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08607212 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079345894 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075844165 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079733352 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079584224 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086095635 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08249854 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082577046 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083397683 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079371732 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086259405 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079380684 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079838136 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085652898 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088185532 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085482404 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085720462 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080004175 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085654114 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08568929 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088233132 seconds)
  done (took 6.417966165 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084166808 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077016556 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085781727 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065981704 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070758671 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076418982 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068299421 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068588678 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076819412 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076796218 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078793802 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075781363 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078424838 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079372318 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076396681 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079061039 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076899205 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076051477 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077358285 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075847631 seconds)
  done (took 2.834495749 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080192321 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087507648 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071954011 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075938896 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073186505 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075453751 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073391821 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073902263 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071818586 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073408145 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079839218 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079635093 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07211249 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076100024 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079187848 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075443145 seconds)
  done (took 2.515917781 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086669058 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075858153 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081709365 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070307452 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071836612 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06648442 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069573413 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065520773 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066957393 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082945929 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069757496 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081131217 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069739812 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068776409 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067600899 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075288706 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06643006 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067421918 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069413918 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081309288 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074482525 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068677065 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074375364 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070147612 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072700381 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074208999 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068934556 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071746832 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067567294 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070079043 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07295746 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073659656 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067081842 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068083136 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068921864 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067635747 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069966093 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070280108 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07545028 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069937178 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068579253 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072606317 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070257461 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070867176 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066736391 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071340169 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066856226 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073208294 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068081593 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073162011 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070080413 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072394313 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070802844 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076759878 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072416295 seconds)
  done (took 5.234122776 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084917608 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074462713 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065800998 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068091291 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07367778 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071505709 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074173811 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072007104 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07189788 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068674953 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072277433 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073854114 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07223477 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073857582 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07217426 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073697757 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066363826 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071685379 seconds)
  done (took 2.610861388 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076498965 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071496878 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077940614 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070605944 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070462828 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073582938 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066290114 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068556929 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069281494 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071398492 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071414745 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073207089 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068630092 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073418773 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0708225 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071104956 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073055381 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06892888 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071009722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066889269 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072807155 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069033033 seconds)
  done (took 2.86631219 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098188796 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087587721 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141681648 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083963448 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091263305 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076293251 seconds)
  done (took 1.880934141 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096075093 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104118773 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070798357 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07416218 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078612478 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074723794 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073953407 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074761072 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081556716 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078905742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074947138 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084105377 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081057217 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081099911 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079274784 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078854328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075121907 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074867435 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071461328 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086261401 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074406019 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082531661 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074856558 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074610302 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074825875 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081338852 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081598195 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079555518 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074843741 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081763849 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079392323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074830066 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08237059 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07972441 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073849057 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082086086 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075372231 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086003483 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079669364 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081221436 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07399414 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079714154 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082315049 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078486667 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082131544 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074840713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079313495 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075128857 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074843805 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087239774 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079852308 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080891072 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079627128 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081695228 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081851929 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087852333 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08003719 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081593163 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079694728 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079948325 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081094528 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079807006 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080761493 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079578249 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079454473 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080776245 seconds)
  done (took 6.558032799 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107468042 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072261254 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074254763 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079376198 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080558815 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074910704 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074624254 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074824957 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074714535 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072503253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11141034 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07501442 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081029982 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080615432 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074660477 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07478133 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07500668 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080869802 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072031651 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087766736 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074569032 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080740511 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081151935 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081320526 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079481029 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079469949 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075180239 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075182377 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074325002 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074628271 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078411435 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075268116 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081291863 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071791535 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081075246 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07484736 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07519974 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07847783 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075059162 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079371407 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080937596 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086518772 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0746407 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074921253 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079636689 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075214295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074728456 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071884627 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075136719 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071774211 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079534361 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079700932 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080109418 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080978898 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074672633 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074634166 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074861088 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074963601 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075567623 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079685461 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081469396 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074612577 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088102756 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074647702 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074758078 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081435249 seconds)
  done (took 6.485693205 seconds)
done (took 134.570649581 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199307424 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175351226 seconds)
  done (took 1.669683372 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07292532 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100225761 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080393731 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132709599 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071087261 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10458617 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103690525 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081568149 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070761303 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071744224 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071336843 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073023564 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136174811 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071603817 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070723349 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073224992 seconds)
  done (took 2.69835997 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10123003 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159519221 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105165726 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070382031 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10186066 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076225274 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070013145 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081574265 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075689651 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07066504 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076639837 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074368461 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070176777 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074388219 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074969057 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076577666 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070141609 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076562171 seconds)
  done (took 2.820146703 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100960605 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093622593 seconds)
  done (took 1.51090812 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161366318 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137325241 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205107549 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.338219163 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156951484 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149932402 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145739061 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144475619 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116685329 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140969733 seconds)
  done (took 3.009145588 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103886269 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152454643 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273474659 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119857656 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077892925 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09419577 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122119487 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083381757 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08348242 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083488267 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08374659 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080479911 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103372823 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078117315 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079210614 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079877622 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106876587 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078722809 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080231021 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080015385 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104734445 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072326408 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077596178 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078919398 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080589165 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080366084 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071935869 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071506577 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079659063 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079610178 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08089033 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093498468 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080839145 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105013365 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075837985 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105846953 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081054554 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077328363 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079800519 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077339319 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081766807 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081498194 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07867135 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080832371 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072072779 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080755969 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071300951 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071813785 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081480792 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072403283 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081731005 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080343114 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105439667 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072134741 seconds)
  done (took 6.150508721 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110726144 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109582981 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075403223 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115984102 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108366764 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074808671 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109321331 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102977935 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111709123 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074870786 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073515422 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07493524 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082876084 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08442144 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.118261879 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111892106 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076680476 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073962989 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111063652 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110906423 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073530271 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105742266 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100912183 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109872076 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072450904 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075248542 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073247127 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075055228 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079906141 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081511146 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073220832 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082609138 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087469788 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081182864 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071965226 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07351549 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07320804 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081561842 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082537753 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081814821 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080342442 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072794385 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072895547 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074061184 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073610641 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07255697 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080742622 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082325628 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081137847 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073122809 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07435086 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073203906 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074079299 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081741159 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080060948 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08289284 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081896236 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073276713 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072907895 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075912963 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082323459 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082135159 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08175952 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073767021 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082658217 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075598485 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082733344 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085932446 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073711392 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074539069 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072725412 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073272833 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074625096 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080020238 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07993553 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074427066 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072574599 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072904753 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081255135 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080616217 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073033969 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079098406 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071956462 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072723452 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074242998 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074195314 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079347828 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081312936 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074067134 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072645344 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07294534 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072774422 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071928357 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078927462 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081055615 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081035184 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079831612 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073330116 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080298409 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079306177 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.205616826 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082810115 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07418027 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076153484 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074712918 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081454384 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080741464 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082762638 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073423799 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073622039 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080636979 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083562355 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073759789 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080432446 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082294007 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080791446 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072467356 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084572277 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073760798 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082210434 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072918236 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082816088 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073050285 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081538098 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073038527 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07228878 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072649334 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081563514 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07423811 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072944719 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073832621 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072886043 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.0806265 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083705536 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074829044 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081472289 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080452448 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07501532 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08060476 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072640288 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080897774 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073010144 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073724801 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072130122 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083449512 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073784015 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07309036 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072863304 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082526156 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073655236 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082426687 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079947564 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072849563 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083987515 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082722151 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079796772 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082744099 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074522261 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072942439 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073322544 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073151568 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080325983 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082062506 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07499424 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072939734 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079963782 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082117983 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072515814 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08105469 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080468206 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080579781 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073321602 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073447893 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083538553 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083134778 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080666075 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08100408 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081261126 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074069071 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079447823 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080328022 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07309982 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085538983 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073847369 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084379437 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080733219 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078903333 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080859625 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081473363 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080984216 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081986655 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084078663 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072244624 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072887083 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080993706 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072813691 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072374874 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079319323 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074107132 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073638364 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084512302 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073356852 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216141686 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073810724 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082049311 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073507233 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074733217 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086065215 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073270546 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074419219 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08109897 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075436474 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079815842 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083040701 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08034463 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073173041 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074610526 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081867586 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081803202 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073341685 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073221436 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074516807 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080723404 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080046085 seconds)
  done (took 19.422683586 seconds)
done (took 38.610098776 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195810948 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148931051 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.16074938 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116254007 seconds)
  done (took 2.017954134 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.112916813 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100971302 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093020307 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069916117 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098382374 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070330118 seconds)
  done (took 1.887827364 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275400915 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192818363 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176318941 seconds)
  done (took 1.981897739 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199594163 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186494337 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.426307697 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261997128 seconds)
  done (took 2.507656011 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140574815 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088162527 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070785008 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087417584 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128052718 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15668241 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099041044 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124489233 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082897422 seconds)
  done (took 2.363232485 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146368301 seconds)
done (took 12.250333814 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.09871777 seconds)
    (2/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.079262503 seconds)
    (3/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.250543918 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.076103948 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084213243 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072767486 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.252583397 seconds)
    (8/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.237645043 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079822147 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079383309 seconds)
    (11/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.205539469 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079918603 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.138146209 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.239168785 seconds)
    (15/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092857945 seconds)
    (16/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.211009828 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.122480851 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095998276 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178085483 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198755304 seconds)
    (21/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.327857489 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07908929 seconds)
    (23/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.159197358 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.181485356 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095702622 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078518105 seconds)
    (27/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.094430448 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.181195665 seconds)
    (29/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113286596 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.078591968 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086232241 seconds)
    (32/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156789675 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080444654 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086954304 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077907939 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104543136 seconds)
    (37/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081611205 seconds)
    (38/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124136342 seconds)
    (39/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081829828 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078870729 seconds)
    (41/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.16654081 seconds)
    (42/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.164938957 seconds)
    (43/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192831217 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06921215 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173453406 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.207287239 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102128626 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094395897 seconds)
    (49/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088085181 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079115209 seconds)
    (51/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079166167 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.152388973 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.149125005 seconds)
    (54/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.162900146 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.203623364 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.08130518 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.107712341 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076662308 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084474966 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.07357996 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144756325 seconds)
    (62/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.17968654 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092970949 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085804337 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081639509 seconds)
    (66/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076790093 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070070304 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078258243 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077891974 seconds)
    (70/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080656175 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068847297 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082490832 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080550987 seconds)
    (74/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.164375397 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.164788318 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.056771914 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095981571 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.07250931 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.056961014 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118971027 seconds)
    (81/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094842247 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162279885 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.329140829 seconds)
    (84/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.078062804 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.073050119 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117514134 seconds)
    (87/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.137248808 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139273039 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093478589 seconds)
    (90/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.106881723 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082515904 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.057560918 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.200484268 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070980014 seconds)
    (95/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058996049 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096760983 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093438927 seconds)
    (98/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.163699814 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11365913 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076379461 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078103499 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152016378 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.077726662 seconds)
    (104/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.124314135 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08403751 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.0948943 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093393373 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.225604459 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.11907351 seconds)
    (110/309) benchmarking ("sort", Float32, false)...
    done (took 0.136703585 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080659687 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071948136 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077661727 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078822575 seconds)
    (115/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.133598524 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113554291 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13255917 seconds)
    (118/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.057136653 seconds)
    (119/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.169253088 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069888335 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.161602226 seconds)
    (122/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180008554 seconds)
    (123/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175648386 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100565314 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05801599 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091431581 seconds)
    (127/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094165581 seconds)
    (128/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068391214 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079509455 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069267004 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071375191 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059612904 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172674265 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.087572739 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.059942648 seconds)
    (136/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079127272 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05824786 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.069546282 seconds)
    (139/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193259741 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09663853 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077103083 seconds)
    (142/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.115702261 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193213965 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070673987 seconds)
    (145/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072464036 seconds)
    (146/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080664946 seconds)
    (147/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11353152 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077877982 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081177427 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181503992 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083155818 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069114551 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076537769 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075882868 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.056802829 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.082603108 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079687096 seconds)
    (158/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180741398 seconds)
    (159/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084859818 seconds)
    (160/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068713544 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071011224 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140530142 seconds)
    (163/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07617788 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05802106 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069827315 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.0570398 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.056727937 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147733074 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057736775 seconds)
    (170/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080830643 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153514028 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076131352 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.081736518 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.082679956 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078726422 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111663809 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144091227 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09312647 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107992939 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.149666632 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073487225 seconds)
    (182/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056285596 seconds)
    (183/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077215163 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205057703 seconds)
    (185/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.100190438 seconds)
    (186/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.071017787 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.058283629 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073011293 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096174025 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067812191 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071339636 seconds)
    (192/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.057149783 seconds)
    (193/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095806809 seconds)
    (194/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081459274 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091761073 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.071161236 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077463075 seconds)
    (198/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070278441 seconds)
    (199/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076961533 seconds)
    (200/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057608636 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.151390684 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.058574744 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181892513 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070705935 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071105218 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.077322302 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070277249 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077134767 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07867441 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070853663 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096953888 seconds)
    (212/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.160336336 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057359937 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.071146712 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073894589 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077474727 seconds)
    (217/309) benchmarking ("sort", Float64, false)...
    done (took 0.134788807 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070738309 seconds)
    (219/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.057898224 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058413661 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.056523249 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07955374 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078302713 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144155876 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.118831828 seconds)
    (226/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078801523 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.1426548 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077701074 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089852718 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097881155 seconds)
    (231/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.057074847 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074026886 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057303026 seconds)
    (234/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.119406112 seconds)
    (235/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05912383 seconds)
    (236/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079246944 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.057168444 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.059845798 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.060485807 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057042109 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071091955 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057202647 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092549337 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.058155702 seconds)
    (245/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076187844 seconds)
    (246/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073209394 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.058702601 seconds)
    (248/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.057937399 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069018702 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070483352 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094549116 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057452095 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.058309647 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069986263 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070402098 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119956606 seconds)
    (257/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.057641228 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072965412 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091662504 seconds)
    (260/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074992235 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05961676 seconds)
    (262/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074005604 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077876116 seconds)
    (264/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.057548019 seconds)
    (265/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.119072205 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.058225742 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076209277 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071507305 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077800615 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057201694 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070162996 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181743604 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.056960119 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072212078 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 0.152511945 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093087185 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.182186266 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057739102 seconds)
    (279/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.057861028 seconds)
    (280/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057986912 seconds)
    (281/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076323659 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158351868 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058283215 seconds)
    (284/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070798601 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070847159 seconds)
    (286/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072901183 seconds)
    (287/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07230573 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056874783 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069810989 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071093302 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076903322 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12230484 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116525792 seconds)
    (294/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.058643677 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057143451 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082703892 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076497404 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070026725 seconds)
    (299/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071772864 seconds)
    (300/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.057267472 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173167828 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071154114 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057860882 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.0694966 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069857573 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056609267 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.056241489 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.214518938 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061006697 seconds)
  done (took 32.361063759 seconds)
done (took 33.7120173 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087764059 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097375426 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080260834 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097146567 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085962691 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082703474 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077888844 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083685456 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085418138 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086319967 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083718443 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060936722 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07983425 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079658052 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079839971 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094844969 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084426181 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078269582 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078658187 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069866763 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079514642 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070856045 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072172475 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061455476 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08388693 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077950361 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07984923 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079603198 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071056528 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071221594 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074915345 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079399644 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070803066 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084546388 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079104651 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078435611 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.08039914 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082863873 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072575852 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070919283 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080154378 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070890284 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078894418 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078918054 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077215276 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076361966 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078078755 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081906115 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094612869 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072888356 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080552305 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080983675 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081863754 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077781963 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07506178 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078364739 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076175988 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094996695 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078893236 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072901941 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079913336 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079118553 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07681986 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078221607 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078888689 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080871235 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082155125 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076547229 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080332467 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07731955 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.072357552 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078126412 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.0747743 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070576495 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080839699 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.085265318 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069226453 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076781767 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078339988 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078708233 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070091382 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072711945 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071995138 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077020554 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072570842 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060754268 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074997391 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077808457 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06955942 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078705861 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077737946 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07818207 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072261592 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082884943 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069896085 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076191469 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070687178 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070897074 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071982919 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074537314 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069540676 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07210425 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081476706 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071834071 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076996561 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082942642 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070602683 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07731754 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069523514 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069610641 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083449959 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079870917 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070377941 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072083542 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069175638 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07741212 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069552696 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.07044729 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070488164 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069934356 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076252386 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069704908 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072182847 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077124067 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083945831 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068958889 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073199032 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071269919 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068971933 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075815817 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068969028 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069264723 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070521933 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066517867 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07165192 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06922777 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07675367 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071402173 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076638796 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070954251 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077808935 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074697008 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075970233 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074852689 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068346178 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064387245 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071571658 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071397703 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07108536 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069228046 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070344676 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068983349 seconds)
done (took 12.993229556 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.075987727 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138409054 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09834898 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099967396 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.090132448 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07289245 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080824106 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099675364 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073585477 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102750611 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092116323 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090813922 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116384504 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069881706 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071286878 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074810482 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072513515 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084513704 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099611882 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09085733 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114920783 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070186372 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094449666 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091821501 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0904938 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095949681 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07212277 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074946996 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074888816 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103683684 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092732347 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074847288 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072295411 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098783525 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097362821 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085570381 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072175947 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085720812 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071875668 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070747692 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.072757114 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099142018 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083574888 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083951714 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074603339 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081249158 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072233878 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085613143 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0913581 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081755048 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087519484 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101464466 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073380225 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08688603 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069708377 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088105476 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080073504 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072937879 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071218025 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078312396 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071570519 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075034101 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083344591 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082685843 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075048903 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086605508 seconds)
  done (took 7.011317592 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087982925 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097830965 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087059958 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.089634944 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070446631 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070903586 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071470645 seconds)
  done (took 2.014992327 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071585538 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091207494 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091652146 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091504907 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084886489 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095416364 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079587013 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071621153 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095955681 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073001382 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091313759 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100665747 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074638429 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.084433049 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093088691 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071165325 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093363677 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071870668 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074113267 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093598184 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076872623 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101163657 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079283775 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072154847 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.0850103 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071534178 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116048923 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074839201 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073417564 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074989248 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073084162 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109851346 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083661866 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078427106 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072059907 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086268188 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084935805 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074446815 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082118336 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079827008 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084262659 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071745103 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072678817 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.074510002 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.077243005 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082353072 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072952018 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.077452064 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075939684 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089736649 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070754958 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084302856 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073693967 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076825219 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07299104 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078524041 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081445832 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072818669 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090964619 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073226236 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086245847 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085555245 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083979904 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086087125 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073365878 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083688508 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084209276 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073915504 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073743891 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075381087 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085811326 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070807304 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073635738 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081478982 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073573778 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093112785 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093128884 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07318432 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084533939 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072142015 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072166952 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071923352 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092650743 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076161406 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072164543 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075657741 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075159616 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.074788553 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070621944 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076285617 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069501966 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.077185138 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074125999 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074716657 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074053133 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086092768 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07427622 seconds)
  done (took 9.219440697 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074312671 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0728751 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074210309 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07212556 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072228089 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072685771 seconds)
  done (took 1.900865655 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093422285 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072880057 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083127143 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075324166 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106134298 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.089026054 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090067849 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080632101 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086898823 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082892462 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089854526 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092892709 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094641528 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07639822 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089423523 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0754424 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089924875 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078086394 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082167219 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076852709 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088625115 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076574569 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076519281 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084248434 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079209093 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075703282 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082552459 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082506432 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081729101 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080661967 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075942782 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079674382 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074408017 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08098255 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.089662974 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07442741 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075921726 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080610372 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07615676 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.081611519 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091138156 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076301479 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07765488 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080754526 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080552914 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074545279 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080828142 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082950296 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089674115 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081141415 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08042928 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07600016 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079093816 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080979596 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074810951 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080585597 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080994555 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090042772 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076142167 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074701167 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073137155 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079195427 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081198882 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079569643 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080859893 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080925471 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074966166 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076384914 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076675569 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075180335 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080879114 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073198734 seconds)
  done (took 7.27876391 seconds)
done (took 28.902197836 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536315807 seconds)
  done (took 1.952815047 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.598212074 seconds)
  done (took 2.043424679 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.481808629 seconds)
  done (took 7.928446559 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.366681811 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47200224 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.708997678 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137026334 seconds)
  done (took 3.169092989 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.721311471 seconds)
  done (took 2.174424754 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235656991 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227305312 seconds)
  done (took 1.926613078 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377591043 seconds)
  done (took 1.823101495 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.115279914 seconds)
  done (took 2.561970405 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.240007795 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179125636 seconds)
  done (took 1.869082483 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.439530333 seconds)
  done (took 1.886425378 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.857139983 seconds)
  done (took 6.30601475 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.219404702 seconds)
  done (took 1.714705631 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238723435 seconds)
  done (took 1.690758603 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.739488888 seconds)
  done (took 3.187244399 seconds)
done (took 41.689759052 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087914386 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090366927 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089896498 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085678607 seconds)
  done (took 1.786577783 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081159945 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07763166 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081281813 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077290169 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080922453 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077799013 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079372061 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080658847 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077357031 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078062025 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078167624 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077735565 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080058349 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07944941 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076776449 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079982868 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081197697 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07759008 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080513103 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077853374 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07589192 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080055836 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080241711 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076998975 seconds)
  done (took 3.347987902 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084505117 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077934445 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080376217 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076935701 seconds)
  done (took 1.776339402 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082965513 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094104975 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091987939 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083234159 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095216967 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090011452 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074292539 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074772611 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075450361 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083194169 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07354912 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098911534 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092624735 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083143522 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085125879 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070293249 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072532962 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090951931 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083932551 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084197404 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075359118 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083798492 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073411503 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093277228 seconds)
  done (took 3.459386219 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089060969 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106337717 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084553564 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095238222 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096260683 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070626534 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.09088293 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097142004 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130811114 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071256725 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076526332 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070940754 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079658261 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.07098582 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08574117 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.114402054 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11611811 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074615386 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102592404 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070975363 seconds)
  done (took 3.256274922 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077326241 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074961691 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075330544 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070930981 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081979539 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078099942 seconds)
  done (took 1.925086515 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073357419 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072879513 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072425606 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072364398 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076861916 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072432693 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070953762 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072603214 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072773285 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072705869 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072492088 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071156043 seconds)
  done (took 2.335055184 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185988355 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073499386 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.075107094 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071075336 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075410766 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071264944 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08602436 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072863273 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096566325 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072063725 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072135322 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074318488 seconds)
  done (took 2.490123217 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196220649 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080083583 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227106084 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15272205 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109774744 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115733181 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114155544 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113471796 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138352148 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10094831 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161048382 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161680818 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10893072 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137974207 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093279082 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106378603 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150679082 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164039344 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107883057 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161804958 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142832979 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128104744 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145592132 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103731888 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107222008 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119706465 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076066822 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08329507 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165400985 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131239905 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141614363 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11391748 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096115545 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171828177 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162872957 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138946142 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148620971 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087662665 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106063479 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134103466 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191190702 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091872416 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.299754077 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115050661 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085444764 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134663076 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119817016 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121579377 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105943884 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094044187 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144086464 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17644334 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.132947798 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089790507 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123684871 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11321214 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112472613 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114546668 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171151857 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155836435 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128860689 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076226762 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113384223 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148643871 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132931227 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109781957 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124312093 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096402631 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132434685 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152961926 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123297974 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140713193 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117799605 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0918044 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121825726 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137520638 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127077164 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159384653 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1255874 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077816549 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122002546 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101259142 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084560912 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147542006 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079441955 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171199474 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102601993 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108096266 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124000531 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108696678 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109706688 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152937277 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283954094 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107847775 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.07357083 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108552239 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120349066 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142698401 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091238952 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110234205 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118570409 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082009248 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133080313 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080360812 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123622191 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082166835 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12457279 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130550305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081995755 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124092176 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106301242 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104637944 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130791089 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155259961 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092141074 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085022483 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16160102 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123337406 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105053371 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141604525 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155099769 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105823539 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10164805 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144984315 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167397343 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093670172 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16031603 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107084559 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087931752 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092352107 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124928688 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113383837 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125572233 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085595421 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118532943 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161444083 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079289566 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098596009 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13410797 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082575317 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084505484 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107486311 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105117879 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099665031 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101271202 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103970692 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13474606 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270574631 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112039108 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125663145 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102379924 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161580619 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091544347 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106161108 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106779896 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075272214 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131141306 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151945966 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083523033 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15651691 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121889207 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117391554 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123654506 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087788359 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13620998 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083125704 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07510095 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139120294 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112933054 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111017113 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1469574 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117268152 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123961036 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119291095 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129919268 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129334789 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130115145 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110240445 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092702375 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114791122 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127963093 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078487934 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093263568 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084174808 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107589902 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097927312 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087102133 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139903143 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123202149 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113777589 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113950358 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099639566 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144047162 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080060029 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125744152 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120419726 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09843715 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148788254 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148151084 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133406623 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101624158 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28018849 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077262351 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079829606 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090420861 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123732614 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087856495 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087544515 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115288503 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144611509 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127939156 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133780709 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124492387 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119238051 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152260363 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075458873 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122114455 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140881152 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121164325 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107729115 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094309392 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101949266 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140240238 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106666693 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171738032 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11591312 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126096502 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153924073 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106059729 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083963698 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105670565 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131536944 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105005295 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140068068 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101692982 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091726855 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110248358 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083188102 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100036709 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126683323 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118707841 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13439987 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11416406 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13192052 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081824542 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114889043 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122455296 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121185182 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.075443896 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118489226 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153862476 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098133386 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118863607 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294913603 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084647542 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138347549 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168184109 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143014501 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089259687 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108558017 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12152722 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125560709 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119843624 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137440792 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107313487 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137731911 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111868312 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089688022 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090820553 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099173899 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10616545 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097900115 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103395083 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113940523 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099263362 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130593698 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105515708 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11241797 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119247717 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10334185 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097055299 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099749907 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171446244 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119245542 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165777269 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103701187 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140288896 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157946399 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08001834 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084086505 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083080799 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137465171 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088838633 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130733739 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112680423 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118183196 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124131917 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137888883 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098809394 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073538231 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110331475 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131494428 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124095859 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101276633 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104098172 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156988607 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101546935 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082752667 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259506439 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118936991 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106768714 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164343869 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068171181 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108923068 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08170589 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083891738 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125479448 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146268461 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085016312 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103534374 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121354469 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114370858 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125375943 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100934032 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113242831 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125248073 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143757051 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127616517 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092679544 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111903685 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125833298 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151302268 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107755314 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101144976 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16788581 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148778308 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155638674 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089213378 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115839378 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116067445 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111297131 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136798006 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08797623 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158095021 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085970433 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134833281 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10427995 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091085164 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126575056 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112123129 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091671935 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14231064 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117473076 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088355928 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082295762 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11761014 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119495221 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105227021 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078870859 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284018759 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080380497 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134515945 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156626131 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085707803 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10753627 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098396836 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084528261 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105923433 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104907878 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090442145 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103492702 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165018187 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089034687 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143425632 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132141888 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112274384 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132410453 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10450258 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642128607 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081541922 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1470513 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115916939 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166282308 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102448424 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119023409 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11224565 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121137895 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140995616 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103890494 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180731473 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130755906 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117794721 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083610145 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104441079 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105983773 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090517714 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109597752 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115350278 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11571307 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095982512 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117043264 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123222466 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086372893 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09851899 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151361462 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115878531 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141159516 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13636589 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087794561 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118050562 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28234966 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086209938 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118950769 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147325167 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108007133 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10231301 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.098655653 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100476625 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154682764 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078706725 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154352011 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123313997 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111124663 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114759161 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109355731 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130598523 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106010544 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121272331 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093812357 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109128173 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114653709 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085391826 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08138973 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107445176 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110759178 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101729673 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099118222 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103457364 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148185307 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077740713 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101182649 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117367095 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141081725 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16731661 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092676644 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087520642 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120467248 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117083255 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114122224 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122419152 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083931988 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085801067 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083478296 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086476628 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109256215 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115087461 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115478397 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110939084 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156507315 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08702637 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225735517 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098773821 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106675402 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074959633 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081430471 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097876449 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098605126 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253374735 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11453826 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156159165 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099438039 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093728814 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094357362 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080371231 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087741442 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124888298 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10989186 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118172175 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103399791 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068609078 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107551624 seconds)
  done (took 59.30486317 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111479023 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087755518 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101016251 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147662676 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125477719 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204819593 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.161379195 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193209402 seconds)
  done (took 2.690253109 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073471752 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099204256 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107363182 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088971064 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07152988 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.075240044 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225809599 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087456988 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071495661 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098839401 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.084485862 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075636307 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.410310637 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071032511 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073978628 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069247798 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072936032 seconds)
  done (took 3.403776392 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389083959 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619656457 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.346845485 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082904056 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.912926962 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09922806 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.274567702 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141545066 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083633519 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.556896703 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.411736769 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134738216 seconds)
  done (took 18.611396607 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086314191 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080469047 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093908527 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09342979 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082647403 seconds)
  done (took 1.991971447 seconds)
done (took 107.883820681 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08784836 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.416135733 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060024128 seconds)
  done (took 2.057175789 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091544604 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089322898 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090241581 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087576327 seconds)
  done (took 1.921897742 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079453782 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081477914 seconds)
  done (took 1.717710607 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230042734 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170162847 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100326805 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08675806 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084195103 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08533677 seconds)
  done (took 1.817249579 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077313863 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079424635 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077235245 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080234968 seconds)
  done (took 1.871471389 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080516242 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057843385 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060615818 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062459033 seconds)
  done (took 1.819950118 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091525383 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086832274 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083676546 seconds)
  done (took 1.820121632 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103760255 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091549325 seconds)
  done (took 1.754138977 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084958838 seconds)
  done (took 1.644314159 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096676094 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10231361 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13083098 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11248106 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138518866 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10971721 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08798202 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089081473 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080483472 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089087696 seconds)
  done (took 2.59601204 seconds)
done (took 21.160543378 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082994808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36948932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36495544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093562333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691856171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361254597 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.973557876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096899045 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144232808 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073120164 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089022788 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.655387425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.964175311 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330165914 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95184748 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328073786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656515069 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074174461 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073120309 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073795551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.960335575 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074333372 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073287475 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075267672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655488366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377943626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074002327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329364811 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074588743 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076259384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375798938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074017215 seconds)
  done (took 16.209164834 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075396075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123034776 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077525169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089305589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075749522 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075593358 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076841779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074706282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125838735 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07420051 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091200812 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073843003 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077334165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075074034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093306155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074088863 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074671202 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07519565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076199474 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074025136 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092269628 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074160576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073937998 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074614497 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074112307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086276783 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074316076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074907079 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074979913 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075769081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076743768 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074427065 seconds)
  done (took 4.150311016 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121205969 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127455496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0783944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108772947 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117091349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075951385 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149149869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09904793 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133022109 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074125316 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090862846 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073967844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10692354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075546268 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093628039 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07415389 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07520666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07452284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07456859 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074241918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09277102 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074616089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074382063 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07525231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074229496 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08759078 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074369038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074539186 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074682486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075934305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077427166 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075183769 seconds)
  done (took 4.401982964 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077601698 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080173906 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087399855 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088013632 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074019775 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077101488 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078923424 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074901552 seconds)
  done (took 2.215063797 seconds)
done (took 28.54095255 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083826178 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074423247 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078416944 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.094431335 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079096763 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082560164 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072612061 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.0813261 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079152261 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079420746 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080479426 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072954391 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077247805 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072479094 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079497541 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073486436 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083925561 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077373158 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083937491 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08432077 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075877044 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079387681 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081049873 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083791019 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083481656 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083656845 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082216136 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078221724 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07352458 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076215894 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082325362 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089407592 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073893615 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083288178 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074591797 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07261731 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076739363 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072909219 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083769052 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0815407 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074552968 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081815325 seconds)
  done (took 4.884806106 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093016558 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097105281 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.09007577 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068076767 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073311449 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071281547 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09475699 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066536315 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066212285 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09382293 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063382713 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.066169119 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069245932 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0611294 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066830327 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064175484 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068250822 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061637254 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066532249 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065610802 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094897384 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060346114 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082228397 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069283651 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062677908 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068360647 seconds)
  done (took 3.48833417 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07906176 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087722155 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095601444 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146433693 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115124742 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082657765 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083781925 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097042605 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098684519 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071940454 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076450017 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098976785 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093306462 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078595381 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073178109 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089149825 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089781126 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074001919 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077989276 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097111511 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090986874 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090526351 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095872785 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088919056 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071729157 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075739157 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076607614 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08549865 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075257477 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082300559 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075384903 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076385235 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074839921 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084725834 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075138669 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07452958 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098273642 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083173056 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084099096 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073398623 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080857189 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074440665 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096542309 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128662479 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071718502 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077952983 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076474137 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08292524 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072392454 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099099663 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086507458 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072625768 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075527603 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071744179 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072123612 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075858055 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07457281 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075177181 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081709467 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078055283 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096657841 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077931914 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088740481 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072186635 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080710517 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.07181217 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074336312 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072456093 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096948116 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07482212 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112468484 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074094322 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073569304 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082256189 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.082400725 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079080673 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072511329 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088233217 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082815329 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075659931 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081230837 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075600604 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07516049 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100795653 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075253143 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074405921 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074086818 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078373203 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075596103 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074312322 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08530063 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072793857 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075468288 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089441347 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072741494 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074235106 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077974641 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076834183 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072381586 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083292519 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076356547 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073221733 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082383385 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072785763 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074762706 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084185712 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078779752 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071360047 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076065304 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077254889 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073659327 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074385483 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075208721 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07440631 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080803313 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079227694 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076704869 seconds)
  done (took 11.146204572 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165594496 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155985367 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075782013 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148947565 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081264054 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083094979 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150153843 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09756213 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072830959 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074450709 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073376834 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111920378 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108052794 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118565202 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083013563 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07271508 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095230899 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11643795 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151310256 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147541251 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095452572 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080990373 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075868655 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074366832 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075482176 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082831924 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089917687 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081735102 seconds)
  done (took 4.467621658 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083154938 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106492941 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079911961 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095254252 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094467843 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073066921 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07493256 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074935216 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.09006016 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082807639 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072922339 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077716707 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079434211 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076004104 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073418692 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07963092 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079340412 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073976037 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076550215 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078203069 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08302901 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09556571 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076016593 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.074599079 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07731609 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072245965 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068372402 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087417118 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073491281 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097489585 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070812007 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077863042 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086806903 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074154396 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073081847 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072917692 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073093698 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072644132 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075001145 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071351672 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071596247 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063166515 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072062769 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082540593 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086292098 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061646846 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077263484 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077691582 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078767271 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071180357 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075836726 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075926406 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075382237 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080183037 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077035408 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077976604 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074050138 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081404092 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.08094971 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072539926 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070499839 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071663404 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077293137 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069728619 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087718344 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077392139 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071694654 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072745878 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075163989 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.087157168 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073328359 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077781802 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071280504 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075181923 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077639815 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07504269 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07422135 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071424744 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072861031 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073370306 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060870942 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073139684 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058916999 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075949574 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071064159 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071374713 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072908166 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077124782 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082785779 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074203345 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078904977 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074079328 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072098374 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075917569 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065547036 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075937208 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083796915 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086405146 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073050709 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070813019 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085514043 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077519323 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071959488 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062698611 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076899975 seconds)
  done (took 9.652100704 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096080341 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075071066 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08683161 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09401112 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091311619 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079382833 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083367307 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074292112 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089297 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080104032 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.08242345 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073451975 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083710836 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08286133 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075058812 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083603428 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077099959 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088287029 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087658632 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073704445 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082212568 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085571204 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094201289 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085265476 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084010704 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085513837 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094564064 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082511655 seconds)
  done (took 3.978774487 seconds)
done (took 39.188120467 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.669994169 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.831713584 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.655870632 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.976430336 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.75612754 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.675306993 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.861353116 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.65449247 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.891957678 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.692452597 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.986828692 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.742659465 seconds)
done (took 64.106499637 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.725189386 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.793914299 seconds)
    (2/2) benchmarking "String"...
    done (took 1.89839356 seconds)
  done (took 5.276985658 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.874374615 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.231514409 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.898231974 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.651805322 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.657737771 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.950101905 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.455520598 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.167802636 seconds)
  done (took 29.597116132 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.80633882 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.880425962 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.346960816 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.388475515 seconds)
  done (took 15.059156962 seconds)
done (took 61.207415765 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.663705885 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.694645461 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.654064164 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.642031425 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.712241294 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.661611747 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.131148022 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.660804198 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.652325916 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.643869551 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.656045983 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.07598541 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.663381867 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.054601709 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.652689968 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.654207014 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.699375043 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.128380375 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.809106523 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.666460061 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.672758755 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.656349471 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.658192654 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.656855493 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.689986235 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.656074101 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.021700922 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.662632166 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.267675946 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.654392648 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.683048916 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.145481224 seconds)
  done (took 200.186479117 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.652952409 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.433956557 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.515417688 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.689126091 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.981535738 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.835237692 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.761762404 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.096207262 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.656169134 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.658804823 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.842917548 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.654628424 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.838626421 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.635389367 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.683094187 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.664020625 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.820943586 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.86209636 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.691964402 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.824519248 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.679678833 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.653335858 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.611042294 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.791284289 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.696882722 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.663836778 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.815299591 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.664082922 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.846606808 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.79485402 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.679985979 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.664012183 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.876586747 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.527986444 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.656138434 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.67489094 seconds)
  done (took 164.682957254 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.842919511 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.656828217 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.657771838 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.656211525 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.669838618 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.656709063 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.778759312 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780865817 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.29625735 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.338931662 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.709883408 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.65701954 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.461459954 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.6562215 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.723986763 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.668202605 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.658372803 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.672168317 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.684384538 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.657686176 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.65730801 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779788655 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.669666754 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.656757434 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.665147456 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.657715421 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.66301541 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.031032881 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.657876637 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.753161852 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.6613647 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.662398106 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.912440017 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.658567483 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.657598134 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.512108775 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.224570985 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.738838896 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.66060524 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.663173956 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.658443449 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.875105127 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.658376872 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.656812355 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.659636375 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.661537401 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.8061272 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.660090796 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779206264 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.660226567 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.145162615 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.660790138 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.659083767 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.793099136 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.259140344 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.660843211 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.660475028 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.658200494 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.658627299 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.665916024 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.59885828 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.737478642 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.659898891 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.662414933 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.664882648 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.659178505 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.846834825 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.660187339 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.368038515 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.720115135 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.888310693 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780849635 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.663265696 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.726089658 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753108605 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.659914912 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.65937103 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.658437835 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.660364345 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.65922688 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.740664708 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.660441433 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.78770503 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.660082986 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.666859005 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.660799677 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.710503571 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.728926192 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.663512193 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.504268059 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.663366715 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.660156301 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950495408 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.728088453 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.66159937 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.660261309 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.78765286 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783830461 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.370407844 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.663757095 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.545517485 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.800480728 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.662622817 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.813159732 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.664617692 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.66076377 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.741960921 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.66535148 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.662015204 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.661881411 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.694761663 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.661966226 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.718681042 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.661380475 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.035094899 seconds)
  done (took 389.139685811 seconds)
done (took 757.494711172 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.269534202 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.240724738 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.343137363 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.254882834 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.22932925 seconds)
  done (took 12.931073126 seconds)
done (took 14.522132714 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.7500253 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.755314472 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.685870329 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.753031881 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.681778746 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.752289572 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.734959069 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.686358557 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.720770187 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.686630287 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.72431523 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.6872212 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.673960468 seconds)
  done (took 23.885125257 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.905701511 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.899136924 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.734024997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.90467508 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.710718046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.900774203 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.828956706 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.818707227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.81682317 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.680140381 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.674870611 seconds)
  done (took 21.467619845 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.902144753 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.917634643 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.743438874 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.91223007 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.71545684 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.905450717 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.832451681 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.8197191 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.816210599 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.679999383 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.675244065 seconds)
  done (took 21.514969559 seconds)
done (took 68.45916231 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.671440452 seconds)
  done (took 3.265299865 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.698882378 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.866874854 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.677525352 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.674446183 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.67389334 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.671967321 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.674786739 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.670700551 seconds)
  done (took 15.203730788 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.669402488 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.670078529 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.671445887 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.668294748 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.670244594 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.66841395 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.667937 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.670821634 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.669276609 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.671488373 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.671751962 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.669023247 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.668618106 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.673242031 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.668641824 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.670961896 seconds)
  done (took 28.315593471 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.671421547 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.669039835 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.668807053 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.669337741 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.669833032 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.669779173 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.670647714 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.668989054 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.669405766 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.66856729 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.66997805 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.669347865 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.670875655 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.66918298 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.671456288 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.670702583 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.670143014 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.670791104 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.675070307 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.670036117 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.670238793 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.670618147 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.670793658 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.67204211 seconds)
  done (took 41.686556921 seconds)
done (took 90.064206818 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.433691022 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.410528463 seconds)
  done (took 9.441023456 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.67415745 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.67229123 seconds)
  done (took 4.94747248 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.672927469 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.672986784 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.675331868 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.673017037 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.673449023 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.672932151 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.672696559 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.672573805 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.672343056 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.67306335 seconds)
  done (took 18.32734895 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.672956675 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.673162479 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.670492531 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.672336321 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.673618692 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.670320193 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.672354881 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.673451934 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.673179507 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.671083148 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.67313152 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.669983476 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.672934575 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.672008828 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.673204569 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.671228342 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.670664206 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.671111014 seconds)
  done (took 31.694876681 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.67304953 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.673983776 seconds)
  done (took 4.944588669 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.671701199 seconds)
    (2/7) benchmarking "second"...
    done (took 1.67079838 seconds)
    (3/7) benchmarking "month"...
    done (took 1.671359726 seconds)
    (4/7) benchmarking "year"...
    done (took 1.671909076 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.671221988 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.671015833 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.672391654 seconds)
  done (took 13.297812562 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.675155899 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.822094752 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.884637299 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.319129775 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.677415233 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.67910721 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.677878597 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.680941375 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.680566464 seconds)
  done (took 18.694975724 seconds)
done (took 102.94384973 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.52679823 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.672692242 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.913335571 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.752823143 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.69037929 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.968383602 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.687884185 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.945537286 seconds)
done (took 41.756803365 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.760146106 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.372128577 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.601576409 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.705803037 seconds)
  done (took 15.278387144 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.656998845 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.072953272 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.6813326 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.52370722 seconds)
  done (took 21.538144631 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.037151449 seconds)
    (2/2) benchmarking "read"...
    done (took 2.023085655 seconds)
  done (took 5.664136334 seconds)
done (took 50.840863137 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.676668722 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.676073027 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.675854897 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.674345193 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.677489324 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.673141101 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.673357807 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.675970075 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.676955921 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.677276476 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.676202497 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.676328179 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.674153283 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673759243 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.673366214 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.680843241 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.673389049 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673982152 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.67733416 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.673870209 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.673965634 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.677183276 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.674393149 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.674765062 seconds)
  done (took 41.810224597 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.67700413 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.674811204 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.677010449 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.677870766 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.674440659 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.677856903 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.677258648 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.675961343 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.680839709 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.677378211 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.675064881 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.675572831 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.677942624 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.675874054 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678363154 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.675948589 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.677665383 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.675804689 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.677975109 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.675473236 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.67865389 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.67610893 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.675073547 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.678774401 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.676323654 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.675516434 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.679736094 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.676363117 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.679277403 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.676223013 seconds)
  done (took 51.910412231 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.683632343 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.686049196 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.679327935 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.679512488 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.680171405 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.680501875 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.679730063 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.681945566 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.679711051 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.679813846 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.67931347 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.679750828 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.68059097 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.681502383 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.679941714 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.679774463 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.679365844 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.679106647 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.679953753 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.680314373 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.679523976 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.680606113 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.679959442 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.679855278 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.679465668 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.680200204 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.679475191 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.679366082 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.680125696 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.679994662 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.681375438 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.68130654 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.680728986 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.679997424 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.68024524 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.679859769 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.684729306 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.68690878 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.680289111 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.680689039 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.681125161 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.680804397 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.67997951 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.681073062 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.680504592 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.680533988 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.681228551 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.681194406 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.681647059 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.681340731 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.680675552 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.681824288 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.680399044 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.680850749 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.68081352 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.680736082 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.680359874 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.681276549 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.682150287 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.681928391 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.682109545 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.682052393 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.682091814 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.681422499 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.682847769 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.68172584 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.683825107 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.681985267 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.681256681 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.682537414 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.682544611 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.682604884 seconds)
  done (took 122.636724002 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.682068371 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.679245911 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.67954467 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.680078707 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.680109148 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.681492517 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.679318217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681859935 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679653104 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.6817665 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.681755639 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.682461831 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680060536 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.682836599 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.682627335 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.679492431 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.682366105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.679756981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.682824348 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.682859236 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.683495282 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.679991082 seconds)
  done (took 38.591121614 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.683450107 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.682759857 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.680887862 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.68369326 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.680407336 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.68320887 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.685136479 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.683603782 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683521675 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.680665251 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68078329 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.683759664 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.681110061 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680673096 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.680881956 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.681235775 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.683501263 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.680910559 seconds)
  done (took 31.886531584 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.681534066 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.682026632 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.68335971 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.681866916 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.681703331 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.685611382 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.681827669 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.684177264 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.684845787 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.681428479 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.684809195 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685111628 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.684865662 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.682617945 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68400149 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.682995685 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.684269101 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.68220437 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.684918996 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.683601444 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.68277486 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.684760017 seconds)
  done (took 38.642301109 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.685294112 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.685350726 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.683205798 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.683264039 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.681985328 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.685508552 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.685835744 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.682385959 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.68516754 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.686663695 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.68222553 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.684767903 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.682591688 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.684633947 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.682816182 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.682557691 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.686041948 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.683956422 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.687404068 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.682327237 seconds)
  done (took 35.292109597 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.685228924 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.685322436 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.686269991 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.686111959 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.685827482 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.686301917 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.686435471 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.686358166 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.685971984 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.686757668 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.686001906 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.686943221 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.686583119 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.68671145 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.687047926 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.687439357 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.687875559 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.687721145 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.686353466 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.686999624 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.686449155 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.687143955 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.68745954 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.686679513 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.687936139 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.687457532 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.687499572 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.687320375 seconds)
  done (took 48.838169639 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.687911324 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.686354482 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.683691578 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.685135942 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.684667173 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.68432143 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.685109255 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.683411747 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.687249496 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.684982402 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.686879803 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.686810414 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.688697416 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.687168165 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.687528967 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.688431357 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.686825189 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.685215089 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684882755 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68507253 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.687812121 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.689777029 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.687844203 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.685543006 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.685677751 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.687863997 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.686049351 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.6854252 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.688104138 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.685102886 seconds)
  done (took 52.199976268 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.706445718 seconds)
    (2/2) benchmarking "in"...
    done (took 1.707153168 seconds)
  done (took 5.024376548 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.686012313 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.688176367 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.689487408 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.686876516 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.686617923 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.691939429 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.688919347 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.686687445 seconds)
  done (took 15.116030339 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.686971209 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.688715008 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.68946358 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.688964676 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.688728869 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.689940917 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.694982152 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.689808665 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.68895 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.688853148 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.695584379 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.696731705 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.692521848 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.68969328 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.691533551 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.690313746 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.691029755 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.690263356 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.690105105 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.690438245 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.690667372 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.690918953 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.692164762 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.687347471 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.691060334 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.699019898 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.694013861 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.68984454 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.689282824 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.693371649 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.688431911 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.687912245 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.69305719 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.690355282 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.690530461 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.6908242 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.698346295 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.690627811 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.695587397 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.691018557 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.691233262 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.687570682 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.691031221 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.693145304 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.691237608 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.690872007 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.691270612 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.687765695 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.690036205 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.69282122 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.698093418 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.68968347 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.688660239 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.695066576 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.691150267 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.6980908 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.691268636 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.69358502 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.698595156 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.700909267 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.703654275 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.698237961 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.692623662 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.692088583 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.700610694 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.714428353 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.698841723 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.691212652 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.690081194 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.69193446 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.698645294 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.704499023 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.701118047 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.692156661 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.692205075 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.69340762 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.693092847 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.693530438 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.700793692 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.694790691 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.693614124 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.693396989 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.701356194 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.713421904 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.69189243 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.69421712 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.69344996 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.693420772 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.693038382 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.705165295 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.693326841 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.692457148 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.691119675 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.693616633 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.694813063 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.693423536 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.691525752 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.693692642 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.69055722 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.693905162 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.693870244 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.695238821 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.701265286 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.694693336 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.693539657 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.700710752 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.694580109 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.69283129 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.699786356 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.694171255 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.694825672 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.694656717 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.698603599 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.691178489 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.69664556 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.701679004 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.69453728 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.695215997 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.69468304 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.695461591 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.704173682 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.719860093 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.694349262 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.694554406 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.699221367 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.705715743 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.694914577 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.696717 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.695569092 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.692773628 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.692657826 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.696384461 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.695364969 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.695795532 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.695494371 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.69710311 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.694805755 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.695642115 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.696903309 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.695668312 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.697329874 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.697218743 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.6965794 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.697995918 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.696542994 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.696020855 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.701594568 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.69647674 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.696563895 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.697167788 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.692718312 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.696426566 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.696579291 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.696304666 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.695631878 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.696679295 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.695225197 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.695888365 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.696846393 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.69660445 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.696603918 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.69684808 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.700362684 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.696730852 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.700359884 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.695761282 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.694780662 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.696541184 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.697167438 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.69575165 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.69797508 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.695250723 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.699311841 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.704555728 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.698172354 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.698280608 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.700284 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.697266109 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.697961692 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.697229654 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.699771316 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.70381928 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.697640724 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.704121892 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.698144771 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.698473998 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.699296024 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.69943245 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.697707371 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.698164516 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.700580189 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.707037019 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.70979021 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.705861821 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.698945282 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.701214452 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.697982335 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.702659 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.701289739 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.698369551 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.699341314 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.698334593 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.697793607 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.699259507 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.700485493 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.698725147 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.69684064 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.698717 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.698908849 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.699046169 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.699202864 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.699565896 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.699432943 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.697016137 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.699142761 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.700131849 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.697801006 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.697485726 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.696871651 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.697751116 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.700174925 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.700034452 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.704574052 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.696368997 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.69989414 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.699066899 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.698135357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.697351916 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.699502437 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.701195669 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.699270586 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.705884532 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.698569026 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.699811543 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.707194612 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.698637275 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.698314737 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.700823419 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.700765073 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.697511956 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.705048009 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.707537088 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.700693403 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.701202762 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.701292176 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.700495692 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.701248998 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.706620527 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.698555707 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.699910919 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.701596293 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.702109214 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.700156905 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.701554162 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.700945862 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.700958464 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.702007671 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.701355521 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.702568309 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.702941689 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.701670878 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.701324414 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.704903949 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.702402532 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.709495585 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.704904436 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.700742518 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.702852737 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.702458581 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.705355787 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.702656298 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.701576051 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.701284361 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.714330798 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.71040366 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.707452205 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.703199828 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.70253343 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.707720036 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.703480788 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.709144059 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.70178958 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.701469741 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.701372853 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.700664531 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.699645274 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.701769165 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.704151735 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.703154976 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.703037616 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.706030043 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.703474071 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.702417819 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.70288897 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.702843445 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.703215131 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.701731933 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.705731507 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.704664402 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.704322687 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.701885326 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.702441714 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.709421093 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703169935 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.704443865 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.703818417 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.702845593 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.701772053 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.705031799 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.704192577 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.707046639 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.712036612 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.706259348 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.712697124 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.705630117 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.715478193 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.70397494 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.70649087 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.712641504 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.702014122 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.702576013 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.704423485 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.7050196 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.710958005 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.704214788 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.704330207 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.70900592 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.704496701 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.706119991 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.704390577 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.704192891 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.705229802 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.704915792 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.714574795 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.705575058 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.708720498 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.706001167 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.703166577 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.704596544 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.70518782 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.703853689 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.707796489 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.70521939 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.705902174 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.704096643 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.705789752 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.705234294 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.705168554 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.705915289 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.702417694 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.706396041 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.711324071 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.706168341 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.710116874 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.705518649 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.713292646 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.705554755 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.711664347 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.7062626 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.706565088 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.706251793 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.705804577 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.707927351 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.705239942 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.706976102 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.706631002 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.707161377 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.7104374 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.709032312 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.708583183 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.706682713 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.706381728 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.706344915 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.715451337 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.729328055 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.707908092 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.711011801 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.703938984 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.707695186 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.710765418 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.707137282 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.704740484 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.709192442 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.715696867 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714491361 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.707927941 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.707896157 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.707384667 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.706931038 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.706297395 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.707275763 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.70746191 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.707260662 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.709013237 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.70727693 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.711368076 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.70804232 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.708222559 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.707972127 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.707145249 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.717237562 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.707880318 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.707839469 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.709312371 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.707649065 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.708233834 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.706542382 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.708162703 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.708561812 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.708230189 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.708588313 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.713642765 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.713484794 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.710203243 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.706939826 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.707910504 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.709024837 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.708799489 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.709083272 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.70910445 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.709461519 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.709273671 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.709700062 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.709342301 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.707201091 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.7085818 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.709329493 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.709287085 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.71190571 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.715718167 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.709592999 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.707397722 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.708836699 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.709789309 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.708421216 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.70928413 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.716206539 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.712258723 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.720833743 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.717817131 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.714514961 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.708128746 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.712097847 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.717403576 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.707255417 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.710599508 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.709849361 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.710072473 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.709849056 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.712765387 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.70988789 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.716767009 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.710018357 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.709506873 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.717916687 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.711270588 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7136617 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.710932916 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.71288615 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.710329802 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.708149891 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.711690179 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.708940771 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.718790873 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.711663054 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.71094024 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.712011687 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.708939409 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.710705309 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.714699639 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.711535028 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.711561012 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.708277621 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.711325887 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.710460626 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.711293953 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.707853297 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.71080179 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.711052041 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.714777781 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.718065472 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.709542587 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.713115209 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.711738516 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.712453614 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.712211011 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.713337927 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.71228272 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.710156099 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.711357309 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.712242876 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.713936271 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.714745043 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.711399958 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.712921839 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.714253556 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.713328516 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.71467265 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.722258731 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.720092489 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.709517462 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.711633672 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.713274193 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.714366133 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.712906039 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.712906388 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.711854464 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.713512917 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.713948198 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.714588188 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.713181073 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.715058838 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.727573847 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.71411736 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.713150666 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.713233636 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.71677181 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.712776615 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.710472815 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.713554683 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.714531205 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.715716549 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.721175289 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.713455724 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.72007038 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71257158 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.718183312 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.717610594 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.716418485 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.720483161 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.715604266 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.713061408 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.714693974 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.718109595 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.729727617 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.716599907 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.723665178 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743944505 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.714848291 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.715655975 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.715288863 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.713261838 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.714657349 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.717153439 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.717760382 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.715502812 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.714270461 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.714746795 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.714401035 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.720246141 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.715263516 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.71447077 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.71462945 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.715112291 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.715727226 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.712441383 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.714994383 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.716344854 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.714842296 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.715435812 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.716100684 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.71803756 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.727410827 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.724139719 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.715552244 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.715963053 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.713585719 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.717950247 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.71774099 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.725989242 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.723794605 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.716329658 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.716563048 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.716992664 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.716066985 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.713141467 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.715688048 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.715299544 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.715923434 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.715014128 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.727397771 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.723576431 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.720291107 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.715935117 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.716330696 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.716917371 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.717673171 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.716457333 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.717437538 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.718138052 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.71827035 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.721124914 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.717292227 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.717112629 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.719671344 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.724702312 seconds)
  done (took 1017.614085171 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.715233013 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.71497351 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.715418644 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.714900444 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715374239 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.714882846 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.715845177 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.714877723 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.715310828 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.715088807 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.715130257 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.715364389 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.716500855 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.71608952 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.714894341 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.715652428 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.716904349 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.717662548 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.716314736 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71542935 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.716940849 seconds)
  done (took 37.669752713 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.717537248 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.715647209 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.715884451 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.718168076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.715517302 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.719063942 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.716392478 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718657135 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.719366897 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715814423 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.718623084 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719437013 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.717601848 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.715984386 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716256214 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719076436 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.719425148 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715820598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.71820562 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.717948456 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.719488399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.716011255 seconds)
  done (took 39.425786512 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.718685103 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.719914874 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.718892908 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.71719056 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.71902058 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.71705318 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.718969514 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.720882405 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.718635778 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.718989733 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.71760784 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.71984127 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.725513866 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.724599913 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.721496837 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.719492126 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.863466781 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.720089605 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.722211673 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.720762139 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.717516936 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.725398546 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.718120269 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.717675489 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.720117148 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.72110306 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.720631502 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.719109524 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.720393433 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.720966043 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.72489866 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.720671418 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.720247824 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.722320541 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.719949693 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.720616857 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.725224538 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.721732884 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.718543073 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.720138377 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.73114869 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.740765834 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.72157725 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.72634713 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.720083508 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.720102129 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.723437905 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.728642889 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.719534962 seconds)
  done (took 86.13207379 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.720609619 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.721097226 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.719180885 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.72164723 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.721873044 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.720630254 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.721035395 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.721085886 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.71889276 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.719274122 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.722013403 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.718895363 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.718276765 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.720908035 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.722267218 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.719993709 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.719986918 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.719499003 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.719609124 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.719575361 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.719247497 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.721596924 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.722066798 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.71925564 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.721932379 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.719914198 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.719676562 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.723088076 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.720222052 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.71985569 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.722316859 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.722649035 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.722531275 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.720247112 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.720220082 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.722534894 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.723513366 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.720858488 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.723239095 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.720858652 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.723600378 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.723197072 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.722690161 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.722867326 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.720720936 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.722903115 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.720092842 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.720729717 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.720511311 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.722790589 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.723231687 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.721605955 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.723376903 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.720542964 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.723121453 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.723884194 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.721784905 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.720827334 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.723608283 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.720209875 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.721133395 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.724915361 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.721666141 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.723799774 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.722891461 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.721540642 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.721240844 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.723824171 seconds)
  done (took 118.700782086 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.724832285 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.72437761 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725296783 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725121771 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.724627244 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.724914546 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.725359359 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.724822662 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.724883155 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.724834961 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.727136981 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.724606803 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.725819263 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.725209108 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.726009528 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.725572414 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.726789073 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.725765221 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.725799858 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.724867369 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.725977766 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.725692943 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.726557115 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.725649195 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.726731149 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.725759749 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.726437483 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.728441671 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728174544 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.725881308 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.726032883 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.726512949 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.725507589 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.726001662 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.726686924 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.726716361 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.726425198 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728046437 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.726030046 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.726911944 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.726877969 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.726371419 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.726328158 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.726823556 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.726905657 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.729656526 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.726962536 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.727344309 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.726687689 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.726827233 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.726514396 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.726787375 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.727293128 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.727526097 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.727439436 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.726742882 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726763866 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.728120378 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.72717511 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.727000642 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.727586444 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.728167327 seconds)
  done (took 108.682996832 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.726999454 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.727423811 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.724441701 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.724383902 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.728510205 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.724874009 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.727720375 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.727335296 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.727906156 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.727435168 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727089454 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.725731726 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726727432 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727099761 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.725543789 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726080939 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725160302 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.72700849 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.728467742 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.726180365 seconds)
  done (took 36.183659072 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.727908856 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.727327903 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.726921982 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.725349916 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.729315677 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.726144641 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.728700661 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728416973 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725571883 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727715812 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.727976367 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.72873695 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725876005 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.72670273 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.728999254 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.726853618 seconds)
  done (took 29.2884628 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.726059877 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.728519714 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.729200362 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.729541753 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.725769033 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.726163784 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.732013332 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.727050205 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.72673498 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.729585235 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.729590731 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.729274303 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.729006391 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.73006575 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.727888528 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.729362065 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.726521213 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.727573956 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.730244248 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.73057676 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.728039407 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.726860745 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.730651682 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.729330272 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.727568832 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.728600373 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.727346322 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.727096905 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.727146369 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.730506571 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.727018448 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.729395748 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.728183045 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.727632146 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.730660062 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.728547121 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.731094982 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.731537937 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.730761827 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.730616125 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.731489036 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.728247614 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.730768326 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.73141526 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.727996501 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.731900712 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.729012528 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.728413775 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.728741581 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.728983983 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.731185746 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.731047036 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.732072687 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.731422364 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.731531662 seconds)
  done (took 96.755378219 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730900226 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.731677769 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.728465307 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.731639108 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.731285649 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.728589823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.73147092 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.729089135 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.728842827 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.731697709 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.731770443 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.731393724 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729472128 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.732723588 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.72970866 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730801554 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.729021411 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.729481338 seconds)
  done (took 32.802025913 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.730196018 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.729605361 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.731709657 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.729555898 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.729611818 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.732460668 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729751857 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.732246509 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733382024 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.729908182 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729822172 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.733149217 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733942727 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.732654808 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.731207353 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730883143 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.733438046 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733422202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.731380142 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730659457 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.7338 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.732522085 seconds)
  done (took 39.748609822 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.731416029 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.731546079 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.747864742 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.755337294 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.753391375 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.7671031 seconds)
  done (took 12.140870871 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730404896 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73437912 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.730989887 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733590084 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732967115 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.731558737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730964288 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.731247502 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733931288 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.73142152 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731345397 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734303938 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733531389 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730958473 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733736089 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73343865 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730990642 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.731443671 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732425385 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734458943 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731591635 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734945495 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732208589 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732090923 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732442083 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732686241 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734379387 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733634542 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732977196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735114975 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.738843001 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733767913 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735280618 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732992999 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734063096 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734927447 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732792531 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735511908 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735043653 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733152606 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.736147396 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735359924 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736455828 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733289907 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7352852 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733595803 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733380057 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733961363 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736230573 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735866294 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735971427 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733446106 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73692763 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737204892 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735788491 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737012392 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73422344 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7337977 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737124468 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733602264 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733315227 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736067864 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734207889 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733559414 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736374005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737980291 seconds)
  done (took 116.098910298 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734115119 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.734167382 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733953551 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733785988 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73348698 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735048064 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734517039 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73518609 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733662526 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733715768 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735827496 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733968535 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734209524 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734424784 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733121955 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737196897 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735001336 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734110608 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7345343 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737632515 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734341656 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733974678 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73533835 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735002956 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735225339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737798235 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.73524677 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735059312 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734137691 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73534406 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734555806 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735443103 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735622422 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.735083179 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735247338 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735002919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735594394 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735312699 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735673492 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737923369 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735150773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.738667721 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736492085 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736347196 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736733906 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735310004 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735679648 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735943175 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73578289 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735490818 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.738903138 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737791442 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735602284 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736821373 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736400955 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736636793 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736001849 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736531359 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736433975 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.739091472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736995645 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737526046 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.738797566 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736393493 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736614115 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736337611 seconds)
  done (took 116.212861702 seconds)
done (took 2371.007391453 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.779741034 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.737284492 seconds)
  done (took 15.177862238 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.900169285 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.851305001 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.736875153 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.741582308 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.737831298 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.75760058 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.754402654 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.737290376 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.735968043 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.736260248 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.737606106 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.922651802 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.752365993 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.739306367 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.737628922 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.831510772 seconds)
  done (took 50.077364486 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.739896808 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.741943138 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.751147431 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.74538778 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.74006128 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.752715792 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.774583048 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.745361862 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.775822408 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.753783672 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.812230715 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.754539479 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.739950709 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.79105739 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.756051218 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.75561004 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.833178665 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.818419723 seconds)
  done (took 33.443595021 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.818094593 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.749525494 seconds)
  done (took 10.234290514 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.743330882 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.744579086 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.815888897 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.742590383 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.761274321 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.739985768 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.765492249 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.761728478 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.767943816 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.746181881 seconds)
  done (took 69.254395747 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.748224356 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.743074709 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.742340572 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.740912491 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.735540841 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.739297342 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.74121245 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.740224004 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.403585681 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.781357068 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.749892781 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.746181794 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.741416108 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.74338043 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.740047566 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.766208899 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.843957845 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.739873262 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.739342355 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.747374751 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.742801599 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.797711242 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.757187687 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.745238402 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.773143442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.402731376 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.754845102 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.748497591 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.849048279 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.740455139 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.741226472 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.742379673 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.744720301 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.122691213 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.007819384 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.745236973 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.759196234 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.750620494 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.740437706 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.846001374 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.742637683 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.748430514 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.457453638 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.004102378 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.842567825 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.787519008 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.063616798 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.762929909 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.744876259 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.771741907 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.74752558 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.743925502 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.757044 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.233228184 seconds)
  done (took 125.260942651 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.740718496 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.091832147 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.909602165 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.740941536 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029275588 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.950417304 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.742415541 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.78949448 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.743957735 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.97637783 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.00144262 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.850896358 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.741640918 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.73834491 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.742903259 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.739008176 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.899701552 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.815242529 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.741375343 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.737771765 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.770616611 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985285025 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.865392472 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.743524357 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.77024933 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.953946659 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.865149474 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.8475811 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.51692208 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.738774245 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805383142 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.742999619 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.74402167 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.739706132 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.898772669 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.838458225 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.830758566 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.743366489 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.740717733 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.738755443 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.505732567 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.943479197 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.839800402 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.884218867 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.892073729 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.951673046 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.527962836 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.74024189 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.483453585 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.907910738 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.97204581 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.977992045 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.867455785 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.743255898 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.084795195 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.740027319 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.739444462 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.994037048 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.88689695 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.842544241 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.744538709 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.742177749 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.740789435 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.043384517 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.745430109 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.840141561 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.744839105 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.741085766 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.842089617 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.844419688 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.883683869 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958517913 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.776105074 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.467160885 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.950380372 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.991657293 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.811289629 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996776996 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.74545656 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.74129387 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822308656 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.584728222 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998575216 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.03669718 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.999149286 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.780212614 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.471498228 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.743254743 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.972586609 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.96743124 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.006319332 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.895550427 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.980371969 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.053736459 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.742467872 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.742432938 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.968796605 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.881486661 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.745442371 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.094540214 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.97717031 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.294182062 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.764240205 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.052087723 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.881692827 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.747733165 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.393652052 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.74373678 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975880965 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.787225971 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.744206966 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.743258299 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.965884632 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.739377967 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.742568267 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.6284491 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.808103489 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.747601558 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.98463349 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.747406027 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01772149 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.748053473 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988275426 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.741643455 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.778424227 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.920092655 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.891656274 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.750758298 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.991484022 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993443257 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.863038567 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.022021975 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.636345408 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.744529561 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035822315 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.750520675 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.744518489 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.916606952 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.745439996 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.892555583 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.748390217 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.044865087 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.770802154 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97956447 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.75026107 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.007198279 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.783571258 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.797675346 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.750125717 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.873668475 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.74950681 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.679780071 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.904541734 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.749358389 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.746019121 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.299414376 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.746241624 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.898251477 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.983751884 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.770215024 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.822385303 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.419017471 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.744840366 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.831517575 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.773369288 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.584524252 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.745363353 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.99908127 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.747646668 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.744774048 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.74414763 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.043048741 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.986118825 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.746445193 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.744227863 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.660675907 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.745393411 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.744455771 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.930208163 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.115430002 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.744595328 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.950935566 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.748155341 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.877327564 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.750039189 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.827120398 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.084041335 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.745818547 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.745969418 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.743322682 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.745217547 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.745013147 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.957128817 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.773219989 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.264547887 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.882834027 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023902995 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.057757979 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.994679888 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.790631189 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.742843079 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006166454 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.743467124 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.80473633 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.743684421 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.760527515 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.971267075 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.74023994 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.000290728 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015337111 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.689294072 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781855971 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.733958574 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.729130984 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.728903563 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.878013146 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.820887241 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.732212352 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.729154922 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.846884661 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.853332812 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.943195621 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.731283251 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.768157174 seconds)
  done (took 875.138450624 seconds)
done (took 1180.247723754 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.726413963 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.728545247 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.714817306 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.728002607 seconds)
  done (took 28.554781614 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.732217071 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.727790726 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.728373845 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.727520623 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.72946351 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.726878276 seconds)
  done (took 12.024841404 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.73327385 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.724042594 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.721382858 seconds)
  done (took 20.830260567 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.794026002 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.108241761 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.829397234 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.148774513 seconds)
  done (took 9.529463622 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.725120599 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.722966623 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.724284178 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.725011852 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.72821948 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.725520805 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.724562373 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.723433571 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.72509086 seconds)
  done (took 17.17238564 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.787398118 seconds)
done (took 93.554984843 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.898081735 seconds)
    (2/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.850986467 seconds)
    (3/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.320440697 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.820127418 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.747871911 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.951623797 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.989020944 seconds)
    (8/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.737733881 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.83423785 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.129772929 seconds)
    (11/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.761148865 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.495435623 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.735572488 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.322871617 seconds)
    (15/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.761022429 seconds)
    (16/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.899048177 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.71464181 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.546238347 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.84292757 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.926762716 seconds)
    (21/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.257868874 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.921521168 seconds)
    (23/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.032079917 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.045204252 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.093105603 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.775641882 seconds)
    (27/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.258010046 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.984106035 seconds)
    (29/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.765523477 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.072998163 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.605699806 seconds)
    (32/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.978154015 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.833210026 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.838740877 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.774932064 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.864783412 seconds)
    (37/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.900839767 seconds)
    (38/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.746385274 seconds)
    (39/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.761500296 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.915787795 seconds)
    (41/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.984293565 seconds)
    (42/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.874484156 seconds)
    (43/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.737934903 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.105441775 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.76676167 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.651776438 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.040470475 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.74433498 seconds)
    (49/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.781556255 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.828257406 seconds)
    (51/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.756948807 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.799340459 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 1.967493154 seconds)
    (54/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.037408533 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.732538371 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.525952226 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.557835745 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.971066115 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.884409552 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.438343872 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.875683961 seconds)
    (62/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.913053168 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.746689402 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.167881561 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.741935194 seconds)
    (66/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.273540406 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.917572136 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.778172725 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.777736639 seconds)
    (70/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.909337397 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.84522402 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.888708963 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.770330384 seconds)
    (74/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.855332923 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.893018871 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.896139007 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.41268098 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.792830725 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.118005509 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.872074461 seconds)
    (81/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.750546057 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.997002668 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.940188433 seconds)
    (84/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.8399853 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.144418626 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.747642126 seconds)
    (87/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.850560347 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.870395846 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.905814975 seconds)
    (90/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.832326805 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.756624753 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.064834215 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.742061681 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.147446732 seconds)
    (95/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.258121014 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.419987794 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.808557588 seconds)
    (98/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.915702092 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.748609009 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 3.162508668 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.807174505 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.75209682 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.919143989 seconds)
    (104/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.871075406 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.585898176 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.586708542 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.912648217 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.730785489 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.912521404 seconds)
    (110/309) benchmarking ("sort", Float32, false)...
    done (took 5.468018581 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.757234154 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.383202741 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.97784665 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.776558636 seconds)
    (115/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.928918062 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.745329577 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.878953237 seconds)
    (118/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.873672348 seconds)
    (119/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.156608887 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.036488168 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.748032779 seconds)
    (122/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.843872258 seconds)
    (123/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.849257764 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.884536302 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.667701397 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.022694952 seconds)
    (127/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.778082636 seconds)
    (128/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.882724569 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.795569749 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.74353937 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.804198308 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.833236616 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.829338532 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.015926954 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.743105139 seconds)
    (136/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.240374059 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.743018855 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.396200564 seconds)
    (139/309) benchmarking ("sort", BigInt, false)...
    done (took 6.758274869 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.76044643 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.098853215 seconds)
    (142/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.201146822 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.327843638 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.854857183 seconds)
    (145/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.863501254 seconds)
    (146/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.894712902 seconds)
    (147/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.677361004 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.789502192 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.062434306 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.123733453 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.455753511 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.785976995 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.17476901 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.780631248 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.861304069 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.784563335 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.839645213 seconds)
    (158/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.754921518 seconds)
    (159/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.664021661 seconds)
    (160/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.845869648 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.756005595 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.835772102 seconds)
    (163/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.895133513 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.028545609 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.077914894 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.947285339 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.825734562 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.761047071 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.859124365 seconds)
    (170/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.7578764 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.965881639 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.858439216 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.149103156 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.771513844 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.784402117 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.856763985 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.758479528 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.448027268 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.876185228 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.078318348 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.780510902 seconds)
    (182/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.99479033 seconds)
    (183/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.789586794 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.177423599 seconds)
    (185/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.805662308 seconds)
    (186/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.001658442 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.112266091 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.853386693 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.868185171 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.207005221 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.901677792 seconds)
    (192/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.864703578 seconds)
    (193/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.784085357 seconds)
    (194/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.762262011 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.694124778 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.066894551 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.086897248 seconds)
    (198/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.145500897 seconds)
    (199/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.22720736 seconds)
    (200/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.829343267 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.028666255 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.187787215 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.758043393 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.015465733 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.753746151 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.226084464 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.008182252 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.821458881 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.74869877 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.0312068 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.539333148 seconds)
    (212/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.964367166 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.141789892 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.11418475 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.829851757 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.004172709 seconds)
    (217/309) benchmarking ("sort", Float64, false)...
    done (took 5.549181731 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.080878387 seconds)
    (219/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.850593964 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.034359058 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.118204825 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.509726716 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.96448726 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.760032771 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.962991374 seconds)
    (226/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.778124624 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.759676926 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.78624398 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.707587347 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.790774937 seconds)
    (231/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.400106513 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.820084944 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.058146727 seconds)
    (234/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.010171224 seconds)
    (235/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.063863015 seconds)
    (236/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.788251696 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.133070506 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.898386219 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.357076213 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.009581357 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.763875441 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.214747891 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.74652408 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.152855118 seconds)
    (245/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.16743186 seconds)
    (246/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.835109577 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.744643542 seconds)
    (248/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.3119909 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.902747737 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.107965353 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.142817439 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.058951229 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.19533277 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.869753784 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.383865356 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.791227157 seconds)
    (257/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.827794233 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.763369021 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.03662973 seconds)
    (260/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.859561881 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.747088349 seconds)
    (262/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.910671237 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.089095899 seconds)
    (264/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.041140989 seconds)
    (265/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.995838292 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.727614102 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.780099285 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.766858738 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.783813897 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.93077713 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.154758782 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.762136659 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.87210634 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.833076029 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 4.718344539 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.734633846 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.076199901 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.778840302 seconds)
    (279/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.836933104 seconds)
    (280/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.875143617 seconds)
    (281/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.787121974 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.832879102 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.173327063 seconds)
    (284/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.762495773 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.779838076 seconds)
    (286/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.998416897 seconds)
    (287/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.895927707 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.924647422 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.01384463 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.764601587 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.728231662 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.88664074 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.87444434 seconds)
    (294/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.824916484 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.951820493 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.355534177 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.817323499 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.115615248 seconds)
    (299/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.852715952 seconds)
    (300/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.878899557 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.763677474 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.764301342 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.823722892 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.069816956 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.43954062 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.081694386 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.213543706 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.954282092 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.935339186 seconds)
  done (took 973.357618485 seconds)
done (took 975.09523887 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.810418907 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.788156689 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.771101899 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.793595433 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.884794787 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.799881613 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.781918077 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.773974137 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.819299478 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.821888776 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.770165326 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.798603306 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.775145765 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.773839528 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.772120343 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.787178848 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.094888947 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.804089234 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.791551742 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.782446182 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.790345126 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.769131211 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.821114119 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.799434252 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.776576844 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.774120875 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.775559743 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.792376126 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.884778908 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.775782868 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.774593218 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.784291662 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.094647461 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.801680409 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.768183438 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.79433958 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.784508343 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.782424449 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.777962227 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.805025224 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.174633693 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.812342457 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.775314176 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.773840854 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.774516775 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.777475091 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.775427925 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.779164582 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787634719 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787858442 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.173256646 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.830126108 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.777393152 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.777152616 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.785280811 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.774915625 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.777420031 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.791615901 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.794637043 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.791202565 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.077675989 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.810769901 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.777632965 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.79051067 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.7827033 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.208431965 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.812256074 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.777934513 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.173564564 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.818688888 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.210504 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.821552377 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.775006602 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.786746379 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.804803479 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.09450042 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.797334461 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.772659412 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.780257288 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.769933252 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.779877319 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.783514186 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.774573303 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.771702826 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.782883403 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.797505987 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.780544147 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.770512293 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.780084466 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.78791312 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.776080149 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.77879161 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.771291178 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.762415299 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.778397809 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.768935926 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.76791387 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.767941106 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.770247423 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.776262606 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.161624791 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.820841953 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.76055063 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.761901939 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.763491506 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.777374477 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.159587532 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.802258746 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.783381819 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.808151617 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.764554149 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.063434116 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.792956525 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.777059278 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.769421276 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.763846534 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.756005221 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.062866947 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.189088301 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.816399023 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.759826662 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.757621918 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.771956883 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.757373672 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.753874912 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.078122666 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.789617832 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.769204998 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.875365699 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.764891237 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.787194245 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.750568691 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.758937196 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.784007967 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.768535108 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.783425127 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.756644584 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.767636287 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.769436717 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.746613479 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.760698278 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.758880137 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.75277292 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.756270859 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.744423652 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.782740124 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.763449681 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.762914605 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.770424702 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.874281874 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.74217492 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.048031187 seconds)
done (took 278.378392388 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.812403977 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.732518822 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.842489532 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.741204588 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.819177044 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.824533803 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.736650958 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.737282493 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.736057872 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.114430667 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.734607407 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.735937205 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.732066101 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.735015546 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.817797051 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.736827237 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.734896679 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.076270738 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.737101355 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.80805076 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.738338966 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.735733993 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.736711819 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.108443204 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.733314422 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.730571158 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.807371056 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.737356948 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.07188129 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.731593449 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.739118546 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.072008083 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.827771501 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.755788191 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.747752762 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.744455757 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.818196103 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.743153905 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.81714214 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.818091512 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.835743916 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.777982722 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.73939906 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.735929305 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.74030335 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.738676201 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.735645086 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.765420813 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.731182295 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.736149631 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.076527332 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.748815729 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.736206511 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.73626402 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.738177393 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.769883101 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.73621653 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.739180659 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.827922405 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.739917779 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.800381887 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.108459043 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.111707754 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.738455914 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.739530563 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.736698158 seconds)
  done (took 175.444197245 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.803408323 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.818223092 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.802960426 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.743644228 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.788499642 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.804666959 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.743441666 seconds)
  done (took 14.162842971 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.743399535 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.739011158 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.789458196 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.790686347 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.739342313 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.892503104 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.739930682 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.748764367 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.737235927 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.79114418 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.740126321 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.740450139 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.745149721 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.734344324 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.788852657 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.749712632 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.855394866 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.740300359 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.739449578 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.889212611 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.738056024 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.746120057 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.772588098 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.7509666 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.741732627 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.744555068 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.411422897 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.740768348 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.737700776 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.739457772 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.737717076 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.782697532 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.742818887 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.743383223 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.738317368 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894519979 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.740735107 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.738408317 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.742769071 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.74171687 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.741641831 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.742527463 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.742558554 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.739980501 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.741501531 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.764313479 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.743027871 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.743063291 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.742524132 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.742270693 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.77625884 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.743011828 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.741173271 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.742794197 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.797815779 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.750005121 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.74246489 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.741052637 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.743990135 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.740561007 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.89370732 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.793195326 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.741394217 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.791582664 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.743451104 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.742848859 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.743052441 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.742157519 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.83790387 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.743741874 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.795157655 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.742454133 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.902874573 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.765267141 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.744969835 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.746387915 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.74632965 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.743785821 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.738531613 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.74999035 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.742895429 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.74580201 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.750246194 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.742509425 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.742107981 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.887285507 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.869820584 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.742269933 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.756490943 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.751572043 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.741284078 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.77882468 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.744634662 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.740586737 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.800717456 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.860177034 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.798296248 seconds)
  done (took 193.430826779 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.748288377 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.75187091 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.743900639 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.762399154 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.745103364 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.743967631 seconds)
  done (took 12.16145288 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.746463773 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.745410887 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.745232977 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.746565739 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.745477598 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.745224751 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.745884524 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.745812949 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.748265328 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.745286792 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.745733675 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.744812058 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.747473054 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.747784071 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.746688529 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.745023328 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.747281376 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.743198555 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.746828886 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.745142052 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.891843825 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.747525372 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.747178629 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.746283456 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.750214607 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.744498585 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.755277583 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.747236892 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.746010747 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.755413646 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.751072389 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.746717497 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.746531676 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.752041092 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.749979162 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.74784111 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.749567817 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.747640652 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.743981632 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.746583891 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.746598111 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.746170552 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.747149664 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.747112222 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.749095316 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.7504466 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.751520978 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.756350174 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.74686381 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.749167606 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.747678484 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.747856113 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.748477592 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.747971058 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.749543473 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.752651778 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.751570237 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.747096288 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.747296851 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.747750337 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.749385614 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.747387609 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.748781301 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.753423162 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.757418346 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.747652572 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.75025092 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.751774293 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.745883366 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.746535502 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.74660416 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.747178481 seconds)
  done (took 128.669553576 seconds)
done (took 525.549177929 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.874671715 seconds)
  done (took 8.533747997 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.945430729 seconds)
  done (took 8.64971227 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.211927405 seconds)
  done (took 9.880707248 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.763692274 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.775965135 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.748082347 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.733303282 seconds)
  done (took 28.712940381 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.797283123 seconds)
  done (took 8.455305715 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.754675714 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.732354212 seconds)
  done (took 15.177746555 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.776300771 seconds)
  done (took 8.433167404 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.746552844 seconds)
  done (took 8.42931403 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.757727482 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.765475495 seconds)
  done (took 15.195794769 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.720797249 seconds)
  done (took 8.377263837 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.313777668 seconds)
  done (took 11.062192356 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.758882059 seconds)
  done (took 8.519953885 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.819023322 seconds)
  done (took 8.477816481 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.789107135 seconds)
  done (took 8.448831413 seconds)
done (took 158.01406334 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.733993729 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.731639335 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.730717813 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.724842616 seconds)
  done (took 28.576565792 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.76147354 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.765468445 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.766729107 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.774374605 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.767900682 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.763863647 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.755447891 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.755896716 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.775269966 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.767453248 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.764698287 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.765915724 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.764970846 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.75572707 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.766982046 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.766345086 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.775546185 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.765188832 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.756479276 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.769337364 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.732421161 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.777715611 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.76666627 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.731133073 seconds)
  done (took 43.963510613 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.925583994 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.802301094 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.884259339 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.783751877 seconds)
  done (took 9.04605878 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.781924783 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.78466892 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.79546205 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.835736626 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.864236573 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.794027676 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.756759016 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.75395828 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.740966632 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.784577559 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.860156775 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.780907054 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.871586961 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.733836815 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.953878352 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.731241457 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.73175922 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.783947898 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.836579819 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.849110401 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.730818554 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.781199806 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.784772913 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.778326468 seconds)
  done (took 44.753565223 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.729963043 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.735807888 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.731596283 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.723658603 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.724733112 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.724030396 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.730641018 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.726896333 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.742907405 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.724054498 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.722088717 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.720684158 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.721798578 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.721442074 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.718639747 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.733093777 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.733347337 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.721069595 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.725601169 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.726966948 seconds)
  done (took 36.189417376 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.714632134 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.568345519 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.066328454 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.969378378 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.716010445 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.717616026 seconds)
  done (took 30.39350444 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.735179144 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.727833101 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.720971978 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.779392752 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.863264095 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.729386625 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.719670888 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.733279721 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.769033084 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.789202971 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.742620862 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.751841285 seconds)
  done (took 22.701224581 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.719247137 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.723062652 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.717588026 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.738171541 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.732077395 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.728864105 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.728901312 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.715742325 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.735953561 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.742426608 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.728435909 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.732074955 seconds)
  done (took 42.387833099 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805615472 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.605625136 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358705813 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435349966 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254365642 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.927151776 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.23688165 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.890682233 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.721439217 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.989826727 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.288894138 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959943788 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.969900238 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.718523492 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.791195306 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.177362679 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013495865 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950211074 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.748789753 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382534543 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885241471 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342871832 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.52499728 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.892058625 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.976841615 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.897011534 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.032146604 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.732481029 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902640269 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804152974 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777247961 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.769823031 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041845116 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988439456 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89955815 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777914048 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.422083944 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.489184463 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.762757112 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.504078993 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.402790824 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900841617 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780052147 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772809648 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.704052521 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339221703 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951787996 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.777650641 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.475677128 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.770328099 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780360243 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861924376 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.775596326 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.586501629 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722314415 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.052102547 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.771626171 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777626495 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342654105 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860816412 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444836697 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.716164179 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.863973015 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45035505 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244923918 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.929832934 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.777304763 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777196732 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706897471 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.494502454 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895300294 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918141837 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.793126643 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422533639 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068754845 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.416454871 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853309924 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069201254 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.692300678 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.716328729 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000511769 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.732482679 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708152282 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.619306263 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707840242 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046399638 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812515466 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.442946491 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818041441 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.946084271 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.787040805 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795706748 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782961599 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997696006 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.658920921 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777779214 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.290793052 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056066391 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796690996 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.946058792 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711687031 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.78049128 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029220823 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.986762838 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.067543749 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.242802007 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935110046 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779093437 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.865821735 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.753025006 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.794323586 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.050758482 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841649929 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859951271 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906531752 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.735896592 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08229291 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809972129 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.954629977 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.379466815 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042207279 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.11503031 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036221081 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865108625 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.781955751 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.779971094 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.534056408 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40231493 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.00672048 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.782493229 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32515173 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.796924961 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.781403666 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713766725 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.440278533 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.357659794 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.886938611 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.002784072 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.782503844 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058433635 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71394596 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926109767 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.893292375 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.002907682 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.44217601 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.860021193 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039669473 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323878119 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.088436733 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798266506 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800115071 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901202931 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803507959 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.274657184 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042081903 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.785847725 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.785588759 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.526445776 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.855262268 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791568612 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.788977521 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61227242 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073808727 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.815414253 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.789862184 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.721759877 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.800482214 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867495473 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791775431 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.795515626 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.310070646 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.53919208 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.799838279 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.468877508 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010587959 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795816128 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.512286151 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983410404 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.875709667 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066954567 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857986886 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.725322631 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.494303447 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.497698756 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793539562 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.726763248 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.793376867 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802178322 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803180053 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.987726594 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.071279063 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84435119 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.463836766 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.906684326 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803106556 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.797639741 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793183692 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.293805632 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877511317 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469552996 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.808806665 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931102503 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.807196254 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.72738696 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.7969159 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.799333224 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.795508628 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.75835035 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847110359 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.458204581 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125589013 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0542228 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.441258796 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81274098 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.537481986 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.922676336 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.817792121 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.335728531 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940467942 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.801766769 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877067566 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.806318361 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.522199586 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.560632082 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36683009 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105347989 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121068819 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244261785 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.354888166 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.020483759 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.96837601 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028776009 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.322851631 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856027896 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9736589 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739032809 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882792638 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.443832304 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15352442 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811897272 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023159859 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188420256 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.3914705 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954747731 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005979701 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831276301 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.782151661 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725874219 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.32228666 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949580995 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.313999843 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025691489 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972174583 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.321378536 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.901495251 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.795511334 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272418301 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884043998 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.506537439 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.157386516 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417162088 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.385083416 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165225186 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.799813802 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.242795411 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154191087 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.191777714 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.89323137 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733640851 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809627365 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809487247 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.800446104 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.777721604 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.718571071 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.075217268 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808746884 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032646882 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.123596645 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073488318 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.754429034 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.804393291 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798893718 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105388025 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.509596022 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046266392 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.190253478 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.381843244 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812017892 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.732353307 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732867212 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.501309473 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.801568956 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.773278173 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032094501 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.907293184 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.752252179 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.223986521 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121182797 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052323357 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.81411047 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078449604 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080963986 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.533558119 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830266908 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.900533474 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.329786275 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.514914304 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.022183479 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034186574 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599809949 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.03254552 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454565306 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.780219034 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.798898313 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016507827 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.022951873 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.395121281 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049440505 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.526368862 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.81005886 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182320901 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865372096 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.386640927 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.012432683 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.892495702 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811564073 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881297319 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811073391 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.813399894 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.81229394 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850014683 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.409527607 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934378513 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.815145156 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891853038 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888909602 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.383347997 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.812428354 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082595576 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17162479 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140808654 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867538613 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.803807776 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806358128 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734716676 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940713118 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.247233508 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076490225 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.932410025 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.940505296 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827822154 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.333752323 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.133060555 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12298852 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076958633 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.69735154 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804449662 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.895041368 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.025266586 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813874807 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.013838933 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037411285 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136498673 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274645265 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.97998843 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086910135 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078348757 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171792359 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.8050847 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392123591 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.819775673 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.351725702 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.846295167 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.405592238 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090517866 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814001264 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024365584 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.824366029 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.999208267 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.25597797 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.474216345 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165681971 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.795840687 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.86383862 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084168831 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207478205 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123528673 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886934568 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816559586 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.501882254 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943617896 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.759541001 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.069139299 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.806294445 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014905429 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.517767538 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.814565073 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084910395 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120059973 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.803126437 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.790070304 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858082042 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.813796844 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.027379971 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075446926 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058775822 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813652292 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.807247903 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.619277157 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081276523 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870299086 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.736943105 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.810056199 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902815383 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.053329067 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826806629 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.32335695 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.510275171 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109088235 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.727587945 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828884869 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254491749 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258256648 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138356583 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.332243045 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040417638 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.36706473 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.702460524 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191042774 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.811686489 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.246002165 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193257984 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.810236978 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.345334942 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926307012 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.080856264 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135341525 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.821904934 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.55416083 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.847474739 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030429643 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395600662 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752183298 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.815533324 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.872130888 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.809233984 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.938507436 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.819711665 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.804657491 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.712574571 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.657875994 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29731091 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.815128064 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.808660448 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.328713069 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394948012 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923845952 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962613718 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818153243 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.519802594 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.099944512 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.062150168 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.348924149 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.891277155 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.811337706 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811661366 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.734633464 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.003878126 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.006139527 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11635543 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.19216081 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.927814893 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81178546 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.022667659 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020366546 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.375001665 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96346495 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.236266417 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927802434 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.739728723 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.520933383 seconds)
  done (took 1640.304445716 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.813066209 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.907659219 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.823469089 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.839112032 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.859022885 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.900217483 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.865518403 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.898788228 seconds)
  done (took 56.641056791 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.812750205 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.000246896 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.823491109 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.815391808 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.857132593 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.81639407 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.0047819 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.828760287 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.825935588 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.824277796 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.816043286 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.815902385 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.631479885 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.844307897 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.816429133 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.827808493 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.823877417 seconds)
  done (took 73.958104074 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.817989794 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.231584401 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.838154582 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.841024143 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.84181053 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.827385546 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.987735699 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.829222142 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.821829057 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.999045149 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.156933844 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.829728528 seconds)
  done (took 89.764453272 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.833105697 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.822339123 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.824105511 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.8248081 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.824490769 seconds)
  done (took 10.878553857 seconds)
done (took 2131.235847922 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.055357236 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.004107277 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.04880757 seconds)
  done (took 5.794814907 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.967730762 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.016746871 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.136860854 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.15506031 seconds)
  done (took 10.02423807 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.138149167 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.212703187 seconds)
  done (took 6.096211656 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.149339302 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.857899187 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.210841502 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.823821271 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.82370572 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.821523227 seconds)
  done (took 22.218449975 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.826899776 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.828421508 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.824066913 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.826457315 seconds)
  done (took 9.051522432 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.806315749 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.500354199 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.812636524 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.825699859 seconds)
  done (took 20.688325875 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.574554283 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.949786397 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.569957857 seconds)
  done (took 8.839029845 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.370003755 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.743671391 seconds)
  done (took 8.859628785 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.986605157 seconds)
  done (took 3.732044017 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.853395159 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.09499278 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.347903203 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.348405897 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.437725744 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.651212837 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.169556671 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.058318048 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.270248989 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.288384842 seconds)
  done (took 24.265195273 seconds)
done (took 134.583747579 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.177571203 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.853543579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.023116439 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.191441993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.063468365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.024655491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.042113296 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.188461083 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.881080376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.865237565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.202044623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.066461043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.992512823 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.844585022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.997478487 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.84483912 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.055513442 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.20632659 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.874738325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.090942438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.054430975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.835602104 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.028992092 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.852168929 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.06183709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.974383998 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.378887897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.84975356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.013492655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.394289399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.980070206 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.228291251 seconds)
  done (took 166.886606602 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.825105228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.826612871 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.825482682 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.82513345 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.427133598 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.82735434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.825904013 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.826149069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.303867303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.295578489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.826914288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.416336861 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.828664242 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.825116626 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.829373165 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.826194771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.464721301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.827131221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.825784718 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.824587875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.827605152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.251671626 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.827524069 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.259343489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.459632027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.828787763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.826478534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.826928994 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.826671077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.824718092 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.826897734 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.826117196 seconds)
  done (took 208.464437519 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.772813467 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.829362179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.829489488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.826939069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.829060632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.828608585 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.826285059 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.84899479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.577182502 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.572274853 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.828376225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.828685812 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.832066368 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.826903028 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.82931041 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.828410083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.827754713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.813788424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.828314744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.829219605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.832919336 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.40838178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.828752375 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.424862759 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.829350461 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.829194994 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.828010744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.828002932 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.828465457 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.829240857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.827780557 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.828694794 seconds)
  done (took 218.888826264 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.083886104 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.834556414 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.834730167 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.752157706 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.835484543 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.834383491 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.845341631 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.081791886 seconds)
  done (took 18.853917795 seconds)
done (took 614.847721426 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.286973911 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.140549861 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.010585973 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.859357306 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.092787162 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.89092654 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.853496451 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.922435403 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.474275278 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.925342836 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.498395835 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.874838919 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.585917748 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.88235718 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.976940747 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.91735286 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.426922782 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.51346697 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.03337337 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.918715086 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.025843831 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.786533306 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.942253134 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.513758651 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.602251091 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.829093608 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.910163636 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.431740882 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.866778868 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.016128703 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.589131354 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.15715758 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.869358895 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.853967313 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.914938242 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.888138967 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.118549422 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.866805087 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.973677137 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.595121079 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.912498767 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.380171117 seconds)
  done (took 100.881441849 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.828563979 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.826827185 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.826322506 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.826924591 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.824578358 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.826252426 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.827853102 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.824246365 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.827142817 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.824021769 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.824985879 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.825738764 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.824773428 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.824131925 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.824562638 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.825491548 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.826978262 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.827647217 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.824502833 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.824082181 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.826465816 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.82533932 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.837597578 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.824955029 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.827631763 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.826980341 seconds)
  done (took 49.24522627 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.835962031 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.984933575 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.075670503 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.858377843 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.836070717 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.839028688 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.854172885 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.840884141 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.836600203 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.838717719 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.930321582 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.844166057 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.854513106 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.075047349 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.854514635 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.835770033 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.837691862 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.837116333 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.992626529 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.8537258 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.857562263 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.843647154 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.856780737 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.851677166 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.841021715 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.839475345 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.840857874 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.273302013 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.848992837 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.928688949 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.885706318 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.863347651 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.197912297 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.085971618 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.896574377 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.850544619 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.839962252 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.934612128 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.845060984 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.838776379 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.857195411 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.844301987 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.076361748 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.32583284 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.854579656 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.839258252 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.282098122 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.94067993 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.880299387 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.84862016 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.077164183 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.857772844 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.839813789 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.840095474 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.874300269 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.84419959 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.836263604 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.131215773 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.851429862 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.856814033 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.844678211 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.839716693 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.998722976 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.847646102 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.987954451 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.849083955 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.844321148 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.838319971 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.078256452 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858085977 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.327581818 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.854525921 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.839651537 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.92963689 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.994802072 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.313362294 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.852139364 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.998245956 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.21821525 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.863453266 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.847101831 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.262442344 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.869033209 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.848477684 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.843284008 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.843776179 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.838015585 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.886103388 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.856796295 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.266843587 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.337461699 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.154353586 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.866769587 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.854766078 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.840139279 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.134819638 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.850264818 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.840473427 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.072165752 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.343849247 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.855204533 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.848080715 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.314897409 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.858145959 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.860591383 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.849379103 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.083430502 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.856730278 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.886189056 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.84118276 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.848216439 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.84185871 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.858072218 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.848780382 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.841754292 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.310447919 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.952303677 seconds)
  done (took 228.041243182 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.838896293 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.841884315 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.83479543 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.841079527 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.835642696 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.841709628 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.836080306 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.837844465 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.840977081 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.834800506 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.836275073 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.836329748 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.837159553 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.839120536 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.845943773 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.842537399 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.445505626 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.839419837 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.837785162 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.83645051 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.496957104 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.844352069 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.837657308 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.835874717 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.837482088 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.839853593 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.839156 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.8401288 seconds)
  done (took 166.513052184 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.84308712 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.959608879 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.860930067 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.870212729 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.852263667 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.842487566 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.865114649 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.859747048 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.84786877 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.841462949 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.839507728 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.903812915 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.856371319 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.942505012 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.875688191 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.876201108 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.94722077 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.850650451 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.841543008 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.840654115 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.871690819 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.841998412 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.907393643 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.970883501 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.861431691 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.960171438 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.850257936 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.848095913 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.843966086 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.961831244 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.860049694 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.905194041 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.872468083 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.862172113 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.966426822 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.959437338 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.951628516 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.873414621 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.847435589 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.842080385 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.842225227 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.834729411 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.96000934 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.863447666 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.845212816 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.951462501 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.864301014 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.845061953 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.851342213 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.843020458 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.858711327 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.861960568 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.915869712 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.975709499 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.879002875 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.86977707 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.869450717 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.142294536 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.85157063 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.94299497 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.839122476 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.962035774 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.865351811 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.834651223 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.845830248 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.850511557 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.875348243 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.875933993 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.95076442 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.852438442 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.943285312 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.878674461 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.852168752 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.843302402 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.847550537 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.962869611 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.96081069 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.881760425 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.883216306 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.87798651 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.842889957 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.844068304 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.835504743 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.865083912 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.850448035 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.962417192 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.963962216 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.855219424 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.848568889 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.848310211 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.848770648 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.871879859 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.971119752 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.881774613 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.942403047 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.913849786 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.921622006 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.85888566 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.858986742 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.85029142 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.910428509 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.863053362 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.858069007 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.190769026 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.916272368 seconds)
  done (took 199.966145025 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.307925675 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.900991863 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.902429075 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.160184867 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.186024511 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.785408117 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.891765693 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.896425985 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.92220515 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.086883936 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.966707215 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.915715514 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.883111564 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.869189564 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.898364292 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.917410661 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.905969102 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.222031964 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.009394675 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.045300725 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.875104092 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.1855642 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.170949908 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.283421894 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.931669072 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.2252075 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.556567521 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.045103449 seconds)
  done (took 60.718972701 seconds)
done (took 807.117248753 seconds)
SAVING RESULT...
DONE!
